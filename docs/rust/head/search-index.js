var searchIndex = JSON.parse('{\
"api_demo":{"doc":"An amalgamation of various usages of the API with …","t":[3,13,4,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,12,5,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Args","BoundingBox","Demo","ExtensionComponents","LogCleared","Points3D","Rects","Segmentation","TextLogs","Transforms3D","__clone_box","augment_args","augment_args_for_update","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone_into","command","command_for_update","demo","demo_3d_points","demo_bbox","demo_extension_components","demo_log_cleared","demo_rects","demo_segmentation","demo_text_logs","demo_transforms_3d","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","equivalent","equivalent","fmt","fmt","from","from","from_arg_matches","from_arg_matches_mut","get_hash","group_id","hash","init","init","into","into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","main","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","rerun","run","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","sim_time","to_owned","to_possible_value","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","update_from_arg_matches","update_from_arg_matches_mut","value_variants","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from"],"q":["api_demo","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Which demo should we run? All of them by default.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,4,0,4,4,4,4,4,4,4,4,11,11,4,11,4,11,4,11,4,11,4,11,4,11,4,4,11,11,11,0,0,0,0,0,0,0,0,4,11,4,11,4,11,4,11,4,4,4,4,11,4,11,11,11,4,11,4,4,11,4,11,4,11,4,11,0,4,11,4,11,11,0,4,11,4,11,0,4,4,4,11,4,11,4,11,4,11,4,11,4,11,11,11,4,4,11,4,11,4,11],"f":[0,0,0,0,0,0,0,0,0,0,[1],[2,2],[2,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[4,4],[[]],[[],2],[[],2],0,[5,6],[5,6],[5,6],[5,6],[5,6],[5,6],[5,6],[5,6],[7],[7],[7],[7],[[]],[[]],[7],[7],[[4,4],8],[[],8],[[],8],[[4,9],10],[[11,9],10],[[]],[[]],[12,[[14,[11,13]]]],[12,[[14,[11,13]]]],[[],15],[[],[[3,[16]]]],[4],[[],7],[[],7],[[]],[[]],[[],3],[[],3],[[]],[[]],[[],6],[[]],[[]],[[]],[[]],0,[[5,11],6],[[]],[[]],[[]],[[]],[17,18],[[]],[4,[[3,[19]]]],[[],14],[[],14],[[],14],[[],14],[[],20],[[],20],[[]],[[]],[[]],[[]],[[],3],[[],3],[[11,12],[[14,[13]]]],[[11,12],[[14,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"Private"],[3,"Command"],[4,"Option"],[4,"Demo"],[3,"Session"],[6,"Result"],[15,"usize"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Args"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[15,"u64"],[3,"Id"],[15,"f64"],[3,"TimePoint"],[3,"PossibleValue"],[3,"TypeId"]]},\
"dna":{"doc":"The example from our Getting Started page.","t":[17,5,5],"n":["NUM_POINTS","main","run"],"q":["dna","",""],"d":["","",""],"i":[0,0,0],"f":[0,[[]],[1,[[3,[2]]]]],"p":[[3,"Session"],[4,"MsgSenderError"],[4,"Result"]]},\
"minimal":{"doc":"Demonstrates the most barebone usage of the Rerun SDK.","t":[5],"n":["main"],"q":["minimal"],"d":[""],"i":[0],"f":[[[],[[3,[[2,[1]]]]]]],"p":[[8,"Error"],[3,"Box"],[4,"Result"]]},\
"objectron":{"doc":"Example of using the Rerun SDK to log the Objectron dataset…","tn":["AnnotationsPerFrame","ArFrame","Args","Bike","Book","Bottle","Camera","CerealBox","Chair","Cup","Laptop","Recording","RecordingInfo","Shoe","__clone_box","__clone_box","augment_args","augment_args_for_update","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","command","command_for_update","data","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dir","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","fmt","fmt","fmt","frames","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","from_raw","group_id","index","info","init","init","init","init","init","into","into","into","into","into","log_ar_camera","log_ar_frame","log_baseline_objects","log_coordinate_space","log_feature_points","log_frame_annotations","log_video_frame","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","main","objectron","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","parse_duration","path_annotations","path_ar_frames","per_frame_sleep","read_annotations","read_ar_frames","recording","rerun","run","run_forever","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","timepoint","timepoint","to_owned","to_owned","to_possible_value","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","update_from_arg_matches","update_from_arg_matches_mut","value_variants","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","AnnotatedKeyPoint","ArBlendShapeMap","ArCamera","ArFaceAnchor","ArFaceGeometry","ArFrame","ArLightEstimate","ArMeshAnchor","ArMeshData","ArMeshGeometry","ArPlaneAnchor","ArPlaneGeometry","ArPointCloud","AvCameraCalibrationData","AvDepthData","CmAccelerometerData","CmCalibratedMagneticField","CmDeviceMotion","CmGyroData","CmMagnetometerData","CmMotionManagerSnapshot","CmVector","Edge","FrameAnnotation","KeyPoint","NormalizedPoint2D","Object","ObjectAnnotation","Point3D","Sequence","Skeleton","Skeletons","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","acceleration","accelerometer_data","alignment","alignment","ambient_color_temperature","ambient_color_temperature","ambient_intensity","ambient_intensity","annotations","ar_blend_shape_map","ar_camera","ar_face_geometry","ar_light_estimate","ar_mesh_geometry","ar_plane_anchor","ar_plane_geometry","ar_point_cloud","attitude_quaternion","av_depth_data","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","blend_shapes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boundary_vertex_count","boundary_vertex_count","boundary_vertices","calibration_accuracy","calibration_accuracy","camera","camera","camera_calibration_data","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","category","category","center","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","classification","classification","classification","classification","classification_status","classification_status","classification_supported","classification_supported","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cm_calibrated_magnetic_field","cm_device_motion","confidence_radius","count","count","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","depth","depth_data","depth_data_accuracy","depth_data_accuracy","depth_data_filtered","depth_data_filtered","depth_data_map","depth_data_map","depth_data_map_height","depth_data_map_height","depth_data_map_original_maximum_value","depth_data_map_original_maximum_value","depth_data_map_original_minimum_value","depth_data_map_original_minimum_value","depth_data_map_raw_values","depth_data_map_raw_values","depth_data_map_width","depth_data_map_width","depth_data_quality","depth_data_quality","depth_data_timestamp","depth_data_timestamp","depth_data_type","depth_data_type","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","device_motion","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","edges","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","entries","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","euler_angles","extent","extrinsic_matrix","face_anchor","faces","field","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame_annotations","frame_id","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","geometry","geometry","geometry","gravity","gyro_data","hidden","id","id","identifier","identifier","identifier","identifier","identifier","image_resolution_height","image_resolution_height","image_resolution_width","image_resolution_width","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","intrinsic_matrix","intrinsic_matrix_reference_dimension_height","intrinsic_matrix_reference_dimension_height","intrinsic_matrix_reference_dimension_width","intrinsic_matrix_reference_dimension_width","intrinsics","inverse_lens_distortion_lookup_values","is_tracked","is_tracked","keypoints","keypoints","keypoints","lens_distortion_center_x","lens_distortion_center_x","lens_distortion_center_y","lens_distortion_center_y","lens_distortion_lookup_values","light_estimate","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","magnetic_field","magnetic_field","magnetometer_data","mesh_anchor","method","method","motion_manager_snapshot","name","normals","object","object","object_id","objects","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","pixel_size","pixel_size","plane_anchor","plane_center","plane_normal","point","point_2d","point_3d","primary_light_direction","primary_light_intensity","primary_light_intensity","projection_matrix","push_classification","raw_feature_points","reference_keypoint","rotation","rotation_rate","rotation_rate","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","scale","set_alignment","set_calibration_accuracy","set_classification","set_classification_status","set_depth_data_accuracy","set_depth_data_quality","set_method","set_tracking_state","set_tracking_state_reason","set_type","sink","source","spherical_harmonics_coefficients","texture_coordinate_count","texture_coordinate_count","texture_coordinate_count","texture_coordinate_count","texture_coordinates","texture_coordinates","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","tracking_state","tracking_state","tracking_state_reason","tracking_state_reason","transform","transform","transform","transform","translation","triangle_count","triangle_count","triangle_count","triangle_count","triangle_indices","triangle_indices","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type","type","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","user_acceleration","vertex_count","vertex_count","vertex_count","vertex_count","vertices","vertices","vertices","view_matrix","visibility","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","x","x","x","x","x","y","y","y","y","y","z","z","z","z","MapEntry","__clone_box","az","blend_shape_coefficient","blend_shape_coefficient","blend_shape_location","blend_shape_location","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clear","clone","clone_into","default","deref","deref_mut","downcast","drop","encoded_len","eq","fmt","from","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","EulerAngles","ExcessiveMotion","Initializing","InsufficientFeatures","Limited","None","Normal","Relocalizing","TrackingState","TrackingStateReason","Unavailable","UndefinedTrackingState","UndefinedTrackingStateReason","__clone_box","__clone_box","__clone_box","as_str_name","as_str_name","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clear","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","encoded_len","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_i32","from_i32","from_str_name","from_str_name","get_hash","get_hash","hash","hash","init","init","init","into","into","into","is_valid","is_valid","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","pitch","pitch","roll","roll","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","yaw","yaw","TextureCoordinate","Vertex","__clone_box","__clone_box","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clear","clear","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","init","init","into","into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","u","u","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","v","v","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","x","x","y","y","z","z","DirectionVector","__clone_box","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clear","clone","clone_into","default","deref","deref_mut","downcast","drop","encoded_len","eq","fmt","from","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","x","x","y","y","z","z","Ceiling","Door","Face","Floor","MeshClassification","None","Seat","Table","Vertex","Wall","Window","__clone_box","__clone_box","__clone_box","as_str_name","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","cmp","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","encoded_len","encoded_len","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_i32","from_str_name","get_hash","hash","init","init","init","into","into","into","is_valid","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","vertex_indices","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","x","x","y","y","z","z","Alignment","Ceiling","Floor","Horizontal","Known","None","PlaneClassification","PlaneClassificationStatus","PlaneVector","Seat","Table","Unavailable","Undefined","Undetermined","Unknown","Vertical","Wall","__clone_box","__clone_box","__clone_box","__clone_box","as_str_name","as_str_name","as_str_name","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","default","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","encoded_len","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_i32","from_i32","from_i32","from_str_name","from_str_name","from_str_name","get_hash","get_hash","get_hash","hash","hash","hash","init","init","init","init","into","into","into","into","is_valid","is_valid","is_valid","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","partial_cmp","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","x","x","y","y","z","z","TextureCoordinate","Vertex","__clone_box","__clone_box","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clear","clear","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","init","init","into","into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","u","u","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","v","v","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","x","x","y","y","z","z","Point","__clone_box","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clear","clone","clone_into","default","deref","deref_mut","downcast","drop","encoded_len","eq","fmt","from","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","x","x","y","y","z","z","Absolute","Accuracy","High","Low","Quality","Relative","UndefinedAccuracy","UndefinedQuality","__clone_box","__clone_box","as_str_name","as_str_name","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","cmp","cmp","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_i32","from_i32","from_str_name","from_str_name","get_hash","get_hash","hash","hash","init","init","into","into","is_valid","is_valid","lossless_try_into","lossless_try_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","CalibrationAccuracy","High","Low","Medium","Uncalibrated","__clone_box","as_str_name","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","cmp","default","deref","deref_mut","downcast","drop","eq","equivalent","equivalent","fmt","from","from_i32","from_str_name","get_hash","hash","init","into","is_valid","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","partial_cmp","saturating_as","saturating_cast_from","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","Quaternion","__clone_box","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clear","clone","clone_into","default","deref","deref_mut","downcast","drop","encoded_len","eq","fmt","from","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","w","w","wrapping_as","wrapping_cast_from","x","x","y","y","z","z","Annotation","Augmentation","BoundingBox","Mesh","Method","Skeleton","Type","UndefinedType","UnknownMethod","__clone_box","__clone_box","as_str_name","as_str_name","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","cmp","cmp","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_i32","from_i32","from_str_name","from_str_name","get_hash","get_hash","hash","hash","init","init","into","into","is_valid","is_valid","lossless_try_into","lossless_try_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from"],"q":["objectronobjectron::objectronobjectron::objectron::ar_blend_shape_map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","objectron::objectron::ar_camera","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","objectron::objectron::ar_face_geometry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","objectron::objectron::ar_light_estimate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","objectron::objectron::ar_mesh_geometry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","objectron::objectron::ar_plane_anchorobjectron::objectron::ar_plane_geometry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","objectron::objectron::ar_point_cloud","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","objectron::objectron::av_depth_data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","objectron::objectron::cm_calibrated_magnetic_field","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","objectron::objectron::cm_device_motion","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","objectron::objectron::object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Limits the number of frames logged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Throttle logging by sleeping between each frame (e.g. <code>0.25</code>…","","","Specifies the recording to replay.","","","If set, this indefinitely log and relog the same scene in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains a list of blend shape entries wherein each item …","Information about the camera position and imaging …","Information about the pose, topology, and expression of a …","Container for a 3D mesh describing face topology.","Video image and face position tracking information.","Estimated scene lighting information associated with a …","A subdividision of the reconstructed, real-world scene …","Container object for mesh data of real-world scene …","Mesh geometry data stored in an array-based format.","Information about the position and orientation of a …","Container for a 3D mesh.","A collection of points in the world coordinate space.","Info about the camera characteristics used to capture …","Container for depth data information.","A sample of raw accelerometer data.","Represents calibrated magnetic field data and accuracy …","A sample of device motion data. Encapsulates measurements …","A sample of raw gyroscope data.","A sample of raw magnetometer data.","Contains most recent snapshots of device motion data","A 3D vector","The edge connecting two keypoints together","","","Projection of a 3D point on an image, and its metric depth.","","","The 3D point in the camera coordinate system, the scales …","The sequence protocol contains the annotation data for the …","The skeleton template for different objects (e.g. humans, …","The list of all the modeled skeletons in our library. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Raw acceleration measured by the accelerometer which …","Most recent samples of raw accelerometer data.","Returns the enum value of <code>alignment</code>, or the default if the …","The general orientation of the detected plane with respect …","Returns the value of <code>ambient_color_temperature</code>, or the …","The estimated color temperature, in degrees Kelvin, of …","Returns the value of <code>ambient_intensity</code>, or the default …","The estimated intensity, in lumens, of ambient light …","List of the annotated objects in this frame. Depending on …","Nested message and enum types in <code>ARBlendShapeMap</code>.","Nested message and enum types in <code>ARCamera</code>.","Nested message and enum types in <code>ARFaceGeometry</code>.","Nested message and enum types in <code>ARLightEstimate</code>.","Nested message and enum types in <code>ARMeshGeometry</code>.","Nested message and enum types in <code>ARPlaneAnchor</code>.","Nested message and enum types in <code>ARPlaneGeometry</code>.","Nested message and enum types in <code>ARPointCloud</code>.","The quaternion representing the device’s orientation …","Nested message and enum types in <code>AVDepthData</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A map of named coefficients representing the detected …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>boundary_vertex_count</code>, or the default …","The number of elements in the boundary_vertices buffer.","Each value in this buffer represents the position of a …","Returns the enum value of <code>calibration_accuracy</code>, or the …","Calibration accuracy of a magnetic field estimate.","Camera information associated with the frame.","Information about the camera transformation (in the world …","Associated calibration data for the depth_data_map.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes what category an object is. E.g. object class, …","The skeleton’s category (e.g. human, chair, hand.). …","The center point of the plane relative to its anchor …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>classification</code>, or the default …","Returns an iterator which yields the valid enum values …","A general characterization of what kind of real-world …","Classification for each face in the mesh.","Returns the enum value of <code>classification_status</code>, or the …","The current state of process for classifying the plane …","Returns the value of <code>classification_supported</code>, or the …","A Boolean value that indicates whether plane …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Nested message and enum types in <code>CMCalibratedMagneticField</code>.","Nested message and enum types in <code>CMDeviceMotion</code>.","Sphere around the keypoint, indicating annotator’s …","Returns the value of <code>count</code>, or the default value if <code>count</code> …","The number of points in the cloud.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The depth of the point in the camera coordinate system (in …","The depth data associated with the frame. Not all frames …","Returns the enum value of <code>depth_data_accuracy</code>, or the …","","Returns the value of <code>depth_data_filtered</code>, or the default …","Indicates whether the depth_data_map contains temporally …","Returns the value of <code>depth_data_map</code>, or the default value …","PNG representation of the grayscale depth data map. See …","Returns the value of <code>depth_data_map_height</code>, or the default …","The height of the depth buffer map.","Returns the value of <code>depth_data_map_original_maximum_value</code>…","","Returns the value of <code>depth_data_map_original_minimum_value</code>…","The original range of values expressed by the …","Returns the value of <code>depth_data_map_raw_values</code>, or the …","The row-major flattened array of the depth buffer map …","Returns the value of <code>depth_data_map_width</code>, or the default …","The width of the depth buffer map.","Returns the enum value of <code>depth_data_quality</code>, or the …","","Returns the value of <code>depth_data_timestamp</code>, or the default …","The depth data object timestamp associated with the frame. …","Returns the value of <code>depth_data_type</code>, or the default value …","Pixel format type of the original captured depth data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Most recent samples of device motion data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","List of edges connecting keypoints","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The estimated width and length of the detected plane.","3x4 row-major matrix relating a camera’s position and …","Face anchor information associated with the frame. Not all …","The faces of the mesh.","Vector of magnetic field estimate.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","List of annotated data per each frame in sequence + frame …","Unique frame id, corresponds to images.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","A coarse triangle mesh representing the topology of the …","A coarse triangle mesh representing the general shape of …","3D information about the mesh such as its shape and …","The gravity acceleration vector expressed in the device’…","Most recent samples of raw gyroscope data.","Indicates whether the keypoint is hidden or not.","Unique object id through a sequence. There might be …","","Returns the value of <code>identifier</code>, or the default value if …","Returns the value of <code>identifier</code>, or the default value if …","The ID of the plane.","A list of unique identifiers corresponding to detected …","The ID of the mesh.","Returns the value of <code>image_resolution_height</code>, or the …","","Returns the value of <code>image_resolution_width</code>, or the …","The width and height, in pixels, of the captured camera …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","3x3 row-major matrix relating a camera’s internal …","Returns the value of …","","Returns the value of …","The image dimensions to which the intrinsic_matrix values …","3x3 row-major matrix that converts between the 2D camera …","A list of floating-point values describing radial …","Returns the value of <code>is_tracked</code>, or the default value if …","Indicates whether the anchor’s transform is valid. …","List of all the key points associated with this object in …","Initialization value for all the keypoints in the skeleton …","For each objects, list all the annotated keypoints here. …","Returns the value of <code>lens_distortion_center_x</code>, or the …","The offset of the distortion center of the camera lens …","Returns the value of <code>lens_distortion_center_y</code>, or the …","","A list of floating-point values describing radial …","Light information associated with the frame.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the magnetic field vector filtered with respect to …","Raw magnetic field measured by the magnetometer.","Most recent samples of raw magnetometer data.","Set of mesh anchors containing the mesh data.","Returns the enum value of <code>method</code>, or the default if the …","","Snapshot of Core Motion CMMotionManager object containing …","The name of the keypoint (e.g. legs, head, etc.). Does not …","Rays that define which direction is outside for each face. …","Nested message and enum types in <code>Object</code>.","","Reference to the object identifier in ObjectInstance.","List of all the annotated 3D objects in this sequence in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>pixel_size</code>, or the default value if …","The size, in millimeters, of one image pixel.","Plane anchors associated with the frame. Not all frames …","Plane center and normal in camera frame.","","The list of detected points.","","","A vector indicating the orientation of the strongest …","Returns the value of <code>primary_light_intensity</code>, or the …","The estimated intensity, in lumens, of the strongest …","4x4 row-major transform matrix appropriate for rendering …","Appends the provided enum value to <code>classification</code>.","The current intermediate results of the scene analysis …","The origin keypoint in the object coordinate system. (i.e. …","3x3 row-major rotation matrix describing the orientation …","The rotation rate of the device adjusted by bias-removing …","Raw rotation rate as measured by the gyroscope.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","3x1 vector describing the scale of the rigid object’s …","Sets <code>alignment</code> to the provided enum value.","Sets <code>calibration_accuracy</code> to the provided enum value.","Sets <code>classification</code> to the provided enum value.","Sets <code>classification_status</code> to the provided enum value.","Sets <code>depth_data_accuracy</code> to the provided enum value.","Sets <code>depth_data_quality</code> to the provided enum value.","Sets <code>method</code> to the provided enum value.","Sets <code>tracking_state</code> to the provided enum value.","Sets <code>tracking_state_reason</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","keypoint id of the edge’s sink","keypoint id of the edge’s source","Data describing the estimated lighting environment in all …","Returns the value of <code>texture_coordinate_count</code>, or the …","Returns the value of <code>texture_coordinate_count</code>, or the …","The number of elements in the texture_coordinates list.","The number of elements in the texture_coordinates buffer.","","A buffer of texture coordinate values for each point in …","Returns the value of <code>timestamp</code>, or the default value if …","Returns the value of <code>timestamp</code>, or the default value if …","Returns the value of <code>timestamp</code>, or the default value if …","Returns the value of <code>timestamp</code>, or the default value if …","Returns the value of <code>timestamp</code>, or the default value if …","Returns the value of <code>timestamp</code>, or the default value if …","The device motion data object timestamp. May differ from …","The accelerometer data object timestamp. May differ from …","The gyroscope data object timestamp. May differ from the …","The magnetometer data object timestamp. May differ from …","The timestamp for the frame.","The timestamp for the data.","The timestamp for the frame.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>tracking_state</code>, or the default …","","Returns the enum value of <code>tracking_state_reason</code>, or the …","","4x4 row-major matrix expressing position and orientation …","4x4 row-major matrix encoding the position, orientation, …","4x4 row-major matrix encoding the position, orientation, …","4x4 row-major matrix encoding the position, orientation, …","3x1 vector describing the translation of the rigid object…","Returns the value of <code>triangle_count</code>, or the default value …","Returns the value of <code>triangle_count</code>, or the default value …","The number of triangles described by the triangle_indices …","Each set of three indices forms a triangle, so the number …","Each integer value in this ordered list represents an …","Each integer value in this ordered list represents an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>type</code>, or the default if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The acceleration that the user is giving to the device.","Returns the value of <code>vertex_count</code>, or the default value if …","Returns the value of <code>vertex_count</code>, or the default value if …","The number of elements in the vertices list.","The number of elements in the vertices buffer.","","A buffer of vertex positions for each point in the plane …","The vertices of the mesh.","4x4 row-major transform matrix appropriate for converting …","Visibiity of this annotation in a frame.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>x</code>, or the default value if <code>x</code> is unset.","","The position of the keypoint in the local coordinate …","x-y position of the 2d keypoint in the image coordinate …","","Returns the value of <code>y</code>, or the default value if <code>y</code> is unset.","","","","","Returns the value of <code>z</code>, or the default value if <code>z</code> is unset.","","","","","","","Returns the value of <code>blend_shape_coefficient</code>, or the …","Indicates the current position of the feature relative to …","Returns the value of <code>blend_shape_location</code>, or the default …","Identifier for the specific facial feature.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","The orientation of the camera, expressed as roll, pitch, …","The device is moving too fast for accurate image-based …","Not yet enough camera or motion data to provide tracking …","Not enough distinguishable features for image-based …","Tracking is available, but the quality of results is …","The current tracking state is not limited.","Camera position tracking is providing optimal results.","Tracking is limited due to a relocalization in progress.","The general quality of position tracking available when …","A possible diagnosis for limited position tracking quality …","Camera position tracking is not available.","","","","","","String value of the enum field names used in the ProtoBuf …","String value of the enum field names used in the ProtoBuf …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>TrackingState</code>, or <code>None</code> if <code>value</code> is …","Converts an <code>i32</code> to a <code>TrackingStateReason</code>, or <code>None</code> if <code>value</code> …","Creates an enum from field names used in the ProtoBuf …","Creates an enum from field names used in the ProtoBuf …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>TrackingState</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>TrackingStateReason</code>.","","","","","","","","","","","","","","","Returns the value of <code>pitch</code>, or the default value if <code>pitch</code> …","","Returns the value of <code>roll</code>, or the default value if <code>roll</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>yaw</code>, or the default value if <code>yaw</code> is …","","Each texture coordinate represents UV texture coordinates …","Each vertex represents a 3D point in the face mesh, in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>u</code>, or the default value if <code>u</code> is unset.","","","","","","","","Returns the value of <code>v</code>, or the default value if <code>v</code> is unset.","","","","","","","","Returns the value of <code>x</code>, or the default value if <code>x</code> is unset.","","Returns the value of <code>y</code>, or the default value if <code>y</code> is unset.","","Returns the value of <code>z</code>, or the default value if <code>z</code> is unset.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the value of <code>x</code>, or the default value if <code>x</code> is unset.","","Returns the value of <code>y</code>, or the default value if <code>y</code> is unset.","","Returns the value of <code>z</code>, or the default value if <code>z</code> is unset.","","","","","","Type of objects","","","","","","","","","","String value of the enum field names used in the ProtoBuf …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>MeshClassification</code>, or <code>None</code> if <code>value</code> …","Creates an enum from field names used in the ProtoBuf …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>MeshClassification</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","/ Indices of vertices defining the face from correspondent …","","","","","","","","","","Returns the value of <code>x</code>, or the default value if <code>x</code> is unset.","","Returns the value of <code>y</code>, or the default value if <code>y</code> is unset.","","Returns the value of <code>z</code>, or the default value if <code>z</code> is unset.","","","","","The plane is perpendicular to gravity.","The classfication process for the plane anchor has …","","","The classification status for the plane.","Wrapper for a 3D point / vector within the plane. See …","","","No classication information can be provided (set on error …","","The classification process has not completed.","The classfication process for the plane anchor has …","The plane is parallel to gravity.","","","","","","String value of the enum field names used in the ProtoBuf …","String value of the enum field names used in the ProtoBuf …","String value of the enum field names used in the ProtoBuf …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Alignment</code>, or <code>None</code> if <code>value</code> is not a …","Converts an <code>i32</code> to a <code>PlaneClassification</code>, or <code>None</code> if <code>value</code> …","Converts an <code>i32</code> to a <code>PlaneClassificationStatus</code>, or <code>None</code> if …","Creates an enum from field names used in the ProtoBuf …","Creates an enum from field names used in the ProtoBuf …","Creates an enum from field names used in the ProtoBuf …","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Alignment</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>PlaneClassification</code>.","Returns <code>true</code> if <code>value</code> is a variant of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>x</code>, or the default value if <code>x</code> is unset.","","Returns the value of <code>y</code>, or the default value if <code>y</code> is unset.","","Returns the value of <code>z</code>, or the default value if <code>z</code> is unset.","","Each texture coordinate represents UV texture coordinates …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>u</code>, or the default value if <code>u</code> is unset.","","","","","","","","Returns the value of <code>v</code>, or the default value if <code>v</code> is unset.","","","","","","","","Returns the value of <code>x</code>, or the default value if <code>x</code> is unset.","","Returns the value of <code>y</code>, or the default value if <code>y</code> is unset.","","Returns the value of <code>z</code>, or the default value if <code>z</code> is unset.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the value of <code>x</code>, or the default value if <code>x</code> is unset.","","Returns the value of <code>y</code>, or the default value if <code>y</code> is unset.","","Returns the value of <code>z</code>, or the default value if <code>z</code> is unset.","","Values in the depth map are absolutely accurate in the …","Indicates the general accuracy of the depth_data_map.","","","Quality of the depth_data_map.","Values in the depth map are usable for …","","","","","String value of the enum field names used in the ProtoBuf …","String value of the enum field names used in the ProtoBuf …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Accuracy</code>, or <code>None</code> if <code>value</code> is not a …","Converts an <code>i32</code> to a <code>Quality</code>, or <code>None</code> if <code>value</code> is not a …","Creates an enum from field names used in the ProtoBuf …","Creates an enum from field names used in the ProtoBuf …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Accuracy</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Quality</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates the calibration accuracy of a magnetic field …","","","","","","String value of the enum field names used in the ProtoBuf …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>CalibrationAccuracy</code>, or <code>None</code> if <code>value</code> …","Creates an enum from field names used in the ProtoBuf …","","","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>CalibrationAccuracy</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the value of <code>w</code>, or the default value if <code>w</code> is unset.","","","","Returns the value of <code>x</code>, or the default value if <code>x</code> is unset.","","Returns the value of <code>y</code>, or the default value if <code>y</code> is unset.","","Returns the value of <code>z</code>, or the default value if <code>z</code> is unset.","","Created by data annotation.","Created by data augmentation.","","","Enum to reflect how this object is created.","","","","","","","String value of the enum field names used in the ProtoBuf …","String value of the enum field names used in the ProtoBuf …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Type</code>, or <code>None</code> if <code>value</code> is not a valid …","Converts an <code>i32</code> to a <code>Method</code>, or <code>None</code> if <code>value</code> is not a …","Creates an enum from field names used in the ProtoBuf …","Creates an enum from field names used in the ProtoBuf …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Type</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Method</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,4,4,4,4,4,4,4,4,0,0,4,4,5,9,9,17,10,4,9,5,17,10,4,9,5,17,10,4,9,5,17,10,4,9,5,17,10,4,9,5,17,10,4,9,5,4,5,4,5,9,9,17,17,10,4,9,5,17,10,4,9,5,17,17,10,4,9,5,17,10,4,9,5,4,9,5,9,17,10,10,4,9,5,9,9,17,9,17,4,17,10,4,9,5,17,10,4,9,5,0,0,0,0,0,0,0,17,10,4,9,5,17,10,4,9,5,0,0,17,10,4,9,5,17,10,4,9,5,0,5,5,9,0,0,9,9,0,9,17,10,4,9,5,17,10,4,9,5,0,17,4,5,4,17,10,4,9,5,17,10,4,9,5,17,10,4,9,5,17,10,4,9,5,17,10,4,9,5,17,10,4,9,5,9,9,4,17,10,4,9,5,17,10,4,9,5,17,10,4,9,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,56,59,35,35,37,37,37,37,26,0,0,0,0,0,0,0,0,55,0,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,53,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,38,38,38,40,40,16,26,50,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,63,65,35,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,35,43,35,43,35,35,35,35,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,0,0,62,25,25,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,67,16,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,16,16,50,50,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,59,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,65,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,52,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,21,35,49,16,43,40,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,30,26,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,53,35,60,55,59,62,63,69,35,60,35,25,60,21,21,21,21,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,49,49,49,49,21,49,53,53,63,65,70,49,49,49,49,49,16,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,55,58,59,61,63,63,16,62,43,0,66,70,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,49,16,26,26,25,69,69,37,37,37,21,43,16,65,63,55,57,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,63,35,40,35,35,50,50,63,21,21,63,64,64,37,51,38,51,38,51,38,55,56,57,58,16,61,55,56,57,58,16,61,26,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,21,21,21,21,21,53,35,60,63,51,38,51,38,51,38,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,63,63,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,55,51,38,51,38,51,38,43,21,70,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,54,54,62,67,68,54,54,62,67,68,54,54,62,68,0,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,0,77,77,77,76,77,76,77,0,0,76,76,77,80,76,77,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,80,76,77,80,76,77,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,80,76,77,76,76,77,77,80,76,77,80,76,77,76,77,76,77,76,77,76,77,80,76,77,80,76,77,76,77,80,76,77,80,76,77,80,76,77,80,76,77,76,77,80,80,80,80,80,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,80,0,0,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,84,84,83,84,83,84,83,84,84,84,83,84,83,84,83,84,83,83,83,83,83,83,0,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,75,75,0,75,0,75,75,75,0,75,75,86,87,75,75,86,87,75,86,87,75,86,87,75,86,87,75,86,87,75,86,87,75,86,87,86,87,75,86,87,75,75,86,87,75,86,87,75,86,87,75,86,87,75,86,87,75,86,87,86,87,75,75,75,86,87,75,86,87,75,75,75,75,75,86,87,75,86,87,75,75,86,87,75,86,87,75,86,87,75,86,87,75,75,86,87,75,86,87,75,86,87,75,86,87,75,86,87,75,86,87,75,86,87,75,86,87,75,86,87,75,87,86,87,75,86,87,75,86,87,75,86,86,86,86,86,86,0,42,42,36,47,42,0,0,0,42,42,47,36,47,47,36,42,88,36,42,47,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,88,36,42,47,88,36,42,47,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,88,36,42,47,36,36,42,42,47,47,88,36,42,47,88,36,42,47,36,42,47,36,42,47,36,42,47,36,42,47,88,36,42,47,88,36,42,47,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,88,88,88,88,88,0,0,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,90,90,89,90,89,90,89,90,90,90,89,90,89,90,89,90,89,89,89,89,89,89,0,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,71,0,73,73,0,71,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,71,73,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,74,74,78,78,0,78,0,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,78,74,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[2,2],[2,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[4,4],[5,5],[[]],[[]],[[],2],[[],2],0,[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],0,[[]],[[]],[[]],[[]],[[]],[6],[6],[6],[6],[6],[[4,7],8],[[9,7],8],[[5,7],8],0,[[]],[[],10],[[]],[[]],[[]],[[]],[11,[[13,[9,12]]]],[11,[[13,[9,12]]]],[[14,6,15,16],17],[[],[[3,[18]]]],0,[4,[[19,[5]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[20,15,21],19],[[20,10,17],19],[20,19],[[20,[23,[22]],24],19],[[20,15,25],19],[[20,15,26],19],[[20,17],19],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[],19],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,[[13,[27,28]]]],0,0,0,[29,[[19,[30]]]],[29,31],0,0,[[20,9],19],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,32],15],0,[[]],[[]],[4,[[3,[33]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],34],[[],34],[[],34],[[],34],[[],34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[9,11],[[13,[12]]]],[[9,11],[[13,[12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],0,0,[35,36],0,[37,32],0,[37,32],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,39],0,0,[40,41],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[35,42],[43,[[46,[[45,[[44,[39]]]]]]]],0,0,[35,47],0,[35,48],0,[49],[50],[37],[21],[51],[52],[53],[38],[35],[25],[54],[40],[55],[56],[57],[58],[59],[16],[43],[60],[61],[62],[63],[64],[65],[66],[67],[68],[69],[70],[26],[30],[49,49],[50,50],[37,37],[21,21],[51,51],[52,52],[53,53],[38,38],[35,35],[25,25],[54,54],[40,40],[55,55],[56,56],[57,57],[58,58],[59,59],[16,16],[43,43],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[68,68],[69,69],[70,70],[26,26],[30,30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[25,39],0,[[],49],[[],50],[[],37],[[],21],[[],51],[[],52],[[],53],[[],38],[[],35],[[],25],[[],54],[[],40],[[],55],[[],56],[[],57],[[],58],[[],59],[[],16],[[],43],[[],60],[[],61],[[],62],[[],63],[[],64],[[],65],[[],66],[[],67],[[],68],[[],69],[[],70],[[],26],[[],30],0,0,[50,71],0,[50,48],0,[50],0,[50,39],0,[50,72],0,[50,72],0,[50],0,[50,39],0,[50,73],0,[16,32],0,[50,24],0,[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],0,[49,6],[50,6],[37,6],[21,6],[51,6],[52,6],[53,6],[38,6],[35,6],[25,6],[54,6],[40,6],[55,6],[56,6],[57,6],[58,6],[59,6],[16,6],[43,6],[60,6],[61,6],[62,6],[63,6],[64,6],[65,6],[66,6],[67,6],[68,6],[69,6],[70,6],[26,6],[30,6],0,[[49,49],48],[[50,50],48],[[37,37],48],[[21,21],48],[[51,51],48],[[52,52],48],[[53,53],48],[[38,38],48],[[35,35],48],[[25,25],48],[[54,54],48],[[40,40],48],[[55,55],48],[[56,56],48],[[57,57],48],[[58,58],48],[[59,59],48],[[16,16],48],[[43,43],48],[[60,60],48],[[61,61],48],[[62,62],48],[[63,63],48],[[64,64],48],[[65,65],48],[[66,66],48],[[67,67],48],[[68,68],48],[[69,69],48],[[70,70],48],[[26,26],48],[[30,30],48],0,0,0,0,0,0,[[49,7],8],[[50,7],8],[[37,7],8],[[21,7],8],[[51,7],8],[[52,7],8],[[53,7],8],[[38,7],8],[[35,7],8],[[25,7],8],[[54,7],8],[[40,7],8],[[55,7],8],[[56,7],8],[[57,7],8],[[58,7],8],[[59,7],8],[[16,7],8],[[43,7],8],[[60,7],8],[[61,7],8],[[62,7],8],[[63,7],8],[[64,7],8],[[65,7],8],[[66,7],8],[[67,7],8],[[68,7],8],[[69,7],8],[[70,7],8],[[26,7],8],[[30,7],8],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[35,24],[60,24],0,0,0,[21,39],0,[21,39],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[49,72],0,[49,72],0,0,0,[53,48],0,0,0,0,[49,72],0,[49,72],0,0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[63,74],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[49,72],0,0,0,0,0,0,0,0,[37,72],0,0,[[43,75]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[35,36]],[[40,41]],[[35,42]],[[35,47]],[[50,71]],[[50,73]],[[63,74]],[[21,76]],[[21,77]],[[63,78]],0,0,0,[51,39],[38,39],0,0,0,0,[55,32],[56,32],[57,32],[58,32],[16,32],[61,32],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21,76],0,[21,77],0,0,0,0,0,0,[51,39],[38,39],0,0,0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[63,78],0,[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[51,39],[38,39],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[54,32],0,0,0,0,[54,32],0,0,0,0,[54,32],0,0,0,0,[1],[[]],[79,72],0,[79,24],0,[[]],[[]],[[]],[[],3],[[],3],[79],[79,79],[[]],[[],79],[6],[6],[[]],[6],[79,6],[[79,79],48],[[79,7],8],[[]],[[],6],[[]],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],34],[[]],[[]],[[],3],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[76,24],[77,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[80],[80,80],[76,76],[77,77],[[]],[[]],[[]],[[76,76],81],[[77,77],81],[[],80],[[],76],[[],77],[6],[6],[6],[6],[6],[6],[[]],[[]],[[]],[6],[6],[6],[80,6],[[80,80],48],[[76,76],48],[[77,77],48],[[],48],[[],48],[[],48],[[],48],[[80,7],8],[[76,7],8],[[77,7],8],[[]],[[]],[[]],[39,[[3,[76]]]],[39,[[3,[77]]]],[24,[[3,[76]]]],[24,[[3,[77]]]],[[],82],[[],82],[76],[77],[[],6],[[],6],[[],6],[[]],[[]],[[]],[39,48],[39,48],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[76,76],[[3,[81]]]],[[77,77],[[3,[81]]]],[80,72],0,[80,72],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],34],[[],34],[[],34],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[80,72],0,0,0,[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[83],[84],[83,83],[84,84],[[]],[[]],[[],83],[[],84],[6],[6],[6],[6],[[]],[[]],[6],[6],[83,6],[84,6],[[83,83],48],[[84,84],48],[[83,7],8],[[84,7],8],[[]],[[]],[[],6],[[],6],[[]],[[]],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],34],[[],34],[84,72],0,[[]],[[]],[[]],[[]],[[],3],[[],3],[84,72],0,[[]],[[]],[[]],[[]],[[]],[[]],[83,72],0,[83,72],0,[83,72],0,0,[1],[[]],[[]],[[]],[[]],[[],3],[[],3],[85],[85,85],[[]],[[],85],[6],[6],[[]],[6],[85,6],[[85,85],48],[[85,7],8],[[]],[[],6],[[]],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],34],[[]],[[]],[[],3],[[]],[[]],[[]],[85,72],0,[85,72],0,[85,72],0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[75,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[86],[87],[86,86],[87,87],[75,75],[[]],[[]],[[]],[[75,75],81],[[],86],[[],87],[[],75],[6],[6],[6],[6],[6],[6],[[]],[[]],[[]],[6],[6],[6],[86,6],[87,6],[[86,86],48],[[87,87],48],[[75,75],48],[[],48],[[],48],[[86,7],8],[[87,7],8],[[75,7],8],[[]],[[]],[[]],[39,[[3,[75]]]],[24,[[3,[75]]]],[[],82],[75],[[],6],[[],6],[[],6],[[]],[[]],[[]],[39,48],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[75,75],[[3,[81]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],34],[[],34],[[],34],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[86,72],0,[86,72],0,[86,72],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[36,24],[42,24],[47,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[88],[88,88],[36,36],[42,42],[47,47],[[]],[[]],[[]],[[]],[[36,36],81],[[42,42],81],[[47,47],81],[[],88],[[],36],[[],42],[[],47],[6],[6],[6],[6],[6],[6],[6],[6],[[]],[[]],[[]],[[]],[6],[6],[6],[6],[88,6],[[88,88],48],[[36,36],48],[[42,42],48],[[47,47],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[88,7],8],[[36,7],8],[[42,7],8],[[47,7],8],[[]],[[]],[[]],[[]],[39,[[3,[36]]]],[39,[[3,[42]]]],[39,[[3,[47]]]],[24,[[3,[36]]]],[24,[[3,[42]]]],[24,[[3,[47]]]],[[],82],[[],82],[[],82],[36],[42],[47],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[39,48],[39,48],[39,48],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[36,36],[[3,[81]]]],[[42,42],[[3,[81]]]],[[47,47],[[3,[81]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],34],[[],34],[[],34],[[],34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[88,72],0,[88,72],0,[88,72],0,0,0,[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[89],[90],[89,89],[90,90],[[]],[[]],[[],89],[[],90],[6],[6],[6],[6],[[]],[[]],[6],[6],[89,6],[90,6],[[89,89],48],[[90,90],48],[[89,7],8],[[90,7],8],[[]],[[]],[[],6],[[],6],[[]],[[]],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],34],[[],34],[90,72],0,[[]],[[]],[[]],[[]],[[],3],[[],3],[90,72],0,[[]],[[]],[[]],[[]],[[]],[[]],[89,72],0,[89,72],0,[89,72],0,0,[1],[[]],[[]],[[]],[[]],[[],3],[[],3],[91],[91,91],[[]],[[],91],[6],[6],[[]],[6],[91,6],[[91,91],48],[[91,7],8],[[]],[[],6],[[]],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],34],[[]],[[]],[[],3],[[]],[[]],[[]],[91,72],0,[91,72],0,[91,72],0,0,0,0,0,0,0,0,0,[1],[1],[71,24],[73,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[71,71],[73,73],[[]],[[]],[[71,71],81],[[73,73],81],[[],71],[[],73],[6],[6],[6],[6],[[]],[[]],[6],[6],[[71,71],48],[[73,73],48],[[],48],[[],48],[[],48],[[],48],[[71,7],8],[[73,7],8],[[]],[[]],[39,[[3,[71]]]],[39,[[3,[73]]]],[24,[[3,[71]]]],[24,[[3,[73]]]],[[],82],[[],82],[71],[73],[[],6],[[],6],[[]],[[]],[39,48],[39,48],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[71,71],[[3,[81]]]],[[73,73],[[3,[81]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],34],[[],34],[[]],[[]],[[]],[[]],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[1],[41,24],[[]],[[]],[[]],[[]],[[],3],[[],3],[41,41],[[]],[[41,41],81],[[],41],[6],[6],[[]],[6],[[41,41],48],[[],48],[[],48],[[41,7],8],[[]],[39,[[3,[41]]]],[24,[[3,[41]]]],[[],82],[41],[[],6],[[]],[39,48],[[],3],[[]],[[]],[[]],[[41,41],[[3,[81]]]],[[]],[[]],[[]],[[],13],[[],13],[[],34],[[]],[[]],[[],3],[[]],[[]],[[]],0,[1],[[]],[[]],[[]],[[]],[[],3],[[],3],[92],[92,92],[[]],[[],92],[6],[6],[[]],[6],[92,6],[[92,92],48],[[92,7],8],[[]],[[],6],[[]],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],34],[[]],[[]],[[],3],[[]],[92,32],0,[[]],[[]],[92,32],0,[92,32],0,[92,32],0,0,0,0,0,0,0,0,0,0,[1],[1],[78,24],[74,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[78,78],[74,74],[[]],[[]],[[78,78],81],[[74,74],81],[[],78],[[],74],[6],[6],[6],[6],[[]],[[]],[6],[6],[[78,78],48],[[74,74],48],[[],48],[[],48],[[],48],[[],48],[[78,7],8],[[74,7],8],[[]],[[]],[39,[[3,[78]]]],[39,[[3,[74]]]],[24,[[3,[78]]]],[24,[[3,[74]]]],[[],82],[[],82],[78],[74],[[],6],[[],6],[[]],[[]],[39,48],[39,48],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[78,78],[[3,[81]]]],[[74,74],[[3,[81]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],34],[[],34],[[]],[[]],[[]],[[]],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"Private"],[3,"Command"],[4,"Option"],[4,"Recording"],[3,"RecordingInfo"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"Args"],[3,"AnnotationsPerFrame"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"PathBuf"],[3,"TimePoint"],[3,"ArFrame"],[3,"ArFrame"],[3,"Id"],[6,"Result"],[3,"Session"],[3,"ArCamera"],[3,"EntityPath"],[8,"Into"],[15,"str"],[3,"ArPointCloud"],[3,"FrameAnnotation"],[3,"Duration"],[3,"ParseFloatError"],[3,"Path"],[3,"Sequence"],[8,"Iterator"],[15,"f64"],[3,"PossibleValue"],[3,"TypeId"],[3,"ArPlaneAnchor"],[4,"Alignment"],[3,"ArLightEstimate"],[3,"ArPlaneGeometry"],[15,"i32"],[3,"CmCalibratedMagneticField"],[4,"CalibrationAccuracy"],[4,"PlaneClassification"],[3,"ArMeshGeometry"],[3,"Iter"],[3,"Cloned"],[3,"FilterMap"],[4,"PlaneClassificationStatus"],[15,"bool"],[3,"AvCameraCalibrationData"],[3,"AvDepthData"],[3,"ArFaceGeometry"],[3,"ArBlendShapeMap"],[3,"ArFaceAnchor"],[3,"CmVector"],[3,"CmDeviceMotion"],[3,"CmAccelerometerData"],[3,"CmGyroData"],[3,"CmMagnetometerData"],[3,"CmMotionManagerSnapshot"],[3,"ArMeshAnchor"],[3,"ArMeshData"],[3,"KeyPoint"],[3,"Object"],[3,"Edge"],[3,"Skeleton"],[3,"Skeletons"],[3,"NormalizedPoint2D"],[3,"Point3D"],[3,"AnnotatedKeyPoint"],[3,"ObjectAnnotation"],[4,"Accuracy"],[15,"f32"],[4,"Quality"],[4,"Method"],[4,"MeshClassification"],[4,"TrackingState"],[4,"TrackingStateReason"],[4,"Type"],[3,"MapEntry"],[3,"EulerAngles"],[4,"Ordering"],[15,"u64"],[3,"Vertex"],[3,"TextureCoordinate"],[3,"DirectionVector"],[3,"Vertex"],[3,"Face"],[3,"PlaneVector"],[3,"Vertex"],[3,"TextureCoordinate"],[3,"Point"],[3,"Quaternion"]]},\
"raw_mesh":{"doc":"This example demonstrates how to use the Rerun Rust SDK to …","t":[3,13,13,13,7,3,3,3,13,4,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,5,12,5,5,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,5,12,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Args","Avocado","BrainStem","Buggy","GLOBAL","GltfNode","GltfPrimitive","GltfTransform","Lantern","Scene","__clone_box","albedo_factor","augment_args","augment_args_for_update","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","children","clone","clone_into","colors","command","command_for_update","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","from_gltf","group_id","indices","init","init","init","init","init","into","into","into","into","into","load_gltf","log_coordinate_space","log_node","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","main","name","node_name","node_primitives","normals","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","positions","primitives","r","rerun","run","s","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","scene","scene_path","scene_path","t","texcoords","to_owned","to_possible_value","transform","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","update_from_arg_matches","update_from_arg_matches_mut","value_variants","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from"],"q":["raw_meshd":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Log a glTF node with Rerun.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specifies the glTF scene to load.","","Specifies the path of an arbitrary glTF scene to load.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,4,4,4,0,0,0,0,4,0,4,26,8,8,13,26,27,4,8,13,26,27,4,8,13,26,27,4,8,13,26,27,4,8,13,26,27,4,8,13,26,27,4,8,13,4,4,26,8,8,13,26,27,4,8,13,26,27,4,8,13,26,27,4,8,13,26,27,4,8,4,8,13,26,27,4,8,8,8,13,8,26,13,26,27,4,8,13,26,27,4,8,0,0,0,13,26,27,4,8,13,26,27,4,8,0,13,0,0,26,13,26,27,4,8,13,26,27,4,8,26,13,27,8,0,27,13,26,27,4,8,13,26,27,4,8,8,8,8,27,26,4,4,13,13,26,27,4,8,13,26,27,4,8,13,26,27,4,8,13,26,27,4,8,13,26,27,4,8,13,26,27,4,8,8,8,4,13,26,27,4,8,13,26,27,4,8,13,26,27,4,8],"f":[0,0,0,0,0,0,0,0,0,0,[1],0,[2,2],[2,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[4,4],[[]],0,[[],2],[[],2],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[]],[[]],[[]],[[]],[[]],[5],[5],[5],[5],[5],[[4,6],7],[[8,6],7],[[]],[[]],[[]],[[]],[[]],[9,[[11,[8,10]]]],[9,[[11,[8,10]]]],[12,13],[[],[[3,[14]]]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[15,16],[[17,[19,[18]],20],21],[[17,13],21],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[],21],0,[12,22],[12,16],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[17,8],21],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[8,[[21,[23]]]],0,0,0,[[]],[4,[[3,[24]]]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[8,9],[[11,[10]]]],[[8,9],[[11,[10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"Private"],[3,"Command"],[4,"Option"],[4,"Scene"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"Args"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Node"],[3,"GltfNode"],[3,"Id"],[3,"Document"],[8,"Iterator"],[3,"Session"],[3,"EntityPath"],[8,"Into"],[15,"str"],[6,"Result"],[3,"String"],[3,"PathBuf"],[3,"PossibleValue"],[3,"TypeId"],[3,"GltfPrimitive"],[3,"GltfTransform"]]},\
"re_analytics":{"doc":"Rerun’s analytics SDK.","t":[3,4,13,13,13,17,3,4,13,13,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,12,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,0,12,11,11,11,11,11,11,0,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,17,13,13,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,5,11,11,11,11,11,3,4,13,13,13,12,12,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,13,3,4,13,5,11,11,11,11,11,11,11,11,11,11,12,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,5,11,11,13,13,13,13,13,17,3,3,4,3,3,13,4,18,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12],"n":["Analytics","AnalyticsError","Append","Bool","Config","DISCLAIMER","Event","EventKind","Float","Integer","Pipeline","Property","Sink","String","Update","append","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cli","clone","clone","clone","clone_into","clone_into","clone_into","config","config","config_native","default_append_props","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deregister_append_property","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","event_id","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","hashed","init","init","init","init","init","into","into","into","into","into","kind","name","new","pipeline","pipeline_native","props","provide","record","register_append_property","serialize","serialize","serialize","sink_native","source","time_utc","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update","with_build_info","with_prop","Analytics","CliError","Config","DETAILS","Io","Serde","borrow","borrow_mut","clear","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","init","into","opt","print_config","print_details","provide","set","source","to_string","try_from","try_into","type_id","Config","ConfigError","Io","Serde","UnknownLocation","analytics_enabled","analytics_id","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","config_dir","config_file","config_file_path","data_dir","data_dir_path","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","fmt","fmt","fmt","from","from","from","from","init","init","into","into","is_first_run","is_first_run","load","opt_in_metadata","project_dirs","provide","save","serialize","session_id","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","Io","Pipeline","PipelineError","Serde","append_event","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","event_tx","flush_events","flush_pending_events","fmt","fmt","fmt","from","from","from","from","init","init","into","into","new","provide","realtime_pipeline","record","source","to_string","try_from","try_from","try_into","try_into","try_send_event","type_id","type_id","Capture","HttpStatus","HttpTransport","Identify","Io","PUBLIC_POSTHOG_PROJECT_KEY","PostHogBatch","PostHogCaptureEvent","PostHogEvent","PostHogIdentifyEvent","PostHogSink","Serde","SinkError","URL","Url","agent","api_key","batch","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","distinct_id","distinct_id","drop","drop","drop","drop","drop","drop","drop","event","event","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_event","from_events","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","properties","properties","provide","resolved_url","send","serialize","serialize","serialize","serialize","set","source","timestamp","timestamp","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","body","status_code","status_text"],"q":["re_analytics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_analytics::cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_analytics::config_native","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_analytics::pipeline_native","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_analytics::sink_native","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_analytics::sink_native::SinkError","",""],"d":["","","Append a new event to the time series associated with this …","","","","","","","","","","","","Update the permanent state associated with this analytics …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Deregister a property.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns a new string property that is a hex representation …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","<code>None</code> if analytics are disabled.","","","","Record an event.","Register a property that will be included in all …","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds Rerun version, git hash, build date and similar as …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","The path of the config file.","","The directory where pending data is stored.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Is this the first time the user runs the app?","","Opt-in meta-data you can set via <code>rerun analytics</code>.","","","","","A unique ID for this session.","","","","","","","","","","","An eventual, at-least-once(-ish) event pipeline, backed by …","","","Appends the <code>event</code> to the active <code>session_file</code>.","","","","","","","","","","","","Sends all events currently buffered in the <code>session_file</code> …","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Our public entrypoint; this will be resolved into an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,5,6,14,0,0,0,6,6,14,0,14,6,5,4,7,5,4,6,14,7,5,4,6,14,0,5,4,6,5,4,6,7,7,0,7,7,5,4,6,14,7,5,4,6,14,7,5,4,6,7,5,4,6,14,5,7,5,4,6,14,14,7,5,4,6,6,6,6,6,6,14,14,14,14,6,7,5,4,6,14,7,5,4,6,14,4,4,7,7,0,4,14,7,7,5,4,6,0,14,4,5,4,6,14,7,5,4,6,14,7,5,4,6,14,7,5,4,6,14,4,4,4,27,0,27,0,27,27,27,27,0,27,27,27,27,27,27,27,27,27,27,27,27,0,0,0,27,0,27,27,27,27,27,0,0,20,20,20,8,8,20,8,20,8,8,8,8,8,8,8,8,20,8,20,8,8,20,8,20,20,8,20,20,20,8,20,8,20,8,8,8,8,8,8,20,8,8,8,20,8,20,20,8,20,8,20,8,19,0,0,19,0,19,36,19,36,19,36,19,36,19,36,36,0,0,19,19,36,19,19,19,36,19,36,19,36,36,19,0,36,19,19,19,36,19,36,0,19,36,40,18,18,40,18,0,0,0,0,0,0,18,0,34,0,34,43,43,39,18,34,40,41,42,43,39,18,34,40,41,42,43,39,34,39,34,34,39,18,34,40,41,42,43,39,18,34,40,41,42,43,41,42,39,18,34,40,41,42,43,41,42,39,18,18,34,40,41,42,43,39,18,18,18,18,34,40,41,42,43,40,43,39,18,34,34,40,41,42,43,39,18,34,40,41,42,43,41,42,18,34,34,40,41,42,43,42,18,41,42,39,34,18,39,18,34,40,41,42,43,39,18,34,40,41,42,43,39,18,34,40,41,42,43,45,45,45],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[3,[[2,[1]]]]],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[5,5],[4,4],[6,6],[[]],[[]],[[]],[7,8],0,0,0,[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[7,1]],[[],[[10,[5]]]],[[],[[10,[4]]]],[[],[[10,[6]]]],[9],[9],[9],[9],[9],[[5,5],11],0,[[5,12],13],[[4,12],13],[[6,12],13],[[14,12],13],[[14,12],13],[[]],[[]],[[]],[11,6],[15,6],[16,6],[17,6],[1,6],[[]],[[]],[18,14],[19,14],[20,14],[6,6],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],0,0,[21,[[10,[7,14]]]],0,0,0,[22],[[7,4]],[[7,1,[3,[6]]]],[5,10],[4,10],[6,10],0,[14,[[24,[23]]]],0,[[]],[[]],[[]],[[],17],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],25],[[],25],[[],25],[[],25],[[],25],[[[3,[[2,[1]]]]],4],[[4,26],4],[[4,[3,[[2,[1]]]],[3,[6]]],4],0,0,0,0,0,0,[[]],[[]],[[],[[10,[27]]]],[9],[9],[9],[[27,12],13],[[27,12],13],[28,27],[29,27],[14,27],[20,27],[[]],[[],9],[[]],[11,[[10,[27]]]],[[],[[10,[27]]]],[[]],[22],[30,[[10,[27]]]],[27,[[24,[23]]]],[[],17],[[],10],[[],10],[[],25],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[8,8],[[]],[8,31],[8,31],0,[8,31],0,[9],[9],[9],[9],[[],[[10,[8]]]],[9],[9],[[20,12],13],[[20,12],13],[[8,12],13],[29,20],[28,20],[[]],[[]],[[],9],[[],9],[[]],[[]],[8,11],0,[[],[[10,[8,20]]]],0,[[],[[10,[32,20]]]],[22],[8,[[10,[20]]]],[8,10],0,[20,[[24,[23]]]],[[]],[[],17],[[],10],[[],10],[[],10],[[],10],[[],25],[[],25],0,0,0,0,[[33,1,1,4],[[10,[4]]]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],0,[[33,1,1,34],[[10,[18]]]],[[8,34],35],[[19,12],13],[[19,12],13],[[36,12],13],[[]],[29,19],[28,19],[[]],[[],9],[[],9],[[]],[[]],[[8,21,34],[[10,[[24,[36]],19]]]],[22],[[8,34,33,21,37,38],35],[[36,4]],[19,[[24,[23]]]],[[],17],[[],10],[[],10],[[],10],[[],10],[[37,4]],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39,39],[34,34],[[]],[[]],[[],34],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],0,0,[9],[9],[9],[9],[9],[9],[9],0,0,[[39,12],13],[[18,12],13],[[18,12],13],[[34,12],13],[[40,12],13],[[41,12],13],[[42,12],13],[[43,12],13],[[]],[29,18],[[]],[44,18],[28,18],[[]],[[]],[[]],[[]],[[]],[[1,1,4],40],[[],43],[[],9],[[],9],[34,[[10,[17,18]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[22],0,[[34,1,1],[[10,[18]]]],[40,10],[41,10],[42,10],[43,10],0,[18,[[24,[23]]]],0,0,[[]],[[]],[[],17],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,0,0],"p":[[15,"str"],[4,"Cow"],[8,"Into"],[3,"Event"],[4,"EventKind"],[4,"Property"],[3,"Analytics"],[3,"Config"],[15,"usize"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"AnalyticsError"],[15,"i64"],[15,"f64"],[3,"String"],[4,"SinkError"],[4,"PipelineError"],[4,"ConfigError"],[3,"Duration"],[3,"Demand"],[8,"Error"],[4,"Option"],[3,"TypeId"],[3,"BuildInfo"],[4,"CliError"],[3,"Error"],[3,"Error"],[8,"IntoIterator"],[3,"Path"],[3,"ProjectDirs"],[3,"File"],[3,"PostHogSink"],[6,"Result"],[3,"Pipeline"],[3,"Sender"],[3,"Receiver"],[3,"Url"],[4,"PostHogEvent"],[3,"PostHogCaptureEvent"],[3,"PostHogIdentifyEvent"],[3,"PostHogBatch"],[4,"Error"],[13,"HttpStatus"]]},\
"re_arrow_store":{"doc":"The Rerun datastore, implemented on top of Apache Arrow …","t":[8,3,3,3,13,4,3,3,3,13,3,13,13,13,13,3,3,4,13,2,2,13,2,2,2,13,2,4,6,12,0,12,12,10,12,12,12,12,12,12,12,12,12,12,10,12,12,12,12,12,10,10,12,0,12,12,0,0,12,0,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,8,10,10,10,10,6,6,5,5,5,5,5,5,3,3,18,3,3,3,3,3,3,18,3,3,3,4,6,13,6,13,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,11,11,11,12,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,3,3,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,13,13,13,13,13,13,4,6,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,12,12,12,12],"n":["ArrayExt","DataStore","DataStoreConfig","DataStoreStats","DropAtLeastPercentage","GarbageCollectionTarget","IndexBucket","IndexRowNr","IndexTable","InvalidClusteringComponent","LatestAtQuery","MismatchedInstances","MismatchedRows","MoreThanOneRow","Other","RangeQuery","RowIndex","RowIndexKind","SparseClusteringComponent","StreamReader","StreamState","Temporal","TimeInt","TimeRange","TimeType","Timeless","Timeline","WriteError","WriteResult","all_components","arrow_util","at","buckets","clean_for_polars","cluster_comp_cache","cluster_key","cluster_key","cluster_key","component_bucket_nb_rows","component_bucket_size_bytes","components","config","ent_path","gc_id","get_child_length","index_bucket_nb_rows","index_bucket_size_bytes","indices","indices","insert_id","is_dense","is_sorted_and_unique","messages","polars_util","query_id","range","store","store_gc","store_insert_ids","store_polars","store_read","store_stats","store_write","timeless_components","timeless_indices","timeline","timeline","timeline","timeline","total_component_rows","total_component_size_bytes","total_index_rows","total_index_size_bytes","total_temporal_component_rows","total_temporal_component_size_bytes","total_temporal_index_rows","total_temporal_index_size_bytes","total_timeless_component_rows","total_timeless_component_size_bytes","total_timeless_index_rows","total_timeless_index_size_bytes","cluster_comp","cluster_comp_nb_instances","key","num_instances","ArrayExt","clean_for_polars","get_child_length","is_dense","is_sorted_and_unique","SharedPolarsError","SharedResult","dataframe_from_results","drop_all_nulls","join_dataframes","latest_component","latest_components","range_components","ComponentBucket","ComponentTable","DEFAULT","DataStore","DataStoreConfig","IndexBucket","IndexBucketIndices","IndexRowNr","IndexTable","KIND_MASK","PersistentComponentTable","PersistentIndexTable","RowIndex","RowIndexKind","SecondaryIndex","Temporal","TimeIndex","Timeless","__clone_box","__clone_box","__clone_box","__clone_box","all_components","all_components","all_components","archive","archived","as_u64","az","az","az","az","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buckets","buckets","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","chunks","chunks","clear_msg_metadata","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cluster_comp_cache","cluster_key","cluster_key","cluster_key","cluster_key","cluster_key","cmp","cmp","cmp","component_bucket_nb_rows","component_bucket_size_bytes","components","config","data","datatype","datatype","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encompasses","ent_path","ent_path","entity_path","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","find_bucket","find_bucket_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","formatted_time_range","from","from","from","from","from","from","from","from","from","from","from","from","from_u63","gc","gc_drop_at_least_size_bytes","gc_id","get","get","get","get","get_msg_metadata","get_or_create_cluster_component","index_bucket_nb_rows","index_bucket_size_bytes","indices","indices","indices","indices","init","init","init","init","init","init","init","init","init","init","init","init","insert","insert","insert","insert","insert_id","insert_id_key","insert_row","insert_timeless_row","into","into","into","into","into","into","into","into","into","into","into","into","is_sorted","is_sorted","iter_buckets","iter_buckets","iter_indices","iter_time_ranges","kind","latest_at","latest_at","latest_at","latest_at","lookup_data_type","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","messages","name","name","name","name","named_indices","named_indices","new","new","new","new","new","new","new","num_rows","oldest_time_per_timeline","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","partial_cmp","push","push","push","query_id","range","range","range","range","range_bucket_rev_mut","range_buckets","range_buckets_rev","row_offset","sanity_check","sanity_check","sanity_check","sanity_check","sanity_check","sanity_check","sanity_check","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","sort","sort_indices_if_needed","sort_indices_if_needed","sort_indices_if_needed","split","store_insert_ids","time_range","time_ranges","timeless_components","timeless_indices","timeline","timeline","times","times","to_dataframe","to_dataframe","to_dataframe","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","total_rows","total_rows","total_rows","total_rows","total_rows","total_rows","total_rows","total_rows","total_size_bytes","total_size_bytes","total_size_bytes","total_size_bytes","total_size_bytes","total_size_bytes","total_size_bytes","total_size_bytes","total_temporal_component_rows","total_temporal_component_size_bytes","total_temporal_index_rows","total_temporal_index_size_bytes","total_timeless_component_rows","total_timeless_component_size_bytes","total_timeless_index_rows","total_timeless_index_size_bytes","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","DropAtLeastPercentage","GarbageCollectionTarget","__clone_box","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","deref","deref_mut","drop","fmt","fmt","from","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","to_owned","to_string","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","component_as_series","find_component_datatype","insert_ids_as_series","new_infallible_series","sort_df_columns","LatestAtQuery","RangeQuery","__clone_box","__clone_box","at","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","into","into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","new","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","range","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","timeline","timeline","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","DataStoreStats","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","default","deref","deref_mut","drop","fmt","from","from_store","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","total_component_rows","total_component_size_bytes","total_index_rows","total_index_size_bytes","total_temporal_component_rows","total_temporal_component_size_bytes","total_temporal_index_rows","total_temporal_index_size_bytes","total_timeless_component_rows","total_timeless_component_size_bytes","total_timeless_index_rows","total_timeless_index_size_bytes","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","InvalidClusteringComponent","MismatchedInstances","MismatchedRows","MoreThanOneRow","Other","SparseClusteringComponent","WriteError","WriteResult","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","drop","find_split_index","fmt","fmt","from","from","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","provide","saturating_as","saturating_cast_from","source","split_time_range_off","to_string","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","cluster_comp","cluster_comp_nb_instances","key","num_instances"],"q":["re_arrow_store","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_arrow_store::WriteError","","","","re_arrow_store::arrow_util","","","","","re_arrow_store::polars_util","","","","","","","","re_arrow_store::storere_arrow_store::store_gc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_arrow_store::store_polars","","","","","re_arrow_store::store_read","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_arrow_store::store_stats","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_arrow_store::store_write","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_arrow_store::store_write::WriteError","","",""],"d":["","A complete data store: covers all timelines, all entities, …","","","Try to drop <em>at least</em> the given percentage.","","An <code>IndexBucket</code> holds a size-delimited (data size and/or …","","An <code>IndexTable</code> maps specific points in time to rows in …","","A query a given time, for a given timeline.","","","","","A query over a time range, for a given timeline.","An opaque type that directly refers to a row of data …","","","","","","","","","","","","","Track all of the components that have been written to.","","","The actual buckets, where the indices are stored.","Create a new <code>Array</code> which avoids problematic types for …","Used to cache auto-generated cluster components, i.e. <code>[0]</code>, …","The cluster key specifies a column/component that is …","Carrying the cluster key around to help with assertions …","Carrying the cluster key around to help with assertions …","The maximum number of rows in a component bucket before …","The maximum size of a component bucket before triggering a …","Maps a component name to its associated table, for all …","The configuration of the data store (e.g. bucket sizes).","The entity this table is related to, for debugging …","Monotonically increasing ID for GCs.","Returns the length of the child array at the given index.","The maximum number of rows in an index bucket before …","The maximum size of an index bucket before triggering a …","Maps an entity to its index, for a specific timeline.","","Monotonically increasing ID for insertions.","Returns <code>true</code> if the array is dense (no nulls).","Returns <code>true</code> if the array is both sorted (increasing …","Maps <code>MsgId</code>s to some metadata (just timepoints at the …","","Monotonically increasing ID for queries.","","","","If enabled, will store the ID of the write request …","","","","","Dedicated component tables for timeless data. Never …","Dedicated index tables for timeless data. Never garbage …","The timeline this table operates in, for debugging …","The timeline the bucket’s parent table operates in, for …","","","","","","","","","","","","","","","","","","","","Create a new <code>Array</code> which avoids problematic types for …","Returns the length of the child array at the given index.","Returns <code>true</code> if the array is dense (no nulls).","Returns <code>true</code> if the array is both sorted (increasing …","","","","Returns a new <code>DataFrame</code> where all rows that only contain …","Reduces an iterator of dataframes into a single dataframe …","Queries a single component from its own point-of-view as …","Queries any number of components and their cluster keys …","Iterates over the rows of any number of components and …","A <code>ComponentBucket</code> holds a size-delimited (data size) chunk …","A <code>ComponentTable</code> holds all the values ever inserted for a …","","A complete data store: covers all timelines, all entities, …","","An <code>IndexBucket</code> holds a size-delimited (data size and/or …","Just the indices, to simplify interior mutability.","","An <code>IndexTable</code> maps specific points in time to rows in …","","A <code>PersistentComponentTable</code> holds all the timeless values …","A <code>PersistentIndexTable</code> maps specific entries to rows in …","An opaque type that directly refers to a row of data …","","A vector of references into the component tables. None = …","","A vector of times. Our primary column, always densely …","","","","","","Retrieve all the <code>ComponentName</code>s that have been written to …","Track all of the components that have been written to.","Track all of the components that have been written to.","Archives the bucket as a new one is about to take its …","Has this bucket been archived yet?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The actual buckets, where the indices are stored.","The actual buckets, where the component data is stored.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All the data for this table: many rows of a single column.","All the data for this bucket: many rows of a single column.","","","","","","","","","","Used to cache auto-generated cluster components, i.e. <code>[0]</code>, …","See <code>Self::cluster_key</code> for more information about the …","The cluster key specifies a column/component that is …","Carrying the cluster key around to help with assertions …","Carrying the cluster key around to help with assertions …","Carrying the cluster key around to help with assertions …","","","","The maximum number of rows in a component bucket before …","The maximum size of a component bucket before triggering a …","Maps a component name to its associated table, for all …","The configuration of the data store (e.g. bucket sizes).","Returns a shallow clone of all the chunks in this bucket.","Type of the underlying component.","Type of the underlying component.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Does <code>self</code> fully encompass <code>time_ranges</code> for the given …","The entity this table is related to, for debugging …","The entity this table is related to, for debugging …","","","","","","","","","","","Returns the index bucket whose time range covers the given …","Returns the index bucket whose time range covers the given …","","","","","","","","","","","","","","","","","","","","","Returns a formatted string of the time range in the bucket","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Panics if <code>v</code> is 0. In debug, panics if <code>v</code> has its most …","Triggers a garbage collection according to the desired …","","Monotonically increasing ID for GCs.","Retrieves the data associated with a list of <code>components</code> at …","Returns a shallow clone of the row data present at the …","","Returns a shallow clone of the row data present at the …","","Tries to find the cluster component for the current row, …","The maximum number of rows in an index bucket before …","The maximum size of an index bucket before triggering a …","Maps an entity to its index, for a specific timeline.","All component indices for this bucket.","","All secondary indices for this bucket (i.e. everything but …","","","","","","","","","","","","","Inserts a <code>MsgBundle</code>’s worth of components into the …","","","","Monotonically increasing ID for insertions.","The column name used for storing insert requests’ IDs …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether the indices in this <code>IndexBucket</code> are sorted","Whether the indices (all of them!) are currently sorted.","Returns a read-only iterator over the raw buckets.","Returns an iterator over the <code>ComponentBucket</code> in this table","Returns a read-only iterator over the raw index tables.","Return an iterator over the time ranges in this bucket.","","Queries the datastore for the internal row indices of the …","Returns <code>None</code> iff no row index could be found for the …","Returns <code>None</code> iff no row index could be found for the …","Returns <code>None</code> iff no row index could be found for the …","Lookup the arrow <code>DataType</code> of a <code>Component</code>","","","","","","","","","","","","","","","","","","","","","","","","","Maps <code>MsgId</code>s to some metadata (just timepoints at the …","Returns the name of the component stored in this bucket.","Name of the underlying component, for debugging purposes.","Name of the underlying component.","The component’s name, for debugging purposes.","","Returns a Vec each of (name, array) for each index in the …","See <code>Self::cluster_key</code> for more information about the …","","","","Creates a new timeless component table for the specified …","Creates a new component table for the specified component …","Creates a new component bucket for the specified component …","The number of rows in the table: all indices should always …","The oldest time for which we have any data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pushes <code>rows_single</code> to the end of the bucket, returning the …","Finds the appropriate bucket in this component table and …","Pushes <code>rows_single</code> to the end of the bucket, returning the …","Monotonically increasing ID for queries.","Iterates the datastore in order to return the internal row …","Returns an empty iterator if no data could be found for …","Returns an empty iterator if no data could be found for …","Returns an empty iterator if no data could be found for …","Returns an iterator that is guaranteed to yield at least …","Returns an iterator that is guaranteed to yield at least …","Returns an iterator that is guaranteed to yield at least …","The offset of this bucket in the global table.","Runs the sanity check suite for the entire datastore.","Runs the sanity check suite for the entire table.","Runs the sanity check suite for the entire table.","Runs the sanity check suite for the entire bucket.","Runs the sanity check suite for the entire table.","Runs the sanity check suite for the entire table.","Runs the sanity check suite for the entire table.","","","","","","","","","","","","","","","","","","","","","","","","","","Sort all unsorted indices in the store.","Sort all unsorted index buckets in this table.","Sort all component indices by time, provided that’s not …","Splits the bucket into two, potentially uneven parts.","If enabled, will store the ID of the write request …","The time range covered by the primary time index.","The time ranges (plural!) covered by this bucket. Buckets …","Dedicated component tables for timeless data. Never …","Dedicated index tables for timeless data. Never garbage …","The timeline this table operates in, for debugging …","The timeline the bucket’s parent table operates in, for …","Returns an (name, <code>Int64Array</code>) with a logical type matching …","","Dumps the entire datastore as a flat, denormalized …","Dumps the entire table as a flat, denormalized dataframe.","Dumps the entire bucket as a flat, denormalized dataframe.","","","","","","","","","","","","","","Returns the number of rows stored across this table.","Returns the number of rows stored across this entire …","Returns the number of rows stored across this bucket.","Returns the number of rows stored across this table.","Returns the number of rows stored across this entire …","Returns the number of rows stored across this bucket.","The total number of rows present in this bucket, across …","The total number of rows present in this bucket, across …","Returns the size of the data stored across this table, in …","Returns the size of data stored across this entire table, …","Returns the size of the data stored across this bucket, in …","Returns the size of the data stored across this table, in …","Returns the size of data stored across this entire table, …","Returns the size of the data stored across this bucket, in …","The size of this bucket in bytes, across all chunks.","The size of this bucket in bytes, across all chunks.","Returns the number of temporal component rows stored …","Returns the size of the temporal component data stored …","Returns the number of temporal index rows stored across …","Returns the size of the temporal index data stored across …","Returns the number of timeless component rows stored …","Returns the size of the timeless component data stored …","Returns the number of timeless index rows stored across …","Returns the size of the timeless index data stored across …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to drop <em>at least</em> the given percentage.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Sorts the columns of the given dataframe according to the …","A query a given time, for a given timeline.","A query over a time range, for a given timeline.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Finds an optimal split point for the given time index, or …","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","Given a time index and a desired split index, splits off …","","","","","","","","","","","","",""],"i":[0,0,0,0,39,0,0,0,0,56,0,56,56,56,56,0,0,0,56,0,0,24,0,0,0,24,0,0,0,30,0,13,30,60,12,12,30,35,26,26,12,12,30,12,60,26,26,12,35,12,60,60,12,0,12,15,0,0,26,0,0,0,0,12,12,30,35,13,15,55,55,55,55,55,55,55,55,55,55,55,55,61,61,61,61,0,60,60,60,60,0,0,0,0,0,0,0,0,0,0,26,0,0,0,0,0,0,21,0,0,0,0,0,24,0,24,24,21,25,26,12,34,30,20,20,21,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,30,37,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,36,20,12,24,21,25,26,24,21,25,26,12,12,12,34,30,35,24,21,25,26,26,12,12,20,36,37,26,28,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,20,34,30,30,24,21,25,24,24,21,21,25,25,30,30,12,24,21,21,25,25,26,34,34,30,30,35,35,28,36,36,37,37,20,20,35,12,24,21,25,26,34,30,35,28,36,37,20,21,12,12,12,12,36,37,20,12,12,26,26,12,34,35,28,12,24,21,25,26,34,30,35,28,36,37,20,12,34,30,35,12,12,12,12,12,24,21,25,26,34,30,35,28,36,37,20,35,28,30,37,12,20,21,12,34,30,35,12,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,12,20,36,37,20,34,35,12,34,30,35,36,37,20,34,12,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,24,21,25,36,37,20,12,12,34,30,35,30,30,30,20,12,34,30,35,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,28,12,30,35,35,26,28,20,12,12,30,35,35,28,12,34,35,24,21,25,26,12,21,25,34,30,35,36,37,20,34,30,35,36,37,20,36,20,34,30,35,36,37,20,36,20,12,12,12,12,12,12,12,12,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,39,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,0,0,0,0,0,13,15,13,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,0,0,56,56,56,56,56,56,56,56,56,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,56,56,56,56,56,56,56,56,56,61,61,61,61],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[2,[1]]]],0,0,0,0,0,0,0,0,0,0,[3,3],0,0,0,0,0,[[],4],[[],[[5,[4]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[2,[1]]]],[3,3],[[],4],[[],[[5,[4]]]],0,0,[[],[[7,[6]]]],[[6,8],[[9,[6]]]],[[8,10,11],[[7,[6]]]],[[12,13,14,8],[[7,[6]]]],[[12,13,14,10],[[7,[6]]]],[[12,15,14,8,10],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[16],[16],[16],[16],[[12,17,14],[[19,[[18,[8]]]]]],0,0,[20],0,[21,22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],0,0,[[12,23]],[24,24],[21,21],[25,25],[26,26],[[]],[[]],[[]],[[]],0,[12,8],0,0,0,0,[[24,24],27],[[21,21],27],[[25,25],27],0,0,0,0,[20,[[18,[[2,[1]]]]]],0,0,[[],26],[[],28],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[20,17,29],4],0,0,[30,14],[[24,24],4],[[21,21],4],[[25,25],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[30,31]],[[30,31]],[[12,32],33],[[24,32],33],[[21,32],33],[[21,32],33],[[25,32],33],[[25,32],33],[[26,32],33],[[34,32],33],[[34,32],33],[[30,32],33],[[30,32],33],[[35,32],33],[[35,32],33],[[28,32],33],[[36,32],33],[[36,32],33],[[37,32],33],[[37,32],33],[[20,32],33],[[20,32],33],[35,38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[24,22],21],[[12,39,17,8],[[18,[[2,[1]]]]]],[[12,17,8,40],[[18,[[2,[1]]]]]],0,[12],[[36,21],[[2,[1]]]],[[37,21],[[19,[[2,[1]]]]]],[[20,21],[[19,[[2,[1]]]]]],[[12,41],[[19,[42]]]],[[12,3,[19,[3]],42],43],0,0,0,0,0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[12,44],43],[[34,45],5],[[30,26,31,45],5],[[35,31,45],5],0,[[],8],[[12,42,3,[19,[3]],45],43],[[12,3,[19,[3]],45],43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,4],0,[30,46],[37,46],[12,46],[20,11],[21,24],[[12,13,14,8],19],[[34,8],19],[[30,31,8],19],[[35,31,8],19],[[12,8],[[19,[47]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[20,48],0,0,0,[34],[35],[[8,26],12],[[8,14],34],[[8,17,14],30],[[8,17],35],[[8,47],36],[[8,47],37],[[8,47,22],20],0,[12,[[49,[17,31]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[24,24],[[19,[27]]]],[[21,21],[[19,[27]]]],[[25,25],[[19,[27]]]],[[36,1],21],[[37,26,42,1],21],[[20,42,1],22],0,[[12,15,14],11],[34,11],[[30,50],11],[[35,50],11],[[30,[51,[31]]],11],[[30,[51,[31]]],11],[[30,[51,[31]]],11],0,[12,5],[34,5],[30,5],[35,5],[36,5],[37,5],[20,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28],[12],[30],[35],[35,19],0,0,0,0,0,0,0,[35],0,[12,6],[[34,12,26],6],[[35,12,26],6],[[]],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[34,22],[30,22],[35,22],[36,22],[37,22],[20,22],0,0,[34,22],[30,22],[35,22],[36,22],[37,22],[20,22],0,0,[12,22],[12,22],[12,22],[12,22],[12,22],[12,22],[12,22],[12,22],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[16],[[]],[[]],[[]],[[]],[[],19],[[],19],[39,39],[[]],[3],[3],[3],[[39,32],33],[[39,32],33],[[]],[[],3],[[]],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[],38],[[],52],[[],52],[[],53],[[]],[[]],[[]],[[]],[[]],[[12,3,47,8],54],[[12,8],[[19,[47]]]],[[3,45],[[19,[54]]]],[[48,1,3],54],[[6,4],6],0,0,[16],[16],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[13,13],[15,15],[[]],[[]],[3],[3],[3],[3],[3],[3],[[13,32],33],[[15,32],33],[[]],[[]],[[],3],[[],3],[[]],[[]],[[],19],[[],19],[[]],[[]],[[17,31],13],[[17,50],15],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[],52],[[],52],[[],52],[[],52],[[],53],[[],53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],19],[[],19],[[],55],[3],[3],[3],[[55,32],33],[[]],[12,55],[[],3],[[]],[[],19],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[],52],[[],52],[[],53],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],19],[[],19],[3],[3],[3],[18,[[19,[3]]]],[[56,32],33],[[56,32],33],[57,56],[[]],[[],3],[[]],[[],19],[[]],[[]],[[]],[58],[[]],[[]],[56,[[19,[59]]]],[[3,18,50],50],[[],38],[[],52],[[],52],[[],53],[[]],[[]],[[]],[[]],[[]],0,0,0,0],"p":[[8,"Array"],[3,"Box"],[15,"usize"],[15,"bool"],[6,"Result"],[3,"DataFrame"],[6,"SharedResult"],[3,"ComponentName"],[6,"PolarsResult"],[4,"JoinType"],[8,"Iterator"],[3,"DataStore"],[3,"LatestAtQuery"],[3,"EntityPath"],[3,"RangeQuery"],[3,"Private"],[3,"Timeline"],[3,"Vec"],[4,"Option"],[3,"ComponentBucket"],[3,"RowIndex"],[15,"u64"],[6,"HashSet"],[4,"RowIndexKind"],[3,"IndexRowNr"],[3,"DataStoreConfig"],[4,"Ordering"],[3,"IndexBucketIndices"],[3,"HashMap"],[3,"IndexTable"],[3,"TimeInt"],[3,"Formatter"],[6,"Result"],[3,"PersistentIndexTable"],[3,"IndexBucket"],[3,"PersistentComponentTable"],[3,"ComponentTable"],[3,"String"],[4,"GarbageCollectionTarget"],[15,"f64"],[3,"MsgId"],[3,"TimePoint"],[6,"WriteResult"],[3,"MsgBundle"],[6,"IntMap"],[8,"ExactSizeIterator"],[4,"DataType"],[15,"str"],[3,"BTreeMap"],[3,"TimeRange"],[8,"RangeBounds"],[4,"Result"],[3,"TypeId"],[3,"Series"],[3,"DataStoreStats"],[4,"WriteError"],[3,"Error"],[3,"Demand"],[8,"Error"],[8,"ArrayExt"],[13,"MismatchedInstances"]]},\
"re_build_build_info":{"doc":"This crate is to be used from <code>build.rs</code> build scripts.","t":[5,5,5,5,5,5],"n":["export_env_vars","git_branch","git_hash","git_path","run_command","set_env"],"q":["re_build_build_info","","","","",""],"d":["Call from the <code>build.rs</code> file of any crate you want to …","","","From https://git-scm.com/docs/git-rev-parse:","",""],"i":[0,0,0,0,0,0],"f":[[[]],[[],[[2,[1]]]],[[],[[2,[1]]]],[3,[[2,[1]]]],[3,[[2,[1]]]],[[3,3]]],"p":[[3,"String"],[6,"Result"],[15,"str"]]},\
"re_build_info":{"doc":"Information about the build of a Rust crate.","t":[3,3,12,0,14,12,0,12,12,12,12,12,12,12,12,12,3,11,11,11,11,12,12,11,11,11,12,12,11,11,12,12,11,11,11,11,11,12,3,17,17,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11],"n":["BuildInfo","CrateVersion","alpha","build_info","build_info","crate_name","crate_version","datetime","git_branch","git_hash","is_in_rerun_workspace","major","minor","patch","target_triple","version","BuildInfo","borrow","borrow_mut","clone","clone_into","crate_name","datetime","fmt","fmt","from","git_branch","git_hash","git_hash_or_tag","into","is_in_rerun_workspace","target_triple","to_owned","to_string","try_from","try_into","type_id","version","CrateVersion","IS_ALPHA_BIT","MAX_NUM","alpha","borrow","borrow_mut","clone","clone_into","eq","fmt","fmt","from","from_bytes","into","is_compatible_with","major","minor","new","parse","patch","to_bytes","to_owned","to_string","try_from","try_into","type_id"],"q":["re_build_info","","","","","","","","","","","","","","","","re_build_info::build_info","","","","","","","","","","","","","","","","","","","","","","re_build_info::crate_version","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Information about the build of a Rust crate.","The version of a Rerun crate.","","","Create a <code>BuildInfo</code> at compile-time using environment …","<code>CARGO_PKG_NAME</code>","","ISO 8601 / RFC 3339 build time.","Current git branch, or empty string.","Git commit hash, or empty string.","True if we are building within the rerun repository …","","","","Target architecture and OS","Crate version, parsed from <code>CARGO_PKG_VERSION</code>, ignoring any …","Information about the build of a Rust crate.","","","","","<code>CARGO_PKG_NAME</code>","ISO 8601 / RFC 3339 build time.","","","Returns the argument unchanged.","Current git branch, or empty string.","Git commit hash, or empty string.","","Calls <code>U::from(self)</code>.","True if we are building within the rerun repository …","Target architecture and OS","","","","","","Crate version, parsed from <code>CARGO_PKG_VERSION</code>, ignoring any …","The version of a Rerun crate.","","We disallow version numbers larger than this in order to …","","","","","","","","","Returns the argument unchanged.","From a compact 32-bit representation crated with …","Calls <code>U::from(self)</code>.","","","","","Parse a semver version string, ignoring any trailing …","","A compact 32-bit representation. See also <code>Self::from_bytes</code>.","","","","",""],"i":[0,0,7,0,0,1,0,1,1,1,1,7,7,7,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,1],[[]],0,0,[[1,2],3],[[1,2],3],[[]],0,0,[1,4],[[]],0,0,[[]],[[],4],[[],5],[[],5],[[],6],0,0,0,0,0,[[]],[[]],[7,7],[[]],[[7,7],8],[[7,2],3],[[7,2],3],[[]],[[],7],[[]],[[7,7],8],0,0,[[9,9,9],7],[10,7],0,[7],[[]],[[],4],[[],5],[[],5],[[],6]],"p":[[3,"BuildInfo"],[3,"Formatter"],[6,"Result"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"CrateVersion"],[15,"bool"],[15,"u8"],[15,"str"]]},\
"re_build_web_viewer":{"doc":"Build the Rerun web-viewer .wasm and generate the .js …","t":[5,5],"n":["build","target_directory"],"q":["re_build_web_viewer",""],"d":["Build <code>re_viewer</code> as Wasm, generate .js bindings for it, and …",""],"i":[0,0],"f":[[1],[[],2]],"p":[[15,"bool"],[3,"Utf8PathBuf"]]},\
"re_data_store":{"doc":"This is how we store and index logging data.","t":[13,18,3,18,4,3,4,4,4,13,3,3,13,13,2,18,18,13,13,13,13,6,13,13,3,4,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,4,3,3,3,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,5,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Auto","BEGINNING","ComponentName","EVERYTHING","EditableAutoValue","EntityPath","EntityPathPart","Error","Index","Index","InstancePath","InstancePathHash","Integer","LatestAt","LogDb","MAX","MIN","MsgBundleError","Name","Pixel","Range","Result","Sequence","String","TimeInt","TimeQuery","Timeline","UserEdited","Uuid","WriteError","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","abs","add","add","add_assign","as_f32","as_f64","as_i64","as_ref","as_slice","as_str","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","editable_auto_value","entity_path","entity_path_hash","entity_properties","entity_tree","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format_time_range","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_nanos","from_seconds","from_sequence","full_name","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash64","init","init","init","init","init","init","init","init","instance_key","instance_key","instance_path","into","into","into","into","into","into","into","into","is_child_of","is_descendant_of","is_root","is_timeless","iter","join","last","len","log_db","log_time","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","name","name","neg","new","new","new","new_sequence","new_temporal","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","parent","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","provide","root","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","serialize","serialize","serialize","short_name","source","sub","sub","sub_assign","sum","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","typ","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Auto","EditableAutoValue","UserEdited","__clone_box","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","default","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","fmt","from","get","init","into","is_auto","lossless_try_into","lossy_into","or","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","serialize","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","ColorMap","ColorMap","ColorMapper","EntityProperties","EntityPropertyMap","ExtraQueryHistory","Grayscale","Inferno","Magma","Plasma","Turbo","Viridis","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","az","az","az","az","az","backproject_depth","backproject_pinhole_ent_path","backproject_radius_scale","backproject_scale","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","color_mapper","color_mapping","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get","init","init","init","init","init","interactive","into","into","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","nanos","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","pinhole_image_plane_distance","props","query_latest_single","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","sequences","serialize","serialize","serialize","serialize","serialize","set","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","visible","visible_history","vzip","vzip","vzip","vzip","vzip","with_child","with_child","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","ComponentStats","EntityTree","TimeHistogramPerTimeline","TimesPerTimeline","add","add_data_msg","add_path_op","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","children","components","create_subtrees_recursively","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","get","get","has_timeline","has_timeline","init","init","init","init","insert","into","into","into","into","is_leaf","iter","iter","iter_mut","iter_mut","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","new","nonrecursive_clears","num_children_and_fields","num_timeless_messages","num_timeless_messages","num_timeless_messages","num_timeless_messages","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","path","prefix_times","purge","purge","purge","recursive_clears","root","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","subtree","timelines","timelines","times","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","visit_children_recursively","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","InstancePath","InstancePathHash","NONE","__clone_box","__clone_box","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","cmp","default","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","entity_path","entity_path_hash","entity_splat","entity_splat","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","get_hash","get_hash","hash","hash","hash","init","init","instance","instance","instance_key","instance_key","into","into","is_none","is_some","is_splat","lossless_try_into","lossless_try_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","partial_cmp","resolve","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","serialize","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","EntityDb","LogDb","add","add_begin_recording_msg","add_path_op","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","chronological_log_messages","chronological_message_ids","data_source","data_store","default","default","deref","deref","deref_mut","deref_mut","drop","drop","entity_db","entity_path_from_hash","entity_path_from_hash","from","from","get_log_msg","init","init","into","into","is_empty","len","log_messages","lossless_try_into","lossless_try_into","lossy_into","lossy_into","num_timeless_messages","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","purge","purge_fraction_of_ram","recording_id","recording_info","recording_info","register_entity_path","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","timeless_message_ids","timelines","times_per_timeline","times_per_timeline","tree","try_add_arrow_data_msg","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from"],"q":["re_data_storere_data_store::editable_auto_value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_data_store::entity_propertiesre_data_store::entity_tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_data_store::instance_path","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_data_store::log_db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The value is determined automatically.","The beginning of time.","The name of an entity component, e.g. <code>pos</code> or <code>color</code>.","","A value that is either determined automatically by some …","<code>camera / &quot;left&quot; / points / #42</code>","The different parts that make up an <code>EntityPath</code>.","The errors that can occur when misusing the data store.","The key of a table.","Array/table/map member. Each member must be of the same …","The path to either a specific instance of an entity, or …","Hashes of the components of an <code>InstancePath</code>.","Any integer, e.g. a hash or an arbitrary identifier.","Get the latest version of the data available at this time.","","","","","Struct member. Each member can have a different type.","X,Y pixel coordinates, from top left.","Get all the data within this time interval, plus the latest","","For arrays, assumed to be dense (0, 1, 2, …).","Anything goes.","A 64-bit number describing either nanoseconds OR sequence …","A query in time.","A time frame/space, e.g. <code>log_time</code> or <code>frame_nr</code>, coupled …","The user explicitly specified what they wanted","UUID/GUID","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a formatted string of <code>time_range</code> on this <code>Timeline</code>.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","For time timelines.","For time timelines.","For sequence timelines.","Includes namespace, e.g. <code>rerun.color</code> or <code>ext.confidence</code>.","","","","","","","","","","Precomputed hash of the string.","","","","","","","Precomputed 64-bit hash.","","","","","","","","","If this is a concrete instance, what instance index are we?","If this is a concrete instance, what instance index are we?","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is this a direct child of the other path.","Is this a strict descendant of the given path.","","","","","","Number of parts","","The log time timeline to which all API functions will …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return <code>None</code> if root.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Excludes the rerun namespace, so you’ll get <code>color</code> but …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The value is determined automatically.","A value that is either determined automatically by some …","The user explicitly specified what they wanted","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Gets the value, disregarding if it was user edited or …","","Calls <code>U::from(self)</code>.","","","","Returns other if self is auto, self otherwise.","","","","","","","","","","","","","","","","Use a well-known color map, pre-implemented as a wgsl …","","","Properties for a collection of entities.","When showing an entity in the history view, add this much …","","","","","","","","","","","","","","","","","Should the depth texture be backprojected into a point …","Entity path of the pinhole transform used for the …","Used to scale the radii of the points in the resulting …","Used to scale the resulting point cloud.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","What kind of color mapping should be applied (none, map, …","Enable color mapping?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Zero = off.","","","","","","","","","","","Distance of the projection plane (frustum far plane).","","Get the latest value for a given …","","","","","","","","","","","Zero = off.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Multiply/and these together.","Multiply/and these together.","","","","","","","","","","","","Tree of entity paths, plus components at the leaves.","Number of messages per time per timeline","Number of messages per time per timeline","","Returns a collection of pending clear operations","Add a path operation into the the entity tree.","","","","","","","","","","","","","","","","","","","","","","","","","","Data logged at this entity path.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Has no child entities.","","","","","","","","","","","","","","Book-keeping around whether we should clear fields when …","","","","Extra book-keeping used to seed any timelines that include …","Extra book-keeping used to seed any timelines that include …","","","","","","","","","Full path to the root of this tree.","When do we or a child have data?","Purge all times before the cutoff, or in the given set","","","Book-keeping around whether we should clear recursively …","","","","","","","","","","","","","When do we have data? Ignored timeless.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The path to either a specific instance of an entity, or …","Hashes of the components of an <code>InstancePath</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicate the whole entity (all instances of it) - i.e. a …","Indicate the whole entity (all instances of it) - i.e. a …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Indicate a specific instance of the entity, e.g. a …","Indicate a specific instance of the entity, e.g. a …","If this is a concrete instance, what instance index are we?","If this is a concrete instance, what instance index are we?","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Do we refer to the whole entity (all instances of it)?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Stored entities with easy indexing of the paths.","A in-memory database built from a stream of <code>LogMsg</code>es.","","","","","","","","","","","","","","","","In the order they arrived","Messages in the order they arrived","Set by whomever created this <code>LogDb</code>.","Stores all components for all entities for all timelines.","","","","","","","","","Where we store the entities.","","In many places we just store the hashes, so we need a way …","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Free up some RAM by forgetting the older parts of all …","","","Comes in a special message, <code>LogMsg::BeginRecordingMsg</code>.","","","","","","Data that was logged with <code>TimePoint::timeless</code>. We need to …","","","Used for time control","A tree-view (split on path components) of the entities.","","","","","","","","","","","","","","","","",""],"i":[44,2,0,12,0,0,0,0,0,14,0,0,13,12,0,2,2,20,14,13,12,0,13,13,0,0,0,44,13,20,12,13,7,9,14,2,15,2,2,2,2,2,2,2,7,9,7,20,12,13,7,9,14,2,15,20,12,13,7,7,9,14,2,15,20,12,13,7,9,14,2,15,20,12,13,7,9,14,2,15,20,12,13,7,9,14,2,15,20,12,13,7,9,14,2,15,12,13,7,9,14,2,15,12,13,7,9,14,2,15,13,7,9,14,2,15,15,20,12,13,7,7,9,14,2,15,20,12,13,7,9,14,2,15,13,7,9,14,2,15,20,12,13,7,9,14,2,15,0,65,66,0,0,13,7,7,9,14,2,2,15,13,13,7,7,9,9,14,14,2,2,15,15,20,20,12,13,13,7,7,9,9,14,14,2,15,15,20,20,20,12,13,13,13,7,7,7,9,9,9,9,9,9,14,14,14,14,2,2,2,2,15,9,2,2,2,7,13,7,9,14,2,15,13,13,7,7,9,9,14,2,15,9,9,20,12,13,7,9,14,2,15,65,66,0,20,12,13,7,9,14,2,15,9,9,9,2,9,9,9,9,0,15,20,12,13,7,9,14,2,15,20,12,13,7,9,14,2,15,15,15,2,7,9,15,15,15,20,12,13,7,9,14,2,15,20,12,13,7,9,14,2,15,9,13,7,9,14,2,2,15,9,20,9,20,12,13,7,9,14,2,15,20,12,13,7,9,14,2,15,13,7,9,14,2,15,7,20,2,2,2,2,12,13,7,9,14,2,15,20,13,7,9,14,20,12,13,7,9,14,2,15,20,12,13,7,9,14,2,15,15,15,20,12,13,7,9,14,2,15,20,12,13,7,9,14,2,15,20,12,13,7,9,14,2,15,20,12,13,7,9,14,2,15,20,12,13,7,9,14,2,15,20,12,13,7,9,14,2,15,44,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,49,0,0,0,0,48,48,48,48,48,48,45,46,47,48,49,45,46,47,48,49,46,46,46,46,45,46,47,48,49,45,46,47,48,49,45,46,47,48,49,45,46,47,48,49,45,46,47,48,49,45,46,47,48,49,45,46,47,48,49,46,46,45,46,47,49,45,46,47,48,49,45,46,47,48,49,45,46,47,48,49,45,46,47,48,49,46,47,48,49,47,47,48,48,49,49,46,47,48,48,49,49,45,46,47,48,49,45,45,46,47,48,49,46,45,46,47,48,49,45,46,47,48,49,45,46,47,48,49,47,45,46,47,48,49,45,46,47,48,49,46,45,0,45,46,47,48,49,45,46,47,48,49,47,45,46,47,48,49,45,45,46,47,48,49,48,49,45,46,47,48,49,45,46,47,48,49,45,46,47,48,49,45,46,47,48,49,45,46,47,48,49,46,46,45,46,47,48,49,46,47,45,46,47,48,49,45,46,47,48,49,0,0,0,0,53,55,55,55,59,60,53,55,59,60,53,55,59,60,53,55,59,60,53,55,59,60,53,55,59,60,53,55,55,55,59,60,53,55,59,60,53,55,59,60,53,55,59,60,53,55,59,60,53,59,60,59,60,55,59,60,53,60,55,59,60,53,55,59,60,59,60,55,59,60,53,55,59,60,53,55,55,55,55,53,55,53,55,59,60,53,55,59,60,53,55,55,55,60,53,55,55,55,59,60,53,55,59,60,53,55,59,60,53,55,59,60,53,55,59,60,53,55,59,60,53,55,59,60,53,55,59,60,53,55,55,59,60,53,55,59,60,53,55,59,60,53,0,0,66,65,66,65,66,65,66,65,66,65,66,65,66,65,66,65,66,65,66,65,66,65,66,65,66,65,65,66,65,66,65,66,65,66,65,65,66,66,65,65,66,65,66,65,66,65,65,66,65,66,65,66,65,66,65,66,66,66,65,65,66,65,66,65,66,65,66,65,66,65,66,65,66,65,65,66,65,65,66,65,66,65,66,65,66,65,66,65,66,65,66,65,66,0,0,68,68,50,50,68,50,68,50,68,50,68,50,68,50,68,68,68,68,50,50,68,50,68,50,68,50,68,68,50,50,50,68,68,50,68,50,68,68,68,68,50,68,50,68,68,50,68,50,68,50,68,68,68,68,50,50,68,50,68,68,68,68,50,50,50,50,68,50,68,50,68,50,68,50,68,50,68,50,68,50,68],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[2,2],[[2,3]],[[2,2]],[[2,2]],[2,4],[2,5],[2,6],[7,8],[9],[7,8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[[12,[11]]],[[12,[11]]]],[13,13],[7,7],[9,9],[14,14],[2,2],[15,15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[13,13],16],[[7,7],16],[[9,9],16],[[14,14],16],[[2,2],16],[[15,15],16],[[],15],[17],[17],[17],[7,8],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[[],[[18,[13]]]],[[],[[18,[7]]]],[[],[[18,[9]]]],[[],[[18,[14]]]],[[],[[18,[2]]]],[[],[[18,[15]]]],[17],[17],[17],[17],[17],[17],[17],[17],0,0,0,0,0,[[13,13],19],[[7,8],19],[[7,7],19],[[9,9],19],[[14,14],19],[[2,3],19],[[2,2],19],[[15,15],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[20,21],22],[[20,21],22],[[[12,[23]],21],22],[[13,21],[[18,[24]]]],[[13,21],[[18,[24]]]],[[7,21],[[18,[24]]]],[[7,21],[[18,[24]]]],[[9,21],[[18,[24]]]],[[9,21],[[18,[24]]]],[[14,21],[[18,[24]]]],[[14,21],[[18,[24]]]],[[2,21],[[18,[24]]]],[[15,21],[[18,[24]]]],[[15,25],26],[27,20],[28,20],[[]],[[]],[26,13],[[]],[8,13],[8,7],[[]],[26,7],[29,9],[[]],[8,9],[26,9],[[[31,[14,30]]],9],[[],9],[26,14],[8,14],[[]],[13,14],[6,2],[32,2],[[]],[33,2],[[]],[[],9],[6,2],[6,2],[6,2],[7,8],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[13],[13,35],[7],[7,34],[9],[9,36],[14],[2],[15],0,[9,34],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[9,9],19],[[9,9],19],[9,19],[2,19],[9,37],[[9,9],9],[9,[[10,[14]]]],[9,17],0,[[],15],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,38],0,[2],[8,7],[[[31,[14,30]]],9],[[[39,[38]],40],15],[[[39,[38]]],15],[[[39,[38]]],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,[[10,[9]]]],[[13,13],[[10,[16]]]],[[7,7],[[10,[16]]]],[[9,9],[[10,[16]]]],[[14,14],[[10,[16]]]],[[2,2],[[10,[16]]]],[[2,3],[[10,[16]]]],[[15,15],[[10,[16]]]],0,[41],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,18],[7,18],[9,18],[14,18],[2,18],[15,18],[7,8],[20,[[10,[42]]]],[[2,3]],[[2,2]],[[2,2]],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[15,40],0,[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[1],[[]],[[]],[[]],[[]],[[],10],[[],10],[44,44],[[]],[[],44],[17],[17],[[],[[18,[44]]]],[17],[[44,44],19],[[],19],[[],19],[[44,21],22],[[]],[44],[[],17],[[]],[44,19],[[],10],[[]],[[44,44],44],[[]],[[]],[[]],[[]],[44,18],[[]],[[],18],[[],18],[[],43],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[45,45],[46,46],[47,47],[48,48],[49,49],[[]],[[]],[[]],[[]],[[]],0,0,[[],45],[[],46],[[],47],[[],49],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[[],[[18,[45]]]],[[],[[18,[46]]]],[[],[[18,[47]]]],[[],[[18,[48]]]],[[],[[18,[49]]]],[17],[17],[17],[17],[17],[[46,46],19],[[47,47],19],[[48,48],19],[[49,49],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[46,21],22],[[47,21],22],[[48,21],22],[[48,21],22],[[49,21],22],[[49,21],22],[[]],[[]],[[]],[[]],[[]],[[45,9],46],[[],17],[[],17],[[],17],[[],17],[[],17],0,[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[50,9,51],[[10,[52]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[45,18],[46,18],[47,18],[48,18],[49,18],[[45,9,46]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],43],[[],43],[[],43],[[],43],[[],43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[46,46],46],[[47,47],47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[53,54]],[[55,54,56],31],[[55,57,54,58],[[31,[56]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,[[55,17,54],55],[[],59],[[],60],[[],53],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[[]],[[]],[[]],[[]],[[59,15],[[10,[61]]]],[[60,15],[[10,[62]]]],[[59,15],19],[[60,15],19],[[],17],[[],17],[[],17],[[],17],[[60,15,2]],[[]],[[]],[[]],[[]],[55,19],[59,63],[60,63],[59,63],[60,63],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[9,[61,[57,54]]],55],0,[55,17],[55,17],[53,17],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[55,61,64]],[[60,61]],[[53,61]],0,[[],55],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[55,9],[[10,[55]]]],[59,63],[60,63],0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],43],[[],43],[[],43],[[],43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[55],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[65,65],[66,66],[[]],[[]],[[65,65],16],[[],66],[17],[17],[17],[17],[[],[[18,[65]]]],[17],[17],0,0,[9,65],[9,66],[[65,65],19],[[66,66],19],[[],19],[[],19],[[],19],[[],19],[[65,21],22],[[65,21],22],[[66,21],22],[[]],[[]],[[],34],[[],34],[65,66],[65],[66],[[],17],[[],17],[[9,67],65],[[9,67],66],0,0,[[]],[[]],[66,19],[66,19],[65,19],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[65,65],[[10,[16]]]],[[66,50],[[10,[65]]]],[[]],[[]],[[]],[[]],[65,18],[[]],[[]],[[],26],[[],18],[[],18],[[],18],[[],18],[[],43],[[],43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[68,69],[[18,[20]]]],[[68,70]],[[50,57,54,58]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[68,37],0,0,0,[[],50],[[],68],[17],[17],[17],[17],[17],[17],0,[[50,36],[[10,[9]]]],0,[[]],[[]],[[68,57],[[10,[69]]]],[[],17],[[],17],[[]],[[]],[68,19],[68,17],0,[[],10],[[],10],[[]],[[]],[68,17],[[]],[[]],[[]],[[]],[[50,61,64]],[[68,4]],[68,71],[68,[[10,[72]]]],0,[[50,9]],[[]],[[]],[[]],[[]],0,[68,63],[68,60],0,0,[[50,73],[[18,[20]]]],[[],18],[[],18],[[],18],[[],18],[[],43],[[],43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"Private"],[3,"TimeInt"],[3,"TimeReal"],[15,"f32"],[15,"f64"],[15,"i64"],[3,"ComponentName"],[15,"str"],[3,"EntityPath"],[4,"Option"],[8,"Clone"],[4,"TimeQuery"],[4,"Index"],[4,"EntityPathPart"],[3,"Timeline"],[4,"Ordering"],[15,"usize"],[4,"Result"],[15,"bool"],[4,"Error"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"Error"],[3,"TimeRange"],[3,"String"],[4,"WriteError"],[4,"MsgBundleError"],[3,"EntityPathImpl"],[3,"Global"],[3,"Vec"],[3,"Duration"],[3,"Time"],[15,"u64"],[3,"IndexHash"],[3,"EntityPathHash"],[8,"Iterator"],[3,"TimelineName"],[8,"Into"],[4,"TimeType"],[3,"Demand"],[8,"Error"],[3,"TypeId"],[4,"EditableAutoValue"],[3,"EntityPropertyMap"],[3,"EntityProperties"],[3,"ExtraQueryHistory"],[4,"ColorMap"],[4,"ColorMapper"],[3,"EntityDb"],[3,"LatestAtQuery"],[8,"DeserializableComponent"],[3,"ComponentStats"],[3,"TimePoint"],[3,"EntityTree"],[3,"ComponentPath"],[3,"MsgId"],[4,"PathOp"],[3,"TimeHistogramPerTimeline"],[3,"TimesPerTimeline"],[3,"BTreeMap"],[3,"BTreeSet"],[8,"ExactSizeIterator"],[6,"HashSet"],[3,"InstancePath"],[3,"InstancePathHash"],[3,"InstanceKey"],[3,"LogDb"],[4,"LogMsg"],[3,"BeginRecordingMsg"],[3,"RecordingId"],[3,"RecordingInfo"],[3,"ArrowMsg"]]},\
"re_error":{"doc":"Helpers for error handling.","t":[5],"n":["format"],"q":["re_error"],"d":["Format an error, including its chain of sources."],"i":[0],"f":[[[[2,[1]]],3]],"p":[[8,"Error"],[8,"AsRef"],[3,"String"]]},\
"re_format":{"doc":"Miscellaneous tools to format and parse numbers, …","t":[0,5,5,5,5,5,5,5,5,5,3,3,3,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["arrow","format_bytes","format_f32","format_f64","format_large_number","format_number","parse_bytes","parse_bytes_base10","parse_bytes_base2","parse_duration","DisplayDataType","DisplayIntervalUnit","DisplayTimeUnit","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","format_table","from","from","from","into","into","into","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["re_format","","","","","","","","","","re_format::arrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Formatting for tables of Arrow arrays","Pretty format a number of bytes by using SI notation …","Format a number with a decent number of decimals.","Format a number with a decent number of decimals.","Pretty format a large number by using SI notation (base …","Pretty format a number by using thousands separators for …","","","","","","","","","","","","","","","","","Format <code>columns</code> into a <code>Table</code> using <code>names</code> as headers.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,9,12,13,9,12,13,9,12,13,0,9,12,13,9,12,13,9,12,13,9,12,13,9,12,13,9,12,13],"f":[0,[1,2],[3,2],[1,2],[1,2],[4,2],[5,[[7,[6]]]],[5,[[7,[6]]]],[5,[[7,[6]]]],[5,[[8,[3,2]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[9,10],11],[[12,10],11],[[13,10],11],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],15],[[],15],[[],15]],"p":[[15,"f64"],[3,"String"],[15,"f32"],[15,"usize"],[15,"str"],[15,"i64"],[4,"Option"],[4,"Result"],[3,"DisplayTimeUnit"],[3,"Formatter"],[6,"Result"],[3,"DisplayIntervalUnit"],[3,"DisplayDataType"],[3,"Table"],[3,"TypeId"]]},\
"re_int_histogram":{"doc":"A histogram with <code>i64</code> keys and <code>u32</code> counts, supporting both …","t":[3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,12,12,12,12,12,11,11,12,11,11,11,11,0,11,11,11,11,11,11,5,17,17,3,13,3,13,3,3,17,6,17,17,17,17,17,4,3,17,3,13,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,5,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Int64Histogram","Iter","RangeI64","RangeU64","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","contains","contains","contains_all_of","eq","eq","fmt","fmt","from","from","i64_key_from_u64_key","intersects","into","into","iter","max","max","min","min","new","new","root","single","single","to_owned","to_owned","tree","try_from","try_from","try_into","try_into","type_id","type_id","u64_key_from_i64_key","ADDR_MASK","BOTTOM_LEVEL","BranchNode","BranchNode","DenseLeaf","DenseLeaf","Int64Histogram","Iter","LEVEL_STEP","Level","MAX_SPARSE_LEAF_LEN","NUM_CHILDREN_IN_DENSE","NUM_CHILDREN_IN_NODE","NUM_NODE_STEPS","NUM_STEPS_IN_DENSE_LEAF","Node","NodeIterator","ROOT_LEVEL","SparseLeaf","SparseLeaf","TreeIterator","abs_addr","addrs","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","child_level_and_size","children","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","counts","counts","cutoff_size","default","default","default","default","fmt","fmt","fmt","fmt","fmt","for_level","from","from","from","from","from","from","from","from","increment","increment","increment","increment","increment","index","into","into","into","into","into","into","into","into","into_iter","into_iter","is_empty","is_empty","is_empty","is_empty","iter","level","max_key","max_key","max_key","max_key","max_key","min_key","min_key","min_key","min_key","min_key","next","next","node","overflow","range","range","range_count","range_count","range_count","range_count","range_count","range_u64_from_range_bounds","remove","remove","remove","remove","remove","root","stack","to_owned","to_owned","to_owned","to_owned","to_owned","total_count","total_count","total_count","total_count","total_count","total_count","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["re_int_histogram","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_int_histogram::tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A histogram, mapping <code>i64</code> key to a <code>u64</code> count optimizing for …","An iterator over an <code>Int64Histogram</code>.","An inclusive range.","An inclusive range.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","inclusive","inclusive","inclusive","inclusive","","","","","","","","The histogram is implemented as a tree.","","","","","","","We use <code>u64</code> keys in the internal structures, because it is …","","The level used for <code>DenseLeaf</code>.","","An inner node, addressed by the next few bits of the …","","Optimization for dense histograms (entries at …","A histogram, mapping <code>i64</code> key to a <code>u64</code> count optimizing for …","An iterator over an <code>Int64Histogram</code>.","How many bits we progress in each <code>BranchNode</code>","How high up in the tree we are (where root is highest). …","When a <code>SparseLeaf</code> goes over this, it becomes a <code>BranchNode</code>.","Number of children in <code>DenseLeaf</code>.","","","","","","","","A list of <code>(key, count)</code> pairs.","","","Two vectors of equal lengths, making up (addr, count) …","","","","","","","","","","","","","","","","","","The index is the next few bits of the key","","","","","","","","","","","","The last bits of the address, mapped to their counts","You can stop recursing when you’ve reached this size","","","","","","","","","","The default node for a certain level.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Increment the count for the given key.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Highest key with a non-zero count.","","","","","Lowest key with a non-zero count.","","","","","","","","","Iterate over a certain range, returning ranges that are at …","Only returns things in this range","What is the count of all the buckets in the given range?","","","","","","Remove all data in the given range.","Returns how much the total count decreased by.","Returns how much the total count decreased by.","Returns how much the total count decreased by.","Returns how much the total count decreased by.","","","","","","","","Total count of all the buckets.","","","","","Very important optimization","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,2,1,2,1,2,1,2,1,2,1,1,2,1,2,1,2,0,1,1,2,17,1,2,1,2,1,2,10,1,2,1,2,0,1,2,1,2,1,2,0,0,0,0,11,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,20,13,17,18,20,10,11,12,13,14,17,18,20,10,11,12,13,14,0,12,10,11,12,13,14,10,11,12,13,14,13,14,18,10,12,13,14,10,11,12,13,14,11,17,18,20,10,11,12,13,14,10,11,12,13,14,20,17,18,20,10,11,12,13,14,17,18,11,12,13,14,17,20,10,11,12,13,14,10,11,12,13,14,17,18,20,13,10,18,10,11,12,13,14,0,10,11,12,13,14,10,18,10,11,12,13,14,10,11,12,13,14,12,17,18,20,10,11,12,13,14,17,18,20,10,11,12,13,14,17,18,20,10,11,12,13,14],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],[[1,3],4],[[2,5],4],[[1,1],4],[[1,1],4],[[2,2],4],[[1,6],7],[[2,6],7],[[]],[[]],[3,5],[[1,1],4],[[]],[[]],0,0,0,0,0,[[3,3],1],[[5,5],2],0,[3,1],[5,2],[[]],[[]],0,[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[5,3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3],0,[10,10],[11,11],[12,12],[13,13],[14,14],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],10],[[],12],[[],13],[[],14],[[10,6],7],[[11,6],7],[[12,6],7],[[13,6],7],[[14,6],7],[3,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[10,5,15]],[[11,3,3,15]],[[12,3,3,15]],[[13,3,3,15],11],[[14,3,15]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11,4],[12,4],[13,4],[14,4],0,0,[10,[[16,[5]]]],[[11,3,3],[[16,[3]]]],[[12,3,3],[[16,[3]]]],[13,[[16,[3]]]],[[14,3],[[16,[3]]]],[10,[[16,[5]]]],[[11,3,3],[[16,[3]]]],[[12,3,3],[[16,[3]]]],[13,[[16,[3]]]],[[14,3],[[16,[3]]]],[17,16],[18,16],0,[[13,3],12],[[10,[19,[5]],3],17],0,[[10,[19,[5]]],3],[[11,3,3,1],3],[[12,3,3,1],3],[[13,1],3],[[14,3,1],3],[[[19,[5]]],1],[[10,[19,[5]]],3],[[11,3,3,1],3],[[12,3,3,1],3],[[13,1],3],[[14,3,1],3],0,0,[[]],[[]],[[]],[[]],[[]],[10,3],[11,3],[12,3],[13,3],[14,3],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9]],"p":[[3,"RangeU64"],[3,"RangeI64"],[15,"u64"],[15,"bool"],[15,"i64"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"],[3,"Int64Histogram"],[4,"Node"],[3,"BranchNode"],[3,"SparseLeaf"],[3,"DenseLeaf"],[15,"u32"],[4,"Option"],[3,"Iter"],[3,"TreeIterator"],[8,"RangeBounds"],[3,"NodeIterator"]]},\
"re_log":{"doc":"Text logging (nothing to do with rerun logging) for use in …","t":[14,14,14,14,14,14,0,5,14,14,14,14,5,5],"n":["debug","debug_once","error","error_once","info","info_once","setup","setup_native_logging","trace","trace_once","warn","warn_once","set_default_rust_log_env","setup_native_logging"],"q":["re_log","","","","","","","","","","","","re_log::setup",""],"d":["Constructs an event at the debug level.","Logs a message once at the debug level.","Constructs an event at the error level.","Logs a message once at the error level.","Constructs an event at the info level.","Logs a message once at the info level.","Function to setup logging in binaries and web apps.","","Constructs an event at the trace level.","Logs a message once at the trace level.","Constructs an event at the warn level.","Logs a message once at the warn level.","Set <code>RUST_LOG</code> environment variable to <code>info</code>, unless set, and …",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,[[]],0,0,0,0,[[]],[[]]],"p":[]},\
"re_log_types":{"doc":"The different types that make up the rerun log format.","tn":["AnnotationContext","ApplicationId","Arrow3D","Arrow3D","ArrowMsg","ArrowMsg","BBox2D","BatchIndex","BeginRecordingMsg","BeginRecordingMsg","Box3","ClearComponents","ClearRecursive","DTYPE","Duration","Encoded","EncodedMesh3D","EntityPathOpMsg","EntityPathOpMsg","F16","F16","F32","F32","F64","F64","FullIndex","Glb","Gltf","Goodbye","I16","I16","I32","I32","I64","I64","I8","I8","Index","IndexHash","Integer","LogMsg","Mesh3D","MeshFormat","MeshId","MsgId","Obj","Other","PathOp","Pinhole","Pinhole","Pixel","PythonSdk","PythonVersion","Quaternion","Raw","RawMesh3D","RecordingId","RecordingInfo","RecordingSource","Rigid3","Rigid3","RustSdk","Sequence","SequentialIndex","String","TensorDataType","TensorDataTypeTrait","TensorElement","Time","TimeInt","TimePoint","TimeRange","TimeRangeF","TimeReal","TimeType","Timeline","TimelineName","Transform","U16","U16","U32","U32","U64","U64","U8","U8","Unknown","Unknown","Uuid","ViewCoordinates","ZERO","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","albedo_factor","application_id","arrow_msg","az","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","component_types","context","coordinates","data","datagen","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","encoding","entity_path","entity_path","entity_path_vec","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","external","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_uuid","get_hash","get_hash","half_size","hash","hash","hash","id","image_from_cam","impl_into_enum","index","indices","info","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","is_official_example","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","major","max","max","max","mesh_id","mesh_id","min","min","min","minor","msg_bundle","msg_id","msg_id","name","normals","origin","origin","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","patch","path","path_op","positions","random","recording_id","recording_source","resolution","rotation","rotation","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","started","suffix","time","time_point","time_point","time_range","time_real","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","transform","translation","translation","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unknown","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vector","vector","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","rust_version","ArrowMsg","__clone_box","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","chunk","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","from","init","into","lossless_try_into","lossy_into","msg_id","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","schema","serialize","time_point","to_owned","try_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","AnnotationContext","AnnotationInfo","Arrow3D","BadSlice","BadTensorShape","BadValue","Box3D","ClassDescription","ClassId","ClassId","ColorRGBA","Depth","Encoded","EncodedMesh3D","F16NotSupported","F32","F64","FIELDS","FastFixedSizeArrayIter","FastFixedSizeListArray","FieldError","FixedSizeArrayField","Glb","Gltf","I16","I32","I64","I8","InstanceKey","JPEG","KeypointId","Label","LineStrip2D","LineStrip3D","Mat3x3","Mesh3D","MeshFormat","MeshId","MsgId","NotContiguousStdOrder","Obj","Pinhole","Pinhole","Point2D","Point3D","Quaternion","Radius","Raw","RawMesh3D","Rect2D","Result","Rigid3","Rigid3","Scalar","ScalarPlotProps","Size3D","Tensor","TensorCastError","TensorData","TensorDataMeaning","TensorDimension","TensorId","TensorTrait","TextEntry","Transform","TypeMismatch","U16","U32","U64","U8","Unknown","Unknown","Vec2D","Vec3D","Vec4D","ViewCoordinates","XCYCW2H2","XCYCWH","XYWH","XYXY","YXHW","YXYX","__private_field","albedo_factor","array","arrow","arrow_deserialize","arrow_serialize","az","az","az","az","az","bbox","body","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","class_id","color","context","coordinates","data","data_type","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","do_not_call_into_iter","drop","drop","drop","drop","drop","dtype","end","fmt","fmt","format","from","from","from","from","from","from","get","id","image_from_cam","indices","init","init","init","init","init","instance_key","into","into","into","into","into","into_iter","into_iter","is_shaped_like_an_image","is_vector","iter_registered_field_types","keypoint_id","label","level","linestrip","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","mat","meaning","meaning","mesh3d","mesh_id","mesh_id","meter","msg_id","name","new_array","next","normals","num_dim","offset","origin","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","point","positions","provide","quaternion","radius","rect","resolution","rotation","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","scalar","scattered","shape","shape","size","size","source","tensor","tensor_id","text_entry","to_string","transform","transform","translation","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","values","vec","vector","vzip","vzip","vzip","vzip","vzip","w","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","x","x","x","x","x","y","y","y","y","y","z","z","z","z","source","Arrow3D","Arrow3DArray","Arrow3DArrayIterator","MutableArrow3DArray","__clone_box","arrow_deserialize","arrow_serialize","as_any","as_arc","as_box","as_mut_any","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","consume_next","data_type","data_type","data_type","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","eq","field_origin","field_origin","field_vector","field_vector","fmt","fmt","from","from","from","from","has_validity","init","init","init","init","init_validity","into","into","into","into","into_iter","into_iter","len","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","name","new","new_array","next","origin","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","push_null","reserve","return_next","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","shrink_to_fit","to_owned","try_extend","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_push","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","validity","validity","validity_iter","vector","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Box3D","__clone_box","arrow_deserialize","arrow_serialize","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","data_type","deref","deref_mut","deserialize","drop","eq","fmt","from","from","init","into","lossless_try_into","lossy_into","name","new","new_array","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","serialize","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","x","y","z","ClassId","__clone_box","arrow_deserialize","arrow_serialize","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","cmp","data_type","default","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","get_hash","hash","init","into","lossless_try_into","lossy_into","name","new_array","overflowing_as","overflowing_cast_from","partial_cmp","saturating_as","saturating_cast_from","serialize","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","ColorRGBA","__clone_box","arrow_deserialize","arrow_serialize","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","data_type","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","from","from_rgb","from_rgba","init","into","lossless_try_into","lossy_into","name","new_array","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","serialize","to_array","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","AnnotationContext","AnnotationContextArrow","AnnotationInfo","AnnotationInfoArray","AnnotationInfoArrayIterator","ClassDescription","ClassDescriptionArrow","ClassDescriptionArrowArray","ClassDescriptionArrowArrayIterator","ClassMapElemArrow","ClassMapElemArrowArray","ClassMapElemArrowArrayIterator","KeypointPairArrow","KeypointPairArrowArray","KeypointPairArrowArrayIterator","MutableAnnotationInfoArray","MutableClassDescriptionArrowArray","MutableClassMapElemArrowArray","MutableKeypointPairArrowArray","__clone_box","__clone_box","__clone_box","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","as_any","as_any","as_any","as_any","as_arc","as_arc","as_arc","as_arc","as_box","as_box","as_box","as_box","as_mut_any","as_mut_any","as_mut_any","as_mut_any","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","class_description","class_id","class_map","clone","clone","clone","clone_into","clone_into","clone_into","color","consume_next","consume_next","consume_next","consume_next","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","field_class_description","field_class_description","field_class_id","field_class_id","field_color","field_color","field_id","field_id","field_info","field_info","field_keypoint0","field_keypoint0","field_keypoint1","field_keypoint1","field_keypoint_connections","field_keypoint_connections","field_keypoint_map","field_keypoint_map","field_label","field_label","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","has_validity","has_validity","has_validity","has_validity","id","info","info","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init_validity","init_validity","init_validity","init_validity","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","keypoint0","keypoint1","keypoint_connections","keypoint_connections","keypoint_map","keypoint_map","label","len","len","len","len","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","name","new","new","new","new","new_array","new_array","new_array","new_array","new_array","next","next","next","next","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","push_null","push_null","push_null","push_null","reserve","reserve","reserve","reserve","return_next","return_next","return_next","return_next","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","try_extend","try_extend","try_extend","try_extend","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_push","try_push","try_push","try_push","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","validity","validity","validity","validity","validity","validity","validity","validity","validity_iter","validity_iter","validity_iter","validity_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Axis3","Back","Down","Forward","Handedness","Left","Left","NEGATIVE_X","NEGATIVE_Y","NEGATIVE_Z","Negative","POSITIVE_X","POSITIVE_Y","POSITIVE_Z","Positive","Right","Right","Sign","SignedAxis3","Up","ViewCoordinates","ViewDir","X","Y","Z","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","arrow_deserialize","arrow_serialize","as_vec3","axis","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data_type","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe","describe","describe_short","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward","from","from","from","from","from","from","from_ascii_char","from_dim","from_right_handed","from_rub","from_str","from_str","from_up_and_handedness","handedness","init","init","init","init","init","init","into","into","into","into","into","into","long","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","name","new","new_array","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","right","sanity_check","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","serialize","serialize","serialize","short","sign","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_rub","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","up","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","InstanceKey","SPLAT","__clone_box","arrow_deserialize","arrow_serialize","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","cmp","data_type","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","fmt","from","get_hash","hash","init","into","is_specific","is_splat","lossless_try_into","lossy_into","name","new_array","overflowing_as","overflowing_cast_from","partial_cmp","saturating_as","saturating_cast_from","serialize","specific_index","to_owned","to_string","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","KeypointId","__clone_box","arrow_deserialize","arrow_serialize","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","cmp","data_type","default","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","get_hash","hash","init","into","lossless_try_into","lossy_into","name","new_array","overflowing_as","overflowing_cast_from","partial_cmp","saturating_as","saturating_cast_from","serialize","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","Label","__clone_box","arrow_deserialize","arrow_serialize","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","data_type","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","from","init","into","lossless_try_into","lossy_into","name","new_array","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","serialize","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","LineStrip2D","LineStrip3D","__clone_box","__clone_box","arrow_deserialize","arrow_deserialize","arrow_serialize","arrow_serialize","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","data_type","data_type","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","fmt","fmt","from","from","from","from","init","init","into","into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","name","name","new_array","new_array","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","Mat3x3","__clone_box","arrow_deserialize","arrow_serialize","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","data_type","deref","deref_mut","deserialize","drop","eq","fmt","from","from","from","index","init","into","lossless_try_into","lossy_into","new_array","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","serialize","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","Encoded","Encoded","EncodedMesh3D","EncodedMesh3DArrow","EncodedMesh3DArrowArray","EncodedMesh3DArrowArrayIterator","Glb","Glb","Gltf","Gltf","IndicesNotDivisibleBy3","Mesh3D","Mesh3DArray","Mesh3DArrayIterator","MeshFormat","MeshFormatArray","MeshFormatArrayIterator","MeshId","MismatchedPositionsNormals","MutableEncodedMesh3DArrowArray","MutableMesh3DArray","MutableMeshFormatArray","MutableRawMesh3DArray","Obj","Obj","PositionsNotDivisibleBy3","Raw","Raw","RawMesh3D","RawMesh3DArray","RawMesh3DArrayIterator","RawMeshError","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","albedo_factor","arr","arr","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","as_any","as_any","as_any","as_any","as_arc","as_arc","as_arc","as_arc","as_box","as_box","as_box","as_box","as_mut_any","as_mut_any","as_mut_any","as_mut_any","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","bytes","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consume_next","consume_next","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","field_albedo_factor","field_albedo_factor","field_bytes","field_bytes","field_format","field_format","field_indices","field_indices","field_mesh_id","field_mesh_id","field_mesh_id","field_mesh_id","field_normals","field_normals","field_positions","field_positions","field_transform","field_transform","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_hash","get_hash","has_validity","has_validity","hash","hash","index_iter","index_iter","indices","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init_validity","init_validity","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","len","len","len","len","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","mesh_id","mesh_id","mesh_id","mesh_id","name","new","new","new","new","new_array","new_array","new_array","new_array","new_array","new_array","next","next","next","next","normals","num_triangles","offsets","offsets","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","positions","provide","push_null","push_null","push_null","push_null","random","reserve","reserve","reserve","reserve","return_next","return_next","sanity_check","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","serialize","serialize","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","transform","transform","try_extend","try_extend","try_extend","try_extend","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_push","try_push","try_push","try_push","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","types","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","validity","validity","validity","validity","validity","validity","validity_iter","validity_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","MAX","MsgId","ZERO","__clone_box","arrow_deserialize","arrow_serialize","as_u128","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","cmp","data_type","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","fmt","from","get_hash","hash","init","into","lossless_try_into","lossy_into","name","new_array","overflowing_as","overflowing_cast_from","partial_cmp","random","saturating_as","saturating_cast_from","serialize","short_string","to_owned","to_string","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","MutablePoint2DArray","MutablePoint3DArray","Point2D","Point2DArray","Point2DArrayIterator","Point3D","Point3DArray","Point3DArrayIterator","ZERO","ZERO","__clone_box","__clone_box","arrow_deserialize","arrow_deserialize","arrow_serialize","arrow_serialize","as_any","as_any","as_arc","as_arc","as_box","as_box","as_mut_any","as_mut_any","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","consume_next","consume_next","data_type","data_type","data_type","data_type","data_type","data_type","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","field_x","field_x","field_x","field_x","field_y","field_y","field_y","field_y","field_z","field_z","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","has_validity","has_validity","init","init","init","init","init","init","init","init","init_validity","init_validity","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","len","len","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","name","name","new","new","new","new","new_array","new_array","next","next","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","push_null","push_null","reserve","reserve","return_next","return_next","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","shrink_to_fit","shrink_to_fit","to_owned","to_owned","try_extend","try_extend","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_push","try_push","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","validity","validity","validity","validity","validity_iter","validity_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","x","x","y","y","z","IDENTITY","Quaternion","__clone_box","arrow_deserialize","arrow_serialize","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","data_type","default","deref","deref_mut","deserialize","drop","eq","fmt","from","from","init","into","lossless_try_into","lossy_into","name","new","new_array","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","serialize","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","w","wrapping_as","wrapping_cast_from","x","y","z","Radius","__clone_box","arrow_deserialize","arrow_serialize","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","data_type","deref","deref_mut","drop","fmt","from","init","into","lossless_try_into","lossy_into","name","new_array","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","MutableRect2DArray","Rect2D","Rect2DArray","Rect2DArrayIterator","XCYCW2H2","XCYCW2H2","XCYCWH","XCYCWH","XYWH","XYWH","XYXY","XYXY","YXHW","YXHW","YXYX","YXYX","__clone_box","arr","arrow_deserialize","arrow_serialize","as_any","as_arc","as_box","as_mut_any","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","data_type","data_type","data_type","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","fmt","fmt","from","from","from","from","from_xywh","height","index_iter","init","init","init","init","into","into","into","into","into_iter","into_iter","len","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","name","new","new_array","next","offsets","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","push_null","reserve","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","shrink_to_fit","to_owned","top_left_corner","try_extend","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_push","type_id","type_id","type_id","type_id","types","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","validity","vzip","vzip","vzip","vzip","width","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","MutableScalarPlotPropsArray","Scalar","ScalarPlotProps","ScalarPlotPropsArray","ScalarPlotPropsArrayIterator","__clone_box","__clone_box","arrow_deserialize","arrow_deserialize","arrow_serialize","arrow_serialize","as_any","as_arc","as_box","as_mut_any","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","consume_next","data_type","data_type","data_type","data_type","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","field_scattered","field_scattered","fmt","fmt","fmt","from","from","from","from","from","from","has_validity","init","init","init","init","init","init_validity","into","into","into","into","into","into_iter","into_iter","len","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","name","name","new","new_array","new_array","next","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","push_null","reserve","return_next","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","scattered","shrink_to_fit","to_owned","to_owned","try_extend","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_push","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","validity","validity","validity_iter","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","MutableSize3DArray","Size3D","Size3DArray","Size3DArrayIterator","arrow_deserialize","arrow_serialize","as_any","as_arc","as_box","as_mut_any","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","consume_next","data_type","data_type","data_type","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","field_x","field_x","field_y","field_y","field_z","field_z","fmt","fmt","from","from","from","from","has_validity","init","init","init","init","init_validity","into","into","into","into","into_iter","into_iter","len","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","name","new","new_array","next","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","push_null","reserve","return_next","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","shrink_to_fit","try_extend","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_push","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","validity","validity","validity_iter","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","x","y","z","BadTensorShape","ClassId","ClassId","DEFAULT_NAME_DEPTH","DEFAULT_NAME_HEIGHT","DEFAULT_NAME_WIDTH","Depth","Depth","F16NotSupported","F32","F32","F64","F64","I16","I16","I32","I32","I64","I64","I8","I8","Image","ImageError","JPEG","JPEG","MutableTensorArray","MutableTensorDataArray","MutableTensorDataMeaningArray","MutableTensorDimensionArray","NotContiguousStdOrder","ReadError","Tensor","TensorArray","TensorArrayIterator","TensorCastError","TensorData","TensorDataArray","TensorDataArrayIterator","TensorDataMeaning","TensorDataMeaningArray","TensorDataMeaningArrayIterator","TensorDimension","TensorDimensionArray","TensorDimensionArrayIterator","TensorId","TensorTrait","TypeMismatch","U16","U16","U32","U32","U64","U64","U8","U8","Unknown","Unknown","UnsupportedImageColorType","UnsupportedJpegColorType","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","arr","arr","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","as_any","as_any","as_any","as_any","as_arc","as_arc","as_arc","as_arc","as_box","as_box","as_box","as_box","as_mut_any","as_mut_any","as_mut_any","as_mut_any","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consume_next","consume_next","data","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","default","default","default","default","depth","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","field_data","field_data","field_meaning","field_meaning","field_meter","field_meter","field_name","field_name","field_shape","field_shape","field_size","field_size","field_tensor_id","field_tensor_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_dynamic_image","from_image","get","get","get_hash","has_validity","has_validity","hash","height","id","id","index_iter","index_iter","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init_validity","init_validity","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_shaped_like_an_image","is_shaped_like_an_image","is_vector","is_vector","len","len","len","len","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","meaning","meaning","meaning","meter","name","name","named","new","new","new","new","new","new_array","new_array","new_array","new_array","new_array","next","next","next","next","num_dim","num_dim","offsets","offsets","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","provide","provide","push_null","push_null","push_null","push_null","random","reserve","reserve","reserve","reserve","return_next","return_next","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","shape","shape","shape","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","size","source","source","tensor_from_jpeg_bytes","tensor_from_jpeg_file","tensor_id","tensor_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_extend","try_extend","try_extend","try_extend","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_push","try_push","try_push","try_push","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","types","unnamed","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","validity","validity","validity","validity","validity","validity","validity_iter","validity_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","source","MutableTextEntryArray","TextEntry","TextEntryArray","TextEntryArrayIterator","__clone_box","arrow_deserialize","arrow_serialize","as_any","as_arc","as_box","as_mut_any","az","az","az","az","body","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","consume_next","data_type","data_type","data_type","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","equivalent","field_body","field_body","field_level","field_level","fmt","fmt","from","from","from","from","from_body","has_validity","init","init","init","init","init_validity","into","into","into","into","into_iter","into_iter","len","level","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","name","new","new","new_array","next","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","push_null","reserve","return_next","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","shrink_to_fit","to_owned","try_extend","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_push","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","validity","validity","validity_iter","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","IDENTITY","MutablePinholeArray","MutableRigid3Array","MutableTransformArray","Pinhole","Pinhole","Pinhole","PinholeArray","PinholeArrayIterator","Rigid3","Rigid3","Rigid3","Rigid3Array","Rigid3ArrayIterator","Transform","TransformArray","TransformArrayIterator","Unknown","Unknown","__clone_box","__clone_box","__clone_box","arr","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_serialize","arrow_serialize","arrow_serialize","as_any","as_any","as_any","as_arc","as_arc","as_arc","as_box","as_box","as_box","as_mut_any","as_mut_any","as_mut_any","aspect_ratio","az","az","az","az","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","child_from_parent","clone","clone","clone","clone_into","clone_into","clone_into","consume_next","consume_next","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","field_image_from_cam","field_image_from_cam","field_resolution","field_resolution","field_rotation","field_rotation","field_translation","field_translation","fmt","fmt","fmt","fmt","fmt","fmt","focal_length","focal_length_in_pixels","fov_y","from","from","from","from","from","from","from","from","from","from","from","from","has_validity","has_validity","image_from_cam","index_iter","init","init","init","init","init","init","init","init","init","init","init","init","init_validity","init_validity","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","len","len","len","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","name","new","new","new","new_array","new_array","new_array","new_child_from_parent","new_parent_from_child","next","next","next","offsets","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","parent_from_child","principal_point","push_null","push_null","push_null","reserve","reserve","reserve","resolution","resolution","return_next","return_next","rotation","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","translation","try_extend","try_extend","try_extend","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_push","try_push","try_push","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","validity","validity","validity","validity","validity","validity_iter","validity_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","DISPLAY_PRECISION","Vec2D","Vec3D","Vec4D","__clone_box","__clone_box","__clone_box","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_serialize","arrow_serialize","arrow_serialize","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","data_type","data_type","data_type","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","index","index","init","init","init","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","name","name","new","new_array","new_array","new_array","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","vzip","w","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","x","x","x","y","y","y","z","z","Arrow3D","BBox2D","Box3","DTYPE","F16","F16","F32","F32","F64","F64","I16","I16","I32","I32","I64","I64","I8","I8","Pinhole","Quaternion","Rigid3","TensorDataType","TensorDataTypeTrait","TensorElement","Transform","U16","U16","U32","U32","U64","U64","U8","U8","__clone_box","__clone_box","__clone_box","__clone_box","as_f64","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","half_size","init","init","init","init","into","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","max","min","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","rotation","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","serialize","size","to_owned","to_owned","to_owned","to_owned","to_string","translation","try_as_u16","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","build_frame_nr","build_log_time","build_some_colors","build_some_instances","build_some_instances_from","build_some_labels","build_some_point2d","build_some_rects","build_some_vec3d","Decoder","Encoder","az","borrow","borrow_mut","buffer","buffer","cast_from","checked_as","checked_cast_from","deref","deref_mut","drop","encode","encoder","from","init","into","into_iter","lossless_try_into","lossy_into","new","next","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","warn_on_version_mismatch","wrapping_as","wrapping_cast_from","zdecoder","zstd_encoder","Encoder","append","az","borrow","borrow_mut","buffer","cast_from","checked_as","checked_cast_from","deref","deref_mut","drop","encode","finish","from","init","into","lossless_try_into","lossy_into","new","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","zstd_encoder","arrow2","arrow2_convert","glam","image","HASH_RANDOM_STATE","Hash128","Hash64","ZERO","__clone_box","__clone_box","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","double_hash","drop","drop","eq","eq","equivalent","equivalent","first64","fmt","fmt","from","from","get_hash","get_hash","hash","hash","hash","hash","hash","hash64","hash64","hash_with_seed","init","init","into","into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","second64","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","BatchIndex","FullIndex","Index","IndexHash","Integer","NONE","Pixel","Sequence","SequentialIndex","String","Uuid","__clone_box","__clone_box","__clone_box","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","first64","fmt","fmt","fmt","fmt","from","from","from","from","from","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash64","init","init","init","into","into","into","is_empty","is_none","is_some","len","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","second64","serialize","serialize","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","ArrowSerializationError","BadComponentValues","COL_COMPONENTS","COL_TIMELINES","Component","ComponentBundle","DeserializableComponent","ENTITY_PATH_KEY","MissingComponentsField","MissingEntityPath","MissingTimelinesField","MsgBundle","MsgBundleError","MultipleTimepoints","NoRowsInTimeline","PathParseError","Result","SerializableComponent","Unreachable","__clone_box","__clone_box","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","components","data_type","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","entity_path","extract_components","extract_timelines","field","find_component","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","init","init","init","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","msg_id","name","name","name","new","new","new_empty","new_from_boxed","num_components","num_instances","num_instances","num_rows","num_rows","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","pack_components","provide","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","source","time_point","to_owned","to_owned","to_string","to_string","try_append_component","try_build_msg_bundle1","try_build_msg_bundle2","try_build_msg_bundle3","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","value","value_boxed","value_list","vzip","vzip","vzip","wrap_in_listarray","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","BadEscape","ComponentName","ComponentPath","DoubleSlash","EmptyString","EntityPath","EntityPathHash","EntityPathImpl","EntityPathPart","Index","InvalidSequence","LeadingSlash","MissingSlash","Name","PathParseError","UnterminatedString","__clone_box","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","cmp","component_name","component_name","component_path","deref","deref_mut","deserialize","drop","entity_path","entity_path","entity_path_impl","eq","equivalent","fmt","fmt","from","from","from","from","get_hash","hash","hash","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","parse_entity_path","parse_path","partial_cmp","parts","path","saturating_as","saturating_cast_from","serialize","to_owned","to_string","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","details","ComponentName","__clone_box","as_ref","as_str","az","borrow","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","cmp","deref","deref","deref_mut","deserialize","drop","eq","eq","equivalent","fmt","fmt","from","from","from","full_name","get_hash","hash","hash","init","into","lossless_try_into","lossy_into","new","overflowing_as","overflowing_cast_from","partial_cmp","saturating_as","saturating_cast_from","serialize","short_name","to_owned","to_string","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","ComponentPath","__clone_box","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","component_name","component_name","deref","deref_mut","deserialize","drop","entity_path","entity_path","eq","equivalent","fmt","from","get_hash","hash","init","into","lossless_try_into","lossy_into","new","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","serialize","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","EntityPath","EntityPathHash","NONE","__clone_box","__clone_box","as_slice","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","cmp","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from_iter","get_hash","get_hash","hash","hash","hash","hash","hash64","hash64","init","init","into","into","is_child_of","is_descendant_of","is_none","is_root","is_some","iter","join","last","len","lossless_try_into","lossless_try_into","lossy_into","lossy_into","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","parent","partial_cmp","path","root","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","serialize","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","EntityPathImpl","__clone_box","as_slice","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","cmp","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","fmt","from","from","get_hash","hash","init","into","is_root","iter","last","len","lossless_try_into","lossy_into","new","overflowing_as","overflowing_cast_from","parent","partial_cmp","parts","push","root","saturating_as","saturating_cast_from","serialize","to_owned","to_string","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","BadEscape","DoubleSlash","EmptyString","InvalidSequence","LeadingSlash","MissingSlash","PathParseError","UnterminatedString","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","drop","eq","equivalent","fmt","fmt","from","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","parse_entity_path","parse_part","provide","saturating_as","saturating_cast_from","to_string","try_from","try_into","type_id","unescape_string","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","details","Duration","MAX","NANOS_PER_MILLI","NANOS_PER_SEC","SEC_PER_DAY","SEC_PER_HOUR","SEC_PER_MINUTE","Time","__clone_box","__clone_box","add","add_assign","as_nanos","as_secs_f32","as_secs_f64","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","cmp","cmp","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","equivalent","equivalent","exact_format","fmt","fmt","format","from","from","from","from","from","from","from_millis","from_nanos","from_ns_since_epoch","from_seconds_since_epoch","from_secs","from_us_since_epoch","get_hash","get_hash","hash","hash","init","init","into","into","is_absolute_date","is_exactly_midnight","lerp","lossless_try_into","lossless_try_into","lossy_into","lossy_into","nanos_since_epoch","neg","now","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","serialize","serialize","sub","sub","to_datetime","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","Sequence","Time","TimeInt","TimePoint","TimeType","Timeline","TimelineName","_IMPL_NUM_FromPrimitive_FOR_TimeType","__clone_box","__clone_box","arrow","arrow_deserialize","arrow_serialize","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","cmp","cmp","data_type","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","format","format_range","from","from","from","from_i64","from_iter","from_u64","get","get_hash","get_hash","hash","hash","hash","init","init","insert","into","into","into_iter","into_iter","is_empty","is_timeless","iter","lossless_try_into","lossless_try_into","lossy_into","lossy_into","name","new_array","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","remove","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","serialize","serialize","time_int","timeless","timeline","timelines","times","to_owned","to_owned","try_from","try_from","try_into","try_into","typ","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","TimePointArray","TimePointIterator","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_iter","into_iter","lossless_try_into","lossless_try_into","lossy_into","lossy_into","next","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","time_points","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","BEGINNING","MAX","MIN","TimeInt","__clone_box","abs","add","add","add_assign","as_f32","as_f64","as_i64","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","cmp","deref","deref_mut","deserialize","drop","eq","eq","equivalent","fmt","from","from","from","from","from_nanos","from_seconds","from_sequence","get_hash","hash","init","into","is_timeless","lossless_try_into","lossy_into","neg","overflowing_as","overflowing_cast_from","partial_cmp","partial_cmp","saturating_as","saturating_cast_from","serialize","sub","sub","sub_assign","sum","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","Timeline","TimelineName","__clone_box","__clone_box","as_ref","as_str","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","cmp","cmp","default","default","deref","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","format_time_range","from","from","from","from","get_hash","get_hash","hash","hash","hash","init","init","into","into","log_time","lossless_try_into","lossless_try_into","lossy_into","lossy_into","name","name","new","new","new_sequence","new_temporal","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","serialize","serialize","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","typ","typ","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","TimeRange","TimeRangeF","__clone_box","__clone_box","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","contains","contains","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","init","init","into","into","inverse_lerp","is_empty","length","length","lerp","lossless_try_into","lossless_try_into","lossy_into","lossy_into","max","max","min","min","new","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","point","point","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","TimeReal","__clone_box","abs","add","add","add_assign","as_f32","as_f64","az","borrow","borrow_mut","cast_from","ceil","checked_as","checked_cast_from","clone","clone_into","cmp","deref","deref_mut","deserialize","drop","eq","eq","equivalent","floor","fmt","from","from","from","from","from","from","from","get_hash","hash","init","into","lossless_try_into","lossy_into","mul","neg","overflowing_as","overflowing_cast_from","partial_cmp","partial_cmp","round","saturating_as","saturating_cast_from","serialize","sub","sub","sub_assign","sum","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from"],"q":["re_log_typesre_log_types::RecordingSource","re_log_types::arrow_msg","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_typesre_log_types::component_types::TensorCastError","re_log_types::component_types::arrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::bbox","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::class_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::color","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::contextre_log_types::component_types::coordinatesre_log_types::component_types::instance_key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::keypoint_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::label","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::linestrip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::mat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::mesh3dre_log_types::component_types::msg_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::pointre_log_types::component_types::quaternion","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::radius","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::rect","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::scalar","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::size","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::tensorre_log_types::component_types::tensor::TensorCastError","re_log_types::component_types::text_entry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::transform","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::vec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::datare_log_types::datagen","","","","","","","","","re_log_types::encoding","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::encoding::encoder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::external","","","","re_log_types::hash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::index","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::msg_bundle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::path","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::path::PathParseError","re_log_types::path::component_name","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::path::component_path","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::path::entity_path","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::path::entity_path_impl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::path::parse_path","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::path::parse_path::PathParseError","re_log_types::time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::time_point","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::time_point::arrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::time_point::time_int","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::time_point::timeline","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::time_range","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::time_real","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","The user-chosen name of the application doing the logging.","A 3D Arrow","A 3D Arrow","","Log an entity using an <code>ArrowMsg</code>.","","","","A new recording has begun.","Oriented 3D box","Clear all the components stored at an <code>EntityPath</code>","Clear all the components of an <code>[EntityPath]</code> and any …","","A signed duration represented as nanoseconds since unix …","","Compressed/encoded mesh format","An operation (like a ‘clear’) on an <code>EntityPath</code>.","Server-backed operation on an <code>EntityPath</code>.","16-bit floating point number.","16-bit floating point number.","32-bit floating point number.","32-bit floating point number.","64-bit floating point number.","64-bit floating point number.","Some batches want to provide explicit indices","Binary <code>glTF</code>.","<code>glTF</code>.","Sent when the client shuts down the connection.","Signed 16 bit integer.","Signed 16 bit integer.","Signed 32 bit integer.","Signed 32 bit integer.","Signed 64 bit integer.","Signed 64 bit integer.","Signed 8 bit integer.","Signed 8 bit integer.","The key of a table.","A 128 bit hash of <code>Index</code> with negligible risk of collision.","Any integer, e.g. a hash or an arbitrary identifier.","The most general log message sent from the SDK to the …","A Generic 3D Mesh.","The format of a binary mesh file, e.g. GLTF, GLB, OBJ","A unique id per <code>Mesh3D</code>.","A unique id per <code>crate::LogMsg</code>.","Wavefront .obj.","Perhaps from some manual data ingestion?","Operation to perform on an <code>EntityPath</code>, e.g. clearing all …","Camera perspective projection (a.k.a. intrinsics).","The parent is some local camera space, the child an image …","X,Y pixel coordinates, from top left.","The official Rerun Python Logging SDK","","Order: XYZW","","A raw “triangle soup” mesh.","A unique id per recording (a stream of <code>LogMsg</code>es).","","","A proper rigid 3D transform, i.e. a rotation and a …","For example: the parent is a 3D world space, the child a …","The official Rerun Rust Logging SDK","For arrays, assumed to be dense (0, 1, 2, …).","Many batches use implicit sequential-indexing","Anything goes.","The data types supported by a …","","The data that can be stored in a …","A date-time represented as nanoseconds since unix epoch","A 64-bit number describing either nanoseconds OR sequence …","","","Like <code>TimeRange</code>, but using <code>TimeReal</code> for improved precision.","Either nanoseconds or sequence numbers.","","A time frame/space, e.g. <code>log_time</code> or <code>frame_nr</code>, coupled …","The name of a timeline. Often something like <code>&quot;log_time&quot;</code> or …","A transform between two spaces.","Unsigned 16 bit integer.","Unsigned 16 bit integer.","Unsigned 32 bit integer.","Unsigned 32 bit integer.","Unsigned 64 bit integer.","Unsigned 64 bit integer.","Unsigned 8 bit integer.","Unsigned 8 bit integer.","We don’t know the transform, but it is …","","UUID/GUID","","The recording id:s given to recordings that don’t have …","","","","","","","","","","Albedo factor applied to the final color of the mesh.","The user-chosen name of the application doing the logging.","<code>ArrowMsg</code> is the <code>crate::LogMsg</code> sub-type containing an Arrow …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Potentially user-facing component types.","","","","Generate random data for tests and benchmarks.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encoding/decoding <code>LogMsg</code>:es as <code>.rrd</code> files.","","Build a <code>EntityPath</code>:","Build a <code>Vec&lt;EntityPathPart&gt;</code>:","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Column-major projection matrix.","","","Optionally, the flattened indices array for this mesh.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","True if the recording is one of the official Rerun …","","","","","","","","","","","","","","","","","","","e.g. 3","Lower right corner.","","","","","Upper left corner.","","","e.g. 11","Structs and functions used for framing and de-framing a …","","A unique id per <code>EntityPathOpMsg</code>.","Name of the timeline (e.g. “log_time”).","Optionally, the flattened normals array for this mesh.","","","","","","","","","","","","","","","","","","","","","","","e.g. 0","Every logged entity in Rerun is logged to an <code>EntityPath</code>.","What operation.","The flattened positions array of this mesh.","","Should be unique for each recording.","","Pixel resolution (usually integers) of child image space. …","How is the child rotated?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","When the recording started.","e.g. <code>a0</code> for alpha releases.","","","Time information (when it was logged, when it was …","","","","","","","","","","","","","","","","four columns of an affine transformation matrix","Translation to parent from child.","","","","","","","","","","","","","","","","","","","","Sequence or time?","","","","","","","","","","The default <code>ApplicationId</code> if the user hasn’t set one.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Message containing an Arrow payload","","","","","","","","Arrow chunk","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","A unique id per <code>crate::LogMsg</code>.","","","","","Arrow schema","","","","","Build a single Arrow log message tuple from this <code>MsgBundle</code>…","","","","","","","","","","A 3D Arrow","","","","A 3D bounding box represented by it’s half-lengths","","A 16-bit ID representing a type of semantic class.","The data is an annotated <code>crate::component_types::ClassId</code> …","An RGBA color tuple.","Image data interpreted as depth map.","","Compressed/encoded mesh format","","","","","","","","<code>arrow2_convert</code> helper for fields of type <code>[T; SIZE]</code>","Binary <code>glTF</code>.","<code>glTF</code>.","","","","","A number used to specify a specific instance in an entity.","","A 16-bit ID representing a type of semantic keypoint …","A String label component","A Line Strip of 2D points","A Line Strip of 3D points","A 3x3 column-major Matrix made up of 3 Vecs","A Generic 3D Mesh.","The format of a binary mesh file, e.g. GLTF, GLB, OBJ","A unique id per <code>Mesh3D</code>.","A unique id per <code>crate::LogMsg</code>.","","Wavefront .obj.","Camera perspective projection (a.k.a. intrinsics).","The parent is some local camera space, the child an image …","A point in 2D space.","A point in 3D space.","A Quaternion represented by 4 real numbers.","A Radius component","","A raw “triangle soup” mesh.","A rectangle in 2D space.","","A proper rigid 3D transform, i.e. a rotation and a …","For example: the parent is a 3D world space, the child a …","A double-precision scalar.","Additional properties of a scalar when rendered as a plot.","A 3D size, e.g. the size of a 3D box.","A Multi-dimensional Tensor","","Flattened <code>Tensor</code> data payload","How to interpret the contents of a tensor.","Flattened <code>Tensor</code> data payload","A unique id per <code>Tensor</code>.","","A text entry component, comprised of a text body and its …","A transform between two spaces.","","","","","","Default behavior: guess based on shape","We don’t know the transform, but it is …","A vector in 2D space.","A vector in 3D space.","A vector in 4D space.","","[x_center, y_center, width/2, height/2]","[x_center, y_center, width, height]","[x, y, w, h], with x,y = left,top.","[x0, y0, x1, y1], with x0,y0 = left,top and x1,y1 = …","[y, x, h, w], with x,y = left,top.","[y0, x0, y1, x1], with x0,y0 = left,top and x1,y1 = …","","Albedo factor applied to the final color of the mesh.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Data payload","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Column-major projection matrix.","Optionally, the flattened indices array for this mesh.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Iterate over the registered field types","","","","","","","","","","","","","","","","","The per-element data meaning Used to indicated if the data …","","","","Reciprocal scale of meter unit for depth images","","Optional name of the dimension, e.g. “color” or “…","","","Optionally, the flattened normals array for this mesh.","","","","","","","","","","","","","","","The flattened positions array of this mesh.","","","","","Pixel resolution (usually integers) of child image space. …","How is the child rotated?","","","","","","","","","","","","","","Dimensionality and length","","Number of elements on this dimension. I.e. size-1 is the …","","","Unique identifier for the tensor","","","","four columns of an affine transformation matrix","Translation to parent from child.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A 3D Arrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A 3D bounding box represented by it’s half-lengths","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","A 16-bit ID representing a type of semantic class.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","An RGBA color tuple.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","The <code>AnnotationContext</code> provides additional information on …","","Information about an Annotation.","","","The description of a semantic Class.","Helper struct for converting <code>ClassDescription</code> to arrow","","","Helper struct for converting <code>AnnotationContext</code> to arrow","","","Helper struct for converting <code>ClassDescription</code> to arroweturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","<code>ClassId</code> or <code>KeypointId</code> to which this annotation info …","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Semantic connections between two keypointsne of <code>X</code>, <code>Y</code>, <code>Z</code>.","","","","Left or right handedness. Used to describe a coordinate …","","","","","","","","","","","","","Positive (<code>+</code>) or Negative (<code>-</code>).","One of: <code>+X</code>, <code>-X</code>, <code>+Y</code>, <code>-Y</code>, <code>+Z</code>, <code>-Z</code>, i.e. one of the six …","","How we interpret the coordinate system of an entity/space.","The six cardinal directions for 3D view-space and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns a matrix that translates RUB to this coordinate …","","","Choses a coordinate system based on just an up-axis.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an error if this does not span all three …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a matrix that translates this coordinate system to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A number used to specify a specific instance in an entity.","A special value indicating that this [<code>InstanceKey]</code> is …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Are we referring to a specific instance of the entity …","Are we referring to all instances of the entity (e.g. all …","","","","","","","","","","","Returns <code>None</code> if splat, otherwise the index.","","","","","","","","","","","A 16-bit ID representing a type of semantic keypoint …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","A String label component","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","A Line Strip of 2D points","A Line Strip of 3D points","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A 3x3 column-major Matrix made up of 3 Vecs","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Compressed/encoded mesh format","Helper struct for converting <code>EncodedMesh3D</code> to arrow","","","","Binary <code>glTF</code>.","","<code>glTF</code>.","","A Generic 3D Mesh.","","","The format of a binary mesh file, e.g. GLTF, GLB, OBJ","","","A unique id per <code>Mesh3D</code>.","","","","","","","Wavefront .obj.","","","","A raw “triangle soup” mesh.","","","","","","","","","Albedo factor applied to the final color of the mesheturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Optionally, the flattened indices array for this mesh.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Optionally, the flattened normals array for this mesh.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The flattened positions array of this mesh.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","four columns of an affine transformation matrixll ones.","A unique id per <code>crate::LogMsg</code>.","All zeroes.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","A shortened string representation of the message id.","","","","","","","","","","","","","A point in 2D space.","","","A point in 3D space.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Quaternion represented by 4 real numbers.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","A Radius component","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","A rectangle in 2D space.","","","","[x_center, y_center, width/2, height/2]","","[x_center, y_center, width, height]","","[x, y, w, h], with x,y = left,top.","","[x0, y0, x1, y1], with x0,y0 = left,top and x1,y1 = …","","[y, x, h, w], with x,y = left,top.","","[y0, x0, y1, x1], with x0,y0 = left,top and x1,y1 = …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A double-precision scalar.","Additional properties of a scalar when rendered as a plot.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A 3D size, e.g. the size of a 3D box.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The data is an annotated <code>crate::component_types::ClassId</code> …","","","","","Image data interpreted as depth map.","","","","","","","","","","","","","","","","","","","","","","","","A Multi-dimensional Tensor","","","","Flattened <code>Tensor</code> data payload","","","How to interpret the contents of a tensor.","","","Flattened <code>Tensor</code> data payload","","","A unique id per <code>Tensor</code>.","","","","","","","","","","","","Default behavior: guess based on shape","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Data payload","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Construct a tensor from <code>image::DynamicImage</code>.","Construct a tensor from something that can be turned into …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The per-element data meaning Used to indicated if the data …","Reciprocal scale of meter unit for depth images","","Optional name of the dimension, e.g. “color” or “…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Dimensionality and length","","","","","Number of elements on this dimension. I.e. size-1 is the …","","","Construct a tensor from the contents of a JPEG file.","Construct a tensor from the contents of a JPEG file on …","Unique identifier for the tensortext entry component, comprised of a text body and its …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Camera perspective projection (a.k.a. intrinsics).","","The parent is some local camera space, the child an image …","","","A proper rigid 3D transform, i.e. a rotation and a …","","For example: the parent is a 3D world space, the child a …","","","A transform between two spaces.","","","","We don’t know the transform, but it is …ocal length.","X &amp; Y focal length in pixels.","Field of View on the Y axis, i.e. the angle between top …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Column-major projection matrix.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Principal point of the pinhole camera, i.e. the …","","","","","","","","Pixel resolution (usually integers) of child image space. …","","","How is the child rotated?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Translation to parent from child.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of decimals shown for all vector display methods.","A vector in 2D space.","A vector in 3D space.","A vector in 4D space.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Oriented 3D box","","16-bit floating point number.","16-bit floating point number.","32-bit floating point number.","32-bit floating point number.","64-bit floating point number.","64-bit floating point number.","Signed 16 bit integer.","Signed 16 bit integer.","Signed 32 bit integer.","Signed 32 bit integer.","Signed 64 bit integer.","Signed 64 bit integer.","Signed 8 bit integer.","Signed 8 bit integer.","","Order: XYZW","","The data types supported by a …","","The data that can be stored in a …","","Unsigned 16 bit integer.","Unsigned 16 bit integer.","Unsigned 32 bit integer.","Unsigned 32 bit integer.","Unsigned 64 bit integer.","Unsigned 64 bit integer.","Unsigned 8 bit integer.","Unsigned 8 bit integer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Lower right corner.","Upper left corner.","","","","","","","","","","","","","","","","","","","","","","Number of bytes used by the type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build a (<code>Timeline</code>, <code>TimeInt</code>) tuple from <code>frame_nr</code> suitable …","Build a (<code>Timeline</code>, <code>TimeInt</code>) tuple from <code>log_time</code> suitable …","Create <code>len</code> dummy colors","Create <code>len</code> dummy <code>InstanceKey</code> keys. These keys will be …","","Create <code>len</code> dummy labels","Create <code>len</code> dummy <code>Point2D</code>","Create <code>len</code> dummy rectangles","Create <code>len</code> dummy <code>Vec3D</code>","","Encode a stream of <code>LogMsg</code> into an <code>.rrd</code> file.","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Encode a stream of <code>LogMsg</code> into an <code>.rrd</code> file.","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","128-bit hash. Negligible risk for collision.","64-bit hash.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Hash the given value.","","","","","","","Hash the given value.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Some batches want to provide explicit indices","The key of a table.","A 128 bit hash of <code>Index</code> with negligible risk of collision.","Any integer, e.g. a hash or an arbitrary identifier.","","X,Y pixel coordinates, from top left.","For arrays, assumed to be dense (0, 1, 2, …).","Many batches use implicit sequential-indexing","Anything goes.","UUID/GUID","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A type that can used as a Component of an Entity.","A <code>ComponentBundle</code> holds an Arrow component column, and its …","A <code>Component</code> that fulfils all the conditions required to be …","","","","","A <code>MsgBundle</code> holds data necessary for composing a single …","The errors that can occur when trying to convert between …","","","","","A <code>Component</code> that fulfils all the conditions required to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the datatype of the bundled component, discarding …","","","","","","","","","","","Extract a vector of <code>ComponentBundle</code> from the message. This …","Extract a <code>TimePoint</code> from the “timelines” column. This …","Create a <code>Field</code> for this <code>Component</code>.","Returns the index of <code>component</code> in the bundle, if it exists.","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","A unique id per <code>crate::LogMsg</code>.","The name of the component.","","The name of the Component, used as column name in the …","","Create a new <code>MsgBundle</code> with a pre-built Vec of …","","Create a new <code>ComponentBundle</code> from a boxed <code>Array</code>. The <code>Array</code> …","Returns the number of component collections in this …","Returns the number of <em>instances</em> for a given <code>row</code> in the …","Returns the number of <em>instances</em> for a given <code>row</code> in the …","Returns the number of <em>rows</em> in this bundle, i.e. the length …","Returns the number of <em>rows</em> for each component collections …","","","","","","","Pack the passed iterator of <code>ComponentBundle</code> into a …","","","","","","","","","","","","","","Try to append a collection of <code>Component</code> onto the …","Helper to build a <code>MessageBundle</code> from 1 component","Helper to build a <code>MessageBundle</code> from 2 components","Helper to build a <code>MessageBundle</code> from 3 components","","","","","","","Extract a <code>MsgBundle</code> from an <code>ArrowMsg</code>.","","","","","","","","","","","","","The Component payload <code>Array</code>.","Get the <code>ComponentBundle</code> value as a boxed <code>Array</code>.","Get the <code>ComponentBundle</code> value","","","","Wrap <code>field_array</code> in a single-element <code>ListArray</code>","","","","","","","","The name of an entity component, e.g. <code>pos</code> or <code>color</code>.","A <code>EntityPath</code> plus a <code>ComponentName</code>.","","","<code>camera / &quot;left&quot; / points / #42</code>","A 128 bit hash of <code>EntityPath</code> with negligible risk of …","<code>camera / &quot;left&quot; / points / #42</code>","The different parts that make up an <code>EntityPath</code>.","Array/table/map member. Each member must be of the same …","","","","Struct member. Each member can have a different type.","","","","","","","","","","","","","","“color”","","","","","","","<code>camera / &quot;left&quot; / points / #42</code>","","","","","","","Returns the argument unchanged.","","","","","precomputed hash","","Calls <code>U::from(self)</code>.","","","","","Parses an entity path, e.g. …","","","","","","","","","","","","","","","","","","","The name of an entity component, e.g. <code>pos</code> or <code>color</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Includes namespace, e.g. <code>rerun.color</code> or <code>ext.confidence</code>.","","","Precomputed hash of the string.","","Calls <code>U::from(self)</code>.","","","","","","","","","","Excludes the rerun namespace, so you’ll get <code>color</code> but …","","","","","","","","","","","A <code>EntityPath</code> plus a <code>ComponentName</code>.","","","","","","","","","","","“color”","","","","","","<code>camera / &quot;left&quot; / points / #42</code>","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","<code>camera / &quot;left&quot; / points / #42</code>","A 128 bit hash of <code>EntityPath</code> with negligible risk of …","Sometimes used as the hash of <code>None</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","precomputed hash","","Precomputed 64-bit hash.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is this a direct child of the other path.","Is this a strict descendant of the given path.","","","","","","","Number of parts","","","","","","","","","","Return <code>None</code> if root.","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>camera / &quot;left&quot; / points / #42</code>","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","Number of components","","","","","","Return <code>None</code> if root.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","Parses an entity path, e.g. …","","","","","","","","","","","","","","","","A signed duration represented as nanoseconds since unix …","","","","","","","A date-time represented as nanoseconds since unix epoch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Human-readable formatting","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","If true, this time is likely relative to unix epoch.","","","","","","","","","","","","","","","","","","","","","","","","Returns the absolute datetime if applicable.","","","","","","","","","","","","","","","","","","","","","","Used e.g. for frames in a film.","Normal wall time.","A 64-bit number describing either nanoseconds OR sequence …","A point in time on any number of <code>Timeline</code>s.","The type of a <code>TimeInt</code> or <code>Timeline</code>.","A time frame/space, e.g. <code>log_time</code> or <code>frame_nr</code>, coupled …","The name of a timeline. Often something like <code>&quot;log_time&quot;</code> or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Name of the timeline (e.g. “log_time”).","","","","","","","","","","","","","","","","Logging to this time means the data will show upp in all …","","","","","","","","","","Sequence or time?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The beginning of time.","","","A 64-bit number describing either nanoseconds OR sequence …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","For time timelines.","For time timelines.","For sequence timelines.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","A time frame/space, e.g. <code>log_time</code> or <code>frame_nr</code>, coupled …","The name of a timeline. Often something like <code>&quot;log_time&quot;</code> or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a formatted string of <code>time_range</code> on this <code>Timeline</code>.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Precomputed hash of the string.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The log time timeline to which all API functions will …","","","","","","Name of the timeline (e.g. “log_time”).","","","","","","","","","","","","","","","","","","","","","","","","","Sequence or time?","","","","","","","","","","","","","","Like <code>TimeRange</code>, but using <code>TimeReal</code> for improved precision.","","","","","","","","","","","","","","","","","","","","Inclusive","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Where in the range is this value? Returns 0-1 if within …","","The amount of time or sequences covered by this range.","The amount of time or sequences covered by this range.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Either nanoseconds or sequence numbers.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,8,0,0,0,8,0,5,5,240,0,98,0,0,8,33,36,33,36,33,36,210,97,97,8,33,36,33,36,33,36,33,36,0,0,209,0,0,0,0,0,97,12,0,0,180,209,12,0,0,98,0,0,0,0,0,180,12,209,210,209,0,0,0,0,0,0,0,0,0,0,0,0,0,33,36,33,36,33,36,33,36,180,12,209,0,6,6,7,8,9,10,11,12,13,5,95,10,0,6,7,8,9,10,11,12,13,5,6,7,8,9,10,11,12,13,5,6,7,8,9,10,11,12,13,5,99,6,7,8,9,10,11,12,13,5,6,7,8,9,10,11,12,13,5,6,7,8,9,10,11,12,13,5,5,6,7,8,9,10,11,12,13,5,6,7,8,9,10,11,12,13,5,6,7,0,0,0,0,0,6,6,7,8,9,10,11,12,13,5,6,7,8,9,10,11,12,13,5,6,7,8,9,10,11,12,13,5,6,7,8,9,10,11,12,13,5,0,5,0,0,6,7,9,10,11,12,13,5,6,7,9,10,11,12,13,5,0,6,6,7,7,8,9,10,11,11,12,12,13,5,99,6,7,7,7,8,8,8,8,9,10,11,12,13,5,6,6,6,7,195,0,6,7,8,179,0,0,95,9,6,7,8,9,10,11,12,13,5,6,7,8,9,10,11,12,13,5,10,6,7,8,9,10,11,12,13,5,6,7,8,9,10,11,12,13,5,11,194,233,239,95,99,194,233,239,11,0,9,13,234,95,44,44,6,7,8,9,10,11,12,13,5,6,7,8,9,10,11,12,13,5,6,7,11,0,13,95,6,10,10,179,178,195,6,7,8,9,10,11,12,13,5,6,7,8,9,10,11,12,13,5,6,7,8,9,10,11,12,13,5,10,11,0,0,13,0,0,6,7,8,9,10,11,12,13,5,6,7,11,12,99,178,195,6,7,8,9,10,11,12,13,5,6,7,8,9,10,11,12,13,5,234,6,7,8,9,10,11,12,13,5,7,6,7,8,9,10,11,12,13,5,6,7,8,9,10,11,12,13,5,44,44,6,7,8,9,10,11,12,13,5,6,7,8,9,10,11,12,13,5,6,7,8,9,10,11,12,13,5,241,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,0,0,34,150,34,0,0,0,40,0,40,98,0,150,141,141,0,0,0,0,0,97,97,141,141,141,141,0,141,0,0,0,0,0,0,0,0,0,150,97,0,180,0,0,0,0,98,0,0,0,0,180,0,0,0,0,0,0,0,0,0,0,0,0,150,141,141,141,141,40,180,0,0,0,0,127,127,127,127,127,127,32,95,41,0,242,242,242,41,38,32,34,0,174,242,41,38,32,34,242,41,38,32,34,99,242,41,38,32,34,242,41,38,32,34,242,41,38,32,34,0,0,0,0,143,242,242,41,38,32,32,34,242,41,38,32,34,0,242,41,38,32,34,243,41,34,34,99,242,41,38,32,34,34,243,243,179,95,242,41,38,32,34,0,242,41,38,32,34,41,38,243,243,0,0,0,174,0,242,41,38,32,34,242,41,38,32,34,0,243,143,0,95,99,143,0,142,242,41,95,243,41,44,242,41,38,32,34,242,41,38,32,34,0,95,34,0,0,0,179,178,242,41,38,32,34,242,41,38,32,34,0,132,243,143,0,142,34,0,143,0,34,0,99,178,242,41,38,32,34,242,41,38,32,34,242,41,38,32,34,242,41,38,32,34,242,41,38,32,34,41,0,44,242,41,38,32,34,124,242,41,38,32,34,242,41,38,32,34,56,115,116,124,137,56,115,116,124,137,56,116,124,137,244,0,0,0,0,44,44,44,45,45,45,45,45,51,50,44,45,51,50,44,45,51,50,44,45,51,50,44,45,51,50,44,45,51,50,44,44,44,50,45,44,45,45,45,51,50,44,45,51,50,44,44,45,51,50,44,44,45,50,45,50,45,44,45,51,50,44,50,45,51,50,44,45,45,51,50,44,51,50,45,45,51,50,44,45,51,50,44,44,45,44,50,44,45,51,50,44,45,51,50,44,45,45,50,45,51,50,44,45,51,50,44,44,45,44,45,45,51,50,44,45,51,50,44,45,45,51,50,44,45,51,50,44,45,51,50,44,45,45,50,44,45,51,50,44,45,51,50,44,45,51,50,44,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,0,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,71,66,62,63,64,66,65,62,63,64,66,65,67,68,69,70,67,68,69,70,67,68,69,70,67,68,69,70,62,67,77,72,71,63,68,78,73,64,69,79,74,66,65,70,80,75,62,67,77,72,71,63,68,78,73,64,69,79,74,66,65,70,80,75,62,67,77,72,71,63,68,78,73,64,69,79,74,66,65,70,80,75,62,67,77,72,71,63,68,78,73,64,69,79,74,66,65,70,80,75,62,67,77,72,71,63,68,78,73,64,69,79,74,66,65,70,80,75,62,67,77,72,71,63,68,78,73,64,69,79,74,66,65,70,80,75,65,65,66,62,71,66,62,71,66,62,72,73,74,75,62,67,63,68,64,69,66,65,70,67,68,69,70,62,67,71,68,69,66,70,62,67,77,72,71,63,68,78,73,64,69,79,74,66,65,70,80,75,62,67,77,72,71,63,68,78,73,64,69,79,74,66,65,70,80,75,62,71,66,62,67,77,72,71,63,68,78,73,64,69,79,74,66,65,70,80,75,62,71,66,62,71,66,70,75,70,75,67,72,67,72,69,74,68,73,68,73,69,74,69,74,67,72,62,67,71,68,69,66,70,62,67,77,72,71,71,63,68,78,73,64,64,69,79,74,66,66,65,70,80,75,72,73,74,75,62,71,64,62,67,77,72,71,63,68,78,73,64,69,79,74,66,65,70,80,75,67,68,69,70,62,67,77,72,71,63,68,78,73,64,69,79,74,66,65,70,80,75,77,72,78,73,79,74,80,75,63,63,71,64,71,64,62,67,68,69,70,62,67,77,72,71,63,68,78,73,64,69,79,74,66,65,70,80,75,62,67,77,72,71,63,68,78,73,64,69,79,74,66,65,70,80,75,66,67,68,69,70,62,63,64,66,65,72,73,74,75,62,67,77,72,71,63,68,78,73,64,69,79,74,66,65,70,80,75,62,67,77,72,71,63,68,78,73,64,69,79,74,66,65,70,80,75,67,68,69,70,67,68,69,70,72,73,74,75,62,67,77,72,71,63,68,78,73,64,69,79,74,66,65,70,80,75,62,67,77,72,71,63,68,78,73,64,69,79,74,66,65,70,80,75,62,71,66,67,68,69,70,62,71,66,67,68,69,70,62,67,77,72,71,63,68,78,73,64,69,79,74,66,65,70,80,75,62,67,77,72,71,63,68,78,73,64,69,79,74,66,65,70,80,75,67,68,69,70,62,67,77,72,71,63,68,78,73,64,69,79,74,66,65,70,80,75,62,67,77,72,71,63,68,78,73,64,69,79,74,66,65,70,80,75,62,67,77,72,71,63,68,78,73,64,69,79,74,66,65,70,80,75,67,68,69,70,67,68,69,70,72,73,74,75,62,67,77,72,71,63,68,78,73,64,69,79,74,66,65,70,80,75,62,67,77,72,71,63,68,78,73,64,69,79,74,66,65,70,80,75,62,67,77,72,71,63,68,78,73,64,69,79,74,66,65,70,80,75,0,83,83,83,0,83,86,82,82,82,85,82,82,82,85,83,86,0,0,83,0,0,84,84,84,83,81,84,85,82,86,81,81,82,82,83,81,84,85,82,86,83,81,84,85,82,86,83,81,84,85,82,86,83,81,84,85,82,86,83,81,84,85,82,86,83,81,84,85,82,86,83,81,84,85,82,86,83,81,84,85,82,86,81,83,81,84,85,82,86,83,81,84,85,82,86,81,86,81,83,81,84,85,82,86,83,81,84,85,82,86,83,81,84,85,82,86,83,81,84,85,82,86,83,81,84,84,85,82,82,86,81,83,81,84,85,82,86,83,84,86,81,81,82,81,81,83,81,84,85,82,86,83,81,84,85,82,86,83,83,81,84,85,82,86,83,81,84,85,82,86,81,82,81,83,81,84,85,82,86,83,81,84,85,82,86,81,81,83,81,84,85,82,86,83,81,84,85,82,86,83,81,84,85,82,86,83,82,83,81,84,85,82,86,81,84,82,83,83,81,84,85,82,86,83,81,84,85,82,86,83,81,84,85,82,86,83,81,84,85,82,86,83,81,84,85,82,86,81,83,81,84,85,82,86,83,81,84,85,82,86,83,81,84,85,82,86,0,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,0,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,0,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,0,0,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,92,93,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,0,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,103,98,0,0,0,0,102,97,102,97,107,0,0,0,0,0,0,0,107,0,0,0,0,102,97,107,103,98,0,0,0,0,104,95,99,97,98,95,112,113,104,95,99,96,97,98,104,95,99,96,97,98,100,101,102,103,100,101,102,103,100,101,102,103,100,101,102,103,104,107,100,108,105,95,99,96,101,109,106,102,110,112,97,103,111,113,98,104,107,100,108,105,95,99,96,101,109,106,102,110,112,97,103,111,113,98,104,107,100,108,105,95,99,96,101,109,106,102,110,112,97,103,111,113,98,99,96,104,107,100,108,105,95,99,96,101,109,106,102,110,112,97,103,111,113,98,104,107,100,108,105,95,99,96,101,109,106,102,110,112,97,103,111,113,98,104,107,100,108,105,95,99,96,101,109,106,102,110,112,97,103,111,113,98,104,95,99,97,98,104,95,99,97,98,104,105,106,104,100,95,99,96,101,102,97,103,98,100,101,102,103,100,101,102,103,104,107,100,108,105,95,99,96,101,109,106,102,110,112,97,103,111,113,98,104,107,100,108,105,95,99,96,101,109,106,102,110,112,97,103,111,113,98,104,95,99,97,98,104,107,100,108,105,95,99,96,101,109,106,102,110,112,97,103,111,113,98,104,95,99,97,98,104,97,100,105,101,106,101,106,100,105,100,105,101,106,100,105,100,105,101,106,104,107,107,100,95,99,101,102,97,97,103,98,99,96,104,107,100,108,105,95,99,96,96,101,109,106,102,110,112,97,103,111,113,98,104,97,105,106,104,97,112,113,95,104,107,100,108,105,95,99,96,101,109,106,102,110,112,97,103,111,113,98,100,101,104,107,100,108,105,95,99,96,101,109,106,102,110,112,97,103,111,113,98,108,105,109,106,110,112,111,113,100,101,102,103,104,107,100,108,105,95,99,96,101,109,106,102,110,112,97,103,111,113,98,104,107,100,108,105,95,99,96,101,109,106,102,110,112,97,103,111,113,98,98,95,99,96,98,100,101,102,103,104,95,99,96,97,98,105,106,112,113,95,95,102,103,104,107,100,108,105,95,99,96,101,109,106,102,110,112,97,103,111,113,98,104,107,100,108,105,95,99,96,101,109,106,102,110,112,97,103,111,113,98,104,95,107,100,101,102,103,104,100,101,102,103,105,106,95,104,107,100,108,105,95,99,96,101,109,106,102,110,112,97,103,111,113,98,104,107,100,108,105,95,99,96,101,109,106,102,110,112,97,103,111,113,98,104,95,99,97,98,100,101,102,103,104,95,99,97,98,107,97,99,96,100,101,102,103,104,107,100,108,105,95,99,99,96,101,109,106,102,110,112,97,103,111,113,98,104,107,100,108,105,95,99,96,101,109,106,102,110,112,97,103,111,113,98,100,101,102,103,104,107,100,108,105,95,99,96,101,109,106,102,110,112,97,103,111,113,98,102,103,104,107,100,108,105,95,99,96,101,109,106,102,110,112,97,103,111,113,98,104,107,100,108,105,95,99,96,101,109,106,102,110,112,97,103,111,113,98,100,101,102,103,100,101,105,106,104,107,100,108,105,95,99,96,101,109,106,102,110,112,97,103,111,113,98,104,107,100,108,105,95,99,96,101,109,106,102,110,112,97,103,111,113,98,104,107,100,108,105,95,99,96,101,109,106,102,110,112,97,103,111,113,98,24,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,115,116,115,116,115,116,115,116,117,118,117,118,117,118,117,118,115,117,122,119,116,118,123,120,115,117,122,119,116,118,123,120,115,117,122,119,116,118,123,120,115,117,122,119,116,118,123,120,115,117,122,119,116,118,123,120,115,117,122,119,116,118,123,120,115,116,115,116,119,120,115,117,116,118,117,118,117,118,115,117,122,119,116,118,123,120,115,117,122,119,116,118,123,120,115,117,122,119,116,118,123,120,115,116,117,119,118,120,117,119,118,120,118,120,115,117,116,118,115,115,115,117,122,119,116,116,116,118,123,120,119,120,115,117,122,119,116,118,123,120,117,118,115,117,122,119,116,118,123,120,122,119,123,120,117,118,115,117,122,119,116,118,123,120,115,117,122,119,116,118,123,120,115,116,115,117,116,118,115,116,119,120,115,117,122,119,116,118,123,120,115,117,122,119,116,118,123,120,117,118,117,118,119,120,115,117,122,119,116,118,123,120,115,117,122,119,116,118,123,120,117,118,115,116,117,118,115,117,122,119,116,118,123,120,115,117,122,119,116,118,123,120,117,118,115,117,122,119,116,118,123,120,115,117,122,119,116,118,123,120,115,117,122,119,116,118,123,120,117,118,117,118,119,120,115,117,122,119,116,118,123,120,115,117,122,119,116,118,123,120,115,117,122,119,116,118,123,120,115,116,115,116,116,124,0,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,0,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,0,0,0,0,128,127,128,127,128,127,128,127,128,127,128,127,127,130,127,127,128,128,128,128,128,129,130,127,128,129,130,127,128,129,130,127,128,129,130,127,128,129,130,127,128,129,130,127,127,127,128,127,128,128,128,129,130,127,128,129,130,127,128,129,130,127,127,128,127,128,129,130,127,127,127,130,128,129,130,127,128,129,130,127,129,130,128,128,129,130,127,128,129,130,127,127,128,127,130,128,128,129,130,127,128,129,130,127,128,128,128,129,130,127,128,129,130,127,128,127,127,128,128,129,130,127,128,129,130,127,128,128,129,130,127,128,128,129,130,127,128,129,130,127,128,128,129,130,127,127,128,129,130,127,128,129,130,127,0,0,0,0,0,131,132,131,132,131,132,133,133,133,133,131,132,133,136,134,131,132,133,136,134,131,132,133,136,134,131,132,133,136,134,131,132,133,136,134,131,132,133,136,134,131,132,131,132,134,131,132,133,133,133,131,132,133,136,134,131,132,133,136,134,131,132,133,136,134,133,134,131,132,133,131,131,132,133,136,134,134,131,132,133,136,134,133,131,132,133,136,134,136,134,133,131,132,133,136,134,131,132,133,136,134,131,132,133,131,132,134,131,132,133,136,134,131,132,133,136,134,133,133,134,131,132,133,136,134,131,132,133,136,134,132,133,131,132,133,131,132,133,136,134,131,132,133,136,134,133,131,132,133,136,134,131,132,133,136,134,131,132,133,136,134,133,133,134,131,132,133,136,134,131,132,133,136,134,131,132,133,136,134,0,0,0,0,137,137,138,138,138,138,137,138,140,139,137,138,140,139,137,138,140,139,137,138,140,139,137,138,140,139,137,138,140,139,139,137,138,138,138,137,138,140,139,137,138,140,139,137,138,140,139,138,139,138,139,138,139,137,138,137,138,140,139,139,137,138,140,139,138,137,138,140,139,140,139,138,137,138,140,139,137,138,140,139,137,138,137,139,137,138,140,139,137,138,140,139,138,138,139,137,138,140,139,137,138,140,139,138,138,137,138,140,139,137,138,140,139,138,137,138,140,139,137,138,140,139,137,138,140,139,138,138,139,137,138,140,139,137,138,140,139,137,138,140,139,137,137,137,150,146,40,142,142,142,146,40,150,144,141,144,141,144,141,144,141,144,141,144,141,151,0,144,141,0,0,0,0,150,151,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,150,144,141,144,141,144,141,144,141,146,40,151,151,37,141,142,40,143,161,162,37,141,142,40,143,37,141,142,40,143,144,145,146,147,144,145,146,147,144,145,146,147,144,145,146,147,37,144,157,161,141,145,158,148,142,146,159,162,40,143,147,160,149,150,151,37,144,157,161,141,145,158,148,142,146,159,162,40,143,147,160,149,150,151,37,144,157,161,141,145,158,148,142,146,159,162,40,143,147,160,149,150,151,37,144,157,161,141,145,158,148,142,146,159,162,40,143,147,160,149,150,151,37,144,157,161,141,145,158,148,142,146,159,162,40,143,147,160,149,150,151,37,144,157,161,141,145,158,148,142,146,159,162,40,143,147,160,149,150,151,37,141,142,40,143,37,141,142,40,143,37,148,149,143,37,144,141,145,142,146,40,143,147,144,145,146,147,144,145,146,147,142,37,144,157,161,141,145,158,148,142,146,159,162,40,143,147,160,149,150,151,37,144,157,161,141,145,158,148,142,146,159,162,40,143,147,160,149,150,151,37,142,40,37,144,157,161,141,145,158,148,142,146,159,162,40,143,147,160,149,150,151,243,143,37,141,142,40,143,150,37,142,40,147,149,147,149,147,149,145,148,147,149,145,148,147,149,37,144,141,145,142,142,146,40,143,147,150,150,151,151,37,144,157,161,141,145,158,148,142,146,159,162,40,143,147,160,149,150,150,151,151,151,143,143,243,143,37,148,149,37,142,243,143,161,162,37,144,157,161,141,145,158,148,142,146,159,162,40,143,147,160,149,150,151,145,147,37,144,157,161,141,145,158,148,142,146,159,162,40,143,147,160,149,150,151,157,161,158,148,159,162,160,149,243,143,243,143,144,145,146,147,37,144,157,161,141,145,158,148,142,146,159,162,40,143,147,160,149,150,151,37,144,157,161,141,145,158,148,142,146,159,162,40,143,147,160,149,150,151,243,143,143,143,143,142,142,144,145,146,143,147,37,141,142,40,143,161,148,162,149,243,143,144,146,37,144,157,161,141,145,158,148,142,146,159,162,40,143,147,160,149,150,151,37,144,157,161,141,145,158,148,142,146,159,162,40,143,147,160,149,150,151,37,150,151,144,145,146,147,37,144,145,146,147,148,149,37,144,157,161,141,145,158,148,142,146,159,162,40,143,147,160,149,150,151,37,144,157,161,141,145,158,148,142,146,159,162,40,143,147,160,149,150,151,37,142,40,243,143,143,144,145,146,147,142,150,151,143,143,143,0,37,141,142,40,143,142,150,151,144,145,146,147,37,144,157,161,141,145,158,148,142,146,159,162,40,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,147,160,149,150,151,37,144,157,161,141,145,158,148,142,146,159,162,40,143,147,160,149,150,151,144,145,146,147,37,144,157,161,141,145,158,148,142,146,159,162,40,143,147,160,149,150,151,144,146,142,37,144,157,161,141,145,158,148,142,146,159,162,40,143,147,160,149,150,151,37,144,157,161,141,145,158,148,142,146,159,162,40,143,147,160,149,150,151,144,145,146,147,145,147,148,149,37,144,157,161,141,145,158,148,142,146,159,162,40,143,147,160,149,150,151,142,37,144,157,161,141,145,158,148,142,146,159,162,40,143,147,160,149,150,151,37,144,157,161,141,145,158,148,142,146,159,162,40,143,147,160,149,150,151,244,0,0,0,0,174,174,174,175,175,175,175,174,175,177,176,174,174,175,177,176,174,175,177,176,174,175,177,176,174,175,177,176,174,175,177,176,174,174,176,174,175,175,175,174,175,177,176,174,175,177,176,174,175,177,176,174,174,175,176,175,176,174,175,174,175,177,176,174,176,174,175,177,176,175,174,175,177,176,177,176,175,174,174,175,177,176,174,175,177,176,174,174,175,174,176,174,175,177,176,174,175,177,176,175,175,176,174,175,177,176,174,175,177,176,175,174,175,174,175,177,176,174,175,177,176,175,174,175,177,176,174,175,177,176,174,175,177,176,175,175,176,174,175,177,176,174,175,177,176,174,175,177,176,178,0,0,0,0,183,180,0,0,0,183,180,0,0,0,0,0,183,180,178,179,180,191,178,179,180,178,179,180,181,182,183,181,182,183,181,182,183,181,182,183,179,181,188,185,178,182,189,186,179,183,190,191,180,181,188,185,178,182,189,186,179,183,190,191,180,181,188,185,178,182,189,186,179,183,190,191,180,181,188,185,178,182,189,186,179,183,190,191,180,181,188,185,178,182,189,186,179,183,190,191,180,181,188,185,178,182,189,186,179,183,190,191,180,178,178,179,180,178,179,180,185,186,181,178,182,179,183,180,181,182,183,181,178,182,183,181,188,185,178,182,189,186,179,183,190,191,180,181,188,185,178,182,189,186,179,183,190,191,180,178,179,180,181,188,185,178,182,189,186,179,183,190,191,180,178,179,180,182,186,182,186,181,185,181,185,181,178,182,179,183,180,179,179,179,181,188,185,178,182,189,186,179,183,190,191,180,185,186,179,191,181,188,185,178,182,189,186,179,183,190,191,180,181,182,181,188,185,178,182,189,186,179,183,190,191,180,188,185,189,186,190,191,181,182,183,181,188,185,178,182,189,186,179,183,190,191,180,181,188,185,178,182,189,186,179,183,190,191,180,180,181,182,183,178,179,180,178,178,185,186,191,183,181,188,185,178,182,189,186,179,183,190,191,180,181,188,185,178,182,189,186,179,183,190,191,180,178,179,181,182,183,181,182,183,179,179,185,186,178,181,188,185,178,182,189,186,179,183,190,191,180,181,188,185,178,182,189,186,179,183,190,191,180,178,179,180,181,182,183,178,179,180,178,181,182,183,181,188,185,178,182,189,186,179,183,190,191,180,181,188,185,178,182,189,186,179,183,190,191,180,181,182,183,181,188,185,178,182,189,186,179,183,190,191,180,183,181,188,185,178,182,189,186,179,183,190,191,180,181,188,185,178,182,189,186,179,183,190,191,180,181,182,183,181,182,185,186,181,188,185,178,182,189,186,179,183,190,191,180,181,188,185,178,182,189,186,179,183,190,191,180,181,188,185,178,182,189,186,179,183,190,191,180,0,0,0,0,187,192,193,187,192,193,187,192,193,187,192,193,187,192,193,187,192,193,187,192,193,187,192,193,187,192,193,187,192,193,187,192,193,187,192,193,187,192,193,187,192,193,187,192,193,187,192,193,187,192,193,187,192,193,187,187,192,192,193,193,187,187,187,192,192,192,193,187,192,187,192,193,187,192,193,187,192,193,187,192,193,187,192,192,187,192,193,187,192,193,187,192,193,187,192,193,187,192,193,187,192,193,187,192,193,187,192,193,187,192,193,187,192,193,187,192,193,187,192,193,187,192,193,187,192,193,193,187,192,193,187,192,193,187,192,193,187,192,193,192,193,0,0,0,240,33,36,33,36,33,36,33,36,33,36,33,36,33,36,0,0,0,0,0,0,0,33,36,33,36,33,36,33,36,194,195,33,36,36,194,195,33,36,194,195,33,36,194,195,33,36,194,195,33,36,194,195,33,36,194,195,33,36,194,195,33,36,194,195,33,36,194,195,33,36,194,195,33,36,194,195,33,36,194,195,33,36,194,195,33,36,33,194,195,33,33,36,194,195,33,36,195,194,195,33,36,194,195,33,36,194,195,33,36,194,195,33,36,194,194,194,195,33,36,194,195,33,36,195,194,195,33,36,194,195,33,36,194,195,33,36,33,194,195,33,36,33,195,36,194,195,33,36,194,195,33,36,194,195,33,36,194,195,33,36,194,195,33,36,194,195,33,36,194,195,33,36,194,195,33,36,0,0,0,0,0,0,0,0,0,0,0,202,202,202,204,202,202,202,202,202,202,202,0,0,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,0,202,202,202,204,0,204,204,204,204,204,204,204,204,204,204,204,0,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,0,0,0,0,0,0,0,206,205,206,205,206,205,206,205,206,205,206,205,206,205,206,205,206,205,206,205,206,205,206,0,205,206,205,206,205,206,206,205,206,205,206,205,206,0,205,205,206,206,205,206,0,205,206,205,206,205,206,205,206,205,206,205,206,205,206,205,206,206,205,206,205,206,205,206,205,206,205,206,205,206,205,206,205,206,205,206,0,210,0,0,209,211,209,209,210,209,209,209,210,211,209,210,211,209,210,211,209,210,211,209,210,211,209,210,211,209,210,211,209,210,211,209,210,211,209,210,209,210,211,209,210,211,209,210,209,210,211,209,210,211,209,210,211,211,209,209,210,211,209,209,209,210,211,209,210,211,209,209,210,211,211,211,209,210,211,209,210,211,210,211,211,210,209,210,211,209,210,211,209,210,211,209,210,211,209,210,209,210,211,209,210,211,211,209,210,209,210,211,209,209,210,211,209,210,211,209,210,211,209,210,211,209,210,211,209,210,211,209,210,211,209,210,211,27,27,0,0,0,0,0,0,27,27,27,0,0,27,27,27,0,0,27,212,28,27,212,28,27,212,28,27,212,28,27,212,28,27,212,28,27,212,28,212,28,212,28,28,212,27,212,28,27,212,28,27,212,28,28,0,0,245,28,27,27,212,28,28,27,27,27,27,212,28,27,212,28,27,212,28,27,212,28,27,212,28,28,245,212,212,212,28,212,212,28,212,28,212,28,27,212,28,27,212,28,0,27,27,212,28,27,212,28,27,28,212,28,27,28,28,0,0,0,27,212,212,212,212,28,28,27,212,28,27,212,28,27,212,28,27,212,28,212,212,212,27,212,28,0,27,212,28,27,212,28,218,0,0,218,218,0,0,0,0,221,218,218,218,221,0,218,221,221,221,221,221,221,221,221,221,221,0,222,0,221,221,221,221,0,222,0,221,221,221,221,221,221,221,221,221,221,4,221,221,221,221,221,221,0,0,221,225,4,221,221,221,221,221,221,221,221,221,221,221,221,221,246,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,0,0,223,223,4,4,223,4,223,4,223,4,223,4,223,4,223,4,223,4,223,4,4,223,4,223,4,4,223,4,223,4,223,4,223,4,4,223,4,4,4,4,4,4,4,223,4,223,4,4,4,223,4,223,4,223,4,4,4,223,4,223,4,4,4,4,223,4,223,4,4,223,4,223,4,4,4,4,4,223,4,223,4,4,223,4,4,223,4,223,4,223,4,223,4,223,4,223,4,223,4,223,4,0,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,218,218,218,218,218,218,0,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,0,0,218,218,218,218,218,218,218,0,218,218,218,218,218,246,0,227,227,227,227,227,227,0,197,227,197,197,227,227,227,197,227,197,227,197,227,197,227,197,227,197,227,197,227,197,227,197,227,197,227,197,227,197,227,197,227,197,227,197,227,227,197,227,197,197,197,197,227,227,227,227,227,197,197,227,197,197,227,197,227,197,227,197,227,197,197,197,197,227,197,227,197,227,197,197,227,197,227,197,227,197,227,197,227,197,227,197,197,197,197,227,227,197,197,197,227,197,227,197,227,197,227,197,227,197,227,197,227,197,227,232,232,0,0,0,0,0,0,26,232,0,26,26,26,232,26,232,26,232,26,232,26,232,26,232,26,232,26,232,26,232,26,26,26,232,26,232,26,232,26,232,26,232,26,232,26,232,232,232,26,26,232,232,26,232,26,26,232,26,232,232,26,232,26,26,232,26,26,26,26,26,26,232,26,232,234,26,26,232,26,232,26,232,26,26,232,26,232,26,232,0,26,0,26,26,26,232,26,232,26,232,234,26,232,26,232,26,232,26,232,26,232,26,232,0,0,237,236,237,236,237,236,237,236,237,236,237,236,237,236,237,236,237,236,237,236,237,236,237,236,237,236,237,236,237,236,237,237,236,237,236,237,236,237,236,237,237,236,237,236,237,236,237,236,237,236,237,236,237,236,237,236,196,196,196,0,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,0,0,238,234,238,238,238,234,238,238,234,238,234,238,234,238,234,238,234,238,234,238,234,238,234,238,234,238,238,234,238,234,238,234,238,234,238,238,234,238,234,238,238,234,234,238,238,238,234,238,234,238,238,234,238,234,238,234,234,238,234,238,234,234,234,238,234,234,234,238,234,238,234,238,234,238,234,238,234,238,234,238,234,238,238,234,238,234,234,234,238,234,238,234,238,234,238,234,238,234,238,234,0,0,233,239,233,239,233,239,233,239,233,239,233,239,233,239,233,239,233,239,233,239,233,239,233,239,233,239,233,239,233,239,233,239,233,239,233,239,239,233,239,233,239,239,239,233,239,239,233,239,233,239,233,239,233,239,233,239,233,239,233,239,233,239,233,239,233,239,233,239,233,239,233,239,233,239,233,239,233,239,233,239,233,239,233,239,233,239,0,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[3,4],5],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[5,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,6],14],[[7,7],14],0,0,0,0,0,[[],6],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[[],[[16,[6]]]],[[],[[16,[7]]]],[[],[[16,[8]]]],[[],[[16,[9]]]],[[],[[16,[10]]]],[[],[[16,[11]]]],[[],[[16,[12]]]],[[],[[16,[13]]]],[[],[[16,[5]]]],[15],[15],[15],[15],[15],[15],[15],[15],[15],0,[5,4],0,0,[[6,6],3],[[7,7],3],[[9,9],3],[[10,10],3],[[11,11],3],[[12,12],3],[[13,13],3],[[5,5],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[[6,17],18],[[6,17],18],[[7,17],18],[[7,17],18],[[8,17],18],[[9,17],18],[[10,17],18],[[11,17],18],[[11,17],18],[[12,17],18],[[12,17],18],[[13,17],18],[[5,17],18],0,[[]],[19,7],[[]],[20,7],[21,8],[[]],[9,8],[13,8],[[]],[[]],[[]],[[]],[[]],[[]],[20,[[16,[6]]]],[22,6],[[],23],[[],23],0,0,[6],[7],[8,24],0,0,0,0,0,[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,6],[[2,[14]]]],[[7,7],[[2,[14]]]],0,0,0,0,[[],6],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,16],[7,16],[8,16],[9,16],[10,16],[11,16],[12,16],[13,16],[5,16],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],0,0,0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1],[[]],[[]],[[]],[[]],[[],2],[[],2],0,[21,21],[[]],[15],[15],[[],[[16,[21]]]],[15],[[21,21],3],[[21,17],18],[[]],[[],15],[[]],[[],2],[[]],0,[[]],[[]],[[]],[[]],0,[21,16],[21,[[16,[26,27]]]],[[]],[[],16],[28,[[29,[21]]]],[[],16],[[],25],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],30],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,0,0,0,[[],31],[15],[15],[15],[15],[32],[15],[15],[15],[15],[15],[15],0,[15],[15],[15],[15],[15],[[],33],0,[[34,17],18],[[34,17],18],0,[[]],[[]],[[]],[[]],[[]],[35,34],[[],[[2,[36]]]],[[],37],0,0,[[],15],[[],15],[[],15],[[],15],[[],15],0,[[]],[[]],[[]],[[]],[[]],[[]],[38],[[],3],[[],3],[[],39],0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],0,[[],40],0,0,0,0,0,0,0,[[]],[41,2],0,[[],15],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[42],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],0,0,0,[34,[[2,[43]]]],0,0,0,[[],19],0,0,0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[[[2,[44]]],[[2,[44]]]],[44,30],[45,46],[45,[[48,[47]]]],[45,[[49,[47]]]],[45,46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[44,44],[[]],[50],[45,31],[[],31],0,[[],45],[15],[15],[15],[15],[15],[15],[15],[15],[[],[[16,[44]]]],[15],[15],[15],[15],[[44,44],3],0,0,0,0,[[45,17],18],[[44,17],18],[[]],[[]],[[]],[[]],0,[[],15],[[],15],[[],15],[[],15],[45],[[]],[[]],[[]],[[]],[51],[[]],[45,15],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[],52],[[],45],[[]],[50,2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45],[[45,15]],[50,[[2,[44]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[44,16],[45],[[]],[[45,53],30],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[45,[2,[[54,[44]]]]],30],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45,[[2,[55]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1],[[],2],[56,30],[[]],[[]],[[]],[[]],[[],2],[[],2],[56,56],[[]],[[],31],[15],[15],[[],[[16,[56]]]],[15],[[56,56],3],[[56,17],18],[[]],[57,56],[[],15],[[]],[[],2],[[]],[[],52],[[58,58,58],56],[[]],[[]],[[]],[[]],[[]],[56,16],[[]],[[],16],[[],16],[[],25],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[1],[[],[[2,[59]]]],[59,30],[[]],[[]],[[]],[[]],[[],2],[[],2],[59,59],[[]],[[59,59],14],[[],31],[[],59],[15],[15],[[],[[16,[59]]]],[15],[[59,59],3],[[],3],[[59,17],18],[[]],[[],23],[59],[[],15],[[]],[[],2],[[]],[[],52],[[]],[[]],[[]],[[59,59],[[2,[14]]]],[[]],[[]],[59,16],[[]],[[],16],[[],16],[[],25],[[]],[[]],[[]],[[]],[[]],0,[1],[[],[[2,[60]]]],[60,30],[[]],[[]],[[]],[[]],[[],2],[[],2],[60,60],[[]],[[],31],[15],[15],[[],[[16,[60]]]],[15],[[60,60],3],[[],3],[[60,17],18],[[],60],[[]],[[61,61,61],60],[[61,61,61,61],60],[[],15],[[]],[[],2],[[]],[[],52],[[]],[[]],[[]],[[]],[[]],[60,16],[60],[[]],[[],16],[[],16],[[],25],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[[2,[62]]],[[2,[62]]]],[[[2,[63]]],[[2,[63]]]],[[[2,[64]]],[[2,[64]]]],[[],2],[[[2,[65]]],[[2,[65]]]],[62,30],[63,30],[64,30],[66,30],[65,30],[67,46],[68,46],[69,46],[70,46],[67,[[48,[47]]]],[68,[[48,[47]]]],[69,[[48,[47]]]],[70,[[48,[47]]]],[67,[[49,[47]]]],[68,[[49,[47]]]],[69,[[49,[47]]]],[70,[[49,[47]]]],[67,46],[68,46],[69,46],[70,46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,0,[62,62],[71,71],[66,66],[[]],[[]],[[]],0,[72],[73],[74],[75],[[],31],[67,31],[[],31],[68,31],[[],31],[69,31],[[],31],[[],31],[70,31],0,0,0,0,[[],62],[[],67],[[],71],[[],68],[[],69],[[],66],[[],70],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[[],[[16,[62]]]],[[],[[16,[71]]]],[[],[[16,[66]]]],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[[62,62],3],[[71,71],3],[[66,66],3],[[],3],[[],3],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[62,17],18],[[67,17],18],[[71,17],18],[[68,17],18],[[69,17],18],[[66,17],18],[[70,17],18],[[]],[[]],[[]],[[]],[[]],[64,71],[[]],[[]],[[]],[[]],[[]],[71,64],[[]],[[]],[[]],[[[76,[65]]],66],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[67],[68],[69],[70],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[77],[[]],[78],[[]],[79],[[]],[80],[[]],0,0,0,0,0,0,0,[67,15],[68,15],[69,15],[70,15],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],52],[[],67],[[],68],[[],69],[[],70],[[]],[[]],[[]],[[]],[[]],[72,2],[73,2],[74,2],[75,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[67],[68],[69],[70],[[67,15]],[[68,15]],[[69,15]],[[70,15]],[72,[[2,[62]]]],[73,[[2,[63]]]],[74,[[2,[64]]]],[75,[[2,[65]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[62,16],[71,16],[66,16],[67],[68],[69],[70],[[]],[[]],[[]],[[67,53],30],[[68,53],30],[[69,53],30],[[70,53],30],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[67,[2,[[54,[62]]]]],30],[[68,[2,[[54,[63]]]]],30],[[69,[2,[[54,[64]]]]],30],[[70,[2,[[54,[65]]]]],30],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[67,[[2,[55]]]],[68,[[2,[55]]]],[69,[[2,[55]]]],[70,[[2,[55]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[[],2],[81,30],[82],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[83,83],[81,81],[84,84],[85,85],[82,82],[86,86],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[81,19],[86,20],[81,19],[[],[[16,[83]]]],[[],[[16,[81]]]],[[],[[16,[84]]]],[[],[[16,[85]]]],[[],[[16,[82]]]],[[],[[16,[86]]]],[15],[15],[15],[15],[15],[15],[[83,83],3],[[81,81],3],[[84,84],3],[[85,85],3],[[82,82],3],[[86,86],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[83,17],18],[[81,17],18],[[84,17],18],[[84,17],18],[[85,17],18],[[82,17],18],[[82,17],18],[[86,17],18],[81,[[2,[82]]]],[[]],[[]],[[]],[[]],[[]],[[]],[61,[[16,[83,19]]]],[15,84],[3,86],[81,87],[20,[[16,[81]]]],[20,[[16,[82]]]],[[82,86],81],[81,[[2,[86]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[83,20],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[],52],[[85,84],82],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[81,[[2,[82]]]],[81,[[16,[19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[83,16],[81,16],[84,16],[85,16],[82,16],[86,16],[83,20],0,[[]],[[]],[[]],[[]],[[]],[[]],[81,87],[[],19],[[],19],[61,[[88,[83]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[81,[[2,[82]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1],[[],[[2,[89]]]],[89,30],[[]],[[]],[[]],[[]],[[],2],[[],2],[89,89],[[]],[[89,89],14],[[],31],[15],[15],[[],[[16,[89]]]],[15],[[89,89],3],[[],3],[[89,17],18],[[89,17],18],[[]],[[],23],[89],[[],15],[[]],[89,3],[89,3],[[],2],[[]],[[],52],[[]],[[]],[[]],[[89,89],[[2,[14]]]],[[]],[[]],[89,16],[89,[[2,[89]]]],[[]],[[],19],[[],16],[[],16],[[],25],[[]],[[]],[[]],[[]],[[]],0,[1],[[],[[2,[90]]]],[90,30],[[]],[[]],[[]],[[]],[[],2],[[],2],[90,90],[[]],[[90,90],14],[[],31],[[],90],[15],[15],[[],[[16,[90]]]],[15],[[90,90],3],[[],3],[[90,17],18],[[]],[[],23],[90],[[],15],[[]],[[],2],[[]],[[],52],[[]],[[]],[[]],[[90,90],[[2,[14]]]],[[]],[[]],[90,16],[[]],[[],16],[[],16],[[],25],[[]],[[]],[[]],[[]],[[]],0,[1],[[],[[2,[91]]]],[91,30],[[]],[[]],[[]],[[]],[[],2],[[],2],[91,91],[[]],[[],31],[15],[15],[[],[[16,[91]]]],[15],[[91,91],3],[[],3],[[91,17],18],[19,91],[[]],[[],15],[[]],[[],2],[[]],[[],52],[[]],[[]],[[]],[[]],[[]],[91,16],[[]],[[],16],[[],16],[[],25],[[]],[[]],[[]],[[]],[[]],0,0,[1],[1],[[],2],[[],2],[92,30],[93,30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[92,92],[93,93],[[]],[[]],[[],31],[[],31],[15],[15],[15],[15],[[],[[16,[92]]]],[[],[[16,[93]]]],[15],[15],[[92,92],3],[[93,93],3],[[92,17],18],[[93,17],18],[[]],[76,92],[[]],[76,93],[[],15],[[],15],[[]],[[]],[[],2],[[],2],[[]],[[]],[[],52],[[],52],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[92,16],[93,16],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1],[[],2],[94,30],[[]],[[]],[[]],[[]],[[],2],[[],2],[94,94],[[]],[[],31],[15],[15],[[],[[16,[94]]]],[15],[[94,94],3],[[94,17],18],[[],94],[87,94],[[]],[94],[[],15],[[]],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[94,16],[[]],[[],16],[[],16],[[],25],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],0,0,0,[[],2],[[[2,[95]]],[[2,[95]]]],[[],2],[[[2,[96]]],[[2,[96]]]],[[[2,[97]]],[[2,[97]]]],[[[2,[98]]],[[2,[98]]]],[[],30],[95,30],[99,30],[96,30],[97,30],[98,30],[100,46],[101,46],[102,46],[103,46],[100,[[48,[47]]]],[101,[[48,[47]]]],[102,[[48,[47]]]],[103,[[48,[47]]]],[100,[[49,[47]]]],[101,[[49,[47]]]],[102,[[49,[47]]]],[103,[[49,[47]]]],[100,46],[101,46],[102,46],[103,46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[104,104],[95,95],[99,99],[97,97],[98,98],[[]],[[]],[[]],[[]],[[]],[[104,104],14],[105],[106],[[],31],[100,31],[[],31],[[],31],[[],31],[101,31],[102,31],[[],31],[103,31],[[],31],0,0,0,0,[[],100],[[],101],[[],102],[[],103],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[[],[[16,[104]]]],[[],[[16,[95]]]],[[],[[16,[99]]]],[[],[[16,[97]]]],[[],[[16,[98]]]],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[[104,104],3],[[95,95],3],[[99,99],3],[[97,97],3],[[98,98],3],[[],3],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[104,17],18],[[107,17],18],[[107,17],18],[[100,17],18],[[95,17],18],[[99,17],18],[[101,17],18],[[102,17],18],[[97,17],18],[[97,17],18],[[103,17],18],[[98,17],18],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[99,96],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[[],23],0,0,[104],[97],0,0,0,[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[100],[101],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[108],[[]],[109],[[]],[110],[[]],[111],[[]],[100,15],[101,15],[102,15],[103,15],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[98,104],0,0,0,[[],52],[[],100],[[],101],[[],102],[[],103],[[]],[[]],[[]],[[]],[[]],[[]],[105,2],[106,2],[112,2],[113,2],0,[95,15],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[104,104],[[2,[14]]]],0,[42],[100],[101],[102],[103],[[],104],[[100,15]],[[101,15]],[[102,15]],[[103,15]],[105,[[2,[95]]]],[106,[[2,[96]]]],[95,[[16,[107]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[104,16],[95,16],[99,16],[97,16],[98,16],[100],[101],[102],[103],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],0,0,[[100,53],30],[[101,53],30],[[102,53],30],[[103,53],30],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[96,[[88,[99]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[100,[2,[[54,[95]]]]],30],[[101,[2,[[54,[96]]]]],30],[[102,[2,[[54,[97]]]]],30],[[103,[2,[[54,[98]]]]],30],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[100,[[2,[55]]]],[101,[[2,[55]]]],[102,[[2,[55]]]],[103,[[2,[55]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[1],[[],[[2,[24]]]],[24,30],[24,114],[[]],[[]],[[]],[[]],[[],2],[[],2],[24,24],[[]],[[24,24],14],[[],31],[15],[15],[[],[[16,[24]]]],[15],[[24,24],3],[[],3],[[24,17],18],[[24,17],18],[[]],[[],23],[24],[[],15],[[]],[[],2],[[]],[[],52],[[]],[[]],[[]],[[24,24],[[2,[14]]]],[[],24],[[]],[[]],[24,16],[24,19],[[]],[[],19],[[],16],[[],16],[[],25],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[1],[1],[[[2,[115]]],[[2,[115]]]],[[[2,[116]]],[[2,[116]]]],[115,30],[116,30],[117,46],[118,46],[117,[[48,[47]]]],[118,[[48,[47]]]],[117,[[49,[47]]]],[118,[[49,[47]]]],[117,46],[118,46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[115,115],[116,116],[[]],[[]],[119],[120],[[],31],[117,31],[[],31],[118,31],0,0,[[],117],[[],118],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[[115,115],3],[[116,116],3],0,0,0,0,0,0,0,0,0,0,[[115,17],18],[[117,17],18],[[116,17],18],[[118,17],18],[[]],[121,115],[[],115],[[]],[[]],[[]],[[],116],[[]],[57,116],[[]],[[]],[[]],0,0,[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[117],[118],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[122],[[]],[123],[[]],[117,15],[118,15],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],52],[[],52],[[58,58],115],[[],117],[[58,58,58],116],[[],118],[[]],[[]],[119,2],[120,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[117],[118],[[117,15]],[[118,15]],[119,[[2,[115]]]],[120,[[2,[116]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[117],[118],[[]],[[]],[[117,53],30],[[118,53],30],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[117,[2,[[54,[115]]]]],30],[[118,[2,[[54,[116]]]]],30],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[117,[[2,[55]]]],[118,[[2,[55]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[1],[[],2],[124,30],[[]],[[]],[[]],[[]],[[],2],[[],2],[124,124],[[]],[[],31],[[],124],[15],[15],[[],[[16,[124]]]],[15],[[124,124],3],[[124,17],18],[125,124],[[]],[[],15],[[]],[[],2],[[]],[[],52],[[58,58,58,58],124],[[]],[[]],[[]],[[]],[[]],[124,16],[[]],[[],16],[[],16],[[],25],[[]],[[]],[[]],0,[[]],[[]],0,0,0,0,[1],[[],[[2,[126]]]],[126,30],[[]],[[]],[[]],[[]],[[],2],[[],2],[126,126],[[]],[[],31],[15],[15],[15],[[126,17],18],[[]],[[],15],[[]],[[],2],[[]],[[],52],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],25],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],0,[[[2,[127]]],[[2,[127]]]],[127,30],[128,46],[128,[[48,[47]]]],[128,[[49,[47]]]],[128,46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[127,127],[[]],[128,31],[[],31],0,[[],128],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[[127,127],3],[[128,17],18],[[127,17],18],[[]],[[]],[[]],[[]],[[58,58,58,58],127],[127,58],0,[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],[129],[[]],[128,15],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[],52],[[],128],[[]],[130,2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[128],[[128,15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[128],[[]],[127],[[128,53],30],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[128,[2,[[54,[127]]]]],30],[[],25],[[],25],[[],25],[[],25],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[128,[[2,[55]]]],[[]],[[]],[[]],[[]],[127,58],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[1],[1],[[],[[2,[131]]]],[[[2,[132]]],[[2,[132]]]],[131,30],[132,30],[133,46],[133,[[48,[47]]]],[133,[[49,[47]]]],[133,46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[131,131],[132,132],[[]],[[]],[134],[[],31],[[],31],[133,31],0,[[],133],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],0,0,[[131,17],18],[[132,17],18],[[133,17],18],[135,131],[[]],[[]],[[]],[[]],[[]],0,[[],15],[[],15],[[],15],[[],15],[[],15],[133],[[]],[[]],[[]],[[]],[[]],[136],[[]],[133,15],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[],52],[[],52],[[],133],[[]],[[]],[134,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[133],[[133,15]],[134,[[2,[132]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[133],[[]],[[]],[[133,53],30],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[133,[2,[[54,[132]]]]],30],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[133,[[2,[55]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[[2,[137]]],[[2,[137]]]],[137,30],[138,46],[138,[[48,[47]]]],[138,[[49,[47]]]],[138,46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[139],[[],31],[138,31],0,[[],138],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],0,0,0,0,0,0,[[137,17],18],[[138,17],18],[[]],[[]],[[]],[[]],0,[[],15],[[],15],[[],15],[[],15],[138],[[]],[[]],[[]],[[]],[140],[[]],[138,15],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[],52],[[],138],[[]],[139,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[138],[[138,15]],[139,[[2,[137]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[138],[[138,53],30],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[138,[2,[[54,[137]]]]],30],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[138,[[2,[55]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],0,0,[[],2],[[[2,[141]]],[[2,[141]]]],[[[2,[142]]],[[2,[142]]]],[[[2,[40]]],[[2,[40]]]],[[[2,[143]]],[[2,[143]]]],[[],30],[141,30],[142,30],[40,30],[143,30],[144,46],[145,46],[146,46],[147,46],[144,[[48,[47]]]],[145,[[48,[47]]]],[146,[[48,[47]]]],[147,[[48,[47]]]],[144,[[49,[47]]]],[145,[[49,[47]]]],[146,[[49,[47]]]],[147,[[49,[47]]]],[144,46],[145,46],[146,46],[147,46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[37,37],[141,141],[142,142],[40,40],[143,143],[[]],[[]],[[]],[[]],[[]],[[37,37],14],[148],[149],0,[[],31],[144,31],[[],31],[145,31],[[],31],[146,31],[[],31],[[],31],[147,31],0,0,0,0,[[],144],[[],145],[[],146],[[],147],[23,142],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[[],[[16,[37]]]],[[],[[16,[142]]]],[[],[[16,[40]]]],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[[],33],[143,33],[[37,37],3],[[141,141],3],[[142,142],3],[[40,40],3],[[143,143],3],[[150,150],3],[[],3],[[],3],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[37,17],18],[[144,17],18],[[141,17],18],[[145,17],18],[[142,17],18],[[142,17],18],[[146,17],18],[[40,17],18],[[143,17],18],[[147,17],18],[[150,17],18],[[150,17],18],[[151,17],18],[[151,17],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[152,150],[153,151],[[]],[154,151],[155,[[16,[143,151]]]],[[[156,[155]]],[[16,[143,151]]]],[[],[[2,[36]]]],[143,[[2,[36]]]],[[],23],0,0,[37],[23,142],[[],37],[143,37],0,0,[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[145],[147],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[157],[[]],[158],[[]],[159],[[]],[160],[[]],[[],3],[143,3],[[],3],[143,3],[144,15],[145,15],[146,15],[147,15],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],40],[143,40],0,0,[[],52],0,[[23,19],142],[[],144],[[],145],[[],146],[[37,[76,[142]],141,40,[2,[58]]],143],[[],147],[[]],[[]],[[]],[[]],[[]],[161,2],[148,2],[162,2],[149,2],[[],15],[143,15],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[37,37],[[2,[14]]]],[42],[42],[144],[145],[146],[147],[[],37],[[144,15]],[[145,15]],[[146,15]],[[147,15]],[148,[[2,[142]]]],[149,[[2,[143]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37,16],[142,16],[40,16],[[]],[143],0,[144],[145],[146],[147],0,[150,[[2,[43]]]],[151,[[2,[43]]]],[[[76,[61]]],[[16,[143,151]]]],[[[164,[163]]],[[16,[143,151]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[144,53],30],[[145,53],30],[[146,53],30],[[147,53],30],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[[167,[165,166]]],[[16,[143]]]],[[[167,[23,166]]],[[16,[143]]]],[[[169,[168,166]]],[[16,[143]]]],[[[167,[168,166]]],[[16,[143]]]],[[[169,[170,166]]],[[16,[143]]]],[[[167,[170,166]]],[[16,[143]]]],[[[167,[171,166]]],[[16,[143]]]],[[[169,[172,166]]],[[16,[143]]]],[[[167,[172,166]]],[[16,[143]]]],[[[169,[61,166]]],[[16,[143]]]],[[[167,[61,166]]],[[16,[143]]]],[[[169,[58,166]]],[[16,[143]]]],[[[169,[165,166]]],[[16,[143]]]],[[[169,[23,166]]],[[16,[143]]]],[[[169,[171,166]]],[[16,[143]]]],[[[167,[173,166]]],[[16,[143]]]],[[[167,[135,166]]],[[16,[143]]]],[[[169,[173,166]]],[[16,[143]]]],[[],16],[[[167,[58,166]]],[[16,[143]]]],[[[169,[135,166]]],[[16,[143]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[144,[2,[[54,[141]]]]],30],[[145,[2,[[54,[142]]]]],30],[[146,[2,[[54,[40]]]]],30],[[147,[2,[[54,[143]]]]],30],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,0,[23,142],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[144,[[2,[55]]]],[145,[[2,[55]]]],[146,[[2,[55]]]],[147,[[2,[55]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23,142],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[1],[[[2,[174]]],[[2,[174]]]],[174,30],[175,46],[175,[[48,[47]]]],[175,[[49,[47]]]],[175,46],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[174,174],[[]],[176],[[],31],[175,31],0,[[],175],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[[174,174],3],[[],3],0,0,0,0,[[174,17],18],[[175,17],18],[[]],[[]],[[]],[[]],[[[156,[19]]],174],0,[[],15],[[],15],[[],15],[[],15],[175],[[]],[[]],[[]],[[]],[177],[[]],[175,15],0,[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[],52],[[[156,[19]],[2,[19]]],174],[[],175],[[]],[176,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[175],[[175,15]],[176,[[2,[174]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[175],[[]],[[175,53],30],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[175,[2,[[54,[174]]]]],30],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[175,[[2,[55]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],0,[[[2,[178]]],[[2,[178]]]],[[[2,[179]]],[[2,[179]]]],[[[2,[180]]],[[2,[180]]]],[178,30],[179,30],[180,30],[181,46],[182,46],[183,46],[181,[[48,[47]]]],[182,[[48,[47]]]],[183,[[48,[47]]]],[181,[[49,[47]]]],[182,[[49,[47]]]],[183,[[49,[47]]]],[181,46],[182,46],[183,46],[179,[[2,[58]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[178,184],[178,178],[179,179],[180,180],[[]],[[]],[[]],[185],[186],[181,31],[[],31],[182,31],[[],31],[183,31],[[],31],0,0,0,[[],181],[[],178],[[],182],[[],183],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[[],[[16,[178]]]],[[],[[16,[179]]]],[[],[[16,[180]]]],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[[178,178],3],[[179,179],3],[[180,180],3],0,0,0,0,0,0,0,0,[[181,17],18],[[178,17],18],[[182,17],18],[[179,17],18],[[183,17],18],[[180,17],18],[179,[[2,[58]]]],[179,187],[179,[[2,[58]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[181],[182],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[188],[[]],[189],[[]],[190],[[]],[181,15],[182,15],[183,15],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],52],[[],181],[[],182],[[],183],[[]],[[]],[[]],[184,178],[184,178],[185,2],[186,2],[191,2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[178,184],[179,121],[181],[182],[183],[[181,15]],[[182,15]],[[183,15]],[179,[[2,[121]]]],0,[185,[[2,[178]]]],[186,[[2,[179]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[178,16],[179,16],[180,16],[181],[182],[183],[[]],[[]],[[]],0,[[181,53],30],[[182,53],30],[[183,53],30],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[181,[2,[[54,[178]]]]],30],[[182,[2,[[54,[179]]]]],30],[[183,[2,[[54,[180]]]]],30],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[181,[[2,[55]]]],[182,[[2,[55]]]],[183,[[2,[55]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[1],[1],[1],[[],[[2,[187]]]],[[],[[2,[192]]]],[[],[[2,[193]]]],[187,30],[192,30],[193,30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[187,187],[192,192],[193,193],[[]],[[]],[[]],[[],31],[[],31],[[],31],[[],187],[[],192],[[],193],[15],[15],[15],[15],[15],[15],[[],[[16,[187]]]],[[],[[16,[192]]]],[[],[[16,[193]]]],[15],[15],[15],[[187,187],3],[[192,192],3],[[193,193],3],[[187,17],18],[[187,17],18],[[192,17],18],[[192,17],18],[[193,17],18],[[193,17],18],[[]],[[],187],[121,187],[[]],[57,192],[[],192],[[]],[187],[192],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[],52],[[],52],[[58,58,58],192],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[187,16],[192,16],[193,16],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[193,58],[[]],[[]],[[]],[[]],[[]],[[]],[187,58],[192,58],[193,58],[187,58],[192,58],[193,58],[192,58],[193,58],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[36,135],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[194,194],[195,195],[33,33],[36,36],[[]],[[]],[[]],[[]],[15],[15],[15],[15],[15],[15],[15],[15],[[],[[16,[194]]]],[[],[[16,[195]]]],[[],[[16,[33]]]],[[],[[16,[36]]]],[15],[15],[15],[15],[[194,194],3],[[195,195],3],[[33,33],3],[[36,36],3],[[],3],[[194,17],18],[[195,17],18],[[33,17],18],[[33,17],18],[[36,17],18],[[]],[[]],[[]],[[]],0,[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[194,16],[195,16],[33,16],[36,16],[33,23],[[]],[[]],[[]],[[]],[[],19],0,[36,[[2,[172]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[196],[197],[15,[[76,[60]]]],[15,[[76,[89]]]],[53,[[76,[89]]]],[15,[[76,[19]]]],[15,[[76,[115]]]],[15,[[76,[127]]]],[15,[[76,[192]]]],0,0,[[]],[[]],[[]],0,0,[[]],[[],2],[[],2],[15],[15],[15],[[39,198],199],0,[[]],[[],15],[[]],[[]],[[],2],[[]],[200,[[199,[[202,[[201,[200]]]]]]]],[[[202,[203]]],2],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[[204,[198]],8],199],[[]],[[]],[[]],0,[[]],[[],2],[[],2],[15],[15],[15],[[39,198],199],[[[204,[198]]],199],[[]],[[],15],[[]],[[],2],[[]],[198,[[199,[[204,[198]]]]]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],25],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[205,205],[206,206],[[]],[[]],[15],[15],[15],[15],[[[0,[207,208]]]],[15],[15],[[205,205],3],[[206,206],3],[[],3],[[],3],[206,23],[[205,17],18],[[206,17],18],[[]],[[]],[[],23],[[],23],[207,23],[205],[[[0,[207,208]]],205],[[[0,[207,208]]],206],[206],[205,23],[206,23],[[207,114],23],[[],15],[[],15],[[]],[[]],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[206,23],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[209,209],[210,210],[211,211],[[]],[[]],[[]],[[209,209],14],[[210,210],14],[15],[15],[15],[15],[15],[15],[[],[[16,[209]]]],[[],[[16,[210]]]],[15],[15],[15],[[209,209],3],[[210,210],3],[[211,211],3],[[],3],[[],3],[[],3],[211,23],[[209,17],18],[[209,17],18],[[210,17],18],[[211,17],18],[19,209],[[]],[20,209],[[]],[[]],[[],23],[[],23],[[],23],[209],[209,211],[210],[211],[209,211],[211,23],[[],15],[[],15],[[],15],[[]],[[]],[[]],[210,3],[211,3],[211,3],[210,15],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[209,209],[[2,[14]]]],[[210,210],[[2,[14]]]],[[]],[[]],[[]],[[]],[[]],[[]],[211,23],[209,16],[210,16],[[]],[[]],[[]],[[],19],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[212,212],[28,28],[[]],[[]],0,[212,31],[15],[15],[15],[15],[15],[15],[15],[15],[15],0,[[213,214],[[29,[[76,[212]]]]]],[[213,214],[[29,[26]]]],[[],215],[[28,52],[[2,[15]]]],[[27,17],18],[[27,17],18],[[212,17],18],[[28,17],18],[[28,17],18],[[]],[216,27],[217,27],[218,27],[[]],[[]],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[]],[[]],[[]],0,[[],52],[212,52],0,[[52,[219,[171]]],212],[[24,4,26,[76,[212]]],28],[[52,31],212],[[52,47],212],[28,15],[[212,15],[[2,[15]]]],[[28,15],[[2,[15]]]],[212,15],[28,15],[[]],[[]],[[]],[[]],[[]],[[]],[39],[42],[[]],[[]],[[]],[[]],[[]],[[]],[27,[[2,[43]]]],0,[[]],[[]],[[],19],[[],19],[28,29],[24,[[29,[28]]]],[24,[[29,[28]]]],[24,[[29,[28]]]],[[],16],[76,[[29,[212]]]],[[[76,[220]]],[[29,[212]]]],[[],[[29,[212]]]],[[],16],[[],16],[21,[[29,[28]]]],[[],16],[[],16],[[],16],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],0,[212,[[49,[47]]]],[212,219],[[]],[[]],[[]],[[[49,[47]]],[[219,[171]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[[]],[[]],[[]],[[]],[[],2],[[],2],[221,221],[[]],[[221,221],14],0,0,0,[15],[15],[[],[[16,[221]]]],[15],0,0,0,[[221,221],3],[[],3],[[221,17],18],[[221,17],18],[209,221],[[]],[19,221],[20,221],[[],23],[221],0,[[],15],[[]],[[],2],[[]],[[]],[[]],[20,[[16,[[76,[221]],218]]]],0,[[221,221],[[2,[14]]]],0,0,[[]],[[]],[221,16],[[]],[[],19],[[],16],[[],16],[[],25],[[]],[[]],[[]],[[]],[[]],0,0,[1],[52,20],[52,20],[[]],[52,20],[[]],[[]],[[]],[[],2],[[],2],[52,52],[[]],[[52,52],14],[52,20],[15],[15],[[],[[16,[52]]]],[15],[[52,52],3],[[52,20],3],[[],3],[[52,17],18],[[52,17],18],[[]],[20,52],[19,52],[52,20],[[],23],[52],[52,23],[[],15],[[]],[[],2],[[]],[20,52],[[]],[[]],[[52,52],[[2,[14]]]],[[]],[[]],[52,16],[52,20],[[]],[[],19],[[],16],[[],16],[[],25],[[]],[[]],[[]],[[]],[[]],0,[1],[[]],[[]],[[]],[[]],[[],2],[[],2],[222,222],[[]],[222,52],0,[15],[15],[[],[[16,[222]]]],[15],[222,4],0,[[222,222],3],[[],3],[[222,17],18],[[]],[[],23],[222],[[],15],[[]],[[],2],[[]],[[4,52],222],[[]],[[]],[[]],[[]],[222,16],[[]],[[],16],[[],16],[[],25],[[]],[[]],[[]],[[]],[[]],0,0,0,[1],[1],[4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[223,223],[4,4],[[]],[[]],[[4,4],14],[15],[15],[15],[15],[224,[[16,[4]]]],[15],[15],[[223,223],3],[[4,4],3],[[],3],[[],3],[[223,17],18],[[4,17],18],[[4,17],18],[[]],[[[76,[221]]],4],[[]],[225,4],[[],4],[20,4],[19,4],[53,4],[[],23],[[],23],[223],[4],[4,223],0,[223,23],[4,23],[[],15],[[],15],[[]],[[]],[[4,4],3],[[4,4],3],[223,3],[4,3],[223,3],[4,39],[[4,4],4],[4,[[2,[221]]]],[4,15],[[],2],[[],2],[[]],[[]],[[[76,[221]]],4],[[]],[[]],[[]],[[]],[4,[[2,[4]]]],[[4,4],[[2,[14]]]],0,[[],4],[[]],[[]],[[]],[[]],[[4,226],16],[[]],[[]],[[],19],[[],16],[[],16],[[],16],[[],16],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1],[225],[[]],[[]],[[]],[[]],[[],2],[[],2],[225,225],[[]],[[225,225],14],[15],[15],[[],[[16,[225]]]],[15],[[225,225],3],[[],3],[[225,17],18],[[225,17],18],[[]],[[],225],[[],23],[225],[[],15],[[]],[225,3],[225,39],[225,[[2,[221]]]],[225,15],[[],2],[[]],[[[76,[221]]],225],[[]],[[]],[225,[[2,[225]]]],[[225,225],[[2,[14]]]],0,[[225,221]],[[],225],[[]],[[]],[225,16],[[]],[[],19],[[],16],[[],16],[[],25],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],2],[[],2],[15],[15],[15],[[218,218],3],[[],3],[[218,17],18],[[218,17],18],[[]],[[],15],[[]],[[],2],[[]],[[]],[[]],[20,[[16,[[76,[221]],218]]]],[20,[[16,[221,218]]]],[42],[[]],[[]],[[],19],[[],16],[[],16],[[],25],[20,[[16,[19,20]]]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[1],[1],[[197,227]],[[197,227]],[227,173],[227,58],[227,135],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[197,197],[227,227],[[]],[[]],[[197,197],14],[[227,227],14],[15],[15],[15],[15],[[],[[16,[197]]]],[[],[[16,[227]]]],[15],[15],[[197,197],3],[[227,227],3],[[],3],[[],3],[[227,17],18],[[197,17],18],[[227,17],18],[197,19],[196,197],[228,197],[[]],[228,227],[196,227],[[]],[173,227],[173,227],[173,197],[135,197],[58,227],[173,197],[[],23],[[],23],[197],[227],[[],15],[[],15],[[]],[[]],[197,3],[197,3],[[[229,[197]],58],197],[[],2],[[],2],[[]],[[]],[197,173],[227,227],[[],197],[[]],[[]],[[]],[[]],[[197,197],[[2,[14]]]],[[227,227],[[2,[14]]]],[[]],[[]],[[]],[[]],[197,16],[227,16],[[197,197],227],[[197,227]],[197,[[2,[230]]]],[[]],[[]],[[],19],[231,[[16,[197]]]],[[],16],[230,[[16,[197]]]],[[],16],[[],16],[[],16],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[1],[1],0,[[],2],[[],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[26,26],[232,232],[[]],[[]],[[26,26],14],[[232,232],14],[[],31],[[],26],[15],[15],[15],[15],[[],[[16,[26]]]],[[],[[16,[232]]]],[15],[15],[[26,26],3],[[232,232],3],[[],3],[[],3],[[26,17],18],[[232,17],18],[[232,196],19],[[232,233],19],[[]],[[],26],[[]],[173,[[2,[232]]]],[53,26],[23,[[2,[232]]]],[[26,234],[[2,[196]]]],[[],23],[[],23],[26],[232],[232,23],[[],15],[[],15],[[26,234,196],[[2,[196]]]],[[]],[[]],[26],[26],[26,3],[26,3],[26,235],[[],2],[[],2],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[26,26],[[2,[14]]]],[[232,232],[[2,[14]]]],[[26,234],[[2,[196]]]],[[]],[[]],[[]],[[]],[26,16],[232,16],0,[[],26],0,[26,235],[26,235],[[]],[[]],[[],16],[[],16],[[],16],[[],16],0,[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[15],[15],[15],[15],[15],[15],[[]],[[]],[[],15],[[],15],[[]],[[]],[[]],[236],[[],2],[[],2],[[]],[[]],[237,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],16],[[],16],[[],16],[[],16],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[1],[196,196],[[196,228]],[[196,196]],[[196,196]],[196,58],[196,135],[196,173],[[]],[[]],[[]],[[]],[[],2],[[],2],[196,196],[[]],[[196,196],14],[15],[15],[[],[[16,[196]]]],[15],[[196,196],3],[[196,228],3],[[],3],[[196,17],18],[197,196],[[]],[173,196],[227,196],[173,196],[173,196],[173,196],[[],23],[196],[[],15],[[]],[196,3],[[],2],[[]],[196],[[]],[[]],[[196,196],[[2,[14]]]],[[196,228],[[2,[14]]]],[[]],[[]],[196,16],[[196,196]],[[196,228]],[[196,196]],[39,196],[[]],[[],16],[[],16],[[],25],[[]],[[]],[[]],[[]],[[]],0,0,[1],[1],[238,20],[238,20],[[]],[[]],[[]],[238,20],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[238,238],[234,234],[[]],[[]],[[238,238],14],[[234,234],14],[[],238],[[],234],[15],[238,20],[15],[15],[15],[[],[[16,[238]]]],[[],[[16,[234]]]],[15],[15],[[238,20],3],[[238,238],3],[[234,234],3],[[],3],[[],3],[[238,17],18],[[238,17],18],[[234,17],18],[[234,233],19],[[]],[19,238],[20,238],[[]],[[],23],[[],23],[238,23],[238],[234],[[],15],[[],15],[[]],[[]],[[],234],[[],2],[[],2],[[]],[[]],[234,238],0,[20,238],[[[156,[238]],232],234],[[[156,[238]]],234],[[[156,[238]]],234],[[]],[[]],[[]],[[]],[[238,238],[[2,[14]]]],[[234,234],[[2,[14]]]],[[]],[[]],[[]],[[]],[238,16],[234,16],[[]],[[]],[[],19],[[],16],[[],16],[[],16],[[],16],[234,232],0,[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[233,233],[239,239],[[]],[[]],[[233,196],3],[[239,228],3],[15],[15],[15],[15],[[],[[16,[233]]]],[[],[[16,[239]]]],[15],[15],[[233,233],3],[[239,239],3],[[],3],[[],3],[[233,17],18],[[239,17],18],[[]],[[]],[233,239],[[],15],[[],15],[[]],[[]],[[239,228],135],[239,3],[233,196],[239,228],[[239,135],228],[[],2],[[],2],[[]],[[]],0,0,0,0,[[196,196],233],[[[156,[228]],[156,[228]]],239],[[]],[[]],[[]],[[]],[[[156,[196]]],233],[[[156,[228]]],239],[[]],[[]],[[]],[[]],[233,16],[239,16],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1],[228,228],[[228,228]],[[228,196]],[[228,228]],[228,58],[228,135],[[]],[[]],[[]],[[]],[228,196],[[],2],[[],2],[228,228],[[]],[[228,228],14],[15],[15],[[],[[16,[228]]]],[15],[[228,196],3],[[228,228],3],[[],3],[228,196],[[228,17],18],[135,228],[[]],[58,228],[173,228],[227,228],[197,228],[196,228],[[],23],[228],[[],15],[[]],[[],2],[[]],[[228,135]],[228],[[]],[[]],[[228,196],[[2,[14]]]],[[228,228],[[2,[14]]]],[228,196],[[]],[[]],[228,16],[[228,228]],[[228,196]],[[228,228]],[39,228],[[]],[[],16],[[],16],[[],25],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"Private"],[4,"Option"],[15,"bool"],[3,"EntityPath"],[4,"PathOp"],[3,"RecordingId"],[3,"ApplicationId"],[4,"LogMsg"],[3,"BeginRecordingMsg"],[3,"RecordingInfo"],[3,"PythonVersion"],[4,"RecordingSource"],[3,"EntityPathOpMsg"],[4,"Ordering"],[15,"usize"],[4,"Result"],[3,"Formatter"],[6,"Result"],[3,"String"],[15,"str"],[3,"ArrowMsg"],[3,"Uuid"],[15,"u64"],[3,"MsgId"],[3,"TypeId"],[3,"TimePoint"],[4,"MsgBundleError"],[3,"MsgBundle"],[6,"Result"],[6,"Result"],[4,"DataType"],[3,"FIELDS"],[4,"TensorDataType"],[4,"FieldError"],[3,"TryFromSliceError"],[4,"TensorElement"],[3,"TensorId"],[3,"FastFixedSizeListArray"],[8,"Iterator"],[4,"TensorDataMeaning"],[3,"FastFixedSizeArrayIter"],[3,"Demand"],[8,"Error"],[3,"Arrow3D"],[3,"MutableArrow3DArray"],[8,"Any"],[8,"Array"],[3,"Arc"],[3,"Box"],[3,"Arrow3DArrayIterator"],[3,"Arrow3DArray"],[3,"ComponentName"],[8,"IntoIterator"],[8,"Borrow"],[3,"MutableBitmap"],[3,"Box3D"],[3,"Vec3"],[15,"f32"],[3,"ClassId"],[3,"ColorRGBA"],[15,"u8"],[3,"AnnotationInfo"],[3,"KeypointPairArrow"],[3,"ClassDescriptionArrow"],[3,"ClassMapElemArrow"],[3,"AnnotationContext"],[3,"MutableAnnotationInfoArray"],[3,"MutableKeypointPairArrowArray"],[3,"MutableClassDescriptionArrowArray"],[3,"MutableClassMapElemArrowArray"],[3,"ClassDescription"],[3,"AnnotationInfoArrayIterator"],[3,"KeypointPairArrowArrayIterator"],[3,"ClassDescriptionArrowArrayIterator"],[3,"ClassMapElemArrowArrayIterator"],[3,"Vec"],[3,"AnnotationInfoArray"],[3,"KeypointPairArrowArray"],[3,"ClassDescriptionArrowArray"],[3,"ClassMapElemArrowArray"],[3,"ViewCoordinates"],[3,"SignedAxis3"],[4,"ViewDir"],[4,"Axis3"],[4,"Sign"],[4,"Handedness"],[3,"Mat3"],[6,"Result"],[3,"InstanceKey"],[3,"KeypointId"],[3,"Label"],[3,"LineStrip2D"],[3,"LineStrip3D"],[3,"Mat3x3"],[3,"RawMesh3D"],[3,"EncodedMesh3DArrow"],[4,"MeshFormat"],[4,"Mesh3D"],[3,"EncodedMesh3D"],[3,"MutableRawMesh3DArray"],[3,"MutableEncodedMesh3DArrowArray"],[3,"MutableMeshFormatArray"],[3,"MutableMesh3DArray"],[3,"MeshId"],[3,"RawMesh3DArrayIterator"],[3,"EncodedMesh3DArrowArrayIterator"],[4,"RawMeshError"],[3,"RawMesh3DArray"],[3,"EncodedMesh3DArrowArray"],[3,"MeshFormatArray"],[3,"Mesh3DArray"],[3,"MeshFormatArrayIterator"],[3,"Mesh3DArrayIterator"],[15,"u128"],[3,"Point2D"],[3,"Point3D"],[3,"MutablePoint2DArray"],[3,"MutablePoint3DArray"],[3,"Point2DArrayIterator"],[3,"Point3DArrayIterator"],[3,"Vec2"],[3,"Point2DArray"],[3,"Point3DArray"],[3,"Quaternion"],[3,"Quat"],[3,"Radius"],[4,"Rect2D"],[3,"MutableRect2DArray"],[3,"Rect2DArray"],[3,"Rect2DArrayIterator"],[3,"Scalar"],[3,"ScalarPlotProps"],[3,"MutableScalarPlotPropsArray"],[3,"ScalarPlotPropsArrayIterator"],[15,"f64"],[3,"ScalarPlotPropsArray"],[3,"Size3D"],[3,"MutableSize3DArray"],[3,"Size3DArrayIterator"],[3,"Size3DArray"],[4,"TensorData"],[3,"TensorDimension"],[3,"Tensor"],[3,"MutableTensorDataArray"],[3,"MutableTensorDimensionArray"],[3,"MutableTensorDataMeaningArray"],[3,"MutableTensorArray"],[3,"TensorDimensionArrayIterator"],[3,"TensorArrayIterator"],[4,"TensorCastError"],[4,"ImageError"],[3,"ShapeError"],[4,"ImageError"],[3,"Error"],[4,"DynamicImage"],[8,"Into"],[3,"TensorDataArray"],[3,"TensorDimensionArray"],[3,"TensorDataMeaningArray"],[3,"TensorArray"],[3,"TensorDataArrayIterator"],[3,"TensorDataMeaningArrayIterator"],[3,"Path"],[8,"AsRef"],[15,"i8"],[8,"Dimension"],[6,"ArrayView"],[15,"i16"],[6,"Array"],[15,"u32"],[15,"i32"],[15,"u16"],[15,"i64"],[3,"TextEntry"],[3,"MutableTextEntryArray"],[3,"TextEntryArrayIterator"],[3,"TextEntryArray"],[3,"Rigid3"],[3,"Pinhole"],[4,"Transform"],[3,"MutableRigid3Array"],[3,"MutablePinholeArray"],[3,"MutableTransformArray"],[3,"IsoTransform"],[3,"Rigid3ArrayIterator"],[3,"PinholeArrayIterator"],[3,"Vec2D"],[3,"Rigid3Array"],[3,"PinholeArray"],[3,"TransformArray"],[3,"TransformArrayIterator"],[3,"Vec3D"],[3,"Vec4D"],[3,"BBox2D"],[3,"Box3"],[3,"TimeInt"],[3,"Time"],[8,"Write"],[6,"Result"],[8,"Read"],[3,"BufReader"],[3,"Decoder"],[8,"BufRead"],[3,"Encoder"],[3,"Hash64"],[3,"Hash128"],[8,"Hash"],[8,"Copy"],[4,"Index"],[4,"BatchIndex"],[3,"IndexHash"],[3,"ComponentBundle"],[3,"Schema"],[3,"Chunk"],[3,"Field"],[4,"Infallible"],[4,"Error"],[4,"PathParseError"],[3,"ListArray"],[8,"SerializableComponent"],[4,"EntityPathPart"],[3,"ComponentPath"],[3,"EntityPathHash"],[8,"Deserializer"],[3,"EntityPathImpl"],[8,"Serializer"],[3,"Duration"],[3,"TimeReal"],[3,"RangeInclusive"],[3,"OffsetDateTime"],[3,"SystemTime"],[4,"TimeType"],[3,"TimeRange"],[3,"Timeline"],[8,"ExactSizeIterator"],[3,"TimePointArray"],[3,"TimePointIterator"],[3,"TimelineName"],[3,"TimeRangeF"],[8,"TensorDataTypeTrait"],[13,"RustSdk"],[3,"FixedSizeArrayField"],[8,"TensorTrait"],[13,"BadTensorShape"],[8,"Component"],[13,"BadEscape"]]},\
"re_memory":{"doc":"Run-time memory tracking and profiling.","t":[2,3,3,3,3,18,11,0,11,0,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,12,0,0,0,12,12,12,11,11,11,11,11,0,3,3,7,7,3,17,17,7,17,17,3,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,5,11,11,11,11,5,12,11,11,5,5,12,12,11,5,12,12,12,11,12,12,12,5,11,11,11,11,11,11,11,11,5,11,11,11,11,12,12,11,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,5,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,12,11,11,11,11,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,12,12,12,11,11,11,11,12,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,3,11,11,11,5,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,5],"n":["AccountingAllocator","CountAndSize","MemoryHistory","MemoryLimit","MemoryUse","ZERO","__clone_box","accounting_allocator","add","allocation_tracker","borrow","borrow_mut","clone","clone_into","count","counted","counted","counted_gpu","counted_store","default","eq","equivalent","fmt","from","get_hash","hash","into","limit","memory_history","memory_limit","memory_use","resident","resident","size","sub","to_owned","try_from","try_into","type_id","util","AccountingAllocator","AtomicCountAndSize","BIG_ALLOCATION_TRACKER","GLOBAL_STATS","GlobalStats","IS_TRHEAD_IN_ALLOCATION_TRACKER","MAX_CALLSTACKS","MEDIUM_ALLOCATION_TRACKER","MEDIUM_SIZE","SMALL_SIZE","TrackingStatistics","add","alloc","alloc_zeroed","allocator","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","count","dealloc","default","from","from","from","from","fully_tracked","fully_tracked","global_allocs","into","into","into","into","is_tracking_callstacks","live","load","new","note_alloc","note_dealloc","overhead","overhead","realloc","set_tracking_callstacks","size","stochastically_tracked","stochastically_tracked","sub","top_callstacks","track_callstacks","track_size_threshold","tracking_stats","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","turn_on_tracking_if_env_var","type_id","type_id","type_id","type_id","untracked","untracked","zero","AllocationTracker","BacktraceHash","CallstackStatistics","PtrHash","ReadableBacktrace","__clone_box","__clone_box","__clone_box","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callstack_stats","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","equivalent","equivalent","extant","fmt","fmt","fmt","format_backtrace","from","from","from","from","from","get_hash","get_hash","hash","hash","hash_backtrace","into","into","into","into","into","live_allocs","new","new","on_alloc","on_dealloc","readable","readable_backtrace","readable_backtraces","should_sample","stochastic_rate","stochastic_rate","to_owned","to_owned","to_owned","to_owned","to_string","top_callstacks","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","with_stochastic_rate","MemoryHistory","borrow","borrow_mut","capture","counted","counted_gpu","counted_store","default","from","into","is_empty","resident","try_from","try_into","type_id","MemoryLimit","__clone_box","borrow","borrow_mut","clone","clone_into","default","eq","equivalent","fmt","from","into","is_exceeded_by","limit","parse","to_owned","try_from","try_into","type_id","MemoryUse","__clone_box","borrow","borrow_mut","bytes_resident","capture","clone","clone_into","counted","eq","equivalent","fmt","from","into","resident","sub","to_owned","try_from","try_into","type_id","sec_since_start"],"q":["re_memory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_memory::accounting_allocator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_memory::allocation_tracker","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_memory::memory_history","","","","","","","","","","","","","","","re_memory::memory_limit","","","","","","","","","","","","","","","","","","","re_memory::memory_use","","","","","","","","","","","","","","","","","","","","re_memory::util"],"d":["","Number of allocation and their total size.","Tracks memory use over time.","","","","","Track allocations and memory use.","Add an allocation.","","","","","","Number of allocations.","Bytes used by the application according to our own memory …","Bytes used by the application according to our own memory …","VRAM bytes used by the application according to its own …","Bytes used by the datastore according to its own …","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Limit in bytes.","","","","Bytes allocated by the application according to operating …","Bytes allocated by the application according to operating …","Number of bytes.","Remove an allocation.","","","","","","Install this as the global allocator to get memory usage …","","Statistics about extant allocations larger than <code>MEDIUM_SIZE</code>…","","","Used to prevent re-entrancy when tracking allocations.","","Statistics about some extant allocations larger than  …","Allocations smaller than are stochastically sampled.","Only track allocations of at least this size.","","Add an allocation.","","","","","","","","","","","","Number of allocations.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","All live allocations tracked by the large <code>AllocationTracker</code>…","All live largish allocations, fully tracked.","Total number of live allocations, and the number of live …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Are we doing (slightly expensive) tracking of the …","All extant allocations.","","","","","The live allocations done by <code>AllocationTracker</code> used for …","All live allocations used for internal book-keeping.","","Should we do (slightly expensive) tracking of the …","Number of bytes.","All live allocations sampled by the stochastic medium …","All live allocations sampled of medium size, …","Remove an allocation.","The most popular callstacks.","Do detailed statistics of allocations? This is expensive, …","Allocations smaller than these are left untracked.","Gather statistics from the live tracking, if enabled.","","","","","","","","","Turn on callstack tracking (slightly expensive) if a given …","","","","","The live allocations not tracked by any <code>AllocationTracker</code>.","All live allocations that we are NOT tracking (because …","","Track the callstacks of allocations.","","Per-callstack statistics.","A hash of a pointer address.","Formatted <code>Backtrace</code>.","","","","","","","","","","","","","","","How much memory is allocated by each callstack?","","","","","","","","","","","","","Live allocations at this callstack.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Current live allocations.","","","","","Human-readable backtrace.","For when we print this statistic.","De-duplicated readable backtraces.","","Sample every N allocations. Must be power-of-two.","If this was stochastically sampled - at what rate?","","","","","","Return the <code>n</code> callstacks that currently is using the most …","","","","","","","","","","","","","","","","","Tracks memory use over time.","","","Add data to history","Bytes used by the application according to our own memory …","VRAM bytes used by the application according to its own …","Bytes used by the datastore according to its own …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Bytes allocated by the application according to operating …","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns how large fraction of memory we should free to go …","Limit in bytes.","","","","","","","","","","According to the OS. This is what matters.","","","","Bytes used by the application according to our own memory …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Bytes allocated by the application according to operating …","","","","","","Returns monotonically increasing time in seconds."],"i":[0,0,0,0,0,2,2,0,2,0,2,2,2,2,2,28,31,28,28,2,2,2,2,2,2,2,2,30,0,0,0,28,31,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,10,12,12,12,10,34,17,12,10,34,17,12,10,12,12,10,34,17,12,34,17,0,10,34,17,12,0,34,10,12,0,0,34,17,12,0,10,34,17,10,17,34,17,0,10,34,17,12,10,34,17,12,0,10,34,17,12,34,17,10,0,0,0,0,0,19,20,21,22,25,19,20,21,22,25,19,20,21,22,25,19,20,21,22,19,20,21,22,19,20,19,20,22,19,20,21,0,25,19,20,21,22,19,20,19,20,0,25,19,20,21,22,25,19,21,25,25,21,22,25,25,25,22,19,20,21,22,21,25,25,19,20,21,22,25,19,20,21,22,25,19,20,21,22,25,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,31,31,31,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0],"f":[0,0,0,0,0,0,[1],0,[[2,3]],0,[[]],[[]],[2,2],[[]],0,0,0,0,0,[[],2],[[2,2],4],[[],4],[[2,5],6],[[]],[[],7],[2],[[]],0,0,0,0,0,0,0,[[2,3]],[[]],[[],8],[[],8],[[],9],0,0,0,0,0,0,0,0,0,0,0,0,[[10,3]],[[[12,[11]],13],14],[[[12,[11]],13],14],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[12,[11]],14,13]],[[],[[12,[15]]]],[[]],[[]],[[]],[[]],0,0,[[],[[16,[2]]]],[[]],[[]],[[]],[[]],[[],4],0,[10,2],[[],12],[[14,3]],[[14,3]],0,0,[[[12,[11]],14,13,3],14],[4],0,0,0,[[10,3]],0,0,0,[[],[[16,[17]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[18],[[],9],[[],9],[[],9],[[],9],0,0,[[],10],0,0,0,0,0,[1],[1],[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[19,19],[20,20],[21,21],[22,22],[[]],[[]],[[]],[[]],[[19,19],4],[[20,20],4],[[],4],[[],4],0,[[19,5],6],[[20,5],6],[[21,5],6],[23,[[24,[18]]]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[19],[20],[23,20],[[]],[[]],[[]],[[]],[[]],0,[14,19],[23,21],[[25,19,3]],[[25,19,3]],0,0,0,[[25,19],4],0,0,[[]],[[]],[[]],[[]],[[],26],[[25,3],[[27,[22]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[3,25],0,[[]],[[]],[[28,[16,[29]],[16,[29]]]],0,0,0,[[],28],[[]],[[]],[28,4],0,[[],8],[[],8],[[],9],0,[1],[[]],[[]],[30,30],[[]],[[],30],[[30,30],4],[[],4],[[30,5],6],[[]],[[]],[[30,31],[[16,[32]]]],0,[18,[[8,[30,26]]]],[[]],[[],8],[[],8],[[],9],0,[1],[[]],[[]],[[],[[16,[29]]]],[[],31],[31,31],[[]],0,[[31,31],4],[[],4],[[31,5],6],[[]],[[]],0,[[31,31]],[[]],[[],8],[[],8],[[],9],[[],33]],"p":[[3,"Private"],[3,"CountAndSize"],[15,"usize"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"u64"],[4,"Result"],[3,"TypeId"],[3,"AtomicCountAndSize"],[8,"GlobalAlloc"],[3,"AccountingAllocator"],[3,"Layout"],[15,"u8"],[8,"Default"],[4,"Option"],[3,"TrackingStatistics"],[15,"str"],[3,"PtrHash"],[3,"BacktraceHash"],[3,"ReadableBacktrace"],[3,"CallstackStatistics"],[3,"Backtrace"],[3,"Arc"],[3,"AllocationTracker"],[3,"String"],[3,"Vec"],[3,"MemoryHistory"],[15,"i64"],[3,"MemoryLimit"],[3,"MemoryUse"],[15,"f32"],[15,"f64"],[3,"GlobalStats"]]},\
"re_query":{"doc":"Provide query-centric access to the <code>re_arrow_store</code>.","t":[13,13,13,3,3,13,13,4,6,13,11,11,11,11,11,11,12,0,11,11,11,0,11,11,11,11,11,5,11,12,11,11,11,12,11,11,12,12,11,0,5,5,0,5,11,11,11,11,11,11,11,11,11,0,12,0,11,11,11,12,12,5,5,5,5,5,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,14],"n":["ArrowError","BadAccess","ComponentNotFound","ComponentWithInstances","EntityView","PolarsError","PrimaryNotFound","QueryError","Result","TypeMismatch","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","components","dataframe_util","deref","deref_mut","drop","entity_view","fmt","fmt","from","from","from","get_component_with_instances","init","instance_keys","into","lossless_try_into","lossy_into","name","overflowing_as","overflowing_cast_from","phantom","primary","provide","query","query_entity_with_primary","query_primary_with_history","range","range_entity_with_primary","saturating_as","saturating_cast_from","source","to_string","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","util","values","visit","vzip","wrapping_as","wrapping_cast_from","actual","requested","df_builder1","df_builder2","df_builder3","fix_polars_nulls","iter_column","ComponentJoinedIterator","ComponentWithInstances","EntityView","__clone_box","__clone_box","as_df","as_df1","as_df2","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","component_instance_key_iter","component_value_iter","components","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","from","from","from","from_native","from_native","from_native2","has_component","init","init","init","instance_keys","into","into","into","into_iter","is_empty","iter_component","iter_instance_keys","iter_instance_keys","iter_primary","iter_primary_flattened","iter_values","len","lookup","lookup_arrow","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","name","name","next","next_component_instance_key","num_instances","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","phantom","primary","primary_instance_key_iter","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","splatted_component_value","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","values","visit1","visit2","visit3","visit4","visit5","visit6","visit7","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","__populate_example_store","get_component_with_instances","query_entity_with_primary","range_entity_with_primary","query_primary_with_history","create_visitor"],"q":["re_query","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_query::QueryError","","re_query::dataframe_util","","","","","re_query::entity_view","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_query::query","","","re_query::range","re_query::util","re_query::visit"],"d":["","","","A type-erased array of <code>Component</code> values and the …","A view of an entity at a particular point in time returned …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Retrieves a <code>ComponentWithInstances</code> from the <code>DataStore</code>.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Retrieve an <code>EntityView</code> from the <code>DataStore</code>","Either dispatch to <code>query_entity_with_primary</code> or …","","Iterates over the rows of any number of components and …","","","","","","","","","","","","Visit the primary and joined components of an <code>EntityView</code>","","","","","","","","","Make it so that our arrays can be deserialized again by …","Iterator for a single column in a dataframe as the …","Iterator over a single component joined onto a primary …","A type-erased array of <code>Component</code> values and the …","A view of an entity at a particular point in time returned …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Produce a <code>ComponentWithInstances</code> from native component …","Helper function to produce an <code>EntityView</code> from rust-native …","Helper function to produce an <code>EntityView</code> from rust-native …","Check if the entity has a component and its not empty","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Iterate over the values of a <code>Component</code>.","Iterate over the instance keys","Iterate over the instance keys","Iterate over the primary component values.","Iterate over the flattened list of primary component …","Iterate over the values and convert them to a native …","Number of values. 1 for splats.","Look up the value that corresponds to a given <code>InstanceKey</code> …","Look up the value that corresponds to a given <code>InstanceKey</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Visit the primary component of an <code>EntityView</code>. See …","Visit the primary component of an <code>EntityView</code>. See …","Visit the primary component of an <code>EntityView</code>. See …","Visit the primary component of an <code>EntityView</code>. See …","Visit the primary component of an <code>EntityView</code>. See …","Visit the primary component of an <code>EntityView</code>. See …","Visit the primary component of an <code>EntityView</code>. See …","","","","","","","","","","Helper used to create an example store we can use for …","Retrieves a <code>ComponentWithInstances</code> from the <code>DataStore</code>.","Retrieve an <code>EntityView</code> from the <code>DataStore</code>","Iterates over the rows of any number of components and …","Either dispatch to <code>query_entity_with_primary</code> or …",""],"i":[3,3,3,0,0,3,3,0,0,3,3,3,3,3,3,3,16,0,3,3,3,0,3,3,3,3,3,0,3,12,3,3,3,12,3,3,16,16,3,0,0,0,0,0,3,3,3,3,3,3,3,3,3,0,12,0,3,3,3,39,39,0,0,0,0,0,0,0,0,12,16,12,16,16,37,12,16,37,12,16,37,12,16,37,12,16,37,12,16,37,12,16,12,16,12,16,37,37,16,37,12,16,37,12,16,37,12,16,12,16,16,37,12,16,12,16,16,16,37,12,16,12,37,12,16,37,12,16,12,16,16,16,12,12,12,12,37,12,16,37,12,16,12,12,37,37,16,37,12,16,37,12,16,16,16,37,37,12,16,37,12,16,37,12,16,16,37,12,16,37,12,16,37,12,16,37,12,16,37,12,16,12,16,16,16,16,16,16,16,37,12,16,37,12,16,37,12,16,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],1],[[],1],0,0,[2],[2],[2],0,[[3,4],5],[[3,4],5],[[]],[6,3],[7,3],[[8,9,10,11],[[13,[12]]]],[[],2],0,[[]],[[],1],[[]],0,[[]],[[]],0,0,[14],0,[[8,9,10],[[13,[[16,[15]]]]]],[[8,17,18,19,10],[[13,[20]]]],0,[[8,21,10],20],[[]],[[]],[3,[[1,[22]]]],[[],23],[[],24],[[],24],[[],25],[[]],[[]],0,0,0,[[]],[[]],[[]],0,0,[26,[[13,[27]]]],[[26,26],[[13,[27]]]],[[26,26,26],[[13,[27]]]],[28,[[29,[28]]]],[27,20],0,0,0,[30],[30],[12,[[13,[27]]]],[16,[[13,[27]]]],[16,[[13,[27]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[12,12],[[[16,[[0,[31,15]]]]],[[16,[[0,[31,15]]]]]],[[]],[[]],0,0,0,[2],[2],[2],[2],[2],[2],[2],[2],[2],[[12,4],5],[[[16,[[0,[32,15]]]],4],5],[[[16,[15]],4],5],[[]],[[]],[[]],[[[1,[26]],26],[[13,[12]]]],[[],[[13,[[16,[[0,[33,34]]]]]]]],[[],[[13,[[16,[[0,[33,34]]]]]]]],[[[16,[[0,[33,34]]]]],35],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],[[]],[12,35],[[[16,[[0,[33,34]]]]],[[13,[20]]]],[12,[[13,[20]]]],[[[16,[[0,[33,34]]]]],[[13,[20]]]],[[[16,[[0,[33,34]]]]],[[13,[20]]]],[[[16,[[0,[33,34]]]]],20],[12,[[13,[20]]]],[12,2],[[12,36],[[13,[34]]]],[[12,36],[[1,[[29,[28]]]]]],[[],1],[[],1],[[],1],[[]],[[]],[[]],[12,11],0,[37,[[1,[1]]]],0,[16,2],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[],23],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[16,[[0,[33,34]]]],38],13],[[[16,[[0,[33,34]]]],38],13],[[[16,[[0,[33,34]]]],38],13],[[[16,[[0,[33,34]]]],38],13],[[[16,[[0,[33,34]]]],38],13],[[[16,[[0,[33,34]]]],38],13],[[[16,[[0,[33,34]]]],38],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[8,9,10,11],[[13,[12]]]],[[8,9,10],[[13,[[16,[15]]]]]],[[8,21,10],20],[[8,17,18,19,10],[[13,[20]]]],0],"p":[[4,"Option"],[15,"usize"],[4,"QueryError"],[3,"Formatter"],[6,"Result"],[4,"PolarsError"],[4,"Error"],[3,"DataStore"],[3,"LatestAtQuery"],[3,"EntityPath"],[3,"ComponentName"],[3,"ComponentWithInstances"],[6,"Result"],[3,"Demand"],[8,"Component"],[3,"EntityView"],[3,"Timeline"],[3,"TimeInt"],[3,"ExtraQueryHistory"],[8,"Iterator"],[3,"RangeQuery"],[8,"Error"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"Vec"],[3,"DataFrame"],[8,"Array"],[3,"Box"],[3,"Private"],[8,"Clone"],[8,"Debug"],[8,"SerializableComponent"],[8,"DeserializableComponent"],[15,"bool"],[3,"InstanceKey"],[3,"ComponentJoinedIterator"],[8,"FnMut"],[13,"TypeMismatch"]]},\
"re_renderer":{"doc":"Rerun’s renderer.","t":[2,18,18,18,18,18,6,3,4,13,13,13,13,13,18,18,18,18,18,3,6,3,3,8,18,18,18,18,13,3,18,18,18,18,18,18,3,3,3,3,18,18,6,3,3,3,3,18,18,18,18,18,3,18,11,11,11,11,12,11,11,11,0,11,11,12,12,11,11,11,11,10,11,11,11,11,12,0,5,5,5,5,5,5,0,0,12,0,11,11,0,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,0,12,10,0,0,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,5,11,11,0,12,5,11,11,0,14,11,11,11,11,12,11,11,11,11,11,11,11,11,12,0,11,0,12,11,11,11,5,12,12,12,12,12,12,12,12,12,0,12,11,11,10,0,12,12,0,12,11,11,12,0,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,12,12,0,12,0,0,2,2,0,2,2,0,3,3,3,18,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,18,2,2,3,12,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,4,13,13,13,13,13,13,11,11,11,11,11,11,5,5,5,5,5,5,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,5,11,11,11,11,11,11,11,11,11,3,18,3,18,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,6,8,3,3,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,14,11,11,11,11,11,12,14,11,11,11,11,11,11,5,11,11,3,3,3,18,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,0,7,3,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,8,7,3,3,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,11,11,11,5,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,3,3,11,12,12,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,12,12,11,12,11,11,11,11,11,11,11,11,12,5,0,0,5,5,5,5,5,5,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,3,3,3,3,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,3,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,11,11,11,11,11,5,3,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,13,13,3,4,3,3,8,4,13,3,3,3,3,3,3,13,13,3,3,13,13,13,13,3,3,3,4,3,3,8,16,16,3,4,4,3,13,11,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,12,12,0,10,12,12,0,12,12,12,11,11,11,10,11,11,11,12,12,12,12,11,11,0,11,12,11,11,12,11,12,12,12,0,12,0,12,11,0,12,12,12,12,12,12,0,12,12,0,12,12,12,11,12,11,11,11,11,12,12,12,3,3,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,3,4,3,3,13,13,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,12,12,12,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,18,18,18,18,13,17,3,3,4,3,3,3,3,18,18,18,17,13,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,3,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,12,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,17,18,18,13,3,3,3,3,4,3,3,11,11,11,11,12,12,12,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,13,13,13,13,3,3,4,4,3,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,12,11,11,11,11,12,12,12,11,11,11,11,12,11,12,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,13,13,6,3,13,13,3,13,4,4,4,13,13,13,3,3,12,12,12,12,12,12,12,0,12,0,0,12,12,12,12,12,12,6,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,4,4,3,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,18,18,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,6,18,18,18,18,18,13,13,4,13,4,3,6,3,13,3,3,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,0,12,0,12,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,12,12,12,12,12,12,12,12,0,12,0,12,0,0,12,0,12,0,11,0,12,12,11,12,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,4,13,13,3,3,3,13,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,6,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,8,12,11,10,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,12,11,10,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,13,4,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,6,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11],"n":["AutoSizeConfig","BLACK","BLACK","BLUE","BLUE","BROWN","Buffer","Color32","ColorMap","ColorMapInferno","ColorMapMagma","ColorMapPlasma","ColorMapTurbo","ColorMapViridis","DARK_BLUE","DARK_GRAY","DARK_GREEN","DARK_RED","DEBUG_COLOR","DebugLabel","DepthOffset","FileResolver","FileServer","FileSystem","GOLD","GRAY","GREEN","GREEN","Grayscale","ImportClause","KHAKI","LIGHT_BLUE","LIGHT_GRAY","LIGHT_GREEN","LIGHT_RED","LIGHT_YELLOW","LineStripBuilder","LineStripSeriesBuilder","PointCloudBatchBuilder","PointCloudBuilder","RED","RED","RecommendedFileResolver","RenderContext","Rgba","SearchPath","Size","TEMPORARY_COLOR","TRANSPARENT","TRANSPARENT","WHITE","WHITE","WgpuResourcePoolStatistics","YELLOW","__clone_box","__clone_box","a","a","active_frame","add","additive","additive","allocator","b","b","batches","batches","borrow","borrow","borrow_mut","borrow_mut","canonicalize","clone","clone","clone_into","clone_into","color_buffer","colormap","colormap_inferno_srgb","colormap_magma_srgb","colormap_plasma_srgb","colormap_srgb","colormap_turbo_srgb","colormap_viridis_srgb","config","context","cpu_write_gpu_read_belt","debug_label","default","default","depth_offset","deref","deref","deref_mut","deref_mut","deserialize","deserialize","device","dirs","downcast","downcast","drop","drop","eq","eq","equivalent","err_tracker","error_tracker","events_rx","exists","file_resolver","file_server","file_system","file_watch_count","fmt","fmt","from","from","from","from","from","from","from","from","from_additive_luminance","from_black_alpha","from_black_alpha","from_gray","from_gray","from_luminance_alpha","from_rgb","from_rgb","from_rgb_additive","from_rgba_premultiplied","from_rgba_premultiplied","from_rgba_unmultiplied","from_rgba_unmultiplied","from_srgba_premultiplied","from_srgba_unmultiplied","from_white_alpha","from_white_alpha","fs","g","g","gamma_multiply","get_filesystem","get_hash","get_hash","global_bindings","gpu_resources","grayscale_srgb","hash","hash","importer","include_file","index","index","index_mut","index_mut","inflight_queue_submissions","init","init","intensity","into","into","is_opaque","is_valid_bit_pattern","is_valid_bit_pattern","label","line_strip_builder","linear_multiply","mesh","mesh_manager","mul","mul","multiply","new_recommended_file_resolver","num_bind_group_layouts","num_bind_groups","num_buffers","num_pipeline_layouts","num_render_pipelines","num_samplers","num_shader_modules","num_textures","path","point_cloud_builder","queue","r","r","read_to_string","renderer","renderers","resolver","resource_managers","search_path","serialize","serialize","shared_renderer_data","size","strip_user_data","strips","strips","texture_manager_2d","to_array","to_array","to_normalized_gamma_f32","to_opaque","to_opaque","to_owned","to_owned","to_rgba_unmultiplied","to_srgba_unmultiplied","to_srgba_unmultiplied","to_tuple","to_tuple","total_buffer_size_in_bytes","total_texture_size_in_bytes","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","user_data","user_data","vertices","vertices","view_builder","watcher","wgpu_buffer_types","wgpu_resources","CpuWriteGpuReadBelt","CpuWriteGpuReadBuffer","cpu_write_gpu_read_belt","create_and_fill_uniform_buffer","create_and_fill_uniform_buffer_batch","uniform_buffer_fill","Chunk","CpuWriteGpuReadBelt","CpuWriteGpuReadBuffer","MIN_ALIGNMENT","_type","active_chunks","after_queue_submit","allocate","allocate_aligned","as_slice","before_queue_submit","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buffer","byte_offset_in_chunk_buffer","chunk_buffer","chunk_size","closed_chunks","copy_to_buffer","copy_to_texture","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","extend","extend_from_slice","fmt","free_chunks","from","from","from","init","init","init","into","into","into","new","num_written","push","receive_chunks","receiver","remaining_capacity","required_padding","sender","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unused_offset","unwritten_element_range","upcast","upcast","upcast","write_view","CHECK","CpuWriteGpuReadBelt","CpuWriteGpuReadBuffer","UniformBufferAlignmentCheck","_marker","borrow","borrow_mut","create_and_fill_uniform_buffer","create_and_fill_uniform_buffer_batch","deref","deref_mut","downcast","drop","from","init","into","try_from","try_into","type_id","upcast","ColorMap","ColorMapInferno","ColorMapMagma","ColorMapPlasma","ColorMapTurbo","ColorMapViridis","Grayscale","__clone_box","borrow","borrow_mut","clone","clone_into","cmp","colormap_inferno_srgb","colormap_magma_srgb","colormap_plasma_srgb","colormap_srgb","colormap_turbo_srgb","colormap_viridis_srgb","deref","deref_mut","downcast","drop","eq","equivalent","fmt","from","grayscale_srgb","init","into","partial_cmp","to_owned","try_from","try_into","type_id","upcast","HardwareTier","RenderContextConfig","Web","__clone_box","borrow","borrow","borrow_mut","borrow_mut","check_downlevel_capabilities","clone","clone_into","deref","deref","deref_mut","deref_mut","device_descriptor","downcast","downcast","drop","drop","features","fmt","from","from","hardware_tier","init","init","into","into","limits","output_format_color","required_downlevel_capabilities","supported_backends","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","ActiveFrameContext","CPU_WRITE_GPU_READ_BELT_DEFAULT_CHUNK_SIZE","FrameGlobalCommandEncoder","MAX_NUM_INFLIGHT_QUEUE_SUBMISSIONS","RenderContext","Renderers","SharedRendererData","active_frame","before_submit","begin_frame","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","config","cpu_write_gpu_read_belt","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","device","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","encoder","err_tracker","frame_index","from","from","from","from","from","get","get","get_or_create","global_bindings","gpu_resources","inflight_queue_submissions","init","init","init","init","init","into","into","into","into","into","mesh_manager","new","new","per_frame_data_helper","poll_device","queue","renderers","renderers","resolver","shared_renderer_data","texture_manager_2d","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","DebugLabel","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","downcast","drop","eq","equivalent","fmt","from","from","from","from","get","get_hash","hash","init","into","label","push_str","to_owned","try_from","try_into","type_id","upcast","DepthOffset","DedupableError","ErrorTracker","WrappedContextError","borrow","borrow","borrow_mut","borrow_mut","clear","clear_countdown","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","eq","equivalent","errors","fmt","from","from","get_hash","handle_error","hash","hash","impl_trait","init","init","into","into","tick","tick_nr","try_downcast","try_from","try_from","try_into","try_into","type_id","type_id","type_of_var","upcast","upcast","FileResolver","ImportClause","InterpolatedFile","PREFIX","RecommendedFileResolver","SearchPath","__clone_box","__clone_box","__clone_box","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","contents","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dirs","downcast","downcast","downcast","downcast","drop","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_env","from_str","from_str","fs","imports","init","init","init","init","insert","into","into","into","into","iter","new","new_recommended","path","populate","push","resolve_clause_path","search_path","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","with_search_path","FileServer","file_server_impl","FILE_SERVER","FileServer","borrow","borrow_mut","collect","deref","deref_mut","downcast","drop","events_rx","file_watch_count","from","get","get_mut","init","into","new","try_from","try_into","type_id","unwatch","upcast","watch","watcher","FileSystem","MEM_FILE_SYSTEM","MemFileSystem","OsFileSystem","borrow","borrow","borrow_mut","borrow_mut","canonicalize","canonicalize","canonicalize","create_dir_all","create_dir_all","create_dir_all","create_file","create_file","create_file","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","exists","exists","exists","files","from","from","get","get_filesystem","init","init","into","into","new_uninit","read_to_string","read_to_string","read_to_string","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","FrameUniformBuffer","GlobalBindings","__clone_box","auto_size_lines","auto_size_points","borrow","borrow","borrow_mut","borrow_mut","camera_forward","camera_position","clone","clone_into","create_bind_group","depth_offset_factor","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","from","from","init","init","into","into","is_valid_bit_pattern","layout","nearest_neighbor_sampler","new","pixel_world_size_from_camera_distance","pixels_from_point","projection_from_view","projection_from_world","tan_half_fov","to_owned","trilinear_sampler","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","view_from_world","calculate_bounding_box","gltf","obj","to_uniform_scale","gather_instances_recursive","import_mesh","load_gltf_from_buffer","map_format","load_obj_from_buffer","LineBatchBuilder","LineStripBuilder","LineStripSeriesBuilder","add_axis_aligned_rectangle_outline_2d","add_box_outline","add_rectangle_outline","add_rectangle_outline_2d","add_segment","add_segment_2d","add_segments","add_segments_2d","add_strip","add_strip_2d","add_vertices","batch","batch_mut","batches","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","color","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","drop","flags","from","from","from","init","init","init","into","into","into","is_empty","iter_strips_with_vertices","iter_vertices_by_batch","radius","strip_user_data","strips","strips","to_draw_data","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","user_data","user_data","vertices","world_from_obj","GpuMaterial","GpuMesh","Material","Mesh","__clone_box","__clone_box","__clone_box","__clone_box","albedo","albedo_multiplier","bind_group","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","from","from","from","from","gpu_data","index_buffer","index_buffer_range","index_range","index_range","indices","init","init","init","init","into","into","into","into","label","label","materials","materials","mesh_vertices","new","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vertex_buffer_combined","vertex_buffer_data_range","vertex_buffer_positions_range","vertex_data","vertex_positions","MaterialUniformBuffer","__clone_box","albedo_multiplier","borrow","borrow_mut","clone","clone_into","deref","deref_mut","downcast","drop","end_padding","from","init","into","is_valid_bit_pattern","to_owned","try_from","try_into","type_id","upcast","MeshVertexData","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","downcast","drop","fmt","from","init","into","is_valid_bit_pattern","next_free_shader_location","normal","texcoord","to_owned","try_from","try_into","type_id","upcast","vertex_buffer_layouts","PointBuilder","PointCloudBatchBuilder","PointCloudBuilder","PointsBuilder","add_point","add_point_2d","add_points","add_points_2d","batch","batch_mut","batches","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","color","color","color_buffer","colors","colors","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","extend_defaults","flags","from","from","from","from","init","init","init","init","into","into","into","into","iter_vertices_and_userdata_by_batch","iter_vertices_by_batch","max_points","new","radii","radius","to_draw_data","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","user_data","user_data","user_data","user_data","user_data","vertex","vertices","vertices","world_from_obj","Background","Compositing","DepthCloud","DepthCloudDepthData","DepthCloudDrawData","DepthCloudRenderer","DrawData","DrawPhase","F32","GenericSkyboxDrawData","LineBatchInfo","LineDrawData","LineStripFlags","LineStripInfo","LineVertex","Linear","Linear","MeshDrawData","MeshInstance","Nearest","Nearest","NumberOfColorsNotEqualNumberOfVertices","Opaque","PointCloudBatchFlags","PointCloudBatchInfo","PointCloudDrawData","PointCloudDrawDataError","PointCloudVertex","RectangleDrawData","Renderer","Renderer","RendererDrawData","TestTriangleDrawData","TextureFilterMag","TextureFilterMin","TexturedRect","U16","__clone_box","additive_tint","batches","batches","batches","bind_group_all_lines","bind_group_all_points","bind_group_layout","bind_groups","bind_groups","bits","bits","borrow","borrow_mut","clone","clone_into","color","colormap","compositor","create_renderer","depth_camera_extrinsics","depth_camera_intrinsics","depth_cloud","depth_data","depth_dimensions","depth_offset","deref","deref_mut","downcast","draw","drop","eq","equivalent","extent_u","extent_v","flags","flags","fmt","from","generic_skybox","get_hash","gpu_mesh","hash","init","instance_buffer","into","label","label","line_vertex_count","lines","mesh","mesh_renderer","multiplicative_tint","participated_phases","point_cloud","point_count","position","position","radius","radius","radius_scale","rectangles","render_pipeline","strip_index","test_triangle","texture","texture_filter_magnification","texture_filter_minification","to_owned","top_left_corner_position","try_from","try_into","type_id","upcast","world_from_mesh","world_from_obj","world_from_obj","Compositor","CompositorDrawData","__clone_box","bind_group","bind_group_layout","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create_renderer","deref","deref","deref_mut","deref_mut","downcast","downcast","draw","drop","drop","from","from","init","init","into","into","new","participated_phases","render_pipeline","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","DepthCloud","DepthCloudDepthData","DepthCloudDrawData","DepthCloudRenderer","F32","U16","__clone_box","__clone_box","bind_group_layout","bind_groups","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","colormap","create_and_upload_texture","create_renderer","default","default","depth_camera_extrinsics","depth_camera_intrinsics","depth_data","depth_dimensions","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","draw","drop","drop","drop","drop","fmt","from","from","from","from","gpu_data","init","init","init","init","into","into","into","into","new","radius_scale","render_pipeline","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","DepthCloudInfoUBO","__clone_box","borrow","borrow_mut","clone","clone_into","colormap","depth_camera_extrinsics","depth_camera_intrinsics","deref","deref_mut","downcast","drop","end_padding","from","init","into","is_valid_bit_pattern","radius_scale","to_owned","try_from","try_into","type_id","upcast","GenericSkybox","GenericSkyboxDrawData","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create_renderer","deref","deref","deref_mut","deref_mut","downcast","downcast","draw","drop","drop","from","from","init","init","into","into","new","participated_phases","render_pipeline","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","CAP_END_ROUND","CAP_END_TRIANGLE","CAP_START_ROUND","CAP_START_TRIANGLE","InvalidStripIndex","LINE_STRIP_TEXTURE_SIZE","LineBatchInfo","LineDrawData","LineDrawDataError","LineRenderer","LineStripBatch","LineStripFlags","LineStripInfo","MAX_NUM_STRIPS","MAX_NUM_VERTICES","NO_COLOR_GRADIENT","POSITION_TEXTURE_SIZE","PoolError","__clone_box","__clone_box","__clone_box","__clone_box","all","batches","bind_group","bind_group_all_lines","bind_group_layout_all_lines","bind_group_layout_batch","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","color","complement","contains","create_renderer","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw","drop","drop","drop","drop","drop","drop","drop","empty","eq","eq","equivalent","equivalent","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_hash","get_triangle_cap_tip_length","gpu_data","hash","init","init","init","init","init","init","init","insert","intersection","intersects","into","into","into","into","into","into","into","is_all","is_empty","is_valid_bit_pattern","label","line_vertex_count","new","not","partial_cmp","provide","radius","remove","render_pipeline","set","source","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_string","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vertex_range","world_from_obj","BatchUniformBuffer","LineStripInfo","LineVertex","__clone_box","__clone_box","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","color","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","end_padding","flags","from","from","from","init","init","init","into","into","into","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","position","radius","stippling","strip_index","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","world_from_obj","MeshBatch","MeshDrawData","MeshInstance","MeshRenderer","__clone_box","__clone_box","additive_tint","batches","bind_group_layout","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","count","create_renderer","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","draw","drop","drop","drop","drop","from","from","from","from","gpu_data","gpu_mesh","init","init","init","init","instance_buffer","into","into","into","into","mesh","mesh","new","render_pipeline","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","world_from_mesh","InstanceData","__clone_box","additive_tint","borrow","borrow_mut","clone","clone_into","deref","deref_mut","downcast","drop","from","init","into","is_valid_bit_pattern","to_owned","try_from","try_into","type_id","upcast","vertex_buffer_layout","world_from_mesh_normal_row_0","world_from_mesh_normal_row_1","world_from_mesh_normal_row_2","world_from_mesh_row_0","world_from_mesh_row_1","world_from_mesh_row_2","DATA_TEXTURE_SIZE","ENABLE_SHADING","MAX_NUM_POINTS","NumberOfColorsNotEqualNumberOfVertices","PointCloudBatch","PointCloudBatchFlags","PointCloudBatchInfo","PointCloudDrawData","PointCloudDrawDataError","PointCloudRenderer","PointCloudVertex","__clone_box","__clone_box","__clone_box","all","batches","bind_group","bind_group_all_points","bind_group_layout_all_points","bind_group_layout_batch","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","complement","contains","create_renderer","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw","drop","drop","drop","drop","drop","drop","drop","empty","eq","eq","equivalent","equivalent","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_hash","gpu_data","hash","init","init","init","init","init","init","init","insert","intersection","intersects","into","into","into","into","into","into","into","is_all","is_empty","is_valid_bit_pattern","label","new","not","partial_cmp","point_count","position","provide","radius","remove","render_pipeline","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_string","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vertex_range","world_from_obj","BatchUniformBuffer","PositionData","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","end_padding","flags","from","from","init","init","into","into","is_valid_bit_pattern","is_valid_bit_pattern","pos","radius","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","world_from_obj","Linear","Linear","Nearest","Nearest","RectangleDrawData","RectangleRenderer","TextureFilterMag","TextureFilterMin","TexturedRect","__clone_box","bind_group_layout","bind_groups","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create_renderer","default","depth_offset","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","draw","drop","drop","drop","drop","drop","extent_u","extent_v","fmt","fmt","from","from","from","from","from","gpu_data","init","init","init","init","init","into","into","into","into","into","multiplicative_tint","new","participated_phases","render_pipeline","texture","texture_filter_magnification","texture_filter_minification","to_owned","top_left_corner_position","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","UniformBuffer","__clone_box","borrow","borrow_mut","clone","clone_into","depth_offset","deref","deref_mut","downcast","drop","end_padding","extent_u","extent_v","from","init","into","is_valid_bit_pattern","multiplicative_tint","to_owned","top_left_corner_position","try_from","try_into","type_id","upcast","TestTriangle","TestTriangleDrawData","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create_renderer","deref","deref","deref_mut","deref_mut","downcast","downcast","draw","drop","drop","from","from","init","init","into","into","new","render_pipeline","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","ExpiredResource","Frame","GpuMeshHandle","GpuTexture2DHandle","LongLived","LongLived","MeshManager","NullHandle","ResourceHandle","ResourceLifeTime","ResourceManagerError","ResourceNotFound","ResourcePoolError","SingleFrame","Texture2DCreationDesc","TextureManager2D","data","device","format","height","label","manager","mesh_bind_group_layout","mesh_manager","queue","resource_manager","texture_manager","white_texture","width","key","valid_frame_index","current_frame_index","valid_frame_index","GpuMeshHandle","MeshHandleInner","MeshManager","__clone_box","begin_frame","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","create","data","default","deref","deref","deref_mut","deref_mut","deserialize","downcast","downcast","drop","drop","eq","equivalent","fmt","from","from","from","get","get_hash","hash","init","init","into","into","manager","mesh_bind_group_layout","new","partial_cmp","serialize","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","ExpiredResource","Frame","LongLived","LongLived","NullHandle","ResourceHandle","ResourceLifeTime","ResourceManager","ResourceManagerError","ResourceNotFound","ResourcePoolError","SingleFrame","__clone_box","__clone_box","begin_frame","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_frame_resource_lifetime","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","fmt","frame_index","from","from","from","from","get","init","init","init","init","into","into","into","into","long_lived_resources","provide","single_frame_resources","store_resource","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","key","valid_frame_index","current_frame_index","valid_frame_index","GpuTexture2DHandle","Texture2DCreationDesc","TextureManager2D","__clone_box","begin_frame","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","convert_rgb8_to_rgba8","create","create_and_upload_texture","data","deref","deref","deref","deref_mut","deref_mut","deref_mut","device","downcast","downcast","downcast","drop","drop","drop","format","from","from","from","get","height","init","init","init","into","into","into","invalid","label","new","queue","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","white_texture","white_texture_handle","width","AUTO","AUTO_LARGE","Size","SizeHalf","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","downcast","downcast","drop","drop","eq","fmt","from","from","from","init","init","into","into","is_auto","is_valid_bit_pattern","is_valid_bit_pattern","mul","mul_assign","new_points","new_scene","points","scene","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","AutoSizeConfig","DrawFn","MAIN_TARGET_COLOR_FORMAT","MAIN_TARGET_DEFAULT_DEPTH_STATE","MAIN_TARGET_DEFAULT_MSAA_STATE","MAIN_TARGET_DEPTH_FORMAT","MAIN_TARGET_SAMPLE_COUNT","NearPlaneCenter","Orthographic","OrthographicCameraMode","Perspective","Projection","QueuedDraw","SharedViewBuilder","TargetConfiguration","TopLeftCornerAndExtendZ","ViewBuilder","ViewTargetSetup","__clone_box","__clone_box","__clone_box","__clone_box","auto_size_config","bind_group_0","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","composite","default","default","default","depth_buffer","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw","draw_data","draw_func","draw_phase","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","init","init","init","init","init","init","init","into","into","into","into","into","into","into","line_radius","main_target_msaa","main_target_resolved","name","name","participated_phases","pixels_from_point","point_radius","projection_from_view","queue_draw","queued_draws","renderer_name","resolution_in_pixel","resolution_in_pixel","serialize","setup","setup_view","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","view_from_world","camera_mode","far_plane_distance","near_plane_distance","vertical_fov","vertical_world_size","F32RowPadded","Mat3","Mat4","Mat4x3","PaddingRow","U32RowPadded","Vec2","Vec2RowPadded","Vec3RowPadded","Vec3Unpadded","Vec4","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c0","c0","c0","c1","c1","c1","c2","c2","c2","c3","c3","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","p","padding","padding0","padding0","padding0","padding1","padding1","padding1","padding2","padding2","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","v","v","w","x","x","x","x","x","y","y","y","y","y","z","z","z","BindGroupDesc","BindGroupEntry","BindGroupLayoutDesc","BufferDesc","GpuBindGroup","GpuBindGroupHandle","GpuBindGroupLayoutHandle","GpuBindGroupLayoutPool","GpuBindGroupPool","GpuBuffer","GpuBufferHandle","GpuBufferPool","GpuPipelineLayoutHandle","GpuPipelineLayoutPool","GpuRenderPipelineHandle","GpuRenderPipelinePool","GpuSamplerHandle","GpuSamplerPool","GpuShaderModuleHandle","GpuShaderModulePool","GpuTexture","GpuTextureHandle","GpuTextureInternal","GpuTexturePool","PipelineLayoutDesc","PoolError","RenderPipelineDesc","SamplerDesc","ShaderModuleDesc","TextureDesc","VertexBufferLayout","WgpuResourcePoolStatistics","WgpuResourcePools","bind_group_layout_pool","bind_group_layouts","bind_group_pool","bind_groups","borrow","borrow","borrow_mut","borrow_mut","buffer_pool","buffers","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","dynamic_resource_pool","from","from","init","init","into","into","num_bind_group_layouts","num_bind_groups","num_buffers","num_pipeline_layouts","num_render_pipelines","num_samplers","num_shader_modules","num_textures","pipeline_layout_pool","pipeline_layouts","render_pipeline_pool","render_pipelines","resource","sampler_pool","samplers","shader_module_pool","shader_modules","static_resource_pool","statistics","texture_pool","textures","total_buffer_size_in_bytes","total_bytes","total_texture_size_in_bytes","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","BindGroupLayoutDesc","GpuBindGroupLayoutHandle","GpuBindGroupLayoutPool","__clone_box","__clone_box","begin_frame","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","drop","drop","drop","entries","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from","get_hash","get_hash","get_or_create","get_resource","hash","hash","init","init","init","into","into","into","label","num_resources","partial_cmp","pool","serialize","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","BindGroupDesc","BindGroupEntry","Buffer","DefaultTextureView","GpuBindGroup","GpuBindGroupHandle","GpuBindGroupPool","Sampler","__clone_box","__clone_box","__clone_box","__clone_box","_owned_buffers","_owned_textures","alloc","allow_reuse","begin_frame","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","data","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","entries","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","get_hash","get_hash","get_hash","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","label","layout","num_resources","partial_cmp","pool","resource","resource_size_in_bytes","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","handle","offset","size","BufferDesc","GpuBuffer","GpuBufferHandle","GpuBufferPool","__clone_box","__clone_box","alloc","allow_reuse","begin_frame","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from","get_from_handle","get_hash","get_hash","hash","hash","init","init","init","into","into","into","label","mapped_at_creation","num_resources","partial_cmp","pool","resource_size_in_bytes","serialize","size","to_owned","to_owned","total_gpu_size_in_bytes","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","usage","DynamicResource","DynamicResourcePool","DynamicResourcePoolProtectedState","DynamicResourcesDesc","all_resources","alloc","allow_reuse","begin_frame","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","creation_desc","current_frame_index","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","drop","from","from","from","get_from_handle","handle","init","init","init","inner","into","into","into","last_frame_deallocated","num_resources","resource_size_in_bytes","state","total_resource_size_in_bytes","total_resource_size_in_bytes","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","GpuPipelineLayout","GpuPipelineLayoutHandle","GpuPipelineLayoutPool","PipelineLayoutDesc","__clone_box","__clone_box","begin_frame","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","downcast","drop","drop","drop","drop","entries","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from","from","get_hash","get_hash","get_or_create","get_resource","hash","hash","init","init","init","init","into","into","into","into","label","layout","num_resources","partial_cmp","pool","serialize","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","GpuRenderPipelineHandle","GpuRenderPipelinePool","RenderPipelineDesc","VertexBufferLayout","__clone_box","__clone_box","__clone_box","array_stride","attributes","attributes_from_formats","begin_frame","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","create_render_pipeline","data","default","default","depth_stencil","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","downcast","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fragment_entrypoint","fragment_handle","from","from","from","from","from","get_hash","get_hash","get_hash","get_or_create","get_resource","hash","hash","hash","init","init","init","init","into","into","into","into","label","multisample","num_resources","partial_cmp","pipeline_layout","pool","primitive","render_targets","serialize","step_mode","to_owned","to_owned","to_owned","to_wgpu_desc","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vertex_buffers","vertex_entrypoint","vertex_handle","NullHandle","PoolError","ResourceNotAvailable","ResourceStatistics","UnknownDescriptor","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","equivalent","fmt","fmt","frame_created","from","from","init","init","into","into","last_frame_used","provide","to_string","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","GpuSamplerHandle","GpuSamplerPool","SamplerDesc","__clone_box","__clone_box","address_mode_u","address_mode_v","address_mode_w","anisotropy_clamp","begin_frame","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from","get_hash","get_hash","get_or_create","get_resource","hash","hash","init","init","init","into","into","into","label","lod_max_clamp","lod_min_clamp","mag_filter","min_filter","mipmap_filter","num_resources","partial_cmp","pool","serialize","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","GpuShaderModuleHandle","GpuShaderModulePool","ShaderModuleDesc","__clone_box","__clone_box","begin_frame","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","create_shader_module","data","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from","get","get_hash","get_hash","get_or_create","get_statistics","hash","hash","init","init","init","into","into","into","label","num_resources","partial_cmp","pool","serialize","source","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","StaticResourcePool","StoredResource","borrow","borrow","borrow_mut","borrow_mut","current_frame_index","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","from","from","get_or_create","get_resource","get_statistics","init","init","into","into","lookup","num_resources","recreate_resources","resource","resources","statistics","to_pool_error","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","GpuTexture","GpuTextureHandle","GpuTextureInternal","GpuTexturePool","TextureDesc","__clone_box","__clone_box","alloc","allow_reuse","begin_frame","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","default","default","default_view","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dimension","downcast","downcast","downcast","downcast","drop","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","format","from","from","from","from","from","get_from_handle","get_hash","get_hash","hash","hash","init","init","init","init","into","into","into","into","label","mip_level_count","num_resources","partial_cmp","pool","resource_size_in_bytes","sample_count","serialize","size","texture","to_owned","to_owned","total_gpu_size_in_bytes","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","usage","with_label"],"q":["re_rendererre_renderer::allocator","","","","","","re_renderer::allocator::cpu_write_gpu_read_belt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::allocator::uniform_buffer_fill","","","","","","","","","","","","","","","","","","","","re_renderer::colormap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::context","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::debug_label","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::depth_offset","re_renderer::error_tracker","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::file_resolver","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::file_server","","re_renderer::file_server::file_server_impl","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::file_system","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::global_bindings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::importer","","","","re_renderer::importer::gltf","","","","re_renderer::importer::obj","re_renderer::line_strip_builder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::mesh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::mesh::gpu_data","","","","","","","","","","","","","","","","","","","","","re_renderer::mesh::mesh_vertices","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::point_cloud_builder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::renderer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::renderer::compositor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::renderer::depth_cloud","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::renderer::depth_cloud::gpu_data","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::renderer::generic_skybox","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::renderer::linesre_renderer::renderer::lines::gpu_data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::renderer::mesh_renderer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::renderer::mesh_renderer::gpu_data","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::renderer::point_cloudre_renderer::renderer::point_cloud::gpu_data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::renderer::rectangles","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::renderer::rectangles::gpu_data","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::renderer::test_triangle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::resource_managers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::resource_managers::ResourceHandle","","re_renderer::resource_managers::ResourceManagerError","","re_renderer::resource_managers::mesh_manager","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::resource_managers::resource_manager","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::resource_managers::resource_manager::ResourceHandle","","re_renderer::resource_managers::resource_manager::ResourceManagerError","","re_renderer::resource_managers::texture_manager","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::size","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::view_builder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::view_builder::Projection","","","","","re_renderer::wgpu_buffer_types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::wgpu_resources","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::wgpu_resources::bind_group_layout_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::wgpu_resources::bind_group_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::wgpu_resources::bind_group_pool::BindGroupEntry","","","re_renderer::wgpu_resources::buffer_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::wgpu_resources::dynamic_resource_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::wgpu_resources::pipeline_layout_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::wgpu_resources::render_pipeline_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::wgpu_resources::resource","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::wgpu_resources::sampler_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::wgpu_resources::shader_module_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::wgpu_resources::static_resource_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::wgpu_resources::texture_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","This format is used for space-efficient color …","","","","","","","","","","","","Label for resources. Optimized out in release builds.","Depth offset used to resolve z-fighting between 2d …","The <code>FileResolver</code> handles both resolving import clauses and …","A file server capable of watching filesystem events in the …","A very limited filesystem, just enough for our internal …","","","","","","A pre-parsed import clause, as in <code>#import &lt;something&gt;</code>.","","","","","","","","Builder for a vector of line strips, making it easy to …","","Builder for point clouds, making it easy to create …","","","The recommended <code>FileResolver</code> type for the current …","Any resource involving wgpu rendering which can be re-used …","0-1 linear space <code>RGBA</code> color with premultiplied alpha.","Specifies where to look for imports when both absolute and …","A size of something in either world-units, screen-units, …","An ugly color that is planned to be replaced before making …","","","","","","","","","","","","","Returns an additive version of self","Return an additive version of this color (alpha = 0)","High level GPU memory allocators.","","","","","","","","","","","","","","","","Returns sRGB polynomial approximation from Inferno color …","Returns sRGB polynomial approximation from Magma color …","Returns sRGB polynomial approximation from Plasma color …","","Returns sRGB polynomial approximation from Turbo color …","Returns sRGB polynomial approximation from Viridis color …","","","","","","","","","","","","","","","All directories currently in the search path, in …","","","","","","","","","Special error handling datastructures for debug builds …","","","This module implements one half of our cross-platform …","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Transparent black","","","","","","","From <code>sRGBA</code> with premultiplied alpha.","","From <code>sRGBA</code> WITHOUT premultiplied alpha.","","","","","Transparent white","A handle to the filesystem being used. Generally a …","","","Multiply with 0.5 to make color half as opaque, …","Returns the recommended filesystem handle for the current …","","","","","Returns an sRGB gray value, assuming <code>t</code> is normalized.","","","","A macro to read the contents of a file on disk, and …","","","","","List of unfinished queue submission via this context.","","","How perceptually intense (bright) is the color?","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Multiply with 0.5 to make color half as opaque in linear …","","","","","Multiply with e.g. 0.5 to make us half transparent","Returns the recommended <code>FileResolver</code> for the current …","","","","","","","","","The path being imported, as-is: neither canonicalized nor …","","","","","","","","","Resource managers are concerned with mapping (typically) …","The search path that we will go through when an import …","","","","","","","","","Premultiplied RGBA","Premultiplied RGBA","Converts to floating point values in the range 0-1 without …","Returns an opaque version of self","Returns an opaque version of self","","","unmultiply the alpha","","unmultiply the alpha","Premultiplied RGBA","Premultiplied RGBA","","","","","","","","","","","","","","","","","Explicitly padded and/or aligned types following wgsl …","Wgpu resource pools are concerned with handling low level …","","","","","","","Internal chunk of the staging belt.","Efficiently performs many buffer writes by sharing and …","A sub-allocated staging buffer that can be written to.","All allocations of this allocator will be aligned to at …","Marker for the type whose alignment and size requirements …","Chunks which are CPU write at the moment.","Recall all of the closed buffers back to be reused.","Allocates a cpu writable buffer for <code>num_elements</code> instances …","Caller needs to make sure that there is enough space plus …","Memory as slice of T.","Prepare currently mapped buffers for use in a submission.","","","","","","","","","","Minimum size for new buffers.","Chunks which are GPU read at the moment.","Copies the entire buffer to another buffer and drops it.","Copies the entire buffer to a texture and drops it.","","","","","","","","","","","","","Pushes several elements into the buffer.","Pushes a slice of elements into the buffer.","","Chunks that are back from the GPU and ready to be mapped …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a cpu-write &amp; gpu-read staging belt.","The number of elements pushed into the buffer so far.","Pushes a single element into the buffer and advances the …","Move all chunks that the GPU is done with (and are now …","Free chunks are received here to be put on <code>self.free_chunks</code>…","","","When closed chunks are mapped again, the map callback …","","","","","","","","","","Starting at this offset the buffer is unused.","Range in T elements in write_view that haven’t been …","","","","Write view into the relevant buffer portion.","wgpu requires uniform buffers to be aligned to up to 256 …","","","","","","","See <code>create_and_fill_uniform_buffer</code>.","Utility for fast &amp; efficient creation of uniform buffers …","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns sRGB polynomial approximation from Inferno color …","Returns sRGB polynomial approximation from Magma color …","Returns sRGB polynomial approximation from Plasma color …","","Returns sRGB polynomial approximation from Turbo color …","Returns sRGB polynomial approximation from Viridis color …","","","","","","","","Returns the argument unchanged.","Returns an sRGB gray value, assuming <code>t</code> is normalized.","","Calls <code>U::from(self)</code>.","","","","","","","Hardware tiers <code>re_renderer</code> distinguishes.","Startup configuration for a <code>crate::RenderContext</code>","Maintains strict WebGL capability.","","","","","","Checks if passed downlevel capabilities support the given …","","","","","","","Device descriptor compatible with the given hardware tier.","","","","","Required features for the given hardware tier.","","Returns the argument unchanged.","Returns the argument unchanged.","The targeted hardware tier.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Wgpu limits required by the given hardware tier.","The color format used by the eframe output buffer.","Downlevel features required by the given tier.","Backends that are officially supported by <code>re_renderer</code>.","","","","","","","","","","","Chunk size for our cpu-&gt;gpu buffer manager.","","Limit maximum number of in flight submissions to this …","Any resource involving wgpu rendering which can be re-used …","Struct owning <em>all</em> <code>Renderer</code>. <code>Renderer</code> are created lazily …","Immutable data that is shared between all <code>Renderer</code>","","Call this at the end of a frame but before submitting …","Call this at the beginning of a new frame.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Command encoder for all commands that should go in before …","","Index of this frame. Is incremented for every render frame.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Gets the global encoder for a frame. Only valid within a …","","Global bindings, always bound to 0 bind group slot zero. …","","List of unfinished queue submission via this context.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Utility type map that will be cleared every frame.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Label for resources. Optimized out in release builds.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Depth offset used to resolve z-fighting between 2d …","An error with some extra deduplication logic baked in.","Coalesces wgpu errors until the tracker is <code>clear()</code>ed.","A <code>wgpu_core::ContextError</code> with hashing and equality …","","","","","Resets the tracker.","This countdown reaching 0 indicates that the pipeline has …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Logs a wgpu error, making sure to deduplicate them as …","","","E.g. to implement <code>DedupableError</code> for u32 + u64:","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Increment tick count used in logged errors, and clear the …","","Tries downcasting a given value into the specified …","","","","","","","","","","The <code>FileResolver</code> handles both resolving import clauses and …","A pre-parsed import clause, as in <code>#import &lt;something&gt;</code>.","","","The recommended <code>FileResolver</code> type for the current …","Specifies where to look for imports when both absolute and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All directories currently in the search path, in …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","A handle to the filesystem being used. Generally a …","","","","","","Insert a path into search path.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns an iterator over the directories in the search …","","Returns the recommended <code>FileResolver</code> for the current …","The path being imported, as-is: neither canonicalized nor …","","Push a path to search path.","","The search path that we will go through when an import …","","","","","","","","","","","","","","","","","","","","","","","","","The global <code>FileServer</code>.","A file server capable of watching filesystem events in the …","","","Coalesces all filesystem events since the last call to …","","","","","","","Returns the argument unchanged.","Returns a reference to the global <code>FileServer</code>.","Returns a mutable reference to the global <code>FileServer</code>.","","Calls <code>U::from(self)</code>.","","","","","Stops watching for file events at the given <code>path</code>.","","Starts watching for file events at the given <code>path</code>.","","A very limited filesystem, just enough for our internal …","The global <code>MemFileSystem</code>.","A <code>FileSystem</code> implementation backed by an hash map.","A <code>FileSystem</code> implementation that simply delegates to …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to the global <code>MemFileSystem</code>.","Returns the recommended filesystem handle for the current …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Mirrors the GPU contents of a frame-global uniform buffer.","","","","","","","","","Camera direction in world space. Same as …","Camera position in world space.","","","Creates a bind group that follows the global bind group …","Factor used to compute depth offsets, see <code>depth_offset.wgsl</code>…","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","For perspective: Multiply this with a camera distance to …","How many pixels there are per point. I.e. the ui scaling …","","","(tan(fov_y / 2) * aspect_ratio, tan(fov_y /2)), i.e. half …","","","","","","","","","","","","","","","","","","Loads both gltf and glb into the mesh &amp; texture manager.","","Load a Wavefront .obj file into the mesh &amp; texture manager.","","","Builder for a vector of line strips, making it easy to …","Add 2D rectangle outlines with axis along X and Y.","Add box outlines from a unit cube transformed by <code>transform</code>.","Add rectangle outlines.","Add 2D rectangle outlines.","Adds a single 3D line segment connecting two points.","Adds a single 2D line segment connecting two points. Uses …","Adds a series of unconnected 3D line segments.","Adds a series of unconnected 2D line segments.","Adds a 3D series of line connected points.","Adds a 2D series of line connected points.","","Start of a new batch.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Iterates over all line strips batches together with their …","","","","","","Finalizes the builder and returns a line draw data with …","","","","","","","","","","","","","Adds user data for every strip this builder adds.","","","Sets the <code>world_from_obj</code> matrix for the <em>entire</em> batch.","","","","","","","","","Base color texture, also known as albedo. (not optional, …","Factor applied to the decoded albedo color.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Index range within the owning <code>Mesh</code> that should be rendered …","Index range within the owning <code>Mesh</code> that should be rendered …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Every mesh has at least one material.","Defines how mesh vertices are built.","","","","","","","","","","","","","","","","","","","","","","Buffer for all vertex data, subdivided in several sections …","","","","","Keep in sync with <code>MaterialUniformBuffer</code> in …","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","Mesh vertex as used in gpu residing vertex buffers.","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Next vertex attribute index that can be used for another …","","","","","","","","Vertex buffer layouts describing how vertex data should be …","","","Builder for point clouds, making it easy to create …","","","Adds a single 2D point. Uses an autogenerated depth value.","Add several 3D points","Adds several 2D points. Uses an autogenerated depth value, …","Start of a new batch.","","","","","","","","","","","This mustn’t call this more than once.","","","Assigns colors to all points.","","","","","","","","","","","","","","","","","","","Each time we <code>add_points</code>, or upon builder drop, make sure …","Set flags for this batch.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Assigns radii to all points.","","Finalizes the builder and returns a point cloud draw data …","","","","","","","","","","","","","","","","","","Assigns user data for all points in this builder.","","","","","","","Sets the <code>world_from_obj</code> matrix for the <em>entire</em> batch.","Background, rendering where depth wasn’t written.","Drawn when compositing with the main target.","","The raw data from a depth texture.","","","GPU sided data used by a <code>Renderer</code> to draw things to the …","Determines a (very rough) order of rendering and describes …","","","Data that is valid for a batch of line strips.","A line drawing operation. Encompasses several lines, each …","Property flags for a line strip","Style information for a line strip.","","","","","","","","","Opaque objects, performing reads/writes to the depth …","Property flags for a point batch","Data that is valid for a batch of point cloud points.","A point cloud drawing operation. Expected to be recrated …","","Description of a point cloud.","","A Renderer encapsulate the knowledge of how to render a …","","","","Texture filter setting for magnification (a texel covers …","Texture filter setting for minification (several texels …","","","","Per-instance (as opposed to per-material/mesh!) tint color …","","","","","","","","","","","","","","","srgb color. Alpha unused right now","Configures color mapping mode.","","","The extrinsics of the camera used for the projection.","The intrinsics of the camera used for the projection.","Renderer that makes it easy to draw point clouds straight …","The actual data from the depth texture.","The dimensions of the depth texture in pixels.","","","","","Called once per phase given by …","","","","Vector that spans up the rectangle from its top left …","Vector that spans up the rectangle from its top left …","Additional properties of this point cloud batch.","Additional properties for the linestrip.","","Returns the argument unchanged.","","","Gpu mesh this instance refers to.","","","","Calls <code>U::from(self)</code>.","","","Number of vertices covered by this batch.","Line renderer for efficient rendering of many line(strips)","Optional cpu representation of the mesh, not needed for …","Mesh renderer.","Tint that is multiplied to the rect, supports …","Combination of flags indicating in which phases …","Point renderer for efficient rendering of point clouds.","Number of points covered by this batch.","Connected points. Must be at least 2.","","Radius of the point in world space","Radius of the line strip in world space","The scale to apply to the radii of the backprojected …","Renderer that makes it easy to draw textured 2d rectangles …","","","","Texture that fills the rectangle","","","","Top left corner position in world space.","","","","","Where this instance is placed in world space and how its …","Transformation applies to line positions","Transformation applies to point positions","","","","<code>GpuBindGroup</code> pointing at the current image source and a …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","The raw data from a depth texture.","","","","","","","","","","","","","","","","","","","","","Configures color mapping mode.","","","","","The extrinsics of the camera used for the projection.","The intrinsics of the camera used for the projection.","The actual data from the depth texture.","The dimensions of the depth texture in pixels.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The scale to apply to the radii of the backprojected …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","Renders a generated skybox from a color gradient","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Adds a round cap at the end of a line strip (excludes …","Puts a equilateral triangle at the end of the line strip …","Adds a round cap at the start of a line strip (excludes …","Puts a equilateral triangle at the start of the line strip …","","","Data that is valid for a batch of line strips.","A line drawing operation. Encompasses several lines, each …","","","Internal, ready to draw representation of <code>LineBatchInfo</code>","Property flags for a line strip","Style information for a line strip.","Total maximum number of line strips per <code>LineDrawData</code>.","Total maximum number of line vertices per <code>LineDrawData</code>.","Disable color gradient which is on by default","","","","","","","Returns the set containing all flags.","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","srgb color. Alpha unused right now","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","","","","","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","Returns an empty set of flags.","","","","","","Additional properties for the linestrip.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","Number of vertices covered by this batch.","Transforms and uploads line strip data to be consumed by …","Returns the complement of this set of flags.","","","Radius of the line strip in world space","Removes the specified flags in-place.","","Inserts or removes the specified flags depending on the …","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","Transformation applies to line positions","Uniform buffer that changes for every batch of line strips.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Per-instance (as opposed to per-material/mesh!) tint color …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Gpu mesh this instance refers to.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Optional cpu representation of the mesh, not needed for …","","Transforms and uploads mesh instance data to be consumed …","","","","","","","","","","","","","","","","","","","","Where this instance is placed in world space and how its …","Element in the gpu residing instance buffer.","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Textures are 2D since 1D textures are very limited in size …","If true, we shade all points in the batch like spheres.","Maximum number of vertices per <code>PointCloudDrawData</code>.","","Internal, ready to draw representation of …","Property flags for a point batch","Data that is valid for a batch of point cloud points.","A point cloud drawing operation. Expected to be recrated …","","","Description of a point cloud.","","","","Returns the set containing all flags.","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","","","","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","Returns an empty set of flags.","","","","","","Additional properties of this point cloud batch.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","Transforms and uploads point cloud data to be consumed by …","Returns the complement of this set of flags.","","Number of points covered by this batch.","Connected points. Must be at least 2.","","Radius of the point in world space","Removes the specified flags in-place.","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","Transformation applies to point positions","Uniform buffer that changes for every batch of line strips.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Texture filter setting for magnification (a texel covers …","Texture filter setting for minification (several texels …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Vector that spans up the rectangle from its top left …","Vector that spans up the rectangle from its top left …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Tint that is multiplied to the rect, supports …","","","","Texture that fills the rectangle","","","","Top left corner position in world space.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Handle that is valid for a single frame","","Handle to a 2D resource.","Resource handle that keeps the resource alive as long as …","A resource that lives until its last handle was dropped.","","","Handle to a resource that is stored in a resource manager.","","","","","A resources that lives only for a single frame.","Data required to create a texture 2d resource.","Texture manager for 2D textures.","Data for the highest mipmap level. Must be padded …","","","","","","","","","","","","","","This handle is only valid for this frame. Querying it …","","","","","","","","","","","","","","","Takes ownership of a mesh.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Accesses a given resource.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Handle that is valid for a single frame","Resource handle that keeps the resource alive as long as …","A resource that lives until its last handle was dropped.","","Handle to a resource that is stored in a resource manager.","","","","","","A resources that lives only for a single frame.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","We store a refcounted handle along side every long lived …","","","Creates a new resource.","","","","","","","","","","","","","","","","","","","","","This handle is only valid for this frame. Querying it …","","","Handle to a 2D resource.","Data required to create a texture 2d resource.","Texture manager for 2D textures.","","","","","","","","","","","","Creates a new 2D texture resource and schedules data …","","Data for the highest mipmap level. Must be padded …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Retrieves gpu handle.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns a single pixel white pixel.","","Automatically sized, based on a view builder setting.","Like <code>Size::AUTO</code>, but larger by some small factor (~2).","A size of something in either world-units, screen-units, …","Same as <code>Size</code> but stored with a f16 float.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the size is an automatically determined …","","","","","Creates a new size in ui point units.","Creates a new size in scene units.","Get the point size of this, if stored as a point size.","Get the scene-size of this, if stored as a scene size.","","","","","","","","","","","","How <code>Size::AUTO</code> is interpreted.","","Color format used for the main target of the view builder.","Default depth state for enabled depth write &amp; read.","Default multisample state that any <code>wgpu::RenderPipeline</code> …","Depth format used for the main target of the view builder.","Enable MSAA always. This makes our pipeline less variable …","Puts the view space origin into the middle of the screen.","Orthographic projection with the camera position at the …","Configures the camera placement in the orthographic …","Perspective camera looking along the negative z view space …","How we project from 3D to 2D.","","<code>ViewBuilder</code> that can be shared between threads.","Basic configuration for a target view.","Puts the view space origin at the top-left corner of the …","The highest level rendering block in <code>re_renderer</code>. Used to …","","","","","","How <code>Size::AUTO</code> is interpreted.","","","","","","","","","","","","","","","","","","","","","","","","Composites the final result of a <code>ViewBuilder</code> to a given …","","","","","","","","","","","","","","","","","","","","","","","","","","","Draws the frame as instructed to a temporary HDR target.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Determines the line radius for <code>crate::Size::AUTO</code> for lines.","","","","","","How many pixels are there per point. I.e. the ui scaling …","Determines the point radius when <code>crate::Size::AUTO</code>.","","","","","","","","Result of <code>ViewBuilder::setup_view</code> - needs to be <code>Option</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Distance of the far plane to the camera.","Distance of the near plane.","Viewing angle in view space y direction (which is the …","Size of the orthographic camera view space y direction …","","","","","A Vec4 of pure padding (i.e. 16 bytes of padding)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Collection of all wgpu resource pools.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Debug label of the bind group layout. This will show up in …","","","","","","","","","","","","","","","","","","","","","","","A reference-counter baked bind group.","","Resource pool for bind groups.","","","","","","","","Returns a reference-counted, currently unused bind-group. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Debug label of the bind group. This will show up in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Base offset of the buffer. For bindings with …","Size of the binding, or <code>None</code> for using the rest of the …","Buffer creation descriptor.","A reference-counter baked buffer. Once all instances are …","","","","","Returns a reference-counted gpu buffer that is currently …","","Called by <code>RenderContext</code> every frame. Updates statistics …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Method to retrieve a resource from a weak handle (used by …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Debug label of a buffer. This will show up in graphics …","Allows a buffer to be mapped immediately after they are …","","","","","","Size of a buffer.","","","","","","","","","","","","","","","","Usages of a buffer. If the buffer is used in any way that …","","Generic resource pool for all resources that have varying …","","","All resources, including both resources that are in use …","","If true, a unused resources will be kept around for while …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Any resource that has been deallocated last frame. We keep …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Debug label of the pipeline layout. This will show up in …","","","","","","","","","","","","","","","","","","","","","","","","","","Renderpipeline descriptor, can be converted into …","A copy of <code>wgpu::VertexBufferLayout</code> with a <code>smallvec</code> for the …","","","","The stride, in bytes, between elements of this buffer.","The list of attributes which comprise a single vertex.","Generates attributes with successive shader locations …","","","","","","","","","","","","","","","","","","","","","The effect of draw calls on the depth and stencil aspects …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Debug label of the pipeline. This will show up in graphics …","The multi-sampling properties of the pipeline.","","","","","The properties of the pipeline at the primitive assembly …","The color state of the render targets.","","How often this vertex buffer is “stepped” forward.","","","","","","","","","","","","","","","","","","","","","The format of any vertex buffers used with this pipeline.","","","","","","","","","","","","","","","","","","","","","","","","Frame index in which this resource was (re)created.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Frame index in which a handle to this resource was last …","","","","","","","","","","","","","","","","How to deal with out of bounds accesses in the u (i.e. x) …","How to deal with out of bounds accesses in the v (i.e. y) …","How to deal with out of bounds accesses in the w (i.e. z) …","Valid values: 1, 2, 4, 8, and 16.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Debug label of the sampler. This will show up in graphics …","Maximum level of detail (i.e. mip level) to use","Minimum level of detail (i.e. mip level) to use","How to filter the texture when it needs to be magnified …","How to filter the texture when it needs to be minified …","How to filter between mip map levels","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Debug label of the shader. This will show up in graphics …","","","","","Path to the source code of this shader module.","","","","","","","","","","","","","","","Generic resource pool for all resources that are fully …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","A reference-counter baked texture. Once all instances are …","","","","","","","Returns a reference-counted handle to a currently unused …","","Called by <code>RenderContext</code> every frame. Updates statistics …","","","","","","","","","","","","","","","","","","","","","","","","","","","Dimensions of the texture.","","","","","","","","","","","","","","","Format of the texture.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Method to retrieve a resource from a weak handle (used by …","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Debug label of the texture. This will show up in graphics …","Mip count of texture. For a texture with no extra mips, …","","","","Number of bytes this texture is expected to take.","Sample count of texture. If this is not 1, texture must …","","Size of the texture. All components must be greater than …","","","","","","","","","","","","","","","","","","","","","Allowed usages of the texture. If used in other ways, the …","Copies the desc but changes the label."],"i":[0,2,4,2,4,2,0,0,0,10,10,10,10,10,2,2,2,2,2,0,0,0,0,0,2,2,2,4,10,0,2,2,2,2,2,2,0,0,0,0,2,4,0,0,0,0,0,2,2,4,2,4,0,2,2,4,2,4,41,4,2,4,0,2,4,110,94,2,4,2,4,70,2,4,2,4,110,0,0,0,0,0,0,0,0,0,41,0,2,4,0,2,4,2,4,2,4,41,65,2,4,2,4,2,4,2,41,0,71,70,0,0,0,71,2,4,2,2,2,2,4,4,4,4,2,2,4,2,4,4,2,4,2,2,4,2,4,4,4,2,4,57,2,4,2,0,2,4,0,41,0,2,4,0,0,2,4,2,4,41,2,4,4,2,4,2,2,4,42,0,2,0,41,4,4,4,0,191,191,191,191,191,191,191,191,66,0,41,2,4,70,0,41,41,0,57,2,4,41,0,94,92,94,41,2,4,2,2,4,2,4,4,2,4,2,4,191,191,2,4,2,4,2,4,2,4,92,110,110,94,0,71,0,0,0,0,0,0,0,0,0,0,0,25,29,25,25,25,30,29,25,29,30,25,29,30,25,30,29,29,25,25,29,29,29,30,25,29,30,25,29,30,25,29,30,25,29,29,25,25,29,30,25,29,30,25,29,30,25,25,29,29,25,25,30,30,25,29,30,25,29,30,25,29,30,25,30,29,29,30,25,29,223,0,0,0,223,223,223,0,0,223,223,223,223,223,223,223,223,223,223,223,0,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,10,10,10,10,10,10,10,10,0,10,10,10,10,10,10,10,10,0,0,47,47,59,47,59,47,47,47,47,59,47,59,47,47,59,47,59,47,47,47,59,47,59,59,47,59,47,47,59,47,0,47,59,47,59,47,59,47,59,47,0,41,0,41,0,0,0,41,41,41,41,55,54,53,224,41,55,54,53,224,55,41,41,55,54,53,224,41,55,54,53,224,41,41,55,54,53,224,41,55,54,53,53,224,224,41,224,41,55,54,53,224,54,53,54,55,41,41,41,55,54,53,224,41,55,54,53,224,41,41,53,224,41,41,41,54,41,41,41,41,55,54,53,224,41,55,54,53,224,41,55,54,53,224,41,55,54,53,224,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,0,0,0,61,63,61,63,61,61,61,61,63,61,63,61,63,61,63,225,63,63,61,63,61,63,63,61,225,63,0,61,63,61,63,61,61,0,61,63,61,63,61,63,0,61,63,0,0,0,66,0,0,65,66,67,65,66,67,57,65,66,67,57,65,66,67,65,66,67,67,65,67,57,65,66,67,57,65,66,67,57,65,65,66,67,57,65,66,67,57,65,66,65,66,65,65,66,66,67,65,66,66,67,57,65,65,66,57,67,65,66,67,57,65,65,66,67,57,65,57,0,66,57,65,57,57,65,66,67,65,66,65,66,67,57,65,66,67,57,65,66,67,57,65,66,67,57,57,0,0,0,0,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,0,0,0,0,74,18,74,18,70,74,18,70,70,74,70,70,74,18,74,18,74,18,74,18,74,18,70,74,18,74,74,18,74,0,74,18,74,18,74,70,74,18,74,18,74,18,74,18,74,18,0,0,75,75,75,76,75,76,75,75,75,75,75,76,75,76,75,76,75,76,75,76,75,76,75,76,75,76,75,75,76,76,76,75,75,75,75,75,75,76,76,75,76,75,76,75,76,75,75,0,0,0,0,0,0,0,0,0,0,0,0,90,90,90,90,90,90,90,90,90,90,90,94,90,94,90,92,94,90,92,94,92,94,90,92,94,90,92,94,90,92,94,90,90,92,94,92,90,92,94,90,92,94,90,92,94,94,94,94,92,94,92,94,94,90,92,94,90,92,94,90,92,94,90,92,94,92,92,94,90,0,0,0,0,85,100,101,102,100,100,102,85,100,101,102,85,100,101,102,85,100,101,102,85,100,101,102,85,100,101,102,85,100,101,102,85,100,101,102,85,100,101,102,85,100,101,102,0,101,101,100,102,85,85,100,101,102,85,100,101,102,85,100,85,101,0,101,85,100,101,102,85,100,101,102,85,100,101,102,85,100,101,102,85,100,101,102,101,101,101,85,85,0,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,0,106,106,106,106,106,106,106,106,106,106,106,106,106,106,0,106,106,106,106,106,106,106,0,0,0,0,0,107,107,107,107,110,107,110,110,107,108,109,110,107,108,109,108,108,110,109,109,110,107,108,109,110,107,108,109,110,107,108,109,110,107,107,108,109,107,107,110,107,108,109,110,107,108,109,110,107,108,109,110,110,109,110,109,108,110,110,107,108,109,110,107,108,109,110,107,108,109,110,107,108,109,108,109,110,108,109,108,110,109,107,115,115,0,0,0,0,0,0,119,0,0,0,0,0,0,152,153,0,0,152,153,114,115,0,0,0,0,0,0,0,226,227,0,0,0,0,119,115,87,98,113,141,98,113,126,120,149,96,112,115,115,115,115,131,121,0,227,121,121,0,121,121,151,115,115,115,227,115,115,115,151,151,111,131,115,115,0,115,87,115,115,141,115,95,111,95,0,87,0,151,227,0,111,228,137,228,131,121,0,126,137,0,151,151,151,115,151,115,115,115,115,87,95,111,0,0,117,117,118,118,117,118,117,117,117,118,118,117,118,117,118,117,118,118,117,118,117,118,117,118,117,117,118,118,117,118,117,118,117,118,117,118,117,0,0,0,0,119,119,119,120,126,120,121,126,119,120,121,126,119,120,119,120,119,120,121,0,126,121,119,121,121,121,121,121,126,119,120,121,126,119,120,121,126,119,120,126,121,126,119,120,119,121,126,119,120,0,121,126,119,120,121,126,119,120,120,121,126,119,120,121,126,119,120,121,126,119,120,121,126,119,120,121,126,119,120,0,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,0,0,128,129,128,129,128,128,128,129,129,128,129,128,129,128,129,129,128,129,128,129,128,129,128,128,129,129,128,129,128,129,128,129,128,129,128,96,96,96,96,133,0,0,0,0,0,0,0,0,98,98,96,0,133,130,98,96,131,96,98,130,98,132,132,96,96,96,96,96,96,96,96,95,132,130,98,96,131,133,95,132,130,98,96,131,133,130,98,96,131,130,98,96,131,96,131,96,96,132,96,131,95,132,130,98,96,131,133,95,132,130,98,96,131,133,96,95,132,130,98,96,131,133,132,95,132,130,98,96,131,133,96,96,133,96,133,96,131,96,96,96,96,96,133,133,95,132,130,98,96,131,133,133,96,96,96,96,96,96,0,96,95,132,130,98,96,131,133,96,96,96,95,132,130,98,96,131,133,96,96,96,95,95,98,96,96,133,131,96,132,96,133,96,96,96,130,98,96,131,133,96,95,132,130,98,96,131,133,95,132,130,98,96,131,133,95,132,130,98,96,131,133,96,95,132,130,98,96,131,133,130,95,0,0,0,137,138,139,137,138,139,137,138,139,137,138,139,137,138,139,138,137,138,139,137,138,139,137,138,139,137,138,139,139,138,137,138,139,137,138,139,137,138,139,137,138,139,137,138,138,137,137,138,139,137,138,139,137,138,139,137,138,139,137,138,139,139,0,0,0,0,140,141,87,141,142,87,142,140,141,87,142,140,141,140,141,140,141,140,142,87,142,140,141,87,142,140,141,87,142,140,141,142,87,142,140,141,87,142,140,141,0,87,87,142,140,141,141,87,142,140,141,87,140,141,142,140,141,87,142,140,141,87,142,140,141,87,142,140,141,87,142,140,141,87,0,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,0,112,113,114,0,0,0,0,0,0,0,112,145,113,112,113,145,113,146,146,112,112,112,112,112,112,112,112,111,228,146,112,145,113,114,111,228,146,112,145,113,114,112,145,113,112,145,113,112,112,112,146,112,111,228,146,112,145,113,114,111,228,146,112,145,113,114,112,111,228,146,112,145,113,114,146,111,228,146,112,145,113,114,112,112,114,112,114,112,111,112,112,112,112,112,114,114,111,228,146,112,145,113,114,112,112,112,112,112,0,112,111,228,146,112,145,113,114,112,112,112,111,228,146,112,145,113,114,112,112,112,111,113,112,112,111,228,114,228,112,146,112,112,112,112,112,145,113,114,112,111,228,146,112,145,113,114,111,228,146,112,145,113,114,111,228,146,112,145,113,114,112,111,228,146,112,145,113,114,145,111,0,0,147,148,147,148,147,148,147,148,147,148,147,148,147,148,147,148,147,148,148,148,147,148,147,148,147,148,147,148,147,147,147,148,147,148,147,148,147,148,147,148,148,152,153,152,153,0,0,0,0,0,149,150,149,151,150,152,153,149,151,150,152,153,149,149,149,150,151,151,151,150,152,153,149,151,150,152,153,149,151,150,152,153,149,150,151,150,152,153,149,151,151,152,153,151,150,152,153,149,0,151,150,152,153,149,151,150,152,153,149,151,149,150,150,151,151,151,149,151,151,150,152,153,149,151,150,152,153,149,151,150,152,153,149,151,150,152,153,149,0,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,0,0,155,156,155,156,155,155,155,156,156,155,156,155,156,155,156,156,155,156,155,156,155,156,155,155,156,155,156,155,156,155,156,155,156,155,104,164,0,0,164,86,0,104,0,0,0,104,104,86,0,0,169,84,169,169,169,157,157,0,84,0,0,84,169,229,229,230,230,0,0,0,158,157,157,158,157,158,158,158,158,157,158,158,157,158,157,158,158,157,158,157,158,158,158,158,157,158,158,157,158,158,157,158,157,158,157,157,157,158,158,158,157,158,157,158,157,158,157,158,104,164,164,86,104,0,0,0,0,104,104,86,164,86,161,161,164,104,86,161,164,104,86,161,164,86,164,86,161,161,164,104,86,161,164,104,86,161,164,104,86,161,164,104,86,164,104,164,104,164,104,104,161,161,164,104,86,161,161,164,104,86,161,164,104,86,161,104,161,161,164,86,104,161,164,104,86,161,164,104,86,161,164,104,86,161,164,104,86,229,229,230,230,0,0,0,167,84,169,84,167,169,84,167,167,167,169,84,84,169,169,84,167,169,84,167,84,169,84,167,169,84,167,169,169,84,167,84,169,169,84,167,169,84,167,167,169,84,84,167,169,84,167,169,84,167,169,84,167,169,84,167,84,84,169,97,97,0,0,97,170,97,170,97,170,97,170,97,170,97,170,97,170,97,97,170,97,170,97,97,97,170,170,97,170,97,170,97,97,170,97,97,97,97,97,97,97,97,170,97,170,97,170,97,170,97,170,0,0,175,175,175,175,175,171,172,0,172,0,0,0,0,171,0,0,171,172,173,174,174,231,232,231,175,171,172,173,174,232,231,175,171,172,173,174,171,172,173,174,171,172,173,174,175,175,173,174,231,232,231,175,171,172,173,174,232,231,175,171,172,173,174,173,232,231,175,171,172,173,174,175,232,232,175,232,231,175,171,172,173,174,171,172,173,174,232,231,175,171,172,173,174,232,231,175,171,172,173,174,232,231,175,171,172,173,174,173,231,231,231,174,232,174,173,174,175,175,232,231,174,173,175,175,171,172,173,174,232,231,175,171,172,173,174,232,231,175,171,172,173,174,232,231,175,171,172,173,174,232,231,175,171,172,173,174,174,233,233,234,234,233,0,0,0,0,0,0,0,0,0,0,0,177,178,179,180,181,182,183,184,185,186,187,177,178,179,180,181,182,183,184,185,186,187,177,178,179,180,181,182,183,184,185,186,187,184,185,186,184,185,186,184,185,186,185,186,177,178,179,180,181,182,183,184,185,186,187,177,178,179,180,181,182,183,184,185,186,187,187,177,178,179,180,181,182,183,184,185,186,187,177,178,179,180,181,182,183,184,185,186,187,177,178,179,180,181,182,183,184,185,186,187,177,178,179,180,181,182,183,184,185,186,187,177,177,178,178,179,179,180,180,181,181,181,182,182,182,183,183,183,184,184,185,185,186,186,187,177,178,179,180,181,182,183,184,185,186,187,177,178,179,180,181,182,183,184,185,186,187,177,178,179,180,181,182,183,184,185,186,187,187,181,177,178,180,177,178,180,177,178,177,178,179,180,181,182,183,184,185,186,187,177,178,179,180,181,182,183,184,185,186,187,177,178,179,180,181,182,183,184,185,186,187,177,178,179,180,181,182,183,184,185,186,187,177,178,179,180,181,182,183,184,185,186,187,177,178,183,179,180,181,182,183,179,180,181,182,183,181,182,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,0,56,56,191,56,191,0,56,56,191,56,191,56,191,56,191,56,191,0,56,191,56,191,56,191,191,191,191,191,191,191,191,191,0,56,0,56,0,0,56,0,56,0,56,0,56,191,191,191,56,191,56,191,56,191,56,191,0,0,0,103,193,192,103,193,192,103,193,192,103,193,103,193,103,103,103,193,192,103,193,192,103,193,192,103,103,193,192,103,193,192,193,103,193,103,193,103,193,103,103,193,192,103,193,192,192,103,193,103,193,192,103,193,192,193,192,103,192,103,103,193,103,193,192,103,193,192,103,193,192,103,193,192,0,0,43,43,0,0,0,43,198,77,43,196,77,77,195,196,195,198,77,43,196,195,198,77,43,196,195,198,77,43,196,198,77,43,196,198,198,198,195,198,77,77,43,196,195,198,77,43,196,195,198,198,77,43,196,195,198,77,43,196,195,196,198,43,196,198,43,196,198,43,196,198,198,77,43,196,195,198,43,196,198,43,196,198,77,43,196,195,198,77,43,196,195,196,196,195,198,195,77,196,198,198,77,43,196,198,77,43,196,195,198,77,43,196,195,198,77,43,196,195,198,77,43,196,195,235,235,235,0,0,0,0,200,199,27,199,27,200,199,27,200,199,27,200,199,200,199,200,200,200,27,200,199,27,200,199,27,200,200,199,27,200,199,27,200,199,200,199,200,199,200,200,199,27,27,200,199,200,199,200,199,27,200,199,27,199,199,27,200,27,199,200,199,200,199,27,200,199,27,200,199,27,200,199,27,200,199,27,199,0,0,0,0,236,202,237,202,125,236,202,125,236,202,125,202,202,125,125,236,202,125,236,202,125,236,202,125,236,202,202,125,236,202,202,125,125,236,202,125,125,236,202,236,202,237,202,202,202,125,236,202,125,236,202,125,236,202,125,236,202,0,0,0,0,205,206,204,207,205,206,204,207,205,206,204,205,206,205,206,205,205,205,204,207,205,206,204,207,205,206,204,205,207,205,206,204,207,205,206,204,206,205,206,205,206,205,206,207,205,205,206,204,205,206,204,204,205,206,207,205,206,204,207,205,206,204,206,207,204,205,204,205,205,206,207,205,206,204,207,205,206,204,207,205,206,204,207,205,206,204,0,0,0,0,211,144,212,144,144,144,209,211,144,212,209,211,144,212,209,211,144,212,211,144,212,211,212,211,211,209,212,211,144,212,209,211,144,212,209,211,211,144,212,209,211,144,212,209,211,144,212,211,144,212,211,144,212,212,212,211,211,144,212,209,211,144,212,209,209,211,144,212,211,144,212,209,211,144,212,209,212,212,209,211,212,209,212,212,211,144,211,144,212,144,211,144,212,209,211,144,212,209,211,144,212,209,211,144,212,209,212,212,212,135,0,135,0,135,221,135,221,135,221,135,221,135,221,135,221,135,135,135,135,135,221,221,135,221,135,221,135,221,135,135,221,135,221,135,221,135,221,135,0,0,0,215,216,216,216,216,216,197,215,216,197,215,216,197,215,216,215,216,215,215,215,216,197,215,216,197,215,216,197,215,215,216,197,215,216,197,215,216,215,216,215,216,215,215,216,197,215,216,197,197,215,216,215,216,197,215,216,197,216,216,216,216,216,216,197,215,197,215,215,216,215,216,197,215,216,197,215,216,197,215,216,197,0,0,0,218,219,210,218,219,210,218,219,210,218,219,218,219,218,219,218,218,210,218,219,210,218,219,210,218,218,219,210,218,219,210,218,219,218,219,218,219,218,218,219,210,210,218,219,210,210,218,219,218,219,210,218,219,210,219,210,218,210,218,219,218,219,218,219,210,218,219,210,218,219,210,218,219,210,0,0,238,222,238,222,222,222,238,222,238,222,238,222,238,222,238,222,222,222,222,238,222,238,222,222,222,222,238,222,238,222,238,222,238,222,238,222,238,222,0,0,0,0,0,122,123,168,123,168,124,122,123,168,124,122,123,168,122,123,122,123,122,122,122,168,124,124,122,123,168,124,122,123,168,122,123,124,122,123,168,124,122,123,168,122,123,122,123,122,123,123,124,122,122,123,168,168,122,123,122,123,124,122,123,168,124,122,123,168,123,123,168,122,168,123,123,122,123,124,122,123,168,124,122,123,168,124,122,123,168,124,122,123,168,124,122,123,168,123,123],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[2,3],[4,5],0,[[4,4],4],[2,2],[4,4],0,[2,3],[4,5],0,0,[[]],[[]],[[]],[[]],[[[7,[6]]],[[9,[8]]]],[2,2],[4,4],[[]],[[]],0,0,[5],[5],[5],[[10,5]],[5],[5],0,0,0,0,[[],2],[[],4],0,[11],[11],[11],[11],[[],[[12,[2]]]],[[],[[12,[4]]]],0,0,[[]],[[]],[11],[11],[[2,2],13],[[4,4],13],[[],13],0,0,0,[[[7,[6]]],13],0,0,0,0,[[2,14],[[12,[15]]]],[[4,14],[[12,[15]]]],[4,2],[16,2],[17,2],[[]],[2,4],[[]],[17,4],[16,4],[3,2],[3,2],[5,4],[3,2],[5,4],[[5,5],4],[[3,3,3],2],[[5,5,5],4],[[3,3,3],2],[[3,3,3,3],2],[[5,5,5,5],4],[[3,3,3,3],2],[[5,5,5,5],4],[[3,3,3,3],4],[[3,3,3,3],4],[3,2],[5,4],0,[2,3],[4,5],[[2,5],2],[[],18],[[],19],[[],19],0,0,[5],[2],[4],0,0,[[2,11],3],[[4,11],5],[[2,11],3],[[4,11],5],0,[[],11],[[],11],[4,5],[[]],[[]],[2,13],[[],13],[[],13],0,0,[[2,5],2],0,0,[[4,4],4],[[4,5],4],[[4,5],4],[[],20],0,0,0,0,0,0,0,0,0,0,0,[2,3],[4,5],[[[7,[6]]],[[9,[[22,[21]]]]]],0,0,0,0,0,[2,12],[4,12],0,0,0,0,0,0,[2],[4],[2],[2,2],[4,4],[[]],[[]],[4],[2],[4],[2],[4],0,0,[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],24],[[],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[25],[[25,26,27,11],[[29,[28]]]],[[30,11,19,19],[[29,[28]]]],[29],[25],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[29,31,32,33]],[[29,31,34,[24,[35]],[24,[35]],36]],[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[11],[11],[11],[[29,37]],[29],[[25,14],38],0,[[]],[[]],[[]],[[],11],[[],11],[[],11],[[]],[[]],[[]],[39,25],[29,11],[29],[25],0,[30,19],[[40,19],19],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],0,0,[[],24],[[],24],[[],24],0,0,0,0,0,0,[[]],[[]],[[41,42,28],43],[[41,42,44],[[45,[43]]]],[11],[11],[[]],[11],[[]],[[],11],[[]],[[],12],[[],12],[[],23],[[],24],0,0,0,0,0,0,0,[1],[[]],[[]],[10,10],[[]],[[10,10],46],[5],[5],[5],[[10,5]],[5],[5],[11],[11],[[]],[11],[[10,10],13],[[],13],[[10,14],38],[[]],[5],[[],11],[[]],[[10,10],[[24,[46]]]],[[]],[[],12],[[],12],[[],23],[[],24],0,0,0,[1],[[]],[[]],[[]],[[]],[[47,48],9],[47,47],[[]],[11],[11],[11],[11],[47,49],[[]],[[]],[11],[11],[47,50],[[47,14],38],[[]],[[]],0,[[],11],[[],11],[[]],[[]],[47,51],0,[47,48],[[],52],[[]],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],24],[[],24],0,0,0,0,0,0,0,0,[41],[41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],0,[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[53],[11],0,0,0,[[]],[[]],[[]],[[]],[[]],[54,24],[53,31],[[54,55,56,26,57]],0,0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],0,[[[32,[26]],[32,[58]],59],41],[26,53],0,[41],0,0,0,0,0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],[[],24],0,[1],[[]],[[]],[42,42],[[]],[[],42],[11],[11],[[]],[11],[[42,42],13],[[],13],[[42,14],38],[21,42],[[]],[60,42],[[[24,[21]]],42],[42,[[24,[21]]]],[[],19],[42],[[],11],[[]],0,[[42,21],42],[[]],[[],12],[[],12],[[],23],[[],24],0,0,0,0,[[]],[[]],[[]],[[]],[61],0,[[],61],[11],[11],[11],[11],[[]],[[]],[11],[11],[62,13],[[63,63],13],[[],13],0,[[63,14],38],[[]],[[]],[[],19],[[61,64]],[[]],[63],0,[[],11],[[],11],[[]],[[]],[61],0,0,[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],24],[[],24],0,0,0,0,0,0,[1],[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[65,65],[66,66],[67,67],[[]],[[]],[[]],0,[[],65],[[],67],[[],[[57,[68]]]],[11],[11],[11],[11],[11],[11],[11],[11],0,[[]],[[]],[[]],[[]],[11],[11],[11],[11],[[65,65],13],[[66,66],13],[[],13],[[],13],[[65,14],38],[[65,14],38],[[66,14],38],[[66,14],38],[[67,14],38],[[]],[[[69,[8]]],66],[[]],[[]],[[]],[[],65],[21,[[12,[65]]]],[21,[[12,[66]]]],0,0,[[],11],[[],11],[[],11],[[],11],[[65,11,[7,[6]]]],[[]],[[]],[[]],[[]],[65,37],[70,[[57,[70]]]],[[],20],0,[[[57,[70]],[7,[6]]],[[9,[67]]]],[[65,[7,[6]]]],[[[57,[70]],[7,[6]],[7,[6]]],[[24,[8]]]],0,[[]],[[]],[[]],[[],60],[[],60],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],[[70,65],[[57,[70]]]],0,0,0,0,[[]],[[]],[[71,57],[[72,[8]]]],[11],[11],[[]],[11],0,0,[[]],[73],[73],[[],11],[[]],[[],[[9,[71]]]],[[],12],[[],12],[[],23],[[71,[7,[6]]],9],[[],24],[[71,57,[7,[6]],13],[[9,[8]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[[7,[6]]],[[9,[8]]]],[[74,[7,[6]]],[[9,[8]]]],[[18,[7,[6]]],[[9,[8]]]],[[[7,[6]]],9],[[[7,[6]]],9],[[74,[7,[6]]],9],[[[7,[6]],[22,[21]]],9],[[[7,[6]],[22,[21]]],9],[[74,[7,[6]],[22,[21]]],9],[[],18],[11],[11],[11],[11],[[]],[[]],[11],[11],[[[7,[6]]],13],[[74,[7,[6]]],13],[[18,[7,[6]]],13],0,[[]],[[]],[[],74],[[],18],[[],11],[[],11],[[]],[[]],[[],74],[[[7,[6]]],[[9,[[22,[21]]]]]],[[74,[7,[6]]],[[9,[[22,[21]]]]]],[[18,[7,[6]]],[[9,[[22,[21]]]]]],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],24],[[],24],0,0,[1],0,0,[[]],[[]],[[]],[[]],0,0,[75,75],[[]],[[76,56,26,43],77],0,[11],[11],[11],[11],[[]],[[]],[11],[11],[[]],[[]],[[],11],[[],11],[[]],[[]],[[],13],0,0,[[56,26],76],0,0,0,0,0,[[]],0,[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],24],[[],24],0,[[],78],0,0,[79,5],[[45,80,81,82]],[[83,84],[[9,[85]]]],[[21,86,41],[[9,[[45,[87]]]]]],[88,[[24,[89]]]],[[86,41],[[9,[[45,[87]]]]]],0,0,0,[[90,91,91],92],[[90,81],92],[[90,79,79,79],92],[[90,91,91,91],92],[[90,79,79],92],[[90,91,91],92],[[90,37],92],[[90,37],92],[[90,37],92],[[90,37],92],[[90,37,93]],[[94,[69,[42]]],90],[90,95],0,[[]],[[]],[[]],[[]],[[]],[[]],[[92,2],92],[[],[[94,[68]]]],[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[90],[11],[11],[11],[[92,96],92],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[]],[[]],[[]],[94,13],[94,37],[94,37],[[92,97],92],0,0,0,[[94,41],98],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[92,92],0,0,[[90,99],90],0,0,0,0,[1],[1],[1],[1],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[85,85],[100,100],[101,101],[102,102],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],0,0,0,0,0,[[41,103,85],[[12,[101,104]]]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],0,0,0,0,0,0,[1],0,[[]],[[]],[105,105],[[]],[11],[11],[[]],[11],0,[[]],[[],11],[[]],[[],13],[[]],[[],12],[[],12],[[],23],[[],24],0,[1],[[]],[[]],[106,106],[[]],[11],[11],[[]],[11],[[106,14],38],[[]],[[],11],[[]],[[],13],[[],93],0,0,[[]],[[],12],[[],12],[[],23],[[],24],[[]],0,0,0,0,[[107,79],108],[[107,91],108],[[107,11,37],109],[[107,11,37],109],[[110,[69,[42]]],107],[107,111],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[108,2],108],0,0,[[109,37],109],0,[11],[11],[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[[]],[11],[107],[11],[11],[11],[107],[[107,112],107],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[110,37],[110,37],0,[41,110],[[109,37],109],[[108,97],108],[[110,41],[[12,[113,114]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],[108,108],[[109,37],109],0,0,0,0,0,0,[[107,99],107],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[115,115],[[]],0,0,0,[[55,56,26,57]],0,0,0,0,0,0,[11],[11],[[]],[[56,115,116],9],[11],[[115,115],13],[[],13],0,0,0,0,[[115,14],38],[[]],0,[[],19],0,[115],[[],11],0,[[]],0,0,0,0,0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],0,[[],12],[[],12],[[],23],[[],24],0,0,0,0,0,[1],0,0,[[]],[[]],[[]],[[]],[117,117],[[]],[[55,56,26,57],118],[11],[11],[11],[11],[[]],[[]],[[118,56,115,116,117],9],[11],[11],[[]],[[]],[[],11],[[],11],[[]],[[]],[[41,32],117],[[]],0,[[]],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],24],[[],24],0,0,0,0,0,0,[1],[1],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[119,119],[120,120],[[]],[[]],0,[[41,121,13],[[32,[[125,[122,123,124]]]]]],[[55,56,26,57],126],[[],121],[[],119],0,0,0,0,[11],[11],[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[[]],[[126,56,115,116],9],[11],[11],[11],[11],[[119,14],38],[[]],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[41,[[12,[120,104]]]],0,0,[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],0,[1],[[]],[[]],[127,127],[[]],0,0,0,[11],[11],[[]],[11],0,[[]],[[],11],[[]],[[],13],0,[[]],[[],12],[[],12],[[],23],[[],24],0,0,[1],[[]],[[]],[[]],[[]],[128,128],[[]],[[55,56,26,57],129],[11],[11],[11],[11],[[]],[[]],[[129,56,115,116,128],9],[11],[11],[[]],[[]],[[],11],[[],11],[[]],[[]],[41,128],[[]],0,[[]],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],24],[[],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[[],96],0,0,0,0,0,[[96,96],96],[[96,96]],[[96,96],96],[[96,96]],[96,3],0,[[96,96],96],[[96,96]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[130,130],[98,98],[96,96],[131,131],[[]],[[]],[[]],[[]],[[96,96],46],0,[96,96],[[96,96],13],[[55,56,26,57],132],[[],96],[[],131],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[96,96],96],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[132,56,115,116],9],[11],[11],[11],[11],[11],[11],[11],[[],96],[[96,96],13],[[133,133],13],[[],13],[[],13],[[96,134]],0,[[96,14],38],[[96,14],38],[[96,14],38],[[96,14],38],[[96,14],38],[[133,14],38],[[133,14],38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[135,133],[3,[[24,[96]]]],[3,96],[3,96],[134,96],[[],19],[5,5],0,[96],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[96,96]],[[96,96],96],[[96,96],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[96,13],[96,13],[[],13],0,0,[41,[[12,[98,133]]]],[96,96],[[96,96],[[24,[46]]]],[136],0,[[96,96]],0,[[96,96,13]],[133,[[24,[62]]]],[[96,96],96],[[96,96]],[[96,96],96],[[]],[[]],[[]],[[]],[[],60],[[96,96]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[96,96],96],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,0,0,0,0,[1],[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[137,137],[138,138],[139,139],[[]],[[]],[[]],0,[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[11],[11],[11],0,0,[[]],[[]],[[]],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[],13],[[],13],[[],13],0,0,0,0,[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],0,0,0,0,0,[1],[1],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[140,140],[141,141],[[]],[[]],0,[[55,56,26,57],142],[11],[11],[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[[]],[[142,56,115,116],9],[11],[11],[11],[11],[[]],[[]],[[]],[[]],0,0,[[],11],[[],11],[[],11],[[],11],0,[[]],[[]],[[]],[[]],0,0,[41,[[9,[141]]]],0,[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],0,0,[1],0,[[]],[[]],[143,143],[[]],[11],[11],[[]],[11],[[]],[[],11],[[]],[[],13],[[]],[[],12],[[],12],[[],23],[[],24],[[],144],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[],112],0,0,0,0,0,[[112,112],112],[[112,112]],[[112,112],112],[[112,112]],[112,93],0,[[112,112],112],[[112,112]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[112,112],[145,145],[113,113],[[]],[[]],[[]],[[112,112],46],[112,112],[[112,112],13],[[55,56,26,57],146],[[],112],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[112,112],112],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[146,56,115,116],9],[11],[11],[11],[11],[11],[11],[11],[[],112],[[112,112],13],[[114,114],13],[[],13],[[],13],[[112,134]],0,[[112,14],38],[[112,14],38],[[112,14],38],[[112,14],38],[[112,14],38],[[114,14],38],[[114,14],38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[93,[[24,[112]]]],[93,112],[93,112],[134,112],[[],19],0,[112],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[112,112]],[[112,112],112],[[112,112],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[112,13],[112,13],[[],13],0,[[41,110],[[12,[113,114]]]],[112,112],[[112,112],[[24,[46]]]],0,0,[136],0,[[112,112]],0,[[112,112,13]],[[112,112],112],[[112,112]],[[112,112],112],[[]],[[]],[[]],[[],60],[[112,112]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[112,112],112],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,0,0,0,[1],[1],[[]],[[]],[[]],[[]],[147,147],[148,148],[[]],[[]],[11],[11],[11],[11],[[]],[[]],[11],[11],0,0,[[]],[[]],[[],11],[[],11],[[]],[[]],[[],13],[[],13],0,0,[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],24],[[],24],0,0,0,0,0,0,0,0,0,0,[1],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[149,149],[[]],[[55,56,26,57],150],[[],151],0,[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[[]],[[]],[[150,56,115,116],9],[11],[11],[11],[11],[11],0,0,[[152,14],38],[[153,14],38],[[]],[[]],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],0,[41,[[12,[149,104]]]],[[]],0,0,0,0,[[]],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],[[],24],0,[1],[[]],[[]],[154,154],[[]],0,[11],[11],[[]],[11],0,0,0,[[]],[[],11],[[]],[[],13],0,[[]],0,[[],12],[[],12],[[],23],[[],24],0,0,[1],[[]],[[]],[[]],[[]],[155,155],[[]],[[55,56,26,57],156],[11],[11],[11],[11],[[]],[[]],[[156,56,115,116,155],9],[11],[11],[[]],[[]],[[],11],[[],11],[[]],[[]],[41,155],0,[[]],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],24],[[],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[[157,19]],[[]],[[]],[[]],[[]],[158,158],[[]],[[158,158],46],[[157,41,85,86],[[12,[159,104]]]],[158,160],[[],158],[11],[11],[11],[11],[[],[[12,[158]]]],[[]],[[]],[11],[11],[[158,158],13],[[],13],[[158,14],38],[[]],[[]],[160,158],[[157,159],[[12,[101,104]]]],[[],19],[158],[[],11],[[],11],[[]],[[]],0,0,[142,157],[[158,158],[[24,[46]]]],[158,12],[[]],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],24],[[],24],0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[161,19]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[161,19],[[12,[104]]]],[[[164,[[0,[162,163]]]]],[[164,[[0,[162,163]]]]]],[86,86],[[]],[[]],[[],[[161,[163]]]],[11],[11],[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[[[164,[[0,[165,163]]]],164],13],[[104,104],13],[[],13],[[],13],[[[164,[[0,[166,163]]]],14],38],[[104,14],38],[[104,14],38],0,[[]],[[]],[[]],[[]],[[161,164],[[12,[104]]]],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],0,[136],0,[[161,86],164],[[]],[[]],[[],60],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],0,0,0,0,0,0,0,[1],[[84,19]],[[]],[[]],[[]],[[]],[[]],[[]],[167,167],[[]],[[],[[45,[3]]]],[[84,168,169],167],[[26,58,168,169],167],0,[11],[11],[11],[11],[11],[11],0,[[]],[[]],[[]],[11],[11],[11],0,[[]],[[]],[[]],[[84,167],[[12,[[32,[[125,[122,123,124]]]],104]]]],0,[[],11],[[],11],[[],11],[[]],[[]],[[]],[[],167],0,[[[32,[26]],[32,[58]],168],84],0,[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],0,[84,167],0,0,0,0,0,[1],[1],[[]],[[]],[[]],[[]],[97,97],[170,170],[[]],[[]],[11],[11],[11],[11],[[],[[12,[97]]]],[[]],[[]],[11],[11],[[97,97],13],[[97,14],38],[[]],[97,170],[[]],[[],11],[[],11],[[]],[[]],[97,13],[[],13],[[],13],[[97,5]],[[97,5]],[5,97],[5,97],[97,[[24,[5]]]],[97,[[24,[5]]]],[97,12],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],24],[[],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[171,171],[172,172],[173,173],[174,174],[[]],[[]],[[]],[[]],[[175,41,116,91],9],[[],175],[[],173],[[],174],0,[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[],[[12,[173]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[175,41,4],[[9,[176]]]],0,0,[[175,41,115,116]],[11],[11],[11],[11],[11],[11],[11],[[171,14],38],[[172,14],38],[[173,14],38],[[174,14],38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[175,175],0,0,0,0,[173,12],0,[[175,41,174],[[9,[175]]]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[177,177],[178,178],[179,179],[180,180],[181,181],[182,182],[183,183],[184,184],[185,185],[186,186],[187,187],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],187],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[5,177],[[]],[93,178],[[]],[91,179],[[]],[91,180],[[]],[79,181],[188,181],[[]],[79,182],[188,182],[[]],[4,183],[[]],[189,183],[190,184],[[]],[99,185],[[]],[81,186],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[[],56],[[],191],[11],[11],[11],[11],[[]],[[]],[11],[11],0,[[]],[[]],[[],11],[[],11],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[56,191],0,0,0,[191,19],0,[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],24],[[],24],0,0,0,[1],[1],[[192,19]],[[]],[[]],[[]],[[]],[[]],[[]],[103,103],[193,193],[[]],[[]],[[103,103],46],[103,160],[[],103],[[],193],[[],192],[11],[11],[11],[11],[11],[11],[[],[[12,[103]]]],[[]],[[]],[[]],[11],[11],[11],0,[[103,103],13],[[193,193],13],[[],13],[[],13],[[103,14],38],[[193,14],38],[[]],[160,103],[[]],[[]],[[],19],[[],19],[[192,26,193],103],[[192,103],[[12,[194,135]]]],[103],[193],[[],11],[[],11],[[],11],[[]],[[]],[[]],0,[192,11],[[103,103],[[24,[46]]]],0,[103,12],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],0,0,0,0,0,0,0,0,[1],[1],[1],[1],0,0,[[195,26,56,196],77],[196,13],[[195,19,168,27,197]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[198,198],[77,77],[43,43],[196,196],[[]],[[]],[[]],[[]],[[198,198],46],[198,160],[[],198],[[],195],[11],[77],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[],[[12,[198]]]],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],0,[[198,198],13],[[43,43],13],[[196,196],13],[[],13],[[],13],[[],13],[[198,14],38],[[43,14],38],[[196,14],38],[160,198],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[198],[43],[196],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],0,0,[195,11],[[198,198],[[24,[46]]]],0,0,[196,19],[198,12],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],[[],24],0,0,0,0,0,0,0,[1],[1],[[27,26,199],[[32,[[125,[200,199,201]]]]]],[199,13],[[27,19]],[[]],[[]],[[]],[[]],[[]],[[]],[200,200],[199,199],[[]],[[]],[[200,200],46],[200,160],[[],200],[[],27],[11],[11],[11],[11],[11],[11],[[],[[12,[200]]]],[[]],[[]],[[]],[11],[11],[11],[[200,200],13],[[199,199],13],[[],13],[[],13],[[200,14],38],[[199,14],38],[[]],[160,200],[[]],[[]],[[27,200],[[12,[[32,[[125,[200,199,201]]]],135]]]],[[],19],[[],19],[200],[199],[[],11],[[],11],[[],11],[[]],[[]],[[]],0,0,[27,11],[[200,200],[[24,[46]]]],0,[199,19],[200,12],0,[[]],[[]],[27,19],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],0,0,0,0,0,0,[[202,203],[[32,[125]]]],[[],13],[[202,19,73]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],[[202,[163]]]],[125],[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[11],[11],[11],[202],[[]],[[]],[[]],[202,[[12,[[32,[125]],135]]]],0,[[],11],[[],11],[[],11],0,[[]],[[]],[[]],0,[202,11],[[],19],0,[202,19],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],0,0,0,0,[1],[1],[[204,19]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[205,205],[206,206],[[]],[[]],[[205,205],46],[205,160],[[],205],[[],204],[11],[11],[11],[11],[11],[11],[11],[11],[[],[[12,[205]]]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],0,[[205,205],13],[[206,206],13],[[],13],[[],13],[[205,14],38],[[206,14],38],[[]],[160,205],[[]],[[]],[[]],[[],19],[[],19],[[204,26,206,192],205],[[204,205],[[12,[207,135]]]],[205],[206],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],0,0,[204,11],[[205,205],[[24,[46]]]],0,[205,12],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],0,0,0,0,[1],[1],[1],0,0,[[93,37],208],[[209,26,19,210,204]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[211,211],[144,144],[212,212],[[]],[[]],[[]],[[211,211],46],[[212,26,204,210],[[9,[213]]]],[211,160],[[],211],[[],209],0,[11],[11],[11],[11],[11],[11],[11],[11],[[],[[12,[211]]]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[[211,211],13],[[144,144],13],[[212,212],13],[[],13],[[],13],[[],13],[[211,14],38],[[144,14],38],[[212,14],38],0,0,[[]],[160,211],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[209,26,212,204,210],211],[[209,211],[[12,[213,135]]]],[211],[144],[212],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],0,0,[209,11],[[211,211],[[24,[46]]]],0,0,0,0,[211,12],0,[[]],[[]],[[]],[144,214],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[11],[11],[11],[11],[[]],[[]],[11],[11],[[135,135],13],[[],13],[[135,14],38],[[135,14],38],0,[[]],[[]],[[],11],[[],11],[[]],[[]],0,[136],[[],60],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],24],[[],24],0,0,0,[1],[1],0,0,0,0,[[197,19]],[[]],[[]],[[]],[[]],[[]],[[]],[215,215],[216,216],[[]],[[]],[[215,215],46],[215,160],[[],215],[[],216],[[],197],[11],[11],[11],[11],[11],[11],[[],[[12,[215]]]],[[]],[[]],[[]],[11],[11],[11],[[215,215],13],[[216,216],13],[[],13],[[],13],[[215,14],38],[[216,14],38],[160,215],[[]],[[]],[[]],[[],19],[[],19],[[197,26,216],215],[[197,215],[[12,[217,135]]]],[215],[216],[[],11],[[],11],[[],11],[[]],[[]],[[]],0,0,0,0,0,0,[197,11],[[215,215],[[24,[46]]]],0,[215,12],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],0,0,0,[1],[1],[[210,26,57,19,72]],[[]],[[]],[[]],[[]],[[]],[[]],[218,218],[219,219],[[]],[[]],[[218,218],46],[[219,26,57],220],[218,160],[[],218],[[],210],[11],[11],[11],[11],[11],[11],[[],[[12,[218]]]],[[]],[[]],[[]],[11],[11],[11],[[218,218],13],[[219,219],13],[[],13],[[],13],[[218,14],38],[[219,14],38],[[]],[160,218],[[]],[[]],[[210,218],[[12,[220,135]]]],[[],19],[[],19],[[210,26,57,219],218],[[210,218],[[12,[221,135]]]],[218],[219],[[],11],[[],11],[[],11],[[]],[[]],[[]],0,[210,11],[[218,218],[[24,[46]]]],0,[218,12],0,[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],0,0,[[]],[[]],[[]],[[]],0,[[],[[222,[163]]]],[11],[11],[11],[11],[[]],[[]],[11],[11],[[]],[[]],[[222,203]],[222,[[12,[135]]]],[222,[[12,[221,135]]]],[[],11],[[],11],[[]],[[]],0,[222,11],[[222,73]],0,0,0,[24,[[12,[135]]]],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],24],[[],24],0,0,0,0,0,[1],[1],[[168,26,123],[[32,[[125,[122,123,124]]]]]],[123,13],[[168,19]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[122,122],[123,123],[[]],[[]],[[122,122],46],[122,160],[[],122],[[],168],0,[11],[11],[11],[11],[11],[11],[11],[11],[[],[[12,[122]]]],0,[[]],[[]],[[]],[[]],[11],[11],[11],[11],[[122,122],13],[[123,123],13],[[],13],[[],13],[[122,14],38],[[123,14],38],0,[[]],[[]],[160,122],[[]],[[]],[[168,122],[[12,[[32,[[125,[122,123,124]]]],135]]]],[[],19],[[],19],[122],[123],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],0,0,[168,11],[[122,122],[[24,[46]]]],0,[123,19],0,[122,12],0,0,[[]],[[]],[168,19],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],0,[[123,42],123]],"p":[[3,"Private"],[3,"Color32"],[15,"u8"],[3,"Rgba"],[15,"f32"],[3,"Path"],[8,"AsRef"],[3,"PathBuf"],[6,"Result"],[4,"ColorMap"],[15,"usize"],[4,"Result"],[15,"bool"],[3,"Formatter"],[3,"Error"],[3,"Hsva"],[3,"HsvaGamma"],[3,"OsFileSystem"],[15,"u64"],[6,"RecommendedFileResolver"],[15,"str"],[4,"Cow"],[3,"TypeId"],[4,"Option"],[3,"CpuWriteGpuReadBelt"],[3,"Device"],[3,"GpuBufferPool"],[8,"Pod"],[3,"CpuWriteGpuReadBuffer"],[3,"Chunk"],[3,"CommandEncoder"],[3,"Arc"],[6,"BufferAddress"],[6,"ImageCopyTexture"],[3,"NonZeroU32"],[3,"Extent3d"],[8,"Iterator"],[6,"Result"],[6,"BufferSize"],[3,"BufferViewMut"],[3,"RenderContext"],[3,"DebugLabel"],[4,"BindGroupEntry"],[8,"ExactSizeIterator"],[3,"Vec"],[4,"Ordering"],[4,"HardwareTier"],[3,"DownlevelCapabilities"],[6,"DeviceDescriptor"],[3,"Features"],[3,"Limits"],[3,"Backends"],[3,"FrameGlobalCommandEncoder"],[3,"Renderers"],[3,"SharedRendererData"],[3,"WgpuResourcePools"],[3,"FileResolver"],[3,"Queue"],[3,"RenderContextConfig"],[3,"String"],[3,"ErrorTracker"],[8,"Error"],[3,"WrappedContextError"],[4,"Error"],[3,"SearchPath"],[3,"ImportClause"],[3,"InterpolatedFile"],[8,"Default"],[8,"Into"],[8,"FileSystem"],[3,"FileServer"],[6,"HashSet"],[8,"FnMut"],[3,"MemFileSystem"],[3,"FrameUniformBuffer"],[3,"GlobalBindings"],[3,"GpuBindGroup"],[3,"BoundingBox"],[3,"Vec3"],[3,"Node"],[3,"Affine3A"],[6,"HashMap"],[3,"Mesh"],[3,"TextureManager2D"],[3,"Mesh"],[4,"ResourceLifeTime"],[3,"MeshInstance"],[4,"Format"],[4,"TextureFormat"],[3,"LineBatchBuilder"],[3,"Vec2"],[3,"LineStripBuilder"],[15,"u32"],[3,"LineStripSeriesBuilder"],[3,"LineBatchInfo"],[3,"LineStripFlags"],[3,"Size"],[3,"LineDrawData"],[3,"Mat4"],[3,"Material"],[3,"GpuMesh"],[3,"GpuMaterial"],[3,"GpuBindGroupLayoutHandle"],[4,"ResourceManagerError"],[3,"MaterialUniformBuffer"],[3,"MeshVertexData"],[3,"PointCloudBatchBuilder"],[3,"PointBuilder"],[3,"PointsBuilder"],[3,"PointCloudBuilder"],[3,"PointCloudBatchInfo"],[3,"PointCloudBatchFlags"],[3,"PointCloudDrawData"],[4,"PointCloudDrawDataError"],[4,"DrawPhase"],[3,"RenderPass"],[3,"CompositorDrawData"],[3,"Compositor"],[4,"DepthCloudDepthData"],[3,"DepthCloudDrawData"],[3,"DepthCloud"],[3,"GpuTextureHandle"],[3,"TextureDesc"],[3,"GpuTextureInternal"],[3,"DynamicResource"],[3,"DepthCloudRenderer"],[3,"DepthCloudInfoUBO"],[3,"GenericSkyboxDrawData"],[3,"GenericSkybox"],[3,"LineStripBatch"],[3,"LineStripInfo"],[3,"LineRenderer"],[4,"LineDrawDataError"],[8,"IntoIterator"],[4,"PoolError"],[3,"Demand"],[3,"LineVertex"],[3,"LineStripInfo"],[3,"BatchUniformBuffer"],[3,"MeshBatch"],[3,"MeshDrawData"],[3,"MeshRenderer"],[3,"InstanceData"],[3,"VertexBufferLayout"],[3,"PointCloudBatch"],[3,"PointCloudRenderer"],[3,"PositionData"],[3,"BatchUniformBuffer"],[3,"RectangleDrawData"],[3,"RectangleRenderer"],[3,"TexturedRect"],[4,"TextureFilterMag"],[4,"TextureFilterMin"],[3,"UniformBuffer"],[3,"TestTriangleDrawData"],[3,"TestTriangle"],[3,"MeshManager"],[3,"MeshHandleInner"],[6,"GpuMeshHandle"],[3,"KeyData"],[3,"ResourceManager"],[8,"Clone"],[8,"Key"],[4,"ResourceHandle"],[8,"PartialEq"],[8,"Debug"],[3,"GpuTexture2DHandle"],[3,"GpuTexturePool"],[3,"Texture2DCreationDesc"],[3,"SizeHalf"],[4,"OrthographicCameraMode"],[4,"Projection"],[3,"AutoSizeConfig"],[3,"TargetConfiguration"],[3,"ViewBuilder"],[3,"CommandBuffer"],[3,"F32RowPadded"],[3,"U32RowPadded"],[3,"Vec2"],[3,"Vec2RowPadded"],[3,"Vec3RowPadded"],[3,"Vec3Unpadded"],[3,"Vec4"],[3,"Mat3"],[3,"Mat4"],[3,"Mat4x3"],[3,"PaddingRow"],[3,"Vec3A"],[3,"Vec4"],[3,"Mat3"],[3,"WgpuResourcePoolStatistics"],[3,"GpuBindGroupLayoutPool"],[3,"BindGroupLayoutDesc"],[3,"BindGroupLayout"],[3,"GpuBindGroupPool"],[3,"BindGroupDesc"],[3,"GpuSamplerPool"],[3,"GpuBindGroupHandle"],[3,"BufferDesc"],[3,"GpuBufferHandle"],[3,"Buffer"],[3,"DynamicResourcePool"],[8,"FnOnce"],[3,"GpuPipelineLayoutPool"],[3,"GpuPipelineLayoutHandle"],[3,"PipelineLayoutDesc"],[3,"GpuPipelineLayout"],[3,"SmallVec"],[3,"GpuRenderPipelinePool"],[3,"GpuShaderModulePool"],[3,"GpuRenderPipelineHandle"],[3,"RenderPipelineDesc"],[3,"RenderPipeline"],[3,"VertexBufferLayout"],[3,"GpuSamplerHandle"],[3,"SamplerDesc"],[3,"Sampler"],[3,"GpuShaderModuleHandle"],[3,"ShaderModuleDesc"],[3,"ShaderModule"],[3,"ResourceStatistics"],[3,"StaticResourcePool"],[3,"UniformBufferAlignmentCheck"],[3,"ActiveFrameContext"],[8,"DedupableError"],[8,"DrawData"],[8,"Renderer"],[3,"PointCloudVertex"],[13,"Frame"],[13,"ExpiredResource"],[3,"ViewTargetSetup"],[3,"QueuedDraw"],[13,"Orthographic"],[13,"Perspective"],[13,"Buffer"],[3,"DynamicResourcePoolProtectedState"],[8,"DynamicResourcesDesc"],[3,"StoredResource"]]},\
"re_sdk":{"doc":"The Rerun SDK","t":[3,8,3,3,13,13,13,3,4,13,17,3,8,3,13,18,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,0,0,5,11,5,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,0,5,5,12,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,0,11,11,11,11,11,11,11,11,0,10,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,0,11,11,11,11,11,11,11,11,11,12,11,11,11,11,0,11,12,0,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,13,3,13,13,3,13,13,13,13,13,13,13,13,18,18,3,13,3,3,3,3,3,4,4,3,13,3,13,3,3,3,3,13,3,4,3,13,18,3,3,3,3,4,4,3,3,8,3,4,13,13,13,13,13,13,3,3,3,3,13,13,13,13,13,13,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,12,12,12,12,12,11,11,12,12,12,12,4,4,13,18,18,18,13,18,18,18,13,13,4,3,13,13,13,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,2,2,2,2,2,2,2,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,5,5,13,13,13,13,3,13,13,4,18,3,3,4,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,3,4,13,13,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,13,13,13,13,4,3,13,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,13,3,13,3,3,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ApplicationId","Component","ComponentName","EntityPath","IllegalInstanceKey","MismatchedRowLengths","MoreThanOneRow","MsgSender","MsgSenderError","PackingError","RERUN_ENV_VAR","RecordingId","SerializableComponent","Session","SplattedInstanceKeys","ZERO","__clone_box","__clone_box","__clone_box","__clone_box","application_id","as_ref","as_slice","as_str","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clap","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","components","coordinates","decide_logging_enabled","default","default_server_addr","demo_util","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","drop","drop","drop","drop","enabled","entity_path","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","external","field","file_writer","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_str","from_uuid","full_name","get_hash","get_hash","get_hash","get_hash","get_rerun_env","global","global_session","global_session_with_default_enabled","has_sent_begin_recording_msg","hash","hash","hash","hash","hash","hash","hash","hash64","init","init","init","init","instanced","into","into","into","into","into_resettable","is_child_of","is_descendant_of","is_official_example","is_root","iter","join","last","len","log","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","msg_sender","name","new","new","num_instances","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","parent","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","random","recording_id","recording_source","remote_viewer_server","root","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","sender","serialize","serialize","serialize","serialize","session","short_name","splatted","time","timeless","timepoint","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","tokio_rt","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unknown","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Connect","RerunArgs","RerunBehavior","Save","Serve","Spawn","__clone_box","__clone_box","augment_args","augment_args_for_update","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","connect","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","equivalent","equivalent","fmt","fmt","from","from","from_arg_matches","from_arg_matches_mut","group_id","init","init","into","into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","on_startup","on_teardown","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","save","serve","spawn","to_behavior","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","AnnotationContext","AnnotationInfo","Arrow3D","Box3D","ClassDescription","ClassId","ClassId","ColorRGBA","Depth","Encoded","EncodedMesh3D","F32","F64","Glb","Gltf","I16","I32","I64","I8","IDENTITY","IDENTITY","InstanceKey","JPEG","KeypointId","Label","LineStrip2D","LineStrip3D","Mat3x3","Mesh3D","MeshFormat","MeshId","Obj","Pinhole","Pinhole","Point2D","Point3D","Quaternion","Radius","Raw","RawMesh3D","Rect2D","Rigid3","Rigid3","SPLAT","Scalar","ScalarPlotProps","Size3D","Tensor","TensorData","TensorDataMeaning","TensorDimension","TensorId","TensorTrait","TextEntry","Transform","U16","U32","U64","U8","Unknown","Unknown","Vec2D","Vec3D","Vec4D","ViewCoordinates","XCYCW2H2","XCYCWH","XYWH","XYXY","YXHW","YXYX","ZERO","ZERO","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","albedo_factor","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","aspect_ratio","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","child_from_parent","class_map","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","color","data","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","default","default","default","default","default","default","default","default","default","default","depth","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe","describe_short","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focal_length","focal_length_in_pixels","format","forward","fov_y","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_body","from_dynamic_image","from_image","from_rgb","from_rgba","from_rub","from_str","from_up_and_handedness","from_xywh","get","get","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","handedness","hash","hash","hash","hash","hash","hash","height","height","id","id","id","image_from_cam","index","index","index","indices","info","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_resettable","is_shaped_like_an_image","is_shaped_like_an_image","is_specific","is_splat","is_vector","is_vector","keypoint_connections","keypoint_map","label","level","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","meaning","meaning","meaning","mesh_id","mesh_id","mesh_id","meter","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","named","new","new","new","new","new","new","new","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_child_from_parent","new_parent_from_child","normals","num_dim","num_dim","num_triangles","origin","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","parent_from_child","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","positions","principal_point","random","random","resolution","resolution","right","rotation","sanity_check","sanity_check","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","scattered","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","shape","shape","shape","size","specific_index","tensor_from_jpeg_bytes","tensor_from_jpeg_file","tensor_id","to_array","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_rub","to_string","to_string","to_string","to_string","to_string","to_string","top_left_corner","transform","translation","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unnamed","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","up","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vector","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","w","w","width","width","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","x","x","x","x","x","x","x","x","y","y","y","y","y","y","y","y","z","z","z","z","z","z","Axis3","Handedness","Left","NEGATIVE_X","NEGATIVE_Y","NEGATIVE_Z","Negative","POSITIVE_X","POSITIVE_Y","POSITIVE_Z","Positive","Right","Sign","SignedAxis3","X","Y","Z","__clone_box","__clone_box","__clone_box","__clone_box","as_vec3","axis","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","describe","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_dim","from_right_handed","from_str","init","init","init","init","into","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","serialize","sign","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","bounce_lerp","color_spiral","grid","lerp","linspace","glam","image","re_log","re_log_types","re_memory","re_sdk_comms","re_viewer","FileWriter","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","downcast","drop","drop","from","init","into","join_handle","lossless_try_into","lossy_into","new","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","try_from","try_into","tx","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","write","global_session","global_session_with_default_enabled","ArrowMsg","BeginRecordingMsg","ClearComponents","ClearRecursive","ComponentBundle","EntityPathOpMsg","Goodbye","LogMsg","MAX","MsgBundle","MsgId","PathOp","ZERO","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","arrow_deserialize","arrow_serialize","as_u128","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clear","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","components","data_type","data_type","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","entity_path","entity_path","eq","eq","equivalent","equivalent","equivalent","equivalent","find_component","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_hash","hash","id","init","init","init","init","init","into","into","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","msg_id","name","name","name","new","new","new_array","new_empty","new_from_boxed","num_components","num_instances","num_instances","num_rows","num_rows","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","random","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","short_string","time_point","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_append_component","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","value","value_boxed","value_list","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","IllegalInstanceKey","MismatchedRowLengths","MoreThanOneRow","MsgSender","MsgSenderError","PackingError","SplattedInstanceKeys","az","az","borrow","borrow","borrow_mut","borrow_mut","bundle_from_iter","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","entity_path","fmt","fmt","from","from","from","init","init","instanced","into","into","into_messages","lossless_try_into","lossless_try_into","lossy_into","lossy_into","new","num_instances","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","provide","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","send","source","splatted","timeless","timepoint","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","with_component","with_splat","with_splat_opt","with_time","with_timeless","with_timepoint","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","RemoteViewerServer","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","downcast","drop","drop","from","init","into","lossless_try_into","lossy_into","new","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","send","sender","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","web_server_join_handle","wrapping_as","wrapping_cast_from","Buffered","File","NativeViewer","Remote","Sender","Session","WebViewer","app_env","application_id","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","connect","default","default","deref","deref","deref_mut","deref_mut","disconnect","downcast","downcast","drain_log_messages_buffer","drop","drop","drop_msgs_if_disconnected","enabled","flush","from","from","has_sent_begin_recording_msg","init","init","init","into","into","is_enabled","is_official_example","is_streaming_over_tcp","lossless_try_into","lossless_try_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","recording_id","recording_id","recording_source","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","save","send","send","send_path_op","sender","serve","set_application_id","set_enabled","set_recording_id","set_recording_source","show","spawn","tokio_rt","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","BEGINNING","MAX","MIN","Sequence","Time","Time","TimeInt","TimePoint","TimeType","Timeline","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","abs","add","add","add","add_assign","add_assign","arrow_deserialize","arrow_serialize","as_f32","as_f64","as_i64","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","data_type","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","format","format","format_range","format_time_range","from","from","from","from","from","from","from","from","from","from","from","from_i64","from_iter","from_nanos","from_ns_since_epoch","from_seconds","from_seconds_since_epoch","from_sequence","from_u64","from_us_since_epoch","get","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","init","init","init","init","init","insert","into","into","into","into","into","into_iter","into_iter","is_absolute_date","is_empty","is_exactly_midnight","is_timeless","is_timeless","iter","lerp","log_time","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","name","name","nanos_since_epoch","neg","new","new_array","new_sequence","new_temporal","now","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remove","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","serialize","serialize","sub","sub","sub","sub","sub_assign","sum","timeless","timelines","times","to_datetime","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","typ","typ","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from"],"q":["re_sdkre_sdk::clap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_sdk::components","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_sdk::coordinatesre_sdk::demo_util","","","","","re_sdk::external","","","","","","","re_sdk::file_writer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_sdk::global","","re_sdk::logre_sdk::msg_sender","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_sdk::remote_viewer_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_sdk::session","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_sdk::time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The user-chosen name of the application doing the logging.","A type that can used as a Component of an Entity.","The name of an entity component, e.g. <code>pos</code> or <code>color</code>.","<code>camera / &quot;left&quot; / points / #42</code>","<code>InstanceKey</code> with a <code>u64::MAX</code> was found, but is reserved for …","Some components had more or less instances than some other.","The same component were put in the same log message …","Facilitates building and sending component payloads with …","Errors that can occur when constructing or sending messages","A message during packing. See <code>MsgBundleError</code>.","","A unique id per recording (a stream of <code>LogMsg</code>es).","A <code>Component</code> that fulfils all the conditions required to be …","This is the main object you need to create to use the …","Instance keys cannot be splatted","The recording id:s given to recordings that don’t have …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module provides integration with integration with <code>clap</code>…","","","","","","","","","","","","","These are the different <em>components</em> you can log.","Coordinate system helpers, for use with …","Checks the <code>RERUN</code> environment variable. If not found, …","","The default address of a Rerun TCP server which an SDK …","This module contains utilities to support Rerun examples.","","","","","","","","","","","","","","","","","","","","","","Is this session enabled? If not, all calls into it are …","","","","","","","","","","","","","","","Re-exports of other crates.","Create a <code>Field</code> for this <code>Component</code>.","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Includes namespace, e.g. <code>rerun.color</code> or <code>ext.confidence</code>.","","","","","Helper to get the value of the <code>RERUN</code> environment variable.","","Access a global <code>Session</code> singleton for convenient logging.","Access a global <code>Session</code> singleton for convenient logging.","","","Precomputed hash of the string.","","","","","","Precomputed 64-bit hash.","","","","","All the instanced component collections that have been …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Is this a direct child of the other path.","Is this a strict descendant of the given path.","","","","","","Number of parts","Things directly related to logging.","","","","","","","","","","The name of the component.","","","The expected number of instances for each row of each …","","","","","","","","","Return <code>None</code> if root.","","","","","","","","","","","","","","","","","","","","","","","","","Excludes the rerun namespace, so you’ll get <code>color</code> but …","All the splatted components that have been appended to …","Time-related types.","If true, all timestamp data associated with this message …","All the different timestamps for this message.","","","","","","","","","","","","","","","","","","","","","","The default <code>ApplicationId</code> if the user hasn’t set one.","","","","","","","","","","","","","","","","","","","","","","","","","","This struct implements a <code>clap::Parser</code> that defines all the …","","","","","","","","","","","","","","","","","","","","","","","","","Connects and sends the logged data to a remote Rerun …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Run common Rerun script setup actions. Connect to the …","Run common post-actions. Sleep if serving the web viewer.","","","","","","","","","Saves the data to an rrd file rather than visualizing it …","Connects and sends the logged data to a web-based Rerun …","Start a viewer and feed it data in real-time.","","","","","","","","","","","","","","","","","","","","","","","","The <code>AnnotationContext</code> provides additional information on …","Information about an Annotation.","A 3D Arrow","A 3D bounding box represented by it’s half-lengths","The description of a semantic Class.","A 16-bit ID representing a type of semantic class.","The data is an annotated <code>crate::component_types::ClassId</code> …","An RGBA color tuple.","Image data interpreted as depth map.","","Compressed/encoded mesh format","","","Binary <code>glTF</code>.","<code>glTF</code>.","","","","","","","A number used to specify a specific instance in an entity.","","A 16-bit ID representing a type of semantic keypoint …","A String label component","A Line Strip of 2D points","A Line Strip of 3D points","A 3x3 column-major Matrix made up of 3 Vecs","A Generic 3D Mesh.","The format of a binary mesh file, e.g. GLTF, GLB, OBJ","A unique id per <code>Mesh3D</code>.","Wavefront .obj.","Camera perspective projection (a.k.a. intrinsics).","The parent is some local camera space, the child an image …","A point in 2D space.","A point in 3D space.","A Quaternion represented by 4 real numbers.","A Radius component","","A raw “triangle soup” mesh.","A rectangle in 2D space.","A proper rigid 3D transform, i.e. a rotation and a …","For example: the parent is a 3D world space, the child a …","A special value indicating that this [<code>InstanceKey]</code> is …","A double-precision scalar.","Additional properties of a scalar when rendered as a plot.","A 3D size, e.g. the size of a 3D box.","A Multi-dimensional Tensor","Flattened <code>Tensor</code> data payload","How to interpret the contents of a tensor.","Flattened <code>Tensor</code> data payload","A unique id per <code>Tensor</code>.","","A text entry component, comprised of a text body and its …","A transform between two spaces.","","","","","Default behavior: guess based on shape","We don’t know the transform, but it is …","A vector in 2D space.","A vector in 3D space.","A vector in 4D space.","How we interpret the coordinate system of an entity/space.","[x_center, y_center, width/2, height/2]","[x_center, y_center, width, height]","[x, y, w, h], with x,y = left,top.","[x0, y0, x1, y1], with x0,y0 = left,top and x1,y1 = …","[y, x, h, w], with x,y = left,top.","[y0, x0, y1, x1], with x0,y0 = left,top and x1,y1 = …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Albedo factor applied to the final color of the meshata payloadocal length.","X &amp; Y focal length in pixels.","","","Field of View on the Y axis, i.e. the angle between top …","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Construct a tensor from [<code>image::DynamicImage</code>].","Construct a tensor from something that can be turned into …","","","Returns a matrix that translates RUB to this coordinate …","","Choses a coordinate system based on just an up-axis.","","","","","","","","","","","","","","","","","","","","","<code>ClassId</code> or <code>KeypointId</code> to which this annotation info …","Column-major projection matrix.","","","","Optionally, the flattened indices array for this mesh.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Are we referring to a specific instance of the entity …","Are we referring to all instances of the entity (e.g. all …","","","Semantic connections between two keypoints.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The per-element data meaning Used to indicated if the data …","","","","Reciprocal scale of meter unit for depth images","","","","","","","","","","","","","","","","","","","","","","","","","","Optional name of the dimension, e.g. “color” or “…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Optionally, the flattened normals array for this mesh.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The flattened positions array of this mesh.","Principal point of the pinhole camera, i.e. the …","","","","Pixel resolution (usually integers) of child image space. …","","How is the child rotated?","Returns an error if this does not span all three …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Dimensionality and length","Number of elements on this dimension. I.e. size-1 is the …","Returns <code>None</code> if splat, otherwise the index.","Construct a tensor from the contents of a JPEG file.","Construct a tensor from the contents of a JPEG file on …","Unique identifier for the tensor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a matrix that translates this coordinate system to …","","","","","","","","four columns of an affine transformation matrix","Translation to parent from childne of <code>X</code>, <code>Y</code>, <code>Z</code>.","Left or right handedness. Used to describe a coordinate …","","","","","","","","","","","Positive (<code>+</code>) or Negative (<code>-</code>).","One of: <code>+X</code>, <code>-X</code>, <code>+Y</code>, <code>-Y</code>, <code>+Z</code>, <code>-Z</code>, i.e. one of the six …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A linear interpolator that bounces between <code>a</code> and <code>b</code> as <code>t</code> …","Create a spiral of points with colors along the Z axis.","Given two 3D vectors <code>from</code> and <code>to</code>, linearly interpolates …","Linear interpolator.","Linearly interpolates from <code>a</code> through <code>b</code> in <code>n</code> steps, …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Access a global <code>Session</code> singleton for convenient logging.","Access a global <code>Session</code> singleton for convenient logging.","Log an entity using an <code>ArrowMsg</code>.","A new recording has begun.","Clear all the components stored at an <code>EntityPath</code>","Clear all the components of an <code>[EntityPath]</code> and any …","A <code>ComponentBundle</code> holds an Arrow component column, and its …","Server-backed operation on an <code>EntityPath</code>.","Sent when the client shuts down the connection.","The most general log message sent from the SDK to the …","All ones.","A <code>MsgBundle</code> holds data necessary for composing a single …","A unique id per <code>crate::LogMsg</code>.","Operation to perform on an <code>EntityPath</code>, e.g. clearing all …","All zeroes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the datatype of the bundled component, discarding …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the index of <code>component</code> in the bundle, if it exists.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","A unique id per <code>crate::LogMsg</code>.","","","","","Create a new <code>MsgBundle</code> with a pre-built Vec of …","","","Create a new <code>ComponentBundle</code> from a boxed <code>Array</code>. The <code>Array</code> …","Returns the number of component collections in this …","Returns the number of <em>instances</em> for a given <code>row</code> in the …","Returns the number of <em>instances</em> for a given <code>row</code> in the …","Returns the number of <em>rows</em> in this bundle, i.e. the length …","Returns the number of <em>rows</em> for each component collections …","","","","","","","","","","","","","","","","","","","","","","","","","","A shortened string representation of the message id.","","","","","","","","","Try to append a collection of <code>Component</code> onto the …","","","","","","Extract a <code>MsgBundle</code> from an <code>ArrowMsg</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the <code>ComponentBundle</code> value as a boxed <code>Array</code>.","Get the <code>ComponentBundle</code> value","","","","","","","","","","","","","","","","<code>InstanceKey</code> with a <code>u64::MAX</code> was found, but is reserved for …","Some components had more or less instances than some other.","The same component were put in the same log message …","Facilitates building and sending component payloads with …","Errors that can occur when constructing or sending messages","A message during packing. See <code>MsgBundleError</code>.","Instance keys cannot be splatted","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","All the instanced component collections that have been …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Starts a new <code>MsgSender</code> for the given entity path.","The expected number of instances for each row of each …","","","","","","","","","","Consumes, packs, sanity checks and finally sends the …","","All the splatted components that have been appended to …","If true, all timestamp data associated with this message …","All the different timestamps for this message.","","","","","","","","","","","","","","","","Appends a component collection to the current message.","Appends a splatted component to the current message.","Helper to make it easier to optionally append splatted …","Appends a given <code>timeline</code>/<code>time</code> pair to the current message.","Specifies whether the current message is timeless.","Appends a given <code>timepoint</code> to the current message.","","","","","Hosts two servers:","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","This is the main object you need to create to use the …","Serve it to the web viewer over WebSockets","","","","","","","","","","","","","","","Send log data to a remote viewer/server.","","","","","","","Disconnects any TCP connection, shuts down any server, and …","","","Drain all buffered <code>LogMsg</code>es and return them.","","","If the tcp session is disconnected, allow it to quit early …","Is this session enabled? If not, all calls into it are …","Wait until all logged data have been sent to the remove …","Returns the argument unchanged.","Returns the argument unchanged.","","","Initializes a new session with a properly set <code>ApplicationId</code>…","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check if logging is enabled on this <code>Session</code>.","","Are we streaming log messages over TCP?","","","","","","","","","The current <code>RecordingId</code>, if set.","","","","","","","Drains all pending log messages and saves them to disk …","Send a <code>LogMsg</code>.","","Send a <code>PathOp</code>.","","Serve log-data over WebSockets and serve a Rerun web …","Set the <code>ApplicationId</code> to use for the following stream of …","Enable or disable logging on this <code>Session</code>.","Set the <code>RecordingId</code> of this message stream.","Set where the recording is coming from. The default is …","Drains all pending log messages and starts a Rerun viewer …","Starts a Rerun viewer on the current thread and migrates …","","","","","","","","","","","","","","","","","","","","The beginning of time.","","","Used e.g. for frames in a film.","A date-time represented as nanoseconds since unix epoch","Normal wall time.","A 64-bit number describing either nanoseconds OR sequence …","A point in time on any number of <code>Timeline</code>s.","The type of a <code>TimeInt</code> or <code>Timeline</code>.","A time frame/space, e.g. <code>log_time</code> or <code>frame_nr</code>, coupled …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Human-readable formatting","","","Returns a formatted string of <code>time_range</code> on this <code>Timeline</code>.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","For time timelines.","","For time timelines.","","For sequence timelines.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","If true, this time is likely relative to unix epoch.","","","","","","","The log time timeline to which all API functions will …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Logging to this time means the data will show upp in all …","","","Returns the absolute datetime if applicable.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,128,128,128,0,0,128,0,0,0,0,128,6,2,4,6,7,23,2,4,2,2,4,6,7,2,2,4,6,7,2,4,6,7,2,4,6,7,2,4,6,7,2,4,6,7,0,2,4,6,7,2,4,6,7,2,4,6,7,0,0,0,6,0,0,2,2,4,6,7,2,4,6,7,2,4,6,7,2,4,6,7,2,4,6,7,23,129,2,2,4,6,7,2,2,4,4,6,6,7,7,0,151,0,2,2,4,4,6,6,7,7,2,2,2,4,4,4,4,4,4,6,7,7,7,4,6,6,2,2,4,6,7,0,0,0,0,23,2,2,4,4,6,7,4,4,2,4,6,7,129,2,4,6,7,4,4,4,23,4,4,4,4,4,0,2,4,6,7,2,4,6,7,0,151,2,4,129,2,4,6,7,2,4,6,7,4,2,4,6,7,4,6,23,23,0,4,2,4,6,7,2,4,6,7,23,2,4,6,7,0,2,129,0,129,129,2,4,6,7,2,4,6,7,23,2,4,6,7,2,4,6,7,2,4,6,7,7,2,4,6,7,2,4,6,7,2,4,6,7,2,4,6,7,2,4,6,7,2,4,6,7,30,0,0,30,30,30,30,31,31,31,30,31,30,31,30,31,30,31,30,31,30,31,30,31,30,31,31,30,31,30,31,30,31,30,31,30,30,30,30,31,30,31,31,31,31,30,31,30,31,30,31,30,31,31,31,30,31,30,31,30,31,30,31,31,31,31,31,30,31,30,31,30,31,30,31,30,31,30,31,30,31,31,31,30,31,30,31,30,31,0,0,0,0,0,0,56,0,56,46,0,54,54,45,45,54,54,54,54,73,59,0,54,0,0,0,0,0,0,0,0,45,0,61,0,0,0,0,46,0,0,0,61,41,0,0,0,0,0,0,0,0,0,0,0,54,54,54,54,56,61,0,0,0,0,50,50,50,50,50,50,47,48,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,78,54,55,56,57,58,59,60,61,62,63,64,44,37,66,38,39,40,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,58,59,60,61,62,63,64,37,66,38,39,40,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,58,59,60,61,62,63,64,60,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,58,59,60,61,62,63,64,58,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,58,59,60,61,62,63,64,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,58,59,60,61,62,63,64,72,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,58,59,60,61,62,63,64,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,58,59,60,61,62,63,64,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,58,59,60,61,62,63,64,59,67,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,78,54,55,56,57,58,59,60,61,62,63,64,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,78,54,55,56,57,58,59,60,61,62,63,64,38,41,42,77,78,40,57,37,66,38,39,40,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,58,59,60,61,62,63,64,38,40,76,67,42,73,59,62,63,64,55,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,58,59,60,61,62,63,64,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,58,59,60,61,62,63,64,68,68,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,73,78,55,56,59,60,61,62,63,64,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,58,59,60,61,62,63,64,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,58,59,60,61,62,63,64,152,57,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,50,78,54,55,56,57,58,59,60,61,62,63,64,38,38,39,39,40,40,76,76,67,67,68,68,41,41,42,42,43,43,77,77,45,45,78,78,55,55,56,56,58,58,37,66,38,39,40,76,67,68,41,41,42,43,69,70,71,77,44,72,45,45,46,47,48,73,49,50,51,52,53,78,54,55,55,56,57,58,59,60,61,62,62,63,63,64,64,60,60,72,68,60,37,66,66,38,39,39,40,76,76,67,67,68,41,42,43,43,69,69,70,70,71,71,71,77,44,72,45,46,47,47,47,48,48,48,73,73,49,50,51,51,52,53,78,54,55,56,57,58,59,60,61,62,62,62,63,63,63,64,58,57,57,39,39,68,68,68,50,152,57,38,41,42,77,45,78,68,38,41,42,77,45,78,50,55,152,57,40,60,71,62,63,44,76,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,58,59,60,61,62,63,64,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,58,59,60,61,62,63,64,43,152,57,41,41,152,57,76,76,40,58,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,58,59,60,61,62,63,64,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,58,59,60,61,62,63,64,152,57,57,46,44,72,57,37,66,38,39,67,68,41,42,43,69,70,46,47,48,73,49,50,51,52,53,57,58,61,62,63,55,55,66,47,48,73,57,58,63,37,66,38,39,40,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,58,59,60,61,62,63,64,59,59,44,152,57,44,37,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,58,59,60,61,62,63,64,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,58,59,60,61,62,63,64,59,38,41,42,77,78,44,60,77,78,60,60,68,59,68,44,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,58,59,60,61,62,63,64,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,58,59,60,61,62,63,64,52,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,73,78,55,56,59,60,61,62,63,64,152,57,57,55,41,57,57,57,39,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,78,54,55,56,57,58,59,60,61,62,63,64,68,41,45,55,62,63,64,50,72,59,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,58,59,60,61,62,63,64,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,58,59,60,61,62,63,64,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,58,59,60,61,62,63,64,55,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,58,59,60,61,62,63,64,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,58,59,60,61,62,63,64,68,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,58,59,60,61,62,63,64,37,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,58,59,60,61,62,63,64,64,73,50,55,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,58,59,60,61,62,63,64,37,66,38,39,40,76,67,68,41,42,43,69,70,71,77,44,72,45,46,47,48,73,49,50,51,52,53,78,54,55,56,57,58,59,60,61,62,63,64,62,63,64,66,47,48,73,53,62,63,64,66,47,48,73,53,63,64,66,48,73,53,0,0,93,81,81,81,110,81,81,81,110,93,0,0,109,109,109,109,110,81,93,81,81,109,110,81,93,109,110,81,93,109,110,81,93,109,110,81,93,109,110,81,93,109,110,81,93,109,110,81,93,109,110,81,93,109,110,81,93,109,110,81,93,93,109,110,81,93,109,110,81,93,109,110,81,93,109,110,81,93,109,109,110,110,81,81,93,93,109,109,110,81,81,93,109,110,81,93,109,93,81,109,110,81,93,109,110,81,93,109,110,81,93,109,110,81,93,81,109,110,81,93,109,110,81,93,109,110,81,93,109,110,81,93,109,110,81,93,81,109,110,81,93,109,81,109,110,81,93,109,110,81,93,109,110,81,93,109,110,81,93,109,110,81,93,109,110,81,93,109,110,81,93,109,110,81,93,109,110,81,93,0,0,0,0,0,0,0,0,0,0,0,0,0,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,0,0,113,113,116,116,0,113,113,0,114,0,0,0,114,114,117,118,113,116,114,114,114,114,117,118,113,116,114,117,118,113,116,114,117,118,113,116,114,117,118,113,116,114,117,118,113,116,114,117,118,113,116,116,114,117,118,113,116,114,117,118,113,116,114,118,114,117,114,117,118,113,116,114,117,118,113,116,114,113,116,114,117,118,113,116,114,117,118,113,116,116,118,114,116,114,114,116,116,118,114,114,117,118,118,113,116,114,117,118,113,113,113,113,116,114,114,113,114,117,118,113,116,114,117,118,113,116,114,117,118,113,116,114,117,118,113,116,118,114,117,117,117,118,114,117,117,118,117,118,117,118,114,117,118,113,116,114,117,118,113,116,114,114,114,117,118,113,116,114,117,118,113,116,114,113,116,114,118,114,117,118,113,116,114,118,118,114,117,117,117,117,118,118,113,116,114,117,118,113,116,114,117,118,113,116,114,117,118,113,116,114,117,118,113,116,114,117,118,113,116,117,117,117,114,117,118,113,116,114,117,118,113,116,114,117,118,113,116,128,128,128,0,0,128,128,129,128,129,128,129,128,0,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,128,129,128,128,129,128,129,129,128,129,129,128,129,128,129,129,129,128,129,128,128,129,128,129,128,129,128,129,129,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,128,129,129,129,129,129,129,129,128,129,128,0,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,138,138,138,138,0,0,138,23,23,23,138,23,138,23,138,23,138,23,138,23,138,23,23,138,23,138,23,138,23,23,138,23,23,138,23,23,23,23,138,23,23,23,138,23,138,23,23,23,23,138,23,138,23,138,23,138,23,23,23,23,138,23,138,23,23,138,23,23,23,23,23,23,23,23,23,23,23,138,23,138,23,138,23,138,23,138,23,138,23,138,23,138,23,138,134,134,134,144,0,144,0,0,0,0,141,134,133,123,144,134,141,134,134,141,134,123,123,134,134,134,141,134,133,123,144,141,134,133,123,144,141,134,133,123,144,141,134,133,123,144,141,134,133,123,144,141,134,133,123,144,141,134,133,123,144,141,134,133,123,144,141,134,133,123,144,123,133,123,141,134,133,123,144,141,134,133,123,144,141,134,133,123,144,141,134,133,123,144,141,134,133,123,144,141,134,134,133,123,144,141,141,134,134,133,133,123,123,144,144,141,134,133,123,144,141,144,144,133,141,141,141,134,134,134,134,133,123,123,144,144,123,134,141,134,141,134,144,141,123,141,134,133,123,144,141,134,133,123,144,141,134,133,123,144,123,141,134,133,123,144,123,123,141,123,141,134,123,123,141,133,141,134,133,123,144,141,134,133,123,144,133,133,141,134,133,123,133,133,141,141,134,133,123,144,141,134,133,123,144,141,134,134,133,123,144,123,141,134,133,123,144,141,134,133,123,144,141,134,133,123,144,141,141,134,134,134,134,123,123,123,141,141,134,133,123,144,141,141,141,134,133,123,144,141,134,133,123,144,133,133,141,134,133,123,144,141,134,133,123,144,141,134,133,123,144,141,134,133,123,144,141,134,133,123,144,141,134,133,123,144,141,134,133,123,144],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],0,[2,3],[4],[2,3],[[]],[[]],[[]],[[]],[2,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[2,2],[4,4],[6,6],[7,7],[[]],[[]],[[]],[[]],[[2,2],8],[[4,4],8],[[6,6],8],[[7,7],8],0,0,[9,9],[[],6],[[],10],0,[11],[2,3],[11],[11],[11],[11],[11],[11],[11],[[],[[12,[2]]]],[[],[[12,[4]]]],[[],[[12,[6]]]],[[],[[12,[7]]]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],0,0,[[2,2],9],[[2,3],9],[[4,4],9],[[6,6],9],[[7,7],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,[[],13],0,[[2,14],[[12,[15]]]],[[2,14],[[12,[15]]]],[[4,14],[[12,[15]]]],[[4,14],[[12,[15]]]],[[6,14],[[12,[15]]]],[[6,14],[[12,[15]]]],[[7,14],[[12,[15]]]],[[7,14],[[12,[15]]]],[[]],[16,2],[3,2],[3,4],[17,4],[[[20,[18,19]]],4],[16,4],[[],4],[[]],[[]],[[]],[3,7],[16,7],[[],4],[3,[[12,[6]]]],[21,6],[2,3],[[],22],[[],22],[[],22],[[],22],[[],[[5,[9]]]],0,[[],[[24,[23]]]],[9,[[24,[23]]]],0,[2],[2,22],[4],[4,25],[6],[7],0,[4,22],[[],11],[[],11],[[],11],[[],11],0,[[]],[[]],[[]],[[]],[[],[[26,[16]]]],[[4,4],9],[[4,4],9],0,[4,9],[4,27],[[4,4],4],[4,[[5,[18]]]],[4,11],0,[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],0,[[],2],[3,2],[[[20,[18,19]]],4],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,[[5,[4]]]],[[2,2],[[5,[8]]]],[[4,4],[[5,[8]]]],[[6,6],[[5,[8]]]],[[7,7],[[5,[8]]]],0,[[],6],0,0,0,[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[2,12],[4,12],[6,12],[7,12],0,[2,3],0,0,0,0,[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],28],[[],28],[[],28],[[],28],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[1],[1],[29,29],[29,29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[30,30],[31,31],[[]],[[]],0,[11],[11],[11],[11],[[]],[[]],[11],[11],[[30,30],9],[[],9],[[],9],[[30,14],32],[[31,14],32],[[]],[[]],[33,[[12,[31,34]]]],[33,[[12,[31,34]]]],[[],[[5,[35]]]],[[],11],[[],11],[[]],[[]],[[],5],[[],5],[[]],[[]],[[31,23],[[36,[9]]]],[31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[31,30],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],28],[[],28],[[]],[[]],[[]],[[]],[[],5],[[],5],[[31,33],[[12,[34]]]],[[31,33],[[12,[34]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],0,[[[5,[37]]],[[5,[37]]]],[[],5],[[],[[5,[38]]]],[[],[[5,[39]]]],[[[5,[40]]],[[5,[40]]]],[[],5],[[],5],[[],[[5,[41]]]],[[],[[5,[42]]]],[[],[[5,[43]]]],[[],5],[[],5],[[],5],[[],5],[[[5,[44]]],[[5,[44]]]],[[],5],[[[5,[45]]],[[5,[45]]]],[[[5,[46]]],[[5,[46]]]],[[[5,[47]]],[[5,[47]]]],[[[5,[48]]],[[5,[48]]]],[[],5],[[],[[5,[49]]]],[[[5,[50]]],[[5,[50]]]],[[],[[5,[51]]]],[[[5,[52]]],[[5,[52]]]],[[[5,[53]]],[[5,[53]]]],[[],5],[[[5,[54]]],[[5,[54]]]],[[[5,[55]]],[[5,[55]]]],[[[5,[56]]],[[5,[56]]]],[[[5,[57]]],[[5,[57]]]],[[[5,[58]]],[[5,[58]]]],[[[5,[59]]],[[5,[59]]]],[[[5,[60]]],[[5,[60]]]],[[[5,[61]]],[[5,[61]]]],[[],[[5,[62]]]],[[],[[5,[63]]]],[[],[[5,[64]]]],[37,[[12,[65]]]],[66,[[12,[65]]]],[38,[[12,[65]]]],[39,[[12,[65]]]],[40,[[12,[65]]]],[67,[[12,[65]]]],[68,[[12,[65]]]],[41,[[12,[65]]]],[42,[[12,[65]]]],[43,[[12,[65]]]],[69,[[12,[65]]]],[70,[[12,[65]]]],[71,[[12,[65]]]],[[],[[12,[65]]]],[44,[[12,[65]]]],[72,[[12,[65]]]],[45,[[12,[65]]]],[46,[[12,[65]]]],[47,[[12,[65]]]],[48,[[12,[65]]]],[73,[[12,[65]]]],[49,[[12,[65]]]],[50,[[12,[65]]]],[51,[[12,[65]]]],[52,[[12,[65]]]],[53,[[12,[65]]]],[[],[[12,[65]]]],[54,[[12,[65]]]],[55,[[12,[65]]]],[56,[[12,[65]]]],[57,[[12,[65]]]],[58,[[12,[65]]]],[59,[[12,[65]]]],[60,[[12,[65]]]],[61,[[12,[65]]]],[62,[[12,[65]]]],[63,[[12,[65]]]],[64,[[12,[65]]]],[60,[[5,[74]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[59,75],0,[37,37],[66,66],[38,38],[39,39],[40,40],[76,76],[67,67],[68,68],[41,41],[42,42],[43,43],[69,69],[70,70],[71,71],[77,77],[44,44],[72,72],[45,45],[46,46],[47,47],[48,48],[73,73],[49,49],[50,50],[51,51],[52,52],[78,78],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[38,38],8],[[41,41],8],[[42,42],8],[[77,77],8],[[78,78],8],0,0,[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],38],[[],40],[[],76],[[],67],[[],42],[[],73],[[],59],[[],62],[[],63],[[],64],[22,55],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[68,16],[68,16],[[],[[12,[37]]]],[[],[[12,[66]]]],[[],[[12,[38]]]],[[],[[12,[39]]]],[[],[[12,[40]]]],[[],[[12,[76]]]],[[],[[12,[67]]]],[[],[[12,[68]]]],[[],[[12,[41]]]],[[],[[12,[42]]]],[[],[[12,[43]]]],[[],[[12,[69]]]],[[],[[12,[70]]]],[[],[[12,[71]]]],[[],[[12,[77]]]],[[],[[12,[44]]]],[[],[[12,[72]]]],[[],[[12,[45]]]],[[],[[12,[46]]]],[[],[[12,[73]]]],[[],[[12,[78]]]],[[],[[12,[55]]]],[[],[[12,[56]]]],[[],[[12,[59]]]],[[],[[12,[60]]]],[[],[[12,[61]]]],[[],[[12,[62]]]],[[],[[12,[63]]]],[[],[[12,[64]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[],80],[57,80],[[37,37],9],[[66,66],9],[[38,38],9],[[39,39],9],[[40,40],9],[[76,76],9],[[67,67],9],[[68,68],9],[[41,41],9],[[42,42],9],[[43,43],9],[[69,69],9],[[70,70],9],[[71,71],9],[[77,77],9],[[44,44],9],[[72,72],9],[[45,45],9],[[46,46],9],[[47,47],9],[[48,48],9],[[73,73],9],[[50,50],9],[[78,78],9],[[54,54],9],[[55,55],9],[[56,56],9],[[57,57],9],[[58,58],9],[[59,59],9],[[60,60],9],[[61,61],9],[[62,62],9],[[63,63],9],[[64,64],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[37,14],[[12,[15]]]],[[66,14],[[12,[15]]]],[[38,14],[[12,[15]]]],[[39,14],[[12,[15]]]],[[40,14],[[12,[15]]]],[[76,14],[[12,[15]]]],[[67,14],[[12,[15]]]],[[68,14],[[12,[15]]]],[[41,14],[[12,[15]]]],[[41,14],[[12,[15]]]],[[42,14],[[12,[15]]]],[[43,14],[[12,[15]]]],[[69,14],[[12,[15]]]],[[70,14],[[12,[15]]]],[[71,14],[[12,[15]]]],[[77,14],[[12,[15]]]],[[44,14],[[12,[15]]]],[[72,14],[[12,[15]]]],[[45,14],[[12,[15]]]],[[45,14],[[12,[15]]]],[[46,14],[[12,[15]]]],[[47,14],[[12,[15]]]],[[48,14],[[12,[15]]]],[[73,14],[[12,[15]]]],[[49,14],[[12,[15]]]],[[50,14],[[12,[15]]]],[[51,14],[[12,[15]]]],[[52,14],[[12,[15]]]],[[53,14],[[12,[15]]]],[[78,14],[[12,[15]]]],[[54,14],[[12,[15]]]],[[55,14],[[12,[15]]]],[[55,14],[[12,[15]]]],[[56,14],[[12,[15]]]],[[57,14],[[12,[15]]]],[[58,14],[[12,[15]]]],[[59,14],[[12,[15]]]],[[60,14],[[12,[15]]]],[[61,14],[[12,[15]]]],[[62,14],[[12,[15]]]],[[62,14],[[12,[15]]]],[[63,14],[[12,[15]]]],[[63,14],[[12,[15]]]],[[64,14],[[12,[15]]]],[[64,14],[[12,[15]]]],[60,[[5,[74]]]],[60,62],0,[68,[[5,[81]]]],[60,[[5,[74]]]],[[]],[[]],[82,66],[[]],[[]],[[],39],[[]],[[]],[83,76],[[[20,[84,19]]],67],[[]],[[]],[[]],[[]],[16,43],[[]],[[[20,[19]]],69],[[]],[[[20,[19]]],70],[[]],[85,71],[[],71],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[86,47],[[],47],[[],48],[82,48],[[]],[87,73],[[]],[[]],[[]],[[]],[88,51],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],62],[86,62],[[]],[[]],[[],63],[82,63],[[]],[[[89,[16]]],58],[90,[[12,[57,91]]]],[[[89,[90]]],[[12,[57,91]]]],[[92,92,92],39],[[92,92,92,92],39],[68,85],[3,[[12,[68]]]],[[81,93],68],[[74,74,74,74],50],[[],[[5,[94]]]],[57,[[5,[94]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[68,[[5,[93]]]],[38],[41],[42],[77],[45],[78],[50,74],[22,55],[[],78],[57,78],0,0,[71],[62],[63],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[26,[16]]]],[[],9],[57,9],[41,9],[41,9],[[],9],[57,9],0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],56],[57,56],0,[46,77],0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,[[22,16],55],[[74,74,74],66],[[74,74],47],[[74,74,74],48],[[74,74,74,74],73],[[78,[20,[55,19]],54,56,[5,[74]]],57],[[[89,[16]],[5,[16]]],58],[[74,74,74],63],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[75,59],[75,59],0,[[],11],[57,11],[44,11],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[59,75],[[38,38],[[5,[8]]]],[[41,41],[[5,[8]]]],[[42,42],[[5,[8]]]],[[77,77],[[5,[8]]]],[[78,78],[[5,[8]]]],0,[60,86],[[],77],[[],78],[60,[[5,[86]]]],0,[68,[[5,[81]]]],0,[68,[[12,[16]]]],[44,[[12,[95]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[37,12],[66,12],[38,12],[39,12],[40,12],[76,12],[67,12],[68,12],[41,12],[42,12],[43,12],[69,12],[70,12],[71,12],[77,12],[44,12],[72,12],[45,12],[46,12],[73,12],[78,12],[55,12],[56,12],[59,12],[60,12],[61,12],[62,12],[63,12],[64,12],[[]],[57],0,0,[41,[[5,[41]]]],[[[20,[92,19]]],[[12,[57,91]]]],[[[97,[96]]],[[12,[57,91]]]],0,[39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[68,85],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[50],0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[98,[[12,[72,99]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[101,[[100,[88]]]]],[[12,[57]]]],[[[101,[[102,[74]]]]],[[12,[57]]]],[[[101,[[100,[103]]]]],[[12,[57]]]],[[[101,[[102,[103]]]]],[[12,[57]]]],[[[101,[[100,[104]]]]],[[12,[57]]]],[[[101,[[100,[74]]]]],[[12,[57]]]],[[[101,[[102,[105]]]]],[[12,[57]]]],[[[101,[[100,[106]]]]],[[12,[57]]]],[[[101,[[102,[88]]]]],[[12,[57]]]],[[[101,[[100,[107]]]]],[[12,[57]]]],[[[101,[[102,[92]]]]],[[12,[57]]]],[[[101,[[102,[106]]]]],[[12,[57]]]],[[[101,[[102,[107]]]]],[[12,[57]]]],[[[101,[[100,[105]]]]],[[12,[57]]]],[[[101,[[102,[104]]]]],[[12,[57]]]],[[[101,[[102,[108]]]]],[[12,[57]]]],[[[101,[[100,[22]]]]],[[12,[57]]]],[[[101,[[102,[22]]]]],[[12,[57]]]],[[],12],[[[101,[[100,[108]]]]],[[12,[57]]]],[[[101,[[100,[92]]]]],[[12,[57]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[22,55],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[68,[[5,[81]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[64,74],0,[50,74],[22,55],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[62,74],[63,74],[64,74],0,0,0,0,0,[62,74],[63,74],[64,74],0,0,0,0,0,[63,74],[64,74],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[81],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[109,109],[110,110],[81,81],[93,93],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[11],[11],[93,3],[[],[[12,[109]]]],[[],[[12,[110]]]],[[],[[12,[81]]]],[[],[[12,[93]]]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[[109,109],9],[[110,110],9],[[81,81],9],[[93,93],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[109,14],[[12,[15]]]],[[109,14],[[12,[15]]]],[[110,14],[[12,[15]]]],[[81,14],[[12,[15]]]],[[81,14],[[12,[15]]]],[[93,14],[[12,[15]]]],[[]],[[]],[[]],[[]],[11,109],[9,93],[3,[[12,[81]]]],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[110,109],81],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[109,12],[110,12],[81,12],[93,12],0,[[]],[[]],[[]],[[]],[[],16],[[],16],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],28],[[],28],[[],28],[[],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[74],[[11,74,74,74,74]],[[82,82,11],27],[74],[11,27],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],5],[[],5],[11],[11],[[]],[11],[111],[[]],[[],11],[[]],0,[[],5],[[]],[[[89,[112]]],[[36,[111]]]],[[]],[[]],[[]],[[]],[[],12],[[],12],0,[[],28],[[]],[[]],[[],5],[[]],[[]],[[]],[[111,113]],[[],[[24,[23]]]],[9,[[24,[23]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[[],[[5,[114]]]],[114,[[12,[65]]]],[114,115],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[9,4],116],[114,114],[117,117],[118,118],[113,113],[116,116],[[]],[[]],[[]],[[]],[[]],[[114,114],8],0,[[],79],[117,79],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[],[[12,[114]]]],[[],[[12,[113]]]],[[],[[12,[116]]]],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[116,4],0,[[114,114],9],[[116,116],9],[[],9],[[],9],[[],9],[[],9],[[118,2],[[5,[11]]]],[[114,14],[[12,[15]]]],[[114,14],[[12,[15]]]],[[117,14],[[12,[15]]]],[[118,14],[[12,[15]]]],[[118,14],[[12,[15]]]],[[113,14],[[12,[15]]]],[[116,14],[[12,[15]]]],[[]],[[]],[[]],[[]],[119,113],[120,113],[121,113],[[]],[[],22],[114],[113,114],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],0,[[],2],[117,2],0,[[2,[122,[105]]],117],[[114,4,123,[20,[117,19]]],118],[[]],[[2,79],117],[[2,124],117],[118,11],[[117,11],[[5,[11]]]],[[118,11],[[5,[11]]]],[117,11],[118,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[114,114],[[5,[8]]]],[[],114],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[114,12],[113,12],[116,12],[114,16],0,[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[118,[[12,[125]]]],[[],12],[20,[[12,[117,125]]]],[[],12],[[],[[12,[117,125]]]],[[[20,[19]]],[[12,[117,125]]]],[120,[[12,[118,125]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],28],[[],28],[[],28],[[],28],[[],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],0,[117,[[126,[124,19]]]],[117,122],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[127,[[12,[117,125]]]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[11],[11],[11],[11],[[]],[[]],[11],[11],0,[[128,14],32],[[128,14],32],[[]],[[]],[125,128],[[],11],[[],11],0,[[]],[[]],[129,[[12,[128]]]],[[],5],[[],5],[[]],[[]],[[[89,[4]]],129],0,[[]],[[]],[[]],[[]],[130],[[]],[[]],[[]],[[]],[[129,23],[[12,[128]]]],[128,[[5,[131]]]],0,0,0,[[],16],[[],12],[[],12],[[],12],[[],12],[[],28],[[],28],[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]],[[129,127],[[12,[129,128]]]],[[129,132],[[12,[129,128]]]],[[129,[5,[132]]],[[12,[129,128]]]],[[129,133,[89,[134]]],129],[[129,9],129],[[129,123],129],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],5],[[],5],[11],[11],[[]],[11],[135],[[]],[[],11],[[]],[[],5],[[]],[[136,9],135],[[]],[[]],[[]],[[]],[[135,113]],0,[[],12],[[],12],[[],28],[[]],[[]],[[],5],[[]],0,[[]],[[]],0,0,0,0,0,0,0,[23,137],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[23,10]],[[],23],[[],138],[11],[11],[11],[11],[23],[[]],[[]],[23,[[20,[113]]]],[11],[11],[23],0,[23],[[]],[[]],0,[[],11],[[[89,[7]],9],23],[[],11],[[]],[[]],[23,9],0,[23,9],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[23,[[5,[6]]]],0,0,[[]],[[]],[[]],[[]],[[23,[89,[112]]],36],[[23,113]],[[138,113]],[[23,123,116]],0,[[23,9]],[[23,7,9]],[[23,9]],[[23,6]],[[23,139]],[23,140],[23,140],0,[[],12],[[],12],[[],12],[[],12],[[],28],[[],28],[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[134,134],[[141,142]],[[134,134]],[[134,143]],[[141,142]],[[134,134]],[[],5],[[],[[12,[65]]]],[134,74],[134,88],[134,107],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[141,141],[134,134],[133,133],[123,123],[144,144],[[]],[[]],[[]],[[]],[[]],[[141,141],8],[[134,134],8],[[133,133],8],[[123,123],8],[[144,144],8],[[],79],[[],133],[[],123],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[],[[12,[141]]]],[[],[[12,[134]]]],[[],[[12,[133]]]],[[],[[12,[123]]]],[[],[[12,[144]]]],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[[141,141],9],[[134,143],9],[[134,134],9],[[133,133],9],[[123,123],9],[[144,144],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[141,14],[[12,[15]]]],[[134,14],[[12,[15]]]],[[133,14],[[12,[15]]]],[[123,14],[[12,[15]]]],[[144,14],[[12,[15]]]],[141,16],[[144,134],16],[[144,145],16],[[133,145],16],[[]],[143,141],[134,141],[107,134],[142,134],[[]],[141,134],[[]],[[]],[[],123],[[]],[107,[[5,[144]]]],[[],123],[107,134],[107,141],[107,134],[88,141],[107,134],[22,[[5,[144]]]],[107,141],[[123,133],[[5,[134]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[141],[134],[133],[123],[144],[[],11],[[],11],[[],11],[[],11],[[],11],[[123,133,134],[[5,[134]]]],[[]],[[]],[[]],[[]],[[]],[123],[123],[141,9],[123,9],[141,9],[134,9],[123,9],[123,146],[[[147,[141]],74],141],[[],133],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[133,148],0,[141,107],[134],[[[89,[148]],144],133],[[]],[[[89,[148]]],133],[[[89,[148]]],133],[[],141],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[141,141],[[5,[8]]]],[[134,143],[[5,[8]]]],[[134,134],[[5,[8]]]],[[133,133],[[5,[8]]]],[[123,123],[[5,[8]]]],[[144,144],[[5,[8]]]],[[123,133],[[5,[134]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[141,12],[134,12],[133,12],[123,12],[144,12],[[141,142]],[[141,141],142],[[134,134]],[[134,143]],[[134,134]],[[],134],[[],123],[123,146],[123,146],[141,[[5,[149]]]],[[]],[[]],[[]],[[]],[[]],[149,[[12,[141]]]],[150,[[12,[141]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[133,144],0,[[],28],[[],28],[[],28],[[],28],[[],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"Private"],[3,"ComponentName"],[15,"str"],[3,"EntityPath"],[4,"Option"],[3,"RecordingId"],[3,"ApplicationId"],[4,"Ordering"],[15,"bool"],[4,"SocketAddr"],[15,"usize"],[4,"Result"],[3,"Field"],[3,"Formatter"],[3,"Error"],[3,"String"],[3,"EntityPathImpl"],[4,"EntityPathPart"],[3,"Global"],[3,"Vec"],[3,"Uuid"],[15,"u64"],[3,"Session"],[6,"MutexGuard"],[3,"EntityPathHash"],[4,"Resettable"],[8,"Iterator"],[3,"TypeId"],[3,"Command"],[4,"RerunBehavior"],[3,"RerunArgs"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[3,"Id"],[6,"Result"],[3,"Arrow3D"],[3,"ClassId"],[3,"ColorRGBA"],[3,"AnnotationInfo"],[3,"InstanceKey"],[3,"KeypointId"],[3,"Label"],[3,"RawMesh3D"],[4,"MeshFormat"],[4,"Mesh3D"],[3,"Point2D"],[3,"Point3D"],[3,"Radius"],[4,"Rect2D"],[3,"Scalar"],[3,"ScalarPlotProps"],[3,"Size3D"],[4,"TensorData"],[3,"TensorDimension"],[4,"TensorDataMeaning"],[3,"Tensor"],[3,"TextEntry"],[3,"Rigid3"],[3,"Pinhole"],[4,"Transform"],[3,"Vec2D"],[3,"Vec3D"],[3,"Vec4D"],[4,"Error"],[3,"Box3D"],[3,"AnnotationContext"],[3,"ViewCoordinates"],[3,"LineStrip2D"],[3,"LineStrip3D"],[3,"Mat3x3"],[3,"EncodedMesh3D"],[3,"Quaternion"],[15,"f32"],[3,"IsoTransform"],[3,"ClassDescription"],[3,"MeshId"],[3,"TensorId"],[4,"DataType"],[4,"TensorDataType"],[3,"SignedAxis3"],[3,"Vec3"],[3,"ClassDescriptionArrow"],[3,"ClassMapElemArrow"],[3,"Mat3"],[3,"Vec2"],[3,"Quat"],[15,"f64"],[8,"Into"],[4,"DynamicImage"],[4,"ImageError"],[15,"u8"],[4,"Handedness"],[4,"TensorElement"],[4,"RawMeshError"],[3,"Path"],[8,"AsRef"],[3,"EncodedMesh3DArrow"],[4,"FieldError"],[3,"OwnedRepr"],[3,"ArrayBase"],[3,"ViewRepr"],[15,"i8"],[15,"u16"],[15,"i32"],[15,"u32"],[15,"i64"],[15,"i16"],[4,"Axis3"],[4,"Sign"],[3,"FileWriter"],[3,"PathBuf"],[4,"LogMsg"],[3,"MsgId"],[15,"u128"],[4,"PathOp"],[3,"ComponentBundle"],[3,"MsgBundle"],[3,"EntityPathOpMsg"],[3,"ArrowMsg"],[3,"BeginRecordingMsg"],[3,"ListArray"],[3,"TimePoint"],[8,"Array"],[4,"MsgBundleError"],[3,"Box"],[8,"IntoIterator"],[4,"MsgSenderError"],[3,"MsgSender"],[3,"Demand"],[8,"Error"],[8,"SerializableComponent"],[3,"Timeline"],[3,"TimeInt"],[3,"RemoteViewerServer"],[3,"Runtime"],[4,"AppEnvironment"],[4,"Sender"],[4,"RecordingSource"],[6,"Result"],[3,"Time"],[3,"Duration"],[3,"TimeReal"],[4,"TimeType"],[3,"TimeRange"],[8,"ExactSizeIterator"],[3,"RangeInclusive"],[3,"TimelineName"],[3,"OffsetDateTime"],[3,"SystemTime"],[8,"Component"],[8,"TensorTrait"]]},\
"re_sdk_comms":{"doc":"TCP communications between a Rerun logging SDK and …","t":[3,17,17,17,6,3,0,5,5,12,12,12,5,12,12,12,12,12,12,12,5,0,0,3,13,13,13,3,4,13,4,13,4,13,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,12,5,11,11,11,11,11,11,11,11,12,5,11,11,11,5,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,3,4,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Client","DEFAULT_SERVER_PORT","PREFIX","PROTOCOL_VERSION","Result","ServerOptions","buffered_client","decode_log_msg","default_server_addr","drop_join","drop_quit_tx","encode_join","encode_log_msg","encode_quit_tx","flushed_rx","max_latency_sec","msg_tx","quiet","send_join","send_quit_tx","serve","server","tcp_client","Client","DropIfDisconnected","Flush","Flush","FlushedMsg","InterruptMsg","LogMsg","MsgMsg","Packet","PacketMsg","Quit","QuitMsg","SetAddr","SetAddr","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop_if_disconnected","drop_join","drop_quit_tx","encode_join","encode_quit_tx","eq","eq","eq","equivalent","equivalent","equivalent","flush","flushed_rx","fmt","fmt","fmt","from","from","from","from","from","from","init","init","init","init","init","init","into","into","into","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","msg_drop","msg_encode","msg_tx","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","send","send_join","send_msg_msg","send_quit_tx","send_until_success","set_addr","tcp_sender","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","CongestionManager","ServerOptions","Throttling","TimelineThrottling","__clone_box","accept_rate","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","chance_of_sending","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","fmt","from","from","from","from","init","init","init","init","into","into","into","into","last_log_time","last_time","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","max_latency_sec","max_latency_sec","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","quiet","register_latency","register_latency","rng","run_client","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","send_time","serve","should_send","should_send_time","should_send_time_point","spawn_client","throttling","timeline_histories","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Connected","Disconnected","Pending","TcpClient","TcpStreamState","addrs","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","connect","default","deref","deref","deref_mut","deref_mut","drop","drop","flush","from","from","has_disconnected","init","init","into","into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","send","set_addr","stream_state","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from"],"q":["re_sdk_comms","","","","","","","","","","","","","","","","","","","","","","","re_sdk_comms::buffered_clientre_sdk_comms::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_sdk_comms::tcp_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Send <code>LogMsg</code>es to a server.","","","","","","","","The default address of a Rerun TCP server which an SDK …","","","","","","","If the latency in the <code>LogMsg</code> channel is greater than this, …","","Turns <code>info</code>-level logs into <code>debug</code>-level logs.","","","Listen to multiple SDK:s connecting to us over TCP.","TODO(emilk): use tokio instead","","Send <code>LogMsg</code>es to a server.","Switch to a mode where we drop messages if disconnected.","","","","Sent to prematurely quit (before flushing).","","","","","Quite immediately, dropping any unsent message.","Sent to prematurely quit (before flushing).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wait until everything has been sent.","","","","Switch to a mode where we drop messages if disconnected.","","","","","","","","","","","Stall until all messages so far has been sent.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decides how many messages to drop so that we achieve a …","","Figures out how large fraction of messages to send based on","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","If the latency in the <code>LogMsg</code> channel is greater than this, …","","","","","","","","","","","Turns <code>info</code>-level logs into <code>debug</code>-level logs.","","","","","","","","","","","","","","Listen to multiple SDK:s connecting to us over TCP.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A healthy <code>TcpStream</code> ready to send packets","A broken <code>TcpStream</code> which experienced a failure to connect …","The <code>TcpStream</code> is yet to be connected.","Connect to a rerun server and send log messages.","State of the <code>TcpStream</code>","","","","","","","","","","","","","","return <code>false</code> on failure. Does nothing if already connected.","","","","","","","","Wait until all logged data have been sent.","Returns the argument unchanged.","Returns the argument unchanged.","Check if the underlying <code>TcpStream</code> has entered the …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","blocks until it is sent","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,11,11,11,0,11,11,7,11,7,11,11,0,0,0,0,16,21,35,0,0,21,0,35,0,16,0,21,35,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,11,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,11,13,15,16,11,11,11,11,11,13,15,16,13,15,16,11,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,0,0,11,11,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,11,11,11,11,0,11,0,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,0,0,0,0,7,29,28,29,7,26,28,29,7,26,28,29,7,26,28,29,7,26,26,28,29,7,26,28,29,7,26,7,7,7,26,28,29,7,26,28,29,7,26,28,29,7,26,7,7,28,29,7,26,28,29,7,26,28,29,7,26,29,29,28,29,7,26,28,29,7,26,29,7,28,29,28,29,7,26,28,29,7,26,7,28,29,28,0,28,29,7,26,28,29,7,26,26,0,28,28,28,0,28,28,7,28,29,7,26,28,29,7,26,28,29,7,26,28,29,7,26,28,29,7,26,28,29,7,26,28,29,7,26,28,29,7,26,36,36,36,0,0,22,36,22,36,22,36,22,36,22,36,22,36,22,22,22,36,22,36,22,36,22,22,36,22,22,36,22,36,22,36,22,36,22,22,36,22,36,22,36,22,36,22,22,22,22,36,22,36,22,36,22,36,22,36,22,36,22,36,22,36,22],"f":[0,0,0,0,0,0,0,[[],[[2,[1]]]],[[],3],0,0,0,[1,[[5,[4]]]],0,0,0,0,0,0,0,[[6,7],[[9,[[8,[1]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[11],[12],[12],[12],[11],0,0,0,0,[[13,13],14],[[15,15],14],[[16,16],14],[[],14],[[],14],[[],14],[11],0,[[13,17],18],[[15,17],18],[[16,17],18],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[19,19]],[[19,20,19,20]],0,[3,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[11,1]],0,[[11,21]],0,[[22,14,19],[[10,[16]]]],[[11,3]],[[3,19,19,20]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[25],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[7,7],[[]],[[],7],[[],26],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[[7,7],14],[[7,17],18],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],0,0,[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],0,0,[27,28],[27,29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[28,27]],[[29,27]],0,[[30,31,7],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[6,7],[[9,[[8,[1]]]]]],[[28,1],14],[[28,32,33],14],[[28,34],14],[[30,[31,[1]],7]],0,0,[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[22,9],[[],22],[12],[12],[12],[12],[12],[12],[22],[[]],[[]],[22,14],[[],12],[[],12],[[]],[[]],[[],10],[[],10],[[]],[[]],[3,22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[22,9],[[22,3]],0,[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[4,"LogMsg"],[6,"Result"],[4,"SocketAddr"],[15,"u8"],[3,"Vec"],[15,"u16"],[3,"ServerOptions"],[3,"Receiver"],[6,"Result"],[4,"Option"],[3,"Client"],[15,"usize"],[3,"FlushedMsg"],[15,"bool"],[3,"QuitMsg"],[4,"InterruptMsg"],[3,"Formatter"],[6,"Result"],[3,"Receiver"],[3,"Sender"],[4,"MsgMsg"],[3,"TcpClient"],[4,"Result"],[3,"TypeId"],[3,"Private"],[3,"TimelineThrottling"],[15,"f32"],[3,"CongestionManager"],[3,"Throttling"],[3,"TcpStream"],[3,"Sender"],[3,"TimelineName"],[15,"i64"],[3,"TimePoint"],[4,"PacketMsg"],[4,"TcpStreamState"]]},\
"re_smart_channel":{"doc":"A channel that keeps track of latency and queue length.","t":[13,3,13,3,3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,5,5,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12],"n":["File","Receiver","Sdk","Sender","SharedStats","Source","TcpServer","WsClient","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chained_channel","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","fmt","from","from","from","from","hash","init","init","init","init","into","into","into","into","is_empty","is_empty","is_network","latency_ns","latency_ns","latency_ns","latency_sec","latency_sec","len","len","recv","recv_with_send_time","rx","send","send_at","smart_channel","smart_channel_with_stats","source","source","stats","stats","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_recv","tx","type_id","type_id","type_id","type_id","path","port","ws_server_url"],"q":["re_smart_channel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_smart_channel::Source","",""],"d":["The source if a file on disk","","The source is the logging sdk directly, same process.","","Stats for a channel, possibly shared between chained …","Where is the messages coming from?","We are a TCP server listening on this port","We are a WebSocket client connected to a rerun server.","","","","","","","","","Create a new channel that use the same stats as this one.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is the channel currently empty of messages?","Is the channel currently empty of messages?","","Latest known latency from sending a message to receiving …","Latest known latency from sending a message to receiving …","Latest known latency from sending a message to receiving …","Latest known latency from sending a message to receiving …","Latest known latency from sending a message to receiving …","Number of messages in the channel right now.","Number of messages in the channel right now.","","Receives without registering the latency.","","","back-date a message","","Create a new channel using the same stats as some other.","Where is the data coming from?","","","","","","","","","","","","","","","","","","","","","","The server we are connected to (or are trying to connect …"],"i":[3,0,3,0,0,0,3,3,2,3,6,5,2,3,6,5,2,3,5,3,5,6,2,3,6,5,2,3,6,5,2,3,6,5,3,3,2,3,6,5,3,2,3,6,5,2,3,6,5,2,5,3,2,5,6,2,5,2,5,2,2,2,5,5,0,0,2,2,2,5,3,5,2,3,6,5,2,3,6,5,2,5,2,3,6,5,20,21,22],"f":[0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]]],[3,3],[[[5,[[0,[4,1]]]]],[[5,[[0,[4,1]]]]]],[[]],[[]],[[],6],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[3,3],8],[[3,9],10],[[]],[[]],[[]],[[]],[3],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[[2,[1]]],8],[[[5,[1]]],8],[3,8],[[[2,[1]]],11],[[[5,[1]]],11],0,[[[2,[1]]],12],[[[5,[1]]],12],[[[2,[1]]],7],[[[5,[1]]],7],[[[2,[1]]],[[14,[1,13]]]],[[[2,[1]]],[[14,[13]]]],0,[[[5,[1]],1],[[14,[[15,[1]]]]]],[[[5,[1]],16,1],[[14,[[15,[1]]]]]],[3],[[3,[17,[6]]]],[[[2,[1]]],3],0,0,0,[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[[2,[1]]],[[14,[1,18]]]],0,[[],19],[[],19],[[],19],[[],19],0,0,0],"p":[[8,"Send"],[3,"Receiver"],[4,"Source"],[8,"Clone"],[3,"Sender"],[3,"SharedStats"],[15,"usize"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"u64"],[15,"f32"],[3,"RecvError"],[4,"Result"],[3,"SendError"],[6,"Instant"],[3,"Arc"],[4,"TryRecvError"],[3,"TypeId"],[13,"File"],[13,"TcpServer"],[13,"WsClient"]]},\
"re_string_interner":{"doc":"Yet another string interning library.","t":[7,3,3,11,11,11,11,11,11,11,5,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,12,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11],"n":["GLOBAL_INTERNER","InternedString","StringInterner","as_ref","as_str","borrow","borrow","borrow","borrow_mut","borrow_mut","bytes_used","bytes_used","clone","clone_into","cmp","declare_new_type","default","deref","deserialize","eq","equivalent","fmt","fmt","from","from","from","from","get_hash","global_intern","hash","hash","hash","hash","intern","into","into","len","map","new","partial_cmp","serialize","string","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["re_string_interner","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","Declare a newtype wrapper around <code>InternedString</code> with all …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","global interning function.","Fast but high quality string hash","","Precomputed hash of the string.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[0,0,0,1,1,1,1,4,1,4,0,4,1,1,1,0,4,1,1,1,1,1,1,1,1,1,4,1,0,0,1,1,1,4,1,4,4,4,1,1,1,1,1,1,1,4,1,4,1,4],"f":[0,0,0,[1,2],[1,2],[1,2],[[]],[[]],[[]],[[]],[[],3],[4,3],[1,1],[[]],[[1,1],5],0,[[],4],[1,2],[6,[[7,[1]]]],[[1,1],8],[[],8],[[1,9],10],[[1,9],10],[2,1],[11,1],[[]],[[]],[[],12],[2,1],[13,12],[1],[1,12],0,[[4,2],1],[[]],[[]],[4,3],0,[2,1],[[1,1],[[14,[5]]]],[[1,15],7],0,[[]],[[],11],[[],7],[[],7],[[],7],[[],7],[[],16],[[],16]],"p":[[3,"InternedString"],[15,"str"],[15,"usize"],[3,"StringInterner"],[4,"Ordering"],[8,"Deserializer"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"String"],[15,"u64"],[8,"Hash"],[4,"Option"],[8,"Serializer"],[3,"TypeId"]]},\
"re_tensor_ops":{"doc":"Helper used to work with <code>re_log_types::Tensor</code> as an <code>ndarray</code>","t":[0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,5,11,11,11,11,12,11,11,11,11,12,12,5,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11],"n":["dimension_mapping","DimensionMapping","DimensionSelector","__clone_box","__clone_box","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","create","deref","deref","deref_mut","deref_mut","deserialize","deserialize","dim_idx","drop","drop","eq","eq","equivalent","equivalent","find_width_height_dim_indices","fmt","fmt","from","from","height","init","init","into","into","invert_height","invert_width","is_name_like_height","is_name_like_width","is_valid","longest_and_second_longest_dim_indices","lossless_try_into","lossless_try_into","lossy_into","lossy_into","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","selectors","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","visible","vzip","vzip","width","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from"],"q":["re_tensor_ops","re_tensor_ops::dimension_mapping","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Flip the height","Flip the width","","","Protect against old serialized data that is not up-to-date …","Returns the longest and second longest dimensions","","","","","","","","","","","","","","Which dimensions have selectors, and are they visible?","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,4,3,4,3,4,3,4,3,3,4,3,4,3,4,0,3,4,3,4,4,3,4,3,4,4,4,0,0,4,0,3,4,3,4,3,3,4,3,4,3,4,3,4,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,3,4,4,3,4,3,4],"f":[0,0,0,[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[3,3],[4,4],[[]],[[]],[[],4],[5],[5],[5],[5],[[],[[6,[3]]]],[[],[[6,[4]]]],0,[5],[5],[[3,3],7],[[4,4],7],[[],7],[[],7],[[]],[[3,8],9],[[4,8],9],[[]],[[]],0,[[],5],[[],5],[[]],[[]],0,0,[10,7],[10,7],[[4,5],7],[[]],[[],2],[[],2],[[]],[[]],[5,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[3,6],[4,6],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],11],[[],11],[[]],[[]],[[]],[[]],0,[[]],[[]],0,[[]],[[]],[[]],[[]]],"p":[[3,"Private"],[4,"Option"],[3,"DimensionSelector"],[3,"DimensionMapping"],[15,"usize"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"TypeId"]]},\
"re_tuid":{"doc":"TUID: Time-based Unique Identifiers.","t":[18,3,3,3,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,12,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,5,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["MAX","MutableTuidArray","Tuid","TuidArray","TuidArrayIterator","ZERO","__clone_box","arrow_deserialize","arrow_serialize","as_any","as_arc","as_box","as_mut_any","as_u128","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","consume_next","data_type","data_type","data_type","default","deserialize","eq","field_inc","field_inc","field_time_ns","field_time_ns","fmt","fmt","from","from","from","from","has_validity","hash","inc","init_validity","into","into","into","into","into_iter","into_iter","len","monotonic_nanos_since_epoch","new","new_array","next","partial_cmp","push_null","random","random_u64","reserve","return_next","serialize","shrink_to_fit","time_ns","to_owned","try_extend","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_push","type_id","type_id","type_id","type_id","validity","validity","validity_iter"],"q":["re_tuid","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["All ones.","","","","","All zeroes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Initialized to something random on each thread, then …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns a high-precision, monotonically increasing count …","","","","","","","","","","","","Approximate nanoseconds since epoch.","","","","","","","","","","","","","","","","","",""],"i":[2,0,0,0,0,2,2,2,2,5,5,5,5,2,5,18,12,2,5,18,12,2,2,2,2,12,5,2,5,5,2,2,5,12,5,12,5,2,5,18,12,2,12,2,2,5,5,18,12,2,18,12,5,0,5,2,12,2,5,2,0,5,12,2,5,2,2,5,5,18,12,2,5,18,12,2,5,5,18,12,2,5,5,12],"f":[0,0,0,0,0,0,[1],[[[3,[2]]],[[3,[2]]]],[2,4],[5,6],[5,[[8,[7]]]],[5,[[9,[7]]]],[5,6],[2,10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,2],[[]],[[2,2],11],[12],[5,13],[[],13],0,[[],5],[[],[[14,[2]]]],[[2,2],15],0,0,0,0,[[5,16],17],[[2,16],17],[[]],[[]],[[]],[[]],0,[2],0,[5],[[]],[[]],[[]],[[]],[18],[[]],[5,19],[[],20],[[],5],[[]],[12,3],[[2,2],[[3,[11]]]],[5],[[],2],[[],20],[[5,19]],[12,[[3,[2]]]],[2,14],[5],0,[[]],[[5,21],4],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[5,[3,[[22,[2]]]]],4],[[],23],[[],23],[[],23],[[],23],[5,[[3,[24]]]],0,0],"p":[[3,"Private"],[3,"Tuid"],[4,"Option"],[6,"Result"],[3,"MutableTuidArray"],[8,"Any"],[8,"Array"],[3,"Arc"],[3,"Box"],[15,"u128"],[4,"Ordering"],[3,"TuidArrayIterator"],[4,"DataType"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"TuidArray"],[15,"usize"],[15,"u64"],[8,"IntoIterator"],[8,"Borrow"],[3,"TypeId"],[3,"MutableBitmap"]]},\
"re_ui":{"doc":"Rerun GUI theme and helpers, built around <code>egui</code>.","t":[17,4,3,3,17,2,17,13,13,13,13,13,13,3,13,13,13,13,13,3,13,13,13,13,13,13,3,13,13,13,11,11,11,11,12,12,12,11,11,11,11,0,0,11,11,11,11,0,12,11,11,11,11,11,12,5,11,11,11,11,12,11,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,12,11,11,12,11,11,11,12,11,11,11,0,12,11,11,11,11,0,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,4,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,5,11,11,12,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,12,11,3,3,5,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,12,12,11,11,5,5,5,5,5,11,11,11,11,11,5,5,12,11,12,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,12,11,11,5,11,11,11,11,5,5],"n":["CUSTOM_WINDOW_DECORATIONS","Command","CommandPalette","DesignTokens","FULLSIZE_CONTENT","Icon","NATIVE_WINDOW_BAR","Open","OpenProfiler","PlaybackStepBack","PlaybackStepForward","PlaybackTogglePlayPause","Quit","ReUi","ResetViewer","Save","SaveSelection","SelectionNext","SelectionPrevious","StaticImageCache","ToggleBlueprintPanel","ToggleCommandPalette","ToggleFullscreen","ToggleMemoryPanel","ToggleSelectionPanel","ToggleTimePanel","TopBarStyle","ZoomIn","ZoomOut","ZoomReset","borrow","borrow","borrow_mut","borrow_mut","bottom_bar_color","bottom_bar_rounding","bottom_bar_stroke","bottom_panel_frame","bottom_panel_margin","clone","clone_into","command","command_palette","deref","deref","deref_mut","deref_mut","design_tokens","design_tokens","downcast","downcast","draw_shadow_line","drop","drop","egui_ctx","egui_dock_style","error_text","from","from","grid_left_hand_label","height","icon_image","icons","images","indent","init","init","into","into","large_button","large_button_impl","large_button_selected","large_collapsing_header","load_and_apply","loop_everything_color","loop_selection_color","medium_icon_toggle_button","native_window_buttons_ui","native_window_rounding","normal_rounding","paint_watermark","query","rerun_logo","selectable_label_with_icon","selected_alternative","selection_grid","setup_table_body","setup_table_header","shadow_gradient_dark_start","small_icon_button","small_icon_size","small_rounding","static_image_cache","static_image_cache","table_header_height","table_line_height","title_bar_height","to_owned","toggle_switch","toggle_switch","top_bar_color","top_bar_height","top_bar_margin","top_bar_style","top_panel_frame","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","view_padding","visibility_toggle_button","visible","warning_text","window_rounding","Command","CommandIter","Open","OpenProfiler","PlaybackStepBack","PlaybackStepForward","PlaybackTogglePlayPause","Quit","ResetViewer","Save","SaveSelection","SelectionNext","SelectionPrevious","ToggleBlueprintPanel","ToggleCommandPalette","ToggleFullscreen","ToggleMemoryPanel","ToggleSelectionPanel","ToggleTimePanel","ZoomIn","ZoomOut","ZoomReset","back_idx","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","equivalent","fmt","format_shortcut_tooltip_suffix","from","from","get","get_hash","hash","idx","init","init","into","into","into_iter","iter","kb_shortcut","len","listen_for_kb_shortcut","marker","menu_button","menu_button_ui","next","next_back","nth","size_hint","text","text_and_tooltip","to_owned","to_owned","tooltip","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","CommandPalette","FuzzyMatch","alternatives_ui","borrow","borrow","borrow_mut","borrow_mut","command","commands_that_match","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","format_match","from","from","fuzzy_match","init","init","into","into","query","score","selected_alternative","show","toggle","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","visible","window_content_ui","DesignTokens","Typography","apply_design_tokens","borrow","borrow","borrow_mut","borrow_mut","bottom_bar_color","bottom_bar_rounding","bottom_bar_stroke","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","downcast","downcast","drop","drop","fmt","follow_path","follow_path_or_die","fontFamily","fontSize","fontWeight","from","from","get_alias","get_alias_str","get_aliased_color","get_global_color","global_path_value","init","init","into","into","load_and_apply","parse_color","parse_px","shadow_gradient_dark_start","to_owned","top_bar_color","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","ADD","ARROW_LEFT","ARROW_RIGHT","BOTTOM_PANEL_TOGGLE","CLOSE","CONTAINER","FOLLOW","INVISIBLE","Icon","LEFT_PANEL_TOGGLE","LOOP","MAXIMIZE","MINIMIZE","PAUSE","PLAY","REMOVE","RERUN_MENU","RESET","RIGHT_PANEL_TOGGLE","SPACE_VIEW_3D","SPACE_VIEW_CHART","SPACE_VIEW_HISTOGRAM","SPACE_VIEW_RAW","SPACE_VIEW_SCATTERPLOT","SPACE_VIEW_TENSOR","SPACE_VIEW_TEXT","VISIBLE","borrow","borrow_mut","clone","clone_into","deref","deref_mut","downcast","drop","fmt","from","id","init","into","new","png_bytes","to_owned","try_from","try_into","type_id","upcast","StaticImageCache","borrow","borrow_mut","default","deref","deref_mut","downcast","drop","from","get","images","init","into","load_image_bytes","try_from","try_into","type_id","upcast","toggle_switch","toggle_switch_ui"],"q":["re_ui","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_ui::command","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_ui::command_palette","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_ui::design_tokens","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_ui::icons","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_ui::static_image_cache","","","","","","","","","","","","","","","","","","re_ui::toggle_switch",""],"d":["If true, we hide the native window decoration (the top bar …","All the commands we support.","","The look and feel of the UI.","If true, we fill the entire window, except for the …","","If true, we show the native window decorations/chrome with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","For the streams view (time panel)","","","","","","","","","","","Colors, styles etc loaded from a design_tokens.json","","","Draws a shadow into the given rect with the shadow …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Workaround for putting a label into a grid at the top left …","Height of the top bar","","","","Extra horizontal space in the top left corner to make room …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Create <code>ReUi</code> and apply style to the given egui context.","The color we use to mean “loop all the data”","The color we use to mean “loop this selection”","","Show some close/maximize/minimize buttons for the native …","","","Paint a watermark","","","","","Grid to be used in selection view.","","","","","","","","","","","Height of the title row in the blueprint view and …","","Adapted from <code>egui_demo_lib/src/demo/toggle_switch.rs</code>","iOS-style toggle switch.","","Height of the top-most bar.","","","","","","","","","","","","Margin on all sides of views.","","","","","All the commands we support.","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add e.g. “ (Ctrl+F11)“ as a suffix","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Show this command as a menu-button.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Show the command palette, if it is visible.","","","","","","","","","","","","The look and feel of the UI.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create <code>DesignTokens</code> and apply style to the given egui …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Human readable unique id","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","iOS-style toggle switch.",""],"i":[0,0,0,0,0,0,0,34,34,34,34,34,34,0,34,34,34,34,34,0,34,34,34,34,34,34,0,34,34,34,31,1,31,1,45,45,45,1,1,1,1,0,0,31,1,31,1,0,1,31,1,1,31,1,1,0,1,31,1,1,31,1,0,49,31,31,1,31,1,1,1,1,1,1,1,1,1,0,1,1,1,42,1,1,42,1,1,1,45,1,1,1,0,1,1,1,1,1,0,0,45,1,1,1,1,31,1,31,1,31,1,31,1,1,1,42,1,1,0,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,35,34,35,34,35,34,35,34,35,34,35,34,35,34,35,34,35,34,34,34,34,34,35,35,34,34,35,34,35,34,35,35,34,34,35,34,35,34,34,35,35,35,35,34,34,34,35,34,34,35,34,35,34,35,34,35,0,0,42,43,42,43,42,43,0,42,43,42,43,42,43,42,43,42,0,43,42,43,43,42,43,42,42,43,42,42,42,43,42,43,42,43,42,43,42,42,42,0,0,0,45,46,45,46,45,45,45,45,45,45,46,45,46,46,45,46,45,46,45,0,0,46,46,46,45,46,0,0,0,0,0,45,46,45,46,45,0,0,45,45,45,45,46,45,46,45,46,45,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,49,49,49,49,49,49,49,49,49,49,49,49,0,49,49,49,49,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,[1,2],[1,3],[1,1],[[]],0,0,[4],[4],[4],[4],0,0,[[]],[[]],[[1,5,6,7]],[4],[4],0,[8,9],[[1,[11,[10]]],12],[[]],[[]],[[1,5,13],14],0,[[1,15],[[17,[16]]]],0,0,0,[[],4],[[],4],[[]],[[]],[[1,5,15],14],[[1,5,15,[19,[18]],[19,[18]]],14],[[1,5,15,20],14],[[1,5,13,20,21]],[22,1],[[],18],[[],18],[[1,5,15,20],14],[[23,5]],[[],24],[[],24],[1],0,[1,[[17,[16]]]],[[1,5,15,[11,[25]],20],14],0,[[1,5,13],26],[27],[28],0,[[1,5,15],14],[[],3],[[],24],0,0,[[],24],[[],24],[[],24],[[]],0,[20,29],0,[[],24],[[],30],[[1,[19,[24]],20],31],[1,2],[[],32],[[],32],[[],32],[[],32],[[],33],[[],33],[[],19],[[],19],[[],24],[[1,5,20],14],0,[[1,[11,[10]]],12],[[],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[34,34],[35,35],[[]],[[]],[4],[4],[4],[4],[[]],[[]],[4],[4],[[34,34],20],[[],20],[[34,36],37],[[34,22],10],[[]],[[]],[[35,4],[[19,[34]]]],[[],38],[34],0,[[],4],[[],4],[[]],[[]],[[]],[[],35],[34,[[19,[39]]]],[35,4],[22,[[19,[34]]]],0,[[34,22],40],[[34,5,41],14],[35,19],[35,19],[[35,4],19],[35],[34,13],[34],[[]],[[]],[34,13],[[],32],[[],32],[[],32],[[],32],[[],33],[[],33],[[],19],[[],19],0,0,[[42,5,20,20],[[19,[34]]]],[[]],[[]],[[]],[[]],0,[13,[[41,[43]]]],[[],42],[4],[4],[4],[4],[[]],[[]],[4],[4],[[43,5,44,18],25],[[]],[[]],0,[[],4],[[],4],[[]],[[]],0,0,0,[[42,22],[[19,[34]]]],[42],[[],32],[[],32],[[],32],[[],32],[[],33],[[],33],[[],19],[[],19],0,[[42,5],[[19,[34]]]],0,0,[22,45],[[]],[[]],[[]],[[]],0,0,0,[45,45],[[]],[4],[4],[4],[4],[[],[[32,[46]]]],[[]],[[]],[4],[4],[[45,36],37],[[47,13],[[19,[47]]]],[[47,13],47],0,0,0,[[]],[[]],[[47,13],48],[[47,13],13],[[47,13],18],[[47,13],18],[[47,13],47],[[],4],[[],4],[[]],[[]],[22,45],[13,18],[13,24],0,[[]],0,[[],32],[[],32],[[],32],[[],32],[[],33],[[],33],[[],19],[[],19],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[15,15],[[]],[4],[4],[[]],[4],[[15,36],37],[[]],0,[[],4],[[]],[13,15],0,[[]],[[],32],[[],32],[[],33],[[],19],0,[[]],[[]],[[],49],[4],[4],[[]],[4],[[]],[[49,13],[[17,[16]]]],0,[[],4],[[]],[[],[[32,[50,10]]]],[[],32],[[],32],[[],33],[[],19],[20,29],[[5,20],14]],"p":[[3,"ReUi"],[3,"Frame"],[3,"Vec2"],[15,"usize"],[3,"Ui"],[3,"Rect"],[4,"Direction"],[3,"Style"],[3,"Style"],[3,"String"],[8,"Into"],[3,"RichText"],[15,"str"],[3,"Response"],[3,"Icon"],[3,"RetainedImage"],[3,"Arc"],[3,"Color32"],[4,"Option"],[15,"bool"],[8,"FnOnce"],[3,"Context"],[3,"Frame"],[15,"f32"],[4,"WidgetText"],[3,"Grid"],[3,"TableBody"],[3,"TableRow"],[8,"Widget"],[3,"Margin"],[3,"TopBarStyle"],[4,"Result"],[3,"TypeId"],[4,"Command"],[3,"CommandIter"],[3,"Formatter"],[6,"Result"],[15,"u64"],[3,"KeyboardShortcut"],[3,"Button"],[3,"Vec"],[3,"CommandPalette"],[3,"FuzzyMatch"],[3,"FontId"],[3,"DesignTokens"],[3,"Typography"],[4,"Value"],[8,"DeserializeOwned"],[3,"StaticImageCache"],[3,"ColorImage"]]},\
"re_viewer":{"doc":"Rerun Viewer GUI.","t":[17,3,4,3,13,3,13,13,3,13,11,12,0,12,12,0,11,11,11,12,12,11,11,11,11,11,12,12,12,5,11,11,11,11,0,11,11,11,0,11,12,11,5,12,11,11,12,12,12,11,11,0,12,12,12,0,0,11,11,12,12,12,12,0,5,5,12,11,11,12,12,12,12,11,12,11,11,11,0,11,11,11,12,0,11,5,5,11,11,12,12,3,3,13,17,17,17,17,4,3,13,13,4,13,13,17,11,11,11,5,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,12,5,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,5,11,11,11,11,11,12,12,5,5,5,11,11,12,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,11,5,5,5,5,11,11,11,11,11,11,11,11,11,11,5,5,12,12,12,11,5,12,11,11,12,11,5,12,5,5,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,5,11,5,5,11,12,12,11,11,11,11,11,11,12,12,12,11,11,11,12,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,17,2,2,2,3,18,18,18,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,5,12,12,5,12,12,11,11,11,11,11,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,5,0,0,0,0,0,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,11,11,12,2,3,2,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,12,11,11,11,11,0,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,3,3,3,11,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,13,13,13,4,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,17,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,5,11,11,11,11,11,11,11,11,11,11,4,13,4,3,13,13,13,3,13,4,3,13,3,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,12,11,12,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,4,13,13,4,13,13,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,5,5,5,11,11,11,11,12,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,13,13,3,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,5,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,3,3,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,5,5,3,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,4,13,3,17,13,3,3,13,11,11,11,11,12,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,13,3,4,13,13,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,5,11,11,11,11,5,5,12,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,5,5,5,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,12,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,5,12,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,8,13,13,13,4,11,0,11,11,11,11,11,11,11,11,0,0,0,0,10,11,11,11,11,0,11,5,11,0,11,0,11,0,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,5,3,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,5,5,5,5,5,5,5,5,5,5,17,17,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,5,11,11,11,5,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,3,17,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,3,11,5,11,11,11,11,11,5,11,11,5,11,11,11,11,11,5,11,5,11,11,5,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,5,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,4,13,3,13,3,11,5,5,5,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,5,5,5,5,5,5,5,5,5,3,11,0,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,5,11,5,5,11,5,11,11,12,11,11,0,5,5,12,11,11,11,11,5,5,11,11,0,5,0,12,0,5,11,11,11,11,11,11,11,5,11,11,11,3,18,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,5,5,5,3,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,12,11,11,11,5,11,11,11,11,11,11,11,11,11,11,17,17,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,5,5,5,5,5,5,5,0,0,3,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,13,13,13,13,13,4,6,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,2,2,18,3,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,12,12,11,11,11,11,2,18,18,3,6,13,3,4,2,2,13,13,13,18,18,3,2,3,13,3,4,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,5,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,3,3,3,3,17,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,5,5,5,5,12,5,5,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,3,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,8,0,0,0,0,0,5,0,0,10,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,5,11,11,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,13,4,4,13,13,13,3,13,11,11,11,11,12,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,5,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,17,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,12,12,12,12,3,17,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,5,5,11,12,11,11,11,11,11,11,11,12,5,12,12,12,12,12,12,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,5,11,11,11,11,11,11,11,11,11,13,13,4,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,5,11,5,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,4,3,13,13,13,4,3,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,12,5,12,5,11,11,11,11,11,5,12,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,3,3,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,5,11,11,11,11,11,11,12,5,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,0,0,13,3,3,3,4,13,3,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,17,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,5,11,11,5,11,11,11,11,11,11,11,11,11,11,5,11,11,11,18,3,3,6,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,5,11,11,12,5,11,11,11,11,5,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,5,5,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["APPLICATION_NAME","App","AppEnvironment","Profiler","PythonSdk","RemoteViewerApp","RerunCli","RustSdk","StartupOptions","Web","__clone_box","analytics","app","app","app_env","app_icon","az","borrow","borrow_mut","build_info","build_info","cast_from","checked_as","checked_cast_from","clone","clone_into","cmd_palette","component_ui_registry","ctrl_c","customize_eframe","deref","deref_mut","downcast","drop","env_vars","eq","equivalent","equivalent","external","fmt","frame_time_history","from","hardware_tier","icon_status","init","into","latest_memory_purge","latest_queue_interest","log_dbs","lossless_try_into","lossy_into","math","memory_limit","memory_panel","memory_panel_open","misc","native","overflowing_as","overflowing_cast_from","pending_commands","pending_promises","re_ui","re_ui","remote_viewer_app","run_native_app","run_native_viewer_with_messages","rx","saturating_as","saturating_cast_from","server","startup_options","startup_options","state","to_owned","toasts","try_from","try_into","type_id","ui","unwrapped_as","unwrapped_cast_from","upcast","url","viewer_analytics","vzip","wake_up_ui_thread_on_each_msg","wgpu_options","wrapping_as","wrapping_cast_from","rust_version","rust_version","App","AppState","EventLog","FILE_SAVER_NOTIF_DURATION","FILE_SAVER_PROMISE","MAX_ZOOM_FACTOR","MIN_ZOOM_FACTOR","PanelSelection","StartupOptions","StepBack","StepForward","TimeControlCommand","TogglePlayPause","Viewport","WATERMARK","__clone_box","__clone_box","__clone_box","about_rerun_ui","analytics","app_options","az","az","az","az","az","blueprint_mut","blueprints","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_info","cache","cast_from","cast_from","cast_from","cast_from","cast_from","check_keyboard_shortcuts","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","cleanup","clear_color","clone","clone","clone","clone_into","clone_into","clone_into","cmd_palette","component_ui_registry","ctrl_c","debug_menu_options_ui","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","event_log_view","file_saver_progress_ui","fmt","frame_time_history","frame_time_label_ui","from","from","from","from","from","from_receiver","get_hash","handle_dropping_files","hash","icon_status","init","init","init","init","init","input_latency_label_ui","into","into","into","into","into","latest_memory_purge","latest_queue_interest","load_file_contents","load_file_path","load_rrd_to_log_db","log_db","log_db_is_nonempty","log_dbs","loop_selection","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","main_view_selector_ui","memory_limit","memory_panel","memory_panel_open","memory_panel_ui","memory_use_label_ui","new_recording_confg","open","options_menu_ui","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","paint_background_fill","paint_native_window_frame","panel_selection","pending_commands","pending_promises","poll_promise","preview_files_being_dropped","profiler","promise_exists","purge_memory_if_needed","re_ui","receive_messages","recording_config_entry","recording_configs","recordings_menu","rerun_menu_button_ui","reset","run_command","run_pending_commands","run_time_control_command","rx","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","save","save","save_buttons_ui","save_database_to_file","selected_app_id","selected_rec_id","selection_panel","serialize","serialize","set_profiler","show","show_log_db","spawn_threaded_promise","startup_options","state","time_panel","to_owned","to_owned","to_owned","toasts","top_bar_ui","top_panel","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","update","vzip","vzip","vzip","vzip","vzip","wait_screen_ui","warning_panel","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","AppIconStatus","NotSetIgnored","NotSetTryAgain","Set","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","downcast","drop","eq","equivalent","equivalent","from","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","setup_app_icon","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","RERUN_TRACK_ALLOCATIONS","eframe","egui","re_renderer","BoundingBox","EVERYTHING","NAN","NOTHING","Rect","ZERO","__clone_box","__clone_box","any_nan","area","aspect_ratio","az","az","borrow","borrow","borrow_mut","borrow_mut","bottom","bottom_mut","bottom_up_range","bounding_sphere_radius","cast_from","cast_from","center","center","center_bottom","center_top","centered_bounding_sphere_radius","checked_as","checked_as","checked_cast_from","checked_cast_from","clamp","clone","clone","clone_into","clone_into","contains","contains","contains_rect","corners","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","distance_sq_to_pos","distance_to_pos","downcast","downcast","drop","drop","ease_out","edges","eq","eq","equivalent","equivalent","everything","everything_above","everything_below","everything_left_of","everything_right_of","expand","expand2","expanded","extend","extend_with","extend_with_x","extend_with_y","fmt","fmt","from","from","from","from_center_size","from_center_size","from_min_max","from_min_max","from_min_size","from_min_size","from_points","from_points","from_two_pos","from_x_y_ranges","half_size","height","init","init","intersect","intersection","intersects","into","into","is_finite","is_finite","is_nan","is_negative","is_nothing","is_point","is_positive","is_something","is_valid_bit_pattern","left","left_bottom","left_center","left_mut","left_top","lerp","line_segment_distance_sq_to_point_2d","line_segment_distance_sq_to_point_3d","line_segment_distance_to_point_3d","lossless_try_into","lossless_try_into","lossy_into","lossy_into","max","max","max","min","min","min","nothing","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","ray_bbox_intersect","ray_closest_t_line_segment","remap","remap_clamp","right","right_bottom","right_center","right_mut","right_top","rotate_bb","rotated_around_origin","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","serialize","serialize","set_bottom","set_center","set_height","set_left","set_right","set_top","set_width","shrink","shrink2","signed_distance_to_pos","size","size","square_proportions","to_owned","to_owned","top","top_mut","transform_affine3","transform_conformal3","transform_iso","translate","translated","try_from","try_from","try_into","try_into","type_id","type_id","union","union","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","volume","vzip","vzip","width","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","x_range","y_range","Caches","HoverHighlight","HoveredSpace","InteractionHighlight","Item","ItemCollection","OptionalSpaceViewEntityHighlight","SelectionHighlight","SelectionState","SpaceViewHighlights","TransformCache","UnreachableTransform","app_options","caches","clipboard","format_time","help_hover_button","item","mesh_loader","profiler","selection_state","space_info","time_control","time_control_ui","transform_cache","viewer_context","AppOptions","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","default","deref","deref_mut","deserialize","downcast","drop","eq","fmt","from","init","into","lossless_try_into","lossy_into","low_latency","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","serialize","show_camera_axes_in_3d","show_metrics","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","warn_latency","wrapping_as","wrapping_cast_from","zoom_factor","AsDynamicImage","Caches","TensorImageView","TensorStats","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","from","from","image","init","init","into","into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","mesh","mesh_cache","new","new_frame","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","purge_memory","range","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","tensor_image_cache","tensor_stats","tensor_stats","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","MeshCache","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","default","deref","deref_mut","downcast","drop","from","init","into","load","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","AsDynamicImage","CachedImage","ImageCache","ImageCacheKey","TensorImageView","__clone_box","annotation_msg_id","annotations","as_dynamic_image","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","cmp","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","dynamic_image_to_egui_color_image","dynamic_img","dynamic_img","eq","equivalent","equivalent","fmt","from","from","from","from","from_dynamic_image","from_tensor","generation","get_hash","get_view","get_view_with_annotations","hash","images","init","init","init","init","into","into","into","into","last_use_generation","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","memory_used","memory_used","new_frame","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","purge_memory","retained_img","retained_img","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","tensor","tensor_id","texture_handle","texture_handle","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Clipboard","arboard","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","downcast","drop","from","init","init_arboard","into","lossless_try_into","lossy_into","new","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","set_image","set_text","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","with","wrapping_as","wrapping_cast_from","format_time_compact","next_grid_tick_magnitude_ns","ComponentPath","DataBlueprintGroup","InstancePath","Item","ItemCollection","MsgId","SpaceView","__clone_box","__clone_box","are_all_same_kind","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","contains","data_ui","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","downcast","downcast","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","first","fmt","fmt","from","from","get_hash","hash","init","init","into","into","into_iter","is_empty","is_valid","iter","kind","len","lossless_try_into","lossless_try_into","lossy_into","lossy_into","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","purge_invalid","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","selection","serialize","serialize","to_owned","to_owned","to_vec","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","LoadedMesh","az","bbox","bbox","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","downcast","drop","from","init","into","load","load_encoded_mesh","load_raw","load_raw_mesh","lossless_try_into","lossy_into","mesh_instances","name","name","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","PORT","Profiler","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","default","deref","deref_mut","downcast","drop","from","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","server","start","start_puffin_viewer","start_server","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","HoverHighlight","Hovered","HoveredSpace","InteractionHighlight","None","None","None","OptionalSpaceViewEntityHighlight","Selection","SelectionHighlight","SelectionState","SiblingSelection","SpaceViewEntityHighlight","SpaceViewHighlights","ThreeD","TwoD","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","any_selection_highlight","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clear_current","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","current","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","entity_highlight","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","from","from","from","highlight_for_ui_element","highlighted_entity_paths","highlights_for_space_view","history","hover","hovered","hovered_previous_frame","hovered_space","hovered_space_previous_frame","hovered_space_this_frame","hovered_this_frame","index_highlight","init","init","init","init","init","init","init","init","instances","into","into","into","into","into","into","into","into","is_some","is_some","is_some","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","max","on_frame_start","overall","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","select_next","select_previous","selection","selection","selection_ui","serialize","set_hovered","set_hovered_space","set_multi_selection","set_single_selection","to_owned","to_owned","to_owned","to_owned","to_owned","toggle_selection","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","pos","space_2d","space_3d","target_spaces","SpaceInfo","SpaceInfoCollection","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","child_spaces","default","deref","deref","deref_mut","deref_mut","descendants_without_transform","downcast","downcast","drop","drop","from","from","get_first_parent_with_info","init","init","into","into","is_reachable_by_transform","iter","lossless_try_into","lossless_try_into","lossy_into","lossy_into","new","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","parent","path","query_view_coordinates","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","spaces","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","visit_descendants_with_reachable_transform","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","All","Following","Looping","Off","Paused","PlayState","Playing","Selection","TimeControl","TimeState","TimeView","__clone_box","__clone_box","__clone_box","__clone_box","active_loop_selection","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","current_query","default","default_time_line","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","follow_button_ui","following","fps","fps","fps_ui","from","from","from","from","from","full_range","get_hash","get_hash","hash","hash","init","init","init","init","init","into","into","into","into","into","is_time_selected","loop_button_ui","loop_selection","loop_selection","looping","looping","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","max","min","min","move_time","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","pause","pause_button_ui","play_button_ui","play_pause_ui","play_state","playback_speed_ui","playing","range","remove_loop_selection","reset_time_view","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","select_a_valid_timeline","serialize","serialize","serialize","serialize","serialize","set_fps","set_loop_selection","set_looping","set_play_state","set_speed","set_time","set_time_view","set_timeline","set_timeline_and_time","speed","speed","states","step_back_time","step_back_time_looped","step_fwd_time","step_fwd_time_looped","step_time_back","step_time_button_ui","step_time_fwd","time","time","time_control_ui","time_i64","time_int","time_spanned","time_type","time_view","timeline","timeline","timeline_selector_ui","to_owned","to_owned","to_owned","to_owned","toggle_play_pause","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","view","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","toggle_playback_text","InversePinholeCameraWithoutResolution","NestedPinholeCameras","TransformCache","UnknownSpaceInfo","UnknownTransform","UnreachableTransform","__clone_box","__clone_box","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","determine_transforms","downcast","downcast","drop","drop","first_unreachable_parent","fmt","from","from","gather_descendants_transforms","init","init","into","into","inverse_transform_at","lossless_try_into","lossless_try_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","reference_from_entity","reference_from_entity_per_entity","reference_path","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","to_owned","to_owned","to_string","transform_at","try_from","try_from","try_into","try_into","type_id","type_id","unreachable_descendants","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","RecordingConfig","ViewerContext","app_options","az","az","borrow","borrow","borrow_mut","borrow_mut","cache","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","component_path_button_to","component_ui_registry","current_query","cursor_interact_with_selectable","data_blueprint_button_to","data_blueprint_group_button_to","default","deref","deref","deref_mut","deref_mut","deserialize","downcast","downcast","drop","drop","entity_path_button","entity_path_button_to","from","from","hovered","init","init","instance_path_button","instance_path_button_to","into","into","log_db","lossless_try_into","lossless_try_into","lossy_into","lossy_into","msg_id_button","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","re_ui","rec_cfg","render_ctx","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","select_hovered_on_click","selection","selection_state","selection_state","selection_state_mut","serialize","set_hovered","set_multi_selection","set_single_selection","space_view_button","space_view_button_to","time_button","time_ctrl","timeline_button","timeline_button_to","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","AppCreator","run_native_app","run_native_viewer_with_messages","RemoteViewerApp","app","app_env","az","borrow","borrow_mut","build_info","cast_from","checked_as","checked_cast_from","clear_color","connect","deref","deref_mut","downcast","drop","from","init","into","lossless_try_into","lossy_into","new","overflowing_as","overflowing_cast_from","re_ui","saturating_as","saturating_cast_from","save","set_profiler","startup_options","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","update","url","vzip","wrapping_as","wrapping_cast_from","Annotations","DataBlueprintGroupHandle","DefaultColor","HistoricalSelection","MISSING_ANNOTATIONS","MISSING_ANNOTATIONS","MISSING_ANNOTATIONS","MISSING_ANNOTATIONS","SelectionHistory","ViewCategory","Viewport","annotations","auto_layout","blueprint","data_blueprint","data_ui","event_log_view","memory_panel","scene","selection_history","selection_history_ui","selection_panel","space_view","space_view_entity_picker","space_view_heuristics","time_panel","view_bar_chart","view_category","view_spatial","view_tensor","view_text","view_time_series","viewport","AnnotationMap","Annotations","DefaultColor","EntityPath","MISSING_ANNOTATIONS","MISSING_MSG_ID","OpaqueWhite","ResolvedAnnotationInfo","ResolvedClassDescription","TransparentBlack","__clone_box","__clone_box","__clone_box","__clone_box","__private_field","annotation_info","annotation_info_with_keypoint","auto_color","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","class_description","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","color","context","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","find","fmt","fmt","from","from","from","from","from","from","init","init","init","init","init","init","into","into","into","into","into","into","label","load","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","msg_id","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","LayoutSplit","Leaf","LeftRight","LeftRight","SpaceMakeInfo","SplitDirection","TopBottom","TopBottom","__clone_box","aspect_ratio","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","category","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","desired_aspect_ratio","downcast","downcast","downcast","drop","drop","drop","find_group_split_point","fmt","from","from","from","group_by_category","group_by_path_prefix","id","init","init","init","into","into","into","layout_by_category","layout_by_path_prefix","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","path","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","split_groups","split_spaces_at","suggest_split_direction","to_owned","tree_from_space_views","tree_from_split","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","bottom","left","right","t","t","top","Blueprint","az","blueprint_panel","blueprint_panel_and_viewport","blueprint_panel_expanded","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","default","deref","deref_mut","deserialize","downcast","drop","from","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","reset_button_ui","saturating_as","saturating_cast_from","selection_panel_expanded","serialize","time_panel_expanded","title_bar_ui","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","viewport","vzip","wrapping_as","wrapping_cast_from","DataBlueprintGroup","DataBlueprintGroupHandle","DataBlueprintTree","DataBlueprints","__clone_box","__clone_box","__clone_box","__clone_box","add_entity_to_group","add_group_to_hierarchy_recursively","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","children","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","contains_entity","data","data_blueprints","data_blueprints_individual","data_blueprints_projected","default","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","display_name","downcast","downcast","downcast","downcast","drop","drop","drop","drop","entities","entity_paths","entity_paths","eq","equivalent","equivalent","fmt","from","from","from","from","from","get_hash","group","group_mut","groups","hash","individual","init","init","init","init","insert_entities_according_to_hierarchy","into","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","on_frame_start","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","parent","partial_cmp","path_to_group","path_to_group_name","projected","properties_individual","properties_projected","remove_entity","remove_group","remove_group_if_empty","root_group","root_group_handle","root_handle","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","visit_group_entities_recursively","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","All","DataUi","MaxHeight","Reduced","Small","UiVerbosity","__clone_box","annotation_context","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","component","component_path","component_ui_registry","data","data_ui","deref","deref_mut","downcast","drop","entity_path","fmt","format_component_bundle","from","image","init","instance_path","into","log_msg","lossless_try_into","lossy_into","msg_id","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","TABLE_SCROLL_AREA_HEIGHT","annotation_info_table_ui","EntityComponentWithInstances","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","component_data","component_name","data_ui","deref","deref_mut","downcast","drop","entity_path","from","init","into","lossless_try_into","lossy_into","num_instances","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","ComponentUiCallback","ComponentUiRegistry","add","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","components","default","deref","deref_mut","downcast","drop","from","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","try_from","try_into","type_id","ui","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","DEFAULT_NUMBER_WIDTH","ZOOMED_IMAGE_TEXEL_RADIUS","format_tensor_shape_single_line","get_pixel","histogram_ui","image_options","show_zoomed_image_region","show_zoomed_image_region_area_outline","show_zoomed_image_region_tooltip","tensor_dtype_and_shape_ui","tensor_dtype_and_shape_ui_grid_contents","write_binary","HIDDEN_COMPONENTS_FOR_ALL_VERBOSITY","HIDDEN_COMPONENTS_FOR_LOW_VERBOSITY","EventLogView","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","default","deref","deref_mut","deserialize","downcast","drop","from","init","into","lossless_try_into","lossy_into","message_table","overflowing_as","overflowing_cast_from","row_height","saturating_as","saturating_cast_from","serialize","table_row","try_from","try_into","type_id","ui","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","MemoryPanel","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","cpu_stats","default","deref","deref_mut","downcast","drop","from","gpu_stats","history","init","into","left_side","lossless_try_into","lossy_into","memory_purge_times","note_memory_purge","overflowing_as","overflowing_cast_from","plot","saturating_as","saturating_cast_from","store_stats","summarize_callstack","tracking_stats","try_from","try_into","type_id","ui","unwrapped_as","unwrapped_cast_from","upcast","update","vzip","wrapping_as","wrapping_cast_from","SceneQuery","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","downcast","drop","entity_paths","entity_props_map","from","init","into","iter_entities","latest_at","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","timeline","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","HistoricalSelection","MAX_SELECTION_HISTORY_LENGTH","SelectionHistory","__clone_box","__clone_box","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","control_bar_ui","current","current","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","fmt","from","from","from","history_item_ui","index","init","init","into","into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","next","next_button_ui","on_frame_start","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","prev_button_ui","previous","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","select_next","select_previous","selection","selection_ui","stack","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","update_selection","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","item_collection_to_string","item_kind_ui","item_to_string","SelectionPanel","az","blueprint_ui","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","colormap_props_ui","contents","default","depth_props_ui","deref","deref_mut","deserialize","downcast","drop","entity_props_ui","from","has_data_section","init","into","list_existing_data_blueprints","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","pinhole_props_ui","saturating_as","saturating_cast_from","serialize","show_panel","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","what_is_selected_ui","wrapping_as","wrapping_cast_from","SpaceView","SpaceViewId","ViewState","__clone_box","__clone_box","__clone_box","add_entity_subtree","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","category","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","cmp","data_blueprint","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","display_name","downcast","downcast","downcast","drop","drop","drop","entities_determined_by_user","eq","equivalent","equivalent","fmt","from","from","from","get_hash","hash","id","init","init","init","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","new","on_frame_start","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","random","remove_entity_subtree","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","scene_ui","selected_tensor","selection_ui","serialize","serialize","serialize","space_path","state_bar_chart","state_spatial","state_tensors","state_text","state_time_series","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ui_bar_chart","ui_spatial","ui_tensor","ui_text","ui_time_series","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","view_state","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","CanAddToSpaceView","Compatible","EntityAddInfo","No","SpaceViewEntityPicker","__clone_box","add_entities_line_ui","add_entities_tree_ui","add_entities_ui","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","can_add","can_add_self_or_descendant","cast_from","cast_from","cast_from","categories","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","create_entity_add_info","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","eq","equivalent","equivalent","from","from","from","init","init","init","into","into","into","is_compatible","is_compatible_and_missing","join","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","space_view_id","title_bar","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ui","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","already_added","reason","all_possible_space_views","contains_any_image","default_created_space_views","default_created_space_views_from_candidates","default_queried_entities","default_queried_entities_by_category","has_any_component_except","is_default_added_to_space_view","is_interesting_space_view_at_root","is_interesting_space_view_not_at_root","TimePanel","az","ball_scatterer","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","collapsed_ui","current_time_ui","default","deref","deref_mut","deserialize","downcast","drop","expanded_ui","from","help_button","init","initialize_time_ranges_ui","interact_with_streams_rect","into","is_time_safe_to_show","lossless_try_into","lossy_into","next_col_right","overflowing_as","overflowing_cast_from","paint_ticks","paint_time_cursor","paint_time_ranges_gaps","prev_col_width","saturating_as","saturating_cast_from","serialize","show_children","show_data_over_time","show_msg_ids_tooltip","show_panel","show_tree","time_axis","time_marker_ui","time_ranges_ui","time_ranges_ui","time_selection_ui","top_row_ui","tree_ui","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","view_everything","vzip","wrapping_as","wrapping_cast_from","BallScatterer","MEMORY_SIZE","add","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","closest_dist_sq","cursor","default","deref","deref_mut","downcast","drop","from","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","recent","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","paint_ticks","paint_time_range_ticks","paint_time_ranges_and_ticks","TimelineAxis","__clone_box","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","create_ranges","deref","deref_mut","downcast","drop","fmt","from","gap_size_heuristic","init","into","lossless_try_into","lossy_into","min","new","overflowing_as","overflowing_cast_from","ranges","saturating_as","saturating_cast_from","sum_time_lengths","time_abs_diff","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","GAP_EXPANSION_FRACTION","MAX_GAP","Segment","TimeRangesUi","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clamp_time","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","fmt","from","from","gap_width","init","init","into","into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","pan","points_per_time","points_per_time","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","segments","snap_time_control","snap_time_to_segments","tight_time","time","time_from_x_f32","time_from_x_f64","time_view","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","x","x_from_time","x_from_time_f32","x_range","zoom_at","drag_left_loop_selection_edge","drag_right_loop_selection_edge","format_duration","initial_time_selection","loop_selection_ui","on_drag_loop_selection","paint_range_text","scene","ui","SceneBarChart","az","borrow","borrow_mut","cast_from","charts","checked_as","checked_cast_from","default","deref","deref_mut","downcast","drop","from","init","into","load","load_tensors","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","BarChartState","HELP_TEXT","__clone_box","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","default","deref","deref_mut","deserialize","downcast","drop","from","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","serialize","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","view_bar_chart","vzip","wrapping_as","wrapping_cast_from","BarChart","Spatial","Tensor","Text","TimeSeries","ViewCategory","ViewCategorySet","__clone_box","az","bitand","bitor","bitxor","borrow","borrow_mut","cast_from","categorize_entity_path","checked_as","checked_cast_from","clone","clone_into","cmp","default","deref","deref_mut","deserialize","downcast","drop","enum_from_u32","enum_into_u32","eq","eq","equivalent","equivalent","fmt","fmt","from","icon","init","into","lossless_try_into","lossy_into","not","overflowing_as","overflowing_cast_from","partial_cmp","saturating_as","saturating_cast_from","serialize","sub","to_owned","to_string","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","Image","MeshSource","MeshSourceData","SceneSpatial","SpaceCamera3D","SpaceSpecs","SpatialNavigationMode","UiLabel","UiLabelTarget","ViewSpatialState","eye","scene","space_camera_3d","ui","ui_2d","ui_3d","ui_renderer_bridge","view_2d","view_3d","DEFAULT_FOV_Y","Eye","MAX_PITCH","OrbitEye","__clone_box","__clone_box","approx_pixel_world_size_at","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","copy_from_eye","deref","deref","deref_mut","deref_mut","deserialize","deserialize","downcast","downcast","drop","drop","eq","far","fmt","fmt","forward_in_world","fov_y","fov_y","from","from","from_camera","fwd","init","init","interact","into","into","is_perspective","keyboard_navigation","lerp","lerp","lossless_try_into","lossless_try_into","lossy_into","lossy_into","near","orbit_center","orbit_radius","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","picking_ray","pitch","pos_in_world","position","project_onto","roll","rotate","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","serialize","serialize","set_fwd","set_up","to_eye","to_owned","to_owned","translate","try_from","try_from","try_into","try_into","type_id","type_id","ui_from_world","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","up","upcast","upcast","velocity","vzip","vzip","world_from_view","world_from_view_rot","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","AdditionalPickingInfo","CAMERA_COLOR","HOVER_COLOR","Image","Keypoints","Mesh3D","MeshSource","MeshSourceData","PickingRayHit","PickingResult","Point2D","Position3D","Rect","SELECTION_COLOR","SIBLING_SELECTION_COLOR","SceneSpatial","SceneSpatialPrimitives","SceneSpatialUiData","StaticGlb","UiLabel","UiLabelTarget","additive_tint","annotation_map","annotations","apply_hover_and_selection_effect","apply_hover_and_selection_effect_color","apply_hover_and_selection_effect_size","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","color","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","images","init","init","init","init","init","init","init","instance_path_hash","instance_path_hash","instance_path_hash_if_interactive","into","into","into","into","into","into","into","labeled_instance","labels","load","load_keypoint_connections","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","mesh","mesh_id","meter","new","num_logged_2d_objects","num_logged_3d_objects","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","pickable_ui_rects","picking","picking","preferred_navigation_mode","primitives","primitives","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","scene_part","size_boost","space_cameras","target","tensor","text","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ui","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","world_from_mesh","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","AdditionalPickingInfo","GuiOverlay","None","PickingContext","PickingRayHit","PickingResult","PickingState","RAY_T_EPSILON","TexturedRect","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","check_hit","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","closest_opaque_pick","closest_opaque_side_ui_dist_sq","depth_offset","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","from","from","from","from","from","from_instance_and_t","info","init","init","init","init","init","instance_path_hash","into","into","into","into","into","iter_hits","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","max_side_ui_dist_sq","opaque_hit","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","picking","picking_lines","picking_meshes","picking_points","picking_ray","picking_textured_rects","picking_ui_rects","pointer_in_ui","ray_in_world","ray_t","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","sort_and_remove_hidden_transparent","space_position","transparent_hits","transparent_hits","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","ui_from_world","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","AXIS_COLOR_X","AXIS_COLOR_Y","AXIS_COLOR_Z","SceneSpatialPrimitives","add_axis_lines","az","borrow","borrow_mut","bounding_box","bounding_box","cast_from","checked_as","checked_cast_from","depth_clouds","deref","deref_mut","downcast","drop","from","init","into","line_strips","lossless_try_into","lossy_into","mesh_instances","meshes","new","num_primitives","overflowing_as","overflowing_cast_from","points","recalculate_bounding_box","saturating_as","saturating_cast_from","textured_rectangles","textured_rectangles_ids","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","ScenePart","arrows3d","boxes2d","boxes3d","cameras","images","instance_path_hash_for_picking","lines2d","lines3d","load","meshes","points2d","points3d","Arrows3DPart","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","downcast","drop","from","init","into","load","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","process_entity_view","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","Boxes2DPart","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","downcast","drop","from","init","into","load","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","visit_instance","vzip","wrapping_as","wrapping_cast_from","Boxes3DPart","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","downcast","drop","from","init","into","load","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","process_entity_view","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","CamerasPart","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","determine_view_coordinates","downcast","drop","from","init","into","load","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","visit_instance","vzip","wrapping_as","wrapping_cast_from","ImagesPart","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","downcast","drop","from","handle_image_layering","init","into","load","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","process_entity_view","process_entity_view_as_depth_cloud","process_entity_view_as_image","push_tensor_texture","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","Lines2DPart","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","downcast","drop","from","init","into","load","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","process_entity_view","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","Lines3DPart","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","downcast","drop","from","init","into","load","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","process_entity_view","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","MeshPart","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","downcast","drop","from","init","into","load","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","process_entity_view","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","Points2DPart","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","downcast","drop","from","init","into","load","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","process_entity_view","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","Points3DPart","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","downcast","drop","from","init","into","load","lossless_try_into","lossy_into","max_labels","overflowing_as","overflowing_cast_from","process_annotations","process_colors","process_entity_view","process_labels","process_radii","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","SpaceCamera3D","__clone_box","az","borrow","borrow_mut","cam_from_world","cast_from","checked_as","checked_cast_from","clone","clone_into","deref","deref_mut","downcast","drop","entity_path","from","from_rub_quat","image_from_world","init","instance_path_hash","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","picture_plane_distance","pinhole","position","project_onto_2d","saturating_as","saturating_cast_from","to_owned","try_from","try_into","type_id","unproject_as_ray","unwrapped_as","unwrapped_cast_from","upcast","view_coordinates","vzip","world_from_cam","world_from_camera","world_from_image","world_from_rub_view","wrapping_as","wrapping_cast_from","Auto","AutoSizeUnit","SpatialNavigationMode","ThreeD","TwoD","UiPoints","ViewSpatialState","World","__clone_box","__clone_box","__clone_box","auto_size_config","auto_size_config","auto_size_world_heuristic","axis_name","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","create_labels","default","default","default_line_radius","default_point_radius","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","downcast","downcast","downcast","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","from","from","from","help_text","init","init","init","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","nav_mode","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","scene_bbox","scene_bbox_accum","scene_num_primitives","selection_ui","serialize","serialize","size_ui","state_2d","state_3d","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","update_depth_cloud_property_heuristics","update_object_property_heuristics","update_pinhole_property_heuristics","view_spatial","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Auto","HELP_TEXT_2D","Scaled","View2DState","ZoomState2D","__clone_box","__clone_box","az","az","borrow","borrow","borrow_mut","borrow_mut","capture_scroll","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","deserialize","desired_size_and_offset","downcast","downcast","drop","drop","from","from","init","init","into","into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","project_onto_other_spaces","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","serialize","setup_target_config","show_projections_from_3d_space","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","update","view_2d","view_2d_scrollable","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","zoom","accepting_scroll","center","scale","EyeInterpolation","HELP_TEXT_3D","SpaceSpecs","View3DState","__clone_box","__clone_box","__clone_box","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","camera_before_tracked_camera","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default_eye","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","drop","drop","drop","elapsed_time","eye_interpolation","find_camera","from","from","from","from_view_coordinates","hovered_point","init","init","init","interpolate_to_eye","interpolate_to_orbit_eye","into","into","into","last_eye_interact_time","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","orbit_eye","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","paint_view","project_onto_other_spaces","reset_camera","right","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","show_axes","show_projections_from_2d_space","space_camera","space_specs","spin","start","target_eye","target_orbit","target_time","target_time","to_owned","to_owned","to_owned","tracked_camera","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","up","upcast","upcast","upcast","update_eye","view_3d","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","ClearColor","GenericSkybox","ScreenBackground","ViewBuilderHandle","ViewBuilderMap","__clone_box","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone_into","cmp","create_and_fill_view_builder","create_scene_paint_callback","data","default","deref","deref","deref_mut","deref_mut","deserialize","downcast","downcast","drop","drop","eq","equivalent","equivalent","fmt","from","from","from","get_hash","get_viewport","hash","init","init","into","into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","partial_cmp","renderer_paint_callback","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","serialize","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","dimension_mapping_ui","scene","tensor_dimension_mapper","ui","SceneTensor","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","default","deref","deref_mut","downcast","drop","from","init","into","load","load_tensor_entity","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","tensors","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","DragDropAddress","Height","NewSelector","None","Selector","Width","__clone_box","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","deref","deref_mut","dimension_mapping_ui","downcast","drag_source_ui","drag_source_ui_id","drop","drop_target_ui","eq","equivalent","equivalent","from","init","into","is_some","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","read_from_address","saturating_as","saturating_cast_from","tensor_dimension_ui","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","write_to_address","ColorMap","ColorMapping","Fill","Greyscale","Original","TextureScaling","TextureSettings","Turbo","ViewTensorState","Virdis","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","color_from_normalized","color_mapping","create","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","dimension_mapping","dimension_name","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","gamma","image_ui","init","init","init","init","init","into","into","into","into","into","into_image","keep_aspect_ratio","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","map","options","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","paint_axis_names","paint_image","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","scaling","selected_tensor_slice","selector_values","selectors_ui","serialize","serialize","serialize","serialize","serialize","slice_ui","tensor","tensor_ui","texture_settings","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","ui","ui","ui","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","view_tensor","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","scene","ui","SceneText","TextEntry","__clone_box","az","az","body","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone_into","color","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","entity_path","fmt","from","from","init","init","into","into","level","load","lossless_try_into","lossless_try_into","lossy_into","lossy_into","msg_id","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","text_entries","time","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","ViewTextFilters","ViewTextState","__clone_box","__clone_box","az","az","borrow","borrow","borrow_mut","borrow_mut","calc_row_height","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","col_entity_path","col_log_level","col_timelines","default","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","downcast","downcast","drop","drop","filters","fmt","from","from","get_time_point","init","init","into","into","is_entity_path_visible","is_log_level_visible","latest_time","level_to_rich_text","lossless_try_into","lossless_try_into","lossy_into","lossy_into","monospace","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","row_entity_paths","row_log_levels","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","selection_ui","serialize","serialize","table_ui","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","update","view_text","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","scene","ui","Continuous","PlotPoint","PlotPointAttrs","PlotSeries","PlotSeriesKind","Scatter","SceneTimeSeries","__clone_box","__clone_box","__clone_box","__clone_box","add_line_segments","annotation_map","attrs","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","color","color","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","init","init","init","init","init","into","into","into","into","into","kind","label","label","lines","load","load_scalars","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","points","radius","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","scattered","time","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","value","vzip","vzip","vzip","vzip","vzip","width","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","HELP_TEXT","ViewTimeSeriesState","__clone_box","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","default","deref","deref_mut","deserialize","downcast","drop","format_time","from","init","into","lossless_try_into","lossy_into","ns_grid_spacer","overflowing_as","overflowing_cast_from","round_ns_to_start_of_day","saturating_as","saturating_cast_from","serialize","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","view_time_series","vzip","wrapping_as","wrapping_cast_from","MAX_ELEM_FOR_DEFAULT_OPEN","TabViewer","Viewport","VisibilitySet","add_new_spaceview_button_ui","add_space_view","az","az","blueprint_row_with_buttons","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","ctx","data_blueprint_tree_ui","default","deref","deref","deref_mut","deref_mut","deserialize","downcast","downcast","drop","drop","focus_tab","from","from","has_been_user_edited","help_text_ui","init","init","into","into","is_tree_valid","lossless_try_into","lossless_try_into","lossy_into","lossy_into","mark_user_interaction","maximized","new","on_frame_start","on_tab_button","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","remove","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","serialize","should_auto_add_space_view","show_add_remove_entities_window","space_view","space_view_entity_window","space_view_entry_ui","space_view_mut","space_view_options_ui","space_view_ui","space_views","space_views","space_views_containing_entity_path","title","tree_ui","trees","try_from","try_from","try_into","try_into","type_id","type_id","ui","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","viewport_ui","visibility_button_ui","visible","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","ViewerAnalytics","analytics","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","deregister","downcast","drop","from","init","into","lossless_try_into","lossy_into","new","on_open_recording","on_viewer_started","overflowing_as","overflowing_cast_from","record","register","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from"],"q":["re_viewer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::AppEnvironment","","re_viewer::appre_viewer::app_icon","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::env_vars","re_viewer::external","","","re_viewer::mathre_viewer::misc","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::misc::app_options","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::misc::caches","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::misc::caches::mesh_cache","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::misc::caches::tensor_image_cache","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::misc::clipboard","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::misc::format_time","","re_viewer::misc::item","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::misc::mesh_loader","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::misc::profiler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::misc::selection_state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::misc::selection_state::HoveredSpace","","","","re_viewer::misc::space_info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::misc::time_controlre_viewer::misc::time_control_ui","re_viewer::misc::transform_cache","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::misc::viewer_context","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::native","","","re_viewer::remote_viewer_app","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::annotationsre_viewer::ui::auto_layout","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::auto_layout::SplitDirection","","","","","","re_viewer::ui::blueprint","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::data_blueprintre_viewer::ui::data_ui","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::data_ui::annotation_context","","re_viewer::ui::data_ui::component","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::data_ui::component_ui_registry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::data_ui::data","re_viewer::ui::data_ui::image","","","","","","","","","","","re_viewer::ui::data_ui::instance_path","","re_viewer::ui::event_log_view","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::memory_panel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::scene","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::selection_history","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::selection_history_ui","","","re_viewer::ui::selection_panel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::space_view","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::space_view_entity_picker","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::space_view_entity_picker::CanAddToSpaceView","","re_viewer::ui::space_view_heuristics","","","","","","","","","","re_viewer::ui::time_panel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::time_panel::ball_scatterer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::time_panel::paint_ticks","","","re_viewer::ui::time_panel::time_axis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::time_panel::time_ranges_ui","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::time_panel::time_selection_ui","","","","","","","re_viewer::ui::view_bar_chart","","re_viewer::ui::view_bar_chart::scene","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_bar_chart::ui","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_category","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::eye","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::scenere_viewer::ui::view_spatial::scene::pickingre_viewer::ui::view_spatial::scene::primitives","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::scene::scene_part","","","","","","","","","","","","","re_viewer::ui::view_spatial::scene::scene_part::arrows3d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::scene::scene_part::boxes2d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::scene::scene_part::boxes3d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::scene::scene_part::cameras","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::scene::scene_part::images","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::scene::scene_part::lines2d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::scene::scene_part::lines3d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::scene::scene_part::meshes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::scene::scene_part::points2d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::scene::scene_part::points3d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::space_camera_3d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::ui","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::ui_2d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::ui_2d::ZoomState2D","","","re_viewer::ui::view_spatial::ui_3d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::ui_renderer_bridge","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_tensor","","","","re_viewer::ui::view_tensor::scene","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_tensor::tensor_dimension_mapper","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_tensor::uire_viewer::ui::view_text","","re_viewer::ui::view_text::scene","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_text::ui","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_time_series","","re_viewer::ui::view_time_series::scenere_viewer::ui::view_time_series::ui","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::viewport","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::viewer_analytics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","The Rerun viewer as an <code>eframe</code> application.","Where is this App running in?","Wraps a connection to a <code>puffin</code> viewer.","Created from the Rerun Python SDK.","Connects to a server over WebSockets.","Running the Rust <code>rerun</code> binary from the CLI.","Created from the Rerun Rust SDK.","Settings set once at startup (e.g. via command-line …","We are a web-viewer running in a browser as Wasm.","","","","","","","","","","","","","","","","","","","Set to <code>true</code> on Ctrl-C.","","","","","","","","","","","","Measures how long a frame takes to paint","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","Where the logs are stored.","","","","","","","","","","","Commands to run at the end of the frame.","Pending background tasks, using <code>poll_promise</code>.","","","","","","","","","","","","What is serialized","","Toast notifications, using <code>egui-notify</code>.","","","","","","","","The url of the remote server.","All telemetry analytics collected by the Rerun Viewer are …","","This wakes up the ui thread each time we receive a new …","","","","","","The Rerun viewer as an <code>eframe</code> application.","","","","","","","","Settings set once at startup (e.g. via command-line …","","","","","","","","","","","","Global options for the whole viewer.","","","","","","","","","","","","","","","","","","","Things that need caching.","","","","","","","","","","","","","","","","","","","","","","","","","","","Set to <code>true</code> on Ctrl-C.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Measures how long a frame takes to paint","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a viewer that receives new log messages over time","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Do we have an open <code>LogDb</code> that is non-empty?","Where the logs are stored.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Which view panel is currently being shown","Commands to run at the end of the frame.","Pending background tasks, using <code>poll_promise</code>.","Polls the promise with the given name.","","","Returns whether a promise with the given name is currently …","","","","","Configuration for the current recording (found in <code>LogDb</code>).","","","Reset the viewer to how it looked the first time you ran …","","","","","","","","","","","","","","","","","","Returns a closure that, when run, will save the contents …","","","","","","","","","Creates a promise with the specified name that will run <code>f</code> …","","What is serialized","","","","","Toast notifications, using <code>egui-notify</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","In which state the app icon is (as far as we know).","We did not set it or failed to do it. In any case we won’…","We haven’t set the icon yet, we should try again next …","We successfully set the icon and it should be visible now.","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","Sets app icon at runtime.","","","","","","","","","","Enable allocation tracking (very slow - use it to find …","","","","A 3-dimensional axis-aligned bounding box","Infinite rectangle that contains every point.","An invalid <code>Rect</code> filled with <code>f32::NAN</code>;","The inverse of <code>Self::EVERYTHING</code>: stretches from positive …","A rectangular region of space.","A <code>BoundingBox</code> that only contains <code>Vec3::ZERO</code>.","","","True if any member is NaN.","","Width / height","","","","","","","<code>max.y</code>","<code>max.y</code>","","The minimum radius of a sphere, centered at the origin, …","","","Returns the center point of the bounding box.","","","","The minimum radius of a sphere, centered at the bounding …","","","","","Return the given points clamped to be inside the rectangle …","","","","","Returns <code>true</code> if the point is within (or on the edge of) …","","","The eight corners of this bounding box.","","","","","","","","The distance from the rect to the position, squared.","The distance from the rect to the position.","","","","","","The twelve edges of this bounding box.","","","","","A <code>BoundingBox</code> that contains every point.","A <code>Rect</code> that contains every point above a certain y …","A <code>Rect</code> that contains every point below a certain y …","A <code>Rect</code> that contains every point to the left of the given …","A <code>Rect</code> that contains every point to the right of the given …","Expand by this much in each direction, keeping the center","Expand by this much in each direction, keeping the center","Expand with this much padding on each side.","Enlarge the box to include this point.","","Expand to include the given x coordinate","Expand to include the given y coordinate","","","Returns the argument unchanged.","Returns the argument unchanged.","","Create a bounding box from a center position and a size.","","Create a bounding box from a minimum and maximum position.","","","left-top corner plus a size (stretching right-down).","Create a bounding box from an iterator of points that the …","Bounding-box around the points.","Returns the bounding rectangle of the two points.","","Returns half the size (similar to a radius).","","","","The intersection of two <code>Rect</code>, i.e. the area covered by …","Returns the smallest volume that is covered by both <code>self</code> …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if, and only if, all elements are finite.","True if all members are also finite.","Returns <code>true</code> if any elements are <code>NaN</code>.","<code>width &lt; 0 || height &lt; 0</code>","True if and only if there is no point for which …","True if this box contains exactly one point.","<code>width &gt; 0 &amp;&amp; height &gt; 0</code>","True if and only if there is at least one point for which …","","<code>min.x</code>","","","<code>min.x</code>","","Linearly interpolate so that <code>[0, 0]</code> is <code>Self::min</code> and <code>[1, 1]</code>…","","","","","","","","","Bounding box maximum (inclusive).","The other corner, opposing <code>Self::min</code>. Usually the right …","","Bounding box minimum (inclusive).","One of the corners of the rectangle, usually the left top …","A <code>BoundingBox</code> that contains no points.","","","","","Returns the distance the ray traveled of the first …","Compute the distance between a ray and a line segment.","Linearly remap a value from one range to another, so that …","Like <code>remap</code>, but also clamps the value so that the returned …","<code>max.x</code>","","","<code>max.x</code>","","Rotate the bounds (will expand the <code>Rect</code>)","Return a bounding box that contains this box after it has …","","","","","","","<code>max.y</code>","Keep size","keep min","<code>min.x</code>","<code>max.x</code>","<code>min.y</code>","keep min","Shrink by this much in each direction, keeping the center","Shrink by this much in each direction, keeping the center","Signed distance to the edge of the box.","Returns the 3D axis size of the bounding box.","","<code>[2, 1]</code> for wide screen, and <code>[1, 2]</code> for portrait, etc. At …","","","<code>min.y</code>","<code>min.y</code>","Return a bounding box that contains this box after it has …","Return a bounding box that contains this box after it has …","Return a bounding box that contains this box after it has …","","Translate (move) the box by this much.","","","","","","","","The union of two bounding rectangle, i.e. the minimum <code>Rect</code> …","","","","","","","Only correct for positively sized boxes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Global options for the viewer.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","Show milliseconds, RAM usage, etc.","","","","","","","","","","","Zoom factor, independent of OS points_per_pixel setting.","","Does memoization of different things for the immediate …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","For displaying images efficiently in immediate mode.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","For displaying meshes efficiently in immediate mode.","","","Call once per frame to potentially flush the cache(s).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","The <code>TensorImageView</code> is a wrapper on top of …","","","Annotations used to create the view","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","DynamicImage helper for things like zoom","For easily zooming into it in the UI <code>None</code> if the tensor …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","When <code>ImageCache::generation</code> was we last used?","","","","","","","","","Total memory used by this image.","","Call once per frame to (potentially) flush the cache.","","","","","","","","","","Attempt to free up memory.","For egui","For egui. <code>None</code> if the tensor was not a valid image. …","","","","","","","","","Borrowed tensor from the data store","","For rendering with re_renderer","For rendering with re_renderer. <code>None</code> if the tensor was not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Handles interfacing with the OS clipboard.","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get access to the thread-local <code>Clipboard</code>.","","","Useful when showing dates/times on a timeline and you want …","When showing grid-lines representing time.","","","","One “thing” in the UI.","An ordered collection of <code>Item</code>.","","","","","","","","","","","","","","","","","","","","","","Returns true if the exact selection is part of the current …","","","","","","","","","","","","","","","","","","","The first selected object if any.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","If <code>false</code>, the selection is referring to data that is no …","","","Number of elements in this multiselection","","","","","","","","","","Remove all invalid selections.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Wraps a connection to a <code>puffin</code> viewer.","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Hover highlight, sorted from weakest to strongest.","Apply hover highlight, does <em>not</em> exclude a selection …","","Combination of selection &amp; hover highlight which can occur …","","No selection highlight at all.","No hover highlight.","","Should apply selection highlight (i.e. the exact selection …","Selection highlight, sorted from weakest to strongest.","Selection and hover state","A closely related object is selected, should apply similar …","Highlights of a specific entity path in a specific space …","Highlights in a specific space view.","Hovering in a 3D space.","Hovering in a 2D space.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clears the current selection out.","","","","","","","","","","","","","Returns the current selection.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","History of selections (what was selected previously).","","Returns the currently hovered objects.","What objects are hovered? Read from this.","","What space is the pointer hovering over? Read from this.","What space is the pointer hovering over? Write to this.","What objects are hovered? Write to this.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Any active highlight at all.","","","","","","","","","","","","","","","","","Picks the stronger selection &amp; hover highlight from two …","Called at the start of each frame","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Selections the next element in the history if any.","Selects the previous element in the history if any.","","Currently selected things; shown in the …","","","Set the hovered objects. Will be in <code>Self::hovered</code> on the …","","Sets several objects to be selected, updating history as …","Sets a single selection, updating history as needed.","","","","","","Select currently hovered objects unless already selected …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Where in this 2D space (+ depth)?","","The 3D space with the camera(s)","2D spaces and pixel coordinates (with Z=depth)","Information about one “space”.","Information about all spaces.","","","","","","","","","","","","","Nearest descendants to whom we are not connected with an …","","","","","","All paths in this space (including self and children …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Answers if an entity path (<code>from</code>) is reachable via a …","","","","","","","Do a graph analysis of the transform hierarchy, and create …","","","","","Nearest ancestor to whom we are not connected via an …","","","","","","","","","","","","","","","","","","","","Invokes visitor for <code>self</code> and all descendants that are …","","","","","","","We are looping the entire recording.","Follow the latest available data","","Looping is off.","Time doesn’t move","","Time move steadily","We are looping within the current loop selection.","Controls the global view and progress of the time.","State per timeline.","The time range we are currently zoomed in on.","","","","","The current loop range, iff selection looping is turned on.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Query for latest value at the currently selected time on …","","Pick the timeline that should be the default, prioritizing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If true, we are in “follow” mode (see …","playback fps","Frames Per Second, when playing sequences (they are often …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The full range of times for the current timeline","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is the current time in the selection range (if any), or at …","","The selected slice of time that is called the “loop …","Selected time range, if any.","","","","","","","","","","","","","","","Where start of the the range.","Update the current time","","","","","","","","","","","","","","","","","","If true, we are either in <code>PlayState::Playing</code> or …","","Remove the current loop selection.","The range of time we are currently zoomed in on.","","","","","","","","","","","Make sure the selected timeline is a valid one","","","","","","playback fps","Set the current loop selection without enabling looping.","","","playback speed","","The range of time we are currently zoomed in on.","","","playback speed","","","","","","","","","","The current time.","The current time (play marker).","","The current time.","The current time.","How much time the full view covers.","The time type of the currently selected timeline","The range of time we are currently zoomed in on.","The currently selected timeline","Name of the timeline (e.g. “log_time”).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The time range we are currently zoomed in on.","","","","","","","","","","","","","","","","","Exiting out of a space with a pinhole camera that doesn’…","More than one pinhole camera between this and the …","Provides transforms from an entity to a chosen reference …","<code>super::space_info::SpaceInfoCollection</code> is outdated and can…","Unknown transform between this and the reference space.","","","","","","","","","","","","","","","","","","","","","","","","Determines transforms for all entities relative to a space …","","","","","The first parent of reference_path that is no longer …","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Retrieves the transform of on entity from its local system …","All reachable entities.","All transforms provided are relative to this reference …","","","","","","","","","","","","","","","All unreachable descendant paths of <code>reference_path</code>.","","","","","","","","","","","","","UI config for the current recording (found in <code>LogDb</code>).","Common things needed by many parts of the viewer.","Global options for the whole viewer.","","","","","","","Things that need caching.","","","","","","","Show a component path and make it selectable.","How to display components","The current time query, based on the current time control.","","","","","","","","","","","","","","Show an entity path and make it selectable.","Show an entity path and make it selectable.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the currently hovered objects.","","","Show an instance id and make it selectable.","Show an instance id and make it selectable.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The current recording","","","","","Show an <code>MsgId</code> and make it selectable","","","","","The look and feel of the UI","UI config for the current recording (found in <code>LogDb</code>).","","","","","","Selects (or toggles selection if modifier is clicked) …","Returns the current selection.","","Selection &amp; hovering state.","","","Set the hovered objects. Will be in <code>Self::hovered</code> on the …","Sets several objects to be selected, updating history as …","Sets a single selection, updating history as needed.","","","","The current time of the time panel, how fast it is moving, …","","","","","","","","","","","","","","","","","","","","","","","","Connects to a server over WebSockets.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","url to rerun server","","","","","","","","","","","","","","","","The url of the remote server.","","","","","","","","","","","","","","","","Code for automatic layout of space views.","","","The <code>DataUi</code> trait and implementations provide methods for …","","","","","","","","","","","","","","","","","The viewport panel.","","","","","","","","","","","","","","","","","Merges class annotation info with keypoint annotation info …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","For each <code>EntityPath</code> in the <code>SceneQuery</code>, walk up the tree …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Desired aspect ratio, if any.","","","","","","","","","","","","","","","","","","","","","","","","","","","","If we need to pick only one aspect ratio for all these …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Group categories together, i.e. so that 2D stuff is next …","Put spaces with common path prefix close together.","","","","","","","","","","","","","Some path we use to group the views by","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Defines the layout of the whole Viewer (or will, …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","A grouping of several data-blueprints.","","Tree of all data blueprint groups for a single space view.","Data blueprints for all entity paths in a space view.","","","","","Adds an entity path to a group.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns mutable individual entity properties, the …","Returns entity properties with the hierarchy applied.","","","","","","","","","","","","","","","","","","","","","","","","","","Direct child entities of this blueprint group.","List of all entities that we query via this data blueprint …","List of all entities that we query via this data blueprint …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Resolves a data blueprint group handle.","Resolves a data blueprint group handle.","All data blueprint groups.","","Individual settings. Mutate this.","","","","","Adds a list of entity paths to the tree, using grouping as …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Should be called on frame start.","","","","","","","","","Parent of this blueprint group. Every data blueprint …","","Mapping from entity paths to blueprints.","","Properties, as inherited from parent. Read from this.","Individual settings. Mutate &amp; display this.","Properties, as inherited from parent. Read from this.","Removes an entity from the data blueprint collection.","Removes a group and all its entities and subgroups from …","","Returns the root data blueprint.","Root group, always exists as a placeholder","Returns a handle to the root data blueprint.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls the visitor function on every entity path in the …","","","","","","","","","","","","","Display everything, as large as you want. Used for …","Types implementing <code>DataUi</code> can draw themselves with a …","At most this height","Display a reduced set, used for hovering.","Keep it small enough to fit on one row.","Controls how mich space we use to show the data in <code>DataUi</code>.","","","","","","","","","","","","","","","If you need to lookup something in the data store, use the …","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","All the values of a specific <code>re_log_types::ComponentPath</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","How to display components in a Ui","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","Show a ui for this instance of this component.","","","","","","","Default number of ui points to show a number.","","","","","","<code>meter</code>: iff this is a depth map, how long is one meter?","","","","","","","","An event log, a table of all log messages.","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","Note that we purged memory at this time, to show in stats.","","","","","","","","","","","","","","","","Call once per frame","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Iter over all of the currently visible <code>EntityPath</code>s in the …","","","","","","","","","","","","","","","","","","A <code>Selection</code> and its index into the historical stack.","","A stack of <code>Selection</code>s, used to implement “undo/redo”…","","","","","","","","","","","","","","","","","","","","","Index into <code>Self::stack</code>.","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Oldest first.","","","","","","","","","","","","","","","","","","","","","","","","","The “Selection View” side-bar.","","What is the blueprint stuff for this item?","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","What is selected? Not the contents, just the short id of …","","","A view of a space.","A unique id for each space view.","Camera position and similar.","","","","Adds a subtree of entities to the blueprint tree and …","","","","","","","","","","","","","We only show data that match this category.","","","","","","","","","","","","","","The data blueprint tree, has blueprint settings for all …","","","","","","","","","","","","","","","","","","True if the user is expected to add entities themselves. …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Removes a subtree of entities from the blueprint tree.","","","","","","","","Selects in <code>Self::state_tensors</code>.","","","","","The “anchor point” of this space view. The transform …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes if an entity path can be added to a space view.","","","","Window for adding/removing entities from a space view.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Can be generally added but space view might already have …","Can be added and spaceview doesn’t have it already.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","List out all space views we allow the user to create.","","List out all space views we generate by default for the …","","List of entities a space view queries by default for a …","List of entities a space view queries by default for all …","","Whether an entity should be added to a space view at a …","","","A panel that shows entity names to the left, time on the …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns a scroll delta","Calls <code>U::from(self)</code>.","A user can drag the time slider to between the timeless …","","","The right side of the entity name column; updated during …","","","","","Visually separate the different time segments","Width of the entity name columns previous frame.","","","","","","","","","","A vertical line that shows the current time.","egui uses <code>f32</code> precision for all screen-space ui …","The time axis view, regenerated each frame.","","","","","","","","","","Find a nice view of everything.","","","","Positions circles on a horizontal line with some vertical …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","A piece-wise linear view of a single timeline.","","","","","","","","","","Collapse any gaps larger or equals to the given threshold.","","","","","","Returns the argument unchanged.","First determine the threshold for when a gap should be …","","Calls <code>U::from(self)</code>.","","","","","","","","","","Total uncollapsed time.","","","","","","","","","","","","How much of the gap use up to expand segments visually to …","The ideal gap between time segments.","","Represents a compressed view of time.","","","","","","","","","","","","","Clamp the time to the valid ranges.","Safe, meaningless default","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Sze of the gap between time segments.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Pan the view, returning the new view.","How many egui points for each time unit?","x distance per time unit inside the segments, and …","","","","","The linear segments.","","Make sure the time is not between segments.","Does NOT match any of the above. Instead this is a tight …","Matches <code>Self::x</code> (linear transform).","","","The range of time we are viewing.","","","","","","","","","","","","","","","","","","","The range on the x-axis in the ui, in screen coordinates.","","","The total UI x-range we are viewing.","Zoom the view around the given x, returning the new view.","","","Human-readable description of a duration","","","","","","","A bar chart scene, with everything needed to render it.","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Bar-chart plots made from 1D tensor data","2D or 3D view","High-dimensional tensor view","Text log view (text over time)","Time series plot (scalar over time)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An eye in a 3D view.","","Note: we use “eye” so we don’t confuse this with …","","","The approximate size of pixels in world coordinates at a …","","","","","","","","","","","","","","","","","Create an <code>OrbitEye</code> from a <code>Eye</code>.","","","","","","","","","","","","","","","","If no angle is present, this is an orthographic camera.","","Returns the argument unchanged.","Returns the argument unchanged.","","Direction we are looking at","","","Returns <code>true</code> if any change","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Listen to WSAD and QE to move the eye.","","","","","","","","","","","","","","Picking ray for a given pointer in the parent space (i.e. …","Only valid if we have an up vector.","","","e.g. up is <code>[0,0,1]</code>, we return things like <code>[x,y,0]</code>","Rotate around forward axis","Rotate based on a certain number of pixel delta.","","","","","","","","","","","","Translate based on a certain number of pixel delta.","","","","","","","","","","","","Zero = no up (3dof rotation)","","","For controlling the eye with WSAD in a smooth way.","","","","","","","","","","","","","","","TODO(andreas): Scene should only care about converted …","","","","Labels a given point (in scene coordinates)","A point in space.","Labels a given rect (in scene coordinates)","","","","","Data necessary to setup the ui <code>SceneSpatial</code> but of no …","Static meshes that are embedded in the player","","","","","A thing that provides additional semantic context for your …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Images are a special case of rects where we’re storing …","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","What is hovered if this label is hovered.","","Loads all 3D objects into the scene according to the given …","","","","","","","","","","","","","","","","","","If this is a depth map, how long is a meter?","","Number of 2d primitives logged, used for heuristics.","Number of 3d primitives logged, used for heuristics.","","","","","","","","","","","","","","","Picking any any of these rects cause the referred instance …","","","Heuristic whether the default way of looking at this scene …","","","","","","","","","","","","","","","","","Responsible for populating <code>SceneSpatialPrimitives</code> and …","","All space cameras in this scene. TODO(andreas): Does this …","The shape/position being labeled.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","We hit a egui ui element, meaning that depth information …","No additional picking information.","","","","","","The hit was a textured rect at the given uv coordinates …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Any additional information about the picking hit.","","","","","","What entity or instance got hit by the picking ray.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterates over all hits from far to close.","","","","","","","","","","","","Picking ray hit for an opaque object (if any).","","","","","","","","","","","","","","","The picking ray used. Given in the coordinates of the …","","","","","Where along the picking ray the hit occurred.","","","","","","","","","","","","The space position of a given hit.","Picking ray hits for transparent objects, sorted from far …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Primitives sent off to <code>re_renderer</code>. (Some meta information …","","","","","bounding box covering the rendered scene","Estimated bounding box of all data in scene coordinates. …","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","Number of primitives. Rather arbitrary what counts as a …","","","","","","","","","","","","","","","","","","","","","","","","Computes the instance hash that should be used for picking …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Build scene parts for a single box instance","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Determine the view coordinates (i.e.) the axis semantics.","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","If the number of points in the batch is &gt; max_labels, don…","","","","","","","","","","","","","","","","","","","A logged camera that connects spaces.","","","","","","","","","","","","","","","Path to the entity which has the projection (pinhole, …","Returns the argument unchanged.","","Projects world coordinates onto 2D image coordinates","","The instance that has the projection.","Calls <code>U::from(self)</code>.","","","","","Optional distance of a picture plane from the camera.","The projection transform of a child-entity.","Where in scene-space is the camera origin?","Returns x, y, and depth in image coordinates.","","","","","","","Unproject a 2D image coordinate as a ray in 3D space","","","","The coordinate system of the camera (“view-space”).","","","Camera “Extrinsics”, i.e. the pose of the camera.","Projects image coordinates into world coordinates","Scene-space from Rerun view-space (RUB).","","","","","Describes how the scene is navigated, determining if it is …","","","","","","","","","","Size of automatically sized objects. None if it wasn’t …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","How the scene is navigated.","","","","","","","","","","","","","Estimated bounding box of all data for the last scene …","Estimated bounding box of all data. Accumulated over every …","Estimated number of primitives last frame. Used to inform …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sub-state specific to the Zoom/Scale/Pan engine","","","","","","","","","Take the offset from the <code>ScrollArea</code> and apply it back to …","","","","","","","","","","","","","","","","","","Determine the optimal sub-region and size based on the …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update our zoom state based on response If nothing else …","Create the outer 2D view, which consists of a scrollable …","Create the real 2D view inside the scrollable area","","","","","","","The zoom and pan state, which is either a zoom/center or …","Whether to allow the state to be updated by the current …","Which scene coordinate will be at the center of the zoomed …","Number of ui points per scene unit","","","","","","","","","","","","","","","","","Camera pose just before we took over another camera via …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Where in world space the mouse is hovering (from previous …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Filled in at the start of each frame","","","","","","","","","","Currently tracked camera.","","","","","","","","","","","","","","","","","","","","","TODO(andreas): Split into smaller parts, more re-use with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A tensor scene, with everything needed to render it.","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Loads all tensors into the scene according to the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","How we map values to colors.","Scale the texture for the largest possible fit in the UI …","","No scaling, texture size will match the tensor’s …","Should we scale the rendered texture, and if so, how?","Scaling, filtering, aspect ratio, etc for the rendered …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","How we map values to colors.","","","","","","","","","","","","","","","","","","","","How we select which dimensions to project the tensor onto.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Should the aspect ratio of the tensor be kept when scaling?","","","","","","","","","","","","Specifies the sampling filter used to render the texture.","","","","","","","","","","","","","","","","","","","","","","","Should we scale the texture when rendering?","","Selected value of every dimension (iff they are in …","","","","","","","","Last viewed tensor, copied each frame. Used for the …","","Scaling, filtering, aspect ratio, etc for the rendered …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A text scene, with everything needed to render it.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Loads all text components into the scene according to the …","","","","","","","","","","","","","","","<code>None</code> for timeless data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Keeps track of the latest time selection made by the user.","","","","","","","","","","","","","","","","","","","","<code>scroll_to_row</code> indicates how far down we want to scroll in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A scene for a time series plot, with everything needed to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Loads all plots into the scene according to the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Describes the layout and contents of the Viewport Panel.","What views are visible?","","","","","Show a single button (<code>add_content</code>), justified, and show a …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Set to <code>true</code> the first time the user messes around with the …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Show one tab as maximized?","Create a default suggested blueprint using some heuristics.","","","","","","","","","","","","","","","","","","","Shown in the right of the tab panel","","","Where the space views are stored.","","","Show the blueprint panel tree view.","The layouts of all the space views.","","","","","","","","","","","","","","","","Which views are visible.","","","","","","","","","","","","","","","","","Deregister a property.","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","When we have loaded the start of a new recording.","When the viewer is first started","","","","Register a property that will be included in all …","","","","","","","","","","",""],"i":[0,0,0,0,3,0,3,3,0,3,3,25,0,146,146,0,3,3,3,25,146,3,3,3,3,3,25,25,25,0,3,3,3,3,0,3,3,3,0,3,25,3,0,25,3,3,25,25,25,3,3,0,15,25,25,0,0,3,3,25,25,25,146,0,0,0,25,3,3,51,25,146,25,3,25,3,3,3,0,3,3,3,146,0,3,0,0,3,3,289,290,0,0,29,0,0,0,0,0,0,28,28,0,28,29,0,28,15,29,0,25,30,25,28,15,29,30,25,30,25,28,15,29,30,25,28,15,29,30,25,30,25,28,15,29,30,25,25,28,15,29,30,25,28,15,29,30,25,25,28,15,29,28,15,29,25,25,25,0,15,29,30,25,28,15,29,30,25,28,15,29,30,29,30,25,28,15,29,30,25,28,15,29,30,28,29,28,28,29,29,30,0,28,25,0,25,28,15,29,30,25,28,25,28,25,25,28,15,29,30,0,25,28,15,29,30,25,25,0,0,0,25,25,25,25,25,28,15,29,30,25,28,15,29,30,0,15,25,25,25,0,0,0,0,25,28,15,29,30,25,28,15,29,30,0,0,30,25,25,25,0,30,25,25,25,25,0,30,0,0,25,25,25,25,25,25,28,15,29,30,25,28,15,29,30,0,25,0,0,25,30,30,29,30,25,30,25,25,25,25,30,28,15,29,25,0,0,25,28,15,29,30,25,28,15,29,30,25,28,15,29,30,25,28,15,29,30,25,28,15,29,30,25,28,15,29,30,25,25,28,15,29,30,0,0,25,28,15,29,30,25,28,15,29,30,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,56,56,56,56,56,56,56,56,56,0,0,0,0,0,57,57,57,0,60,60,57,57,57,57,60,57,60,57,60,57,57,57,57,60,60,57,60,57,57,57,60,60,57,60,57,57,60,57,60,57,60,57,57,60,60,60,57,60,57,60,57,57,57,60,57,60,57,0,60,60,57,57,57,60,57,57,57,57,57,57,60,60,57,57,57,60,57,60,57,57,60,57,60,57,60,57,60,57,57,57,60,57,60,57,57,60,57,60,57,60,57,60,57,60,60,57,60,57,57,57,57,57,57,57,0,0,0,60,57,60,57,0,60,57,0,60,57,60,60,57,60,57,0,0,0,0,57,57,57,57,57,57,60,60,57,60,57,60,57,57,57,57,57,57,57,57,57,57,57,60,57,57,60,57,57,57,60,60,60,57,60,60,57,60,57,60,57,60,57,60,57,60,57,60,57,60,60,57,57,60,57,60,57,57,57,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,0,0,0,76,74,76,74,76,74,76,74,76,74,76,74,74,76,74,76,74,76,74,76,74,76,74,74,76,74,76,74,76,74,76,74,74,0,76,74,76,74,76,74,74,76,76,74,76,74,0,74,74,76,74,76,74,76,74,76,74,76,74,76,74,76,74,76,74,76,74,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,0,0,0,0,82,82,89,88,89,87,82,84,89,87,82,84,89,87,82,84,89,87,82,84,89,87,82,84,89,87,82,84,82,82,82,84,89,87,82,84,89,87,82,84,89,87,82,84,89,87,82,84,0,89,87,82,82,82,82,89,87,82,84,87,87,84,82,84,84,82,84,89,87,82,84,89,87,82,84,87,89,87,82,84,89,87,82,84,87,84,84,89,87,82,84,89,87,82,84,82,84,89,87,89,87,82,84,89,87,82,84,89,82,89,87,82,89,87,82,84,89,87,82,84,89,87,82,84,89,87,82,84,89,87,82,84,89,87,82,84,89,87,82,84,89,87,82,84,89,87,82,84,0,91,91,91,91,91,91,91,91,91,91,91,91,91,0,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,0,0,95,95,95,0,0,95,95,95,94,94,95,94,95,94,95,94,95,94,95,94,95,94,95,94,95,94,94,95,94,95,94,95,94,95,94,95,94,95,94,95,94,95,95,94,94,94,95,94,95,94,95,95,95,94,95,94,94,94,95,94,95,94,95,94,95,94,94,95,94,95,94,94,95,94,95,94,94,95,94,95,94,94,95,94,95,94,95,94,95,94,95,94,95,94,95,94,95,94,95,94,0,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,0,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,0,51,51,51,51,51,51,51,51,51,51,0,107,0,0,105,106,107,0,106,0,0,106,0,0,105,105,105,106,107,108,103,103,105,106,107,108,109,103,110,104,105,106,107,108,109,103,110,104,105,106,107,108,109,103,110,104,105,106,107,108,109,103,110,104,105,106,107,108,109,103,110,104,105,106,107,108,109,103,110,104,104,105,106,107,108,103,105,106,107,108,103,106,107,104,105,106,107,108,109,110,104,105,106,107,108,109,103,110,104,105,106,107,108,109,103,110,104,104,105,106,107,108,109,103,110,104,105,106,107,108,109,103,110,104,110,105,106,107,108,106,106,107,107,108,108,105,105,106,107,108,109,103,110,104,104,110,104,104,108,104,104,104,104,104,104,103,105,106,107,108,109,103,110,104,109,105,106,107,108,109,103,110,104,106,107,108,105,106,107,108,109,103,110,104,105,106,107,108,109,103,110,104,108,104,109,105,106,107,108,109,103,110,104,105,106,107,108,109,103,110,104,106,107,105,106,107,108,109,103,110,104,105,106,107,108,109,103,110,104,104,104,108,104,104,104,104,104,104,104,105,106,107,108,103,104,105,106,107,108,109,103,110,104,105,106,107,108,109,103,110,104,105,106,107,108,109,103,110,104,105,106,107,108,109,103,110,104,105,106,107,108,109,103,110,104,105,106,107,108,109,103,110,104,105,106,107,108,109,103,110,104,105,106,107,108,109,103,110,104,105,106,107,108,109,103,110,104,291,291,292,292,0,0,118,116,118,116,118,116,118,116,118,116,118,116,118,116,118,116,118,116,118,118,116,118,116,118,116,116,118,116,118,116,116,116,118,116,118,116,118,116,118,116,118,116,118,118,0,118,116,118,116,116,118,116,118,116,118,116,118,116,118,116,118,116,118,118,116,118,116,118,116,126,127,0,126,127,0,127,126,0,0,0,124,125,126,127,122,124,125,126,127,122,124,125,126,127,122,124,125,126,127,122,124,125,126,127,122,124,125,126,127,122,124,125,126,127,122,124,125,126,127,124,125,126,127,122,122,0,124,125,126,127,122,124,125,126,127,122,124,125,126,127,122,124,125,126,127,122,124,125,126,127,122,126,127,126,126,127,127,124,125,126,127,122,122,122,125,122,124,125,126,127,122,122,126,127,126,127,124,125,126,127,122,124,125,126,127,122,122,122,122,125,122,122,124,125,126,127,122,124,125,126,127,122,0,0,124,122,125,124,125,126,127,122,124,125,126,127,122,122,122,122,122,122,122,122,0,122,122,124,125,126,127,122,124,125,126,127,122,122,124,125,126,127,122,122,122,122,122,122,122,122,122,122,122,122,122,0,0,0,0,122,122,122,122,125,122,122,122,124,122,122,122,122,122,124,125,126,127,122,124,125,126,127,122,124,125,126,127,122,124,125,126,127,122,124,125,126,127,122,124,125,126,127,122,124,125,126,127,122,125,124,125,126,127,122,124,125,126,127,122,124,125,126,127,122,0,119,119,0,119,119,0,135,119,135,119,135,119,135,119,135,119,135,119,135,119,135,119,135,119,135,119,135,119,135,135,119,135,119,135,119,135,119,135,135,119,135,119,0,135,119,135,119,135,119,135,119,135,135,135,135,119,135,119,135,119,119,0,135,119,135,119,135,119,135,135,119,135,119,135,119,135,119,135,119,135,119,0,0,96,96,41,96,41,96,41,96,96,41,96,41,96,41,96,96,96,96,96,96,41,96,41,96,41,41,96,41,96,41,96,96,96,41,96,96,41,96,96,96,41,96,96,41,96,41,96,96,41,96,41,96,96,96,96,41,96,41,96,96,96,41,96,41,96,96,96,96,96,96,41,96,96,96,41,96,41,96,41,96,41,96,41,96,41,96,41,96,41,96,41,0,0,0,0,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,154,0,0,154,0,0,154,152,154,148,155,156,147,147,0,147,152,154,148,155,156,147,152,154,148,155,156,147,152,154,148,155,156,147,152,154,148,155,156,147,152,154,148,155,156,147,152,154,148,155,156,152,152,154,148,155,152,154,148,155,148,152,155,147,152,154,148,155,156,156,147,152,154,148,155,156,147,152,154,148,155,156,147,152,154,148,155,156,155,152,155,147,152,154,148,155,156,147,152,154,148,155,156,147,152,154,148,155,156,148,155,147,152,154,148,155,156,147,152,154,148,155,156,152,147,152,154,148,155,156,147,152,154,148,155,156,147,152,154,148,155,156,147,152,154,148,155,156,152,154,148,155,147,152,154,148,155,156,147,152,154,148,155,156,147,152,154,148,155,156,147,152,154,148,155,156,147,152,154,148,155,156,147,152,154,148,155,156,147,152,154,148,155,156,147,152,154,148,155,156,147,152,154,148,155,156,0,159,159,160,0,0,159,160,158,158,159,160,158,159,160,158,159,160,158,159,160,158,158,159,160,158,159,160,158,158,158,159,160,158,159,160,158,0,159,160,158,159,160,158,0,158,159,160,158,0,0,158,159,160,158,159,160,158,0,0,159,160,158,159,160,158,159,160,158,159,160,158,158,159,160,158,159,160,158,0,0,0,158,0,0,159,160,158,159,160,158,159,160,158,159,160,158,159,160,158,159,160,158,159,160,158,159,160,158,159,160,158,293,294,294,294,293,293,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,0,0,0,141,164,165,163,163,163,141,164,165,163,141,164,165,163,141,164,165,163,141,164,165,163,141,164,165,163,141,164,165,163,164,141,164,165,163,141,164,165,163,141,163,141,163,163,163,141,164,165,163,141,164,165,163,141,164,165,163,141,164,165,163,164,141,164,165,163,141,164,165,163,164,163,163,141,141,141,141,141,141,164,165,163,141,163,163,163,141,165,141,164,165,163,163,141,164,165,163,141,164,165,163,141,164,165,163,163,141,164,165,163,141,164,165,163,164,141,163,0,165,164,164,163,163,163,163,163,163,141,164,165,163,141,164,165,163,141,164,165,163,141,164,165,163,141,164,165,163,141,164,165,163,141,164,165,163,141,164,165,163,141,164,165,163,141,164,165,163,163,141,164,165,163,141,164,165,163,141,164,165,163,97,0,97,97,97,0,97,0,97,97,97,97,97,97,97,97,0,0,0,0,295,97,97,97,97,0,97,0,97,0,97,0,97,0,97,97,0,97,97,97,97,97,97,97,97,97,97,97,97,97,97,0,0,0,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,0,175,175,0,175,175,175,0,175,175,175,175,175,175,175,175,175,175,0,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,0,178,178,178,178,178,178,178,178,178,178,178,178,0,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,0,0,0,115,180,115,180,115,180,115,180,115,180,115,180,115,180,115,180,115,180,180,180,180,180,115,180,115,180,115,180,115,180,115,180,115,115,180,180,115,115,180,115,180,115,180,115,180,180,180,180,115,180,115,180,180,180,115,180,115,180,180,180,115,180,180,115,180,115,180,115,180,115,180,115,180,115,180,115,180,180,115,180,115,180,115,180,0,0,0,0,182,0,182,182,182,182,182,0,182,182,0,182,182,182,182,182,0,182,0,182,182,0,182,182,182,182,0,182,182,182,182,182,182,182,182,182,182,182,0,182,182,0,0,0,112,144,183,144,112,144,183,112,144,183,112,144,183,112,144,183,144,112,144,183,112,144,183,112,144,183,112,144,183,112,144,183,112,144,183,112,144,183,112,144,183,144,112,144,183,112,144,183,144,112,112,112,112,112,144,183,112,112,144,112,144,183,112,144,183,112,144,183,112,144,183,144,144,112,144,183,112,144,183,112,112,144,112,144,183,112,144,183,144,183,144,112,144,183,144,183,183,183,183,183,112,144,183,112,144,183,112,144,183,112,144,183,183,183,183,183,183,112,144,183,112,144,183,112,144,183,144,112,144,183,112,144,183,112,144,183,0,189,0,189,0,189,0,0,0,191,189,190,191,189,190,191,189,190,190,190,191,189,190,190,191,189,190,191,189,190,189,189,0,189,190,191,189,190,191,189,190,191,189,190,191,189,190,189,189,189,191,189,190,191,189,190,191,189,190,189,189,189,191,189,190,191,189,190,191,189,190,191,189,190,191,189,190,191,189,190,191,0,189,191,189,190,191,189,190,191,189,190,191,191,189,190,191,189,190,191,189,190,191,189,190,191,189,190,191,189,190,296,297,0,0,0,0,0,0,0,0,0,0,0,195,0,195,195,195,195,195,195,0,195,195,195,195,195,195,195,195,0,195,0,0,195,0,195,195,195,195,195,0,0,0,195,195,195,195,195,0,0,195,195,0,0,0,195,0,0,195,195,195,195,195,195,195,0,195,195,195,0,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,0,0,0,0,200,200,200,200,200,200,200,200,200,0,200,200,200,200,200,200,0,200,200,200,200,200,200,200,200,200,200,200,200,0,200,200,200,200,200,200,200,200,200,200,0,0,0,0,205,196,205,196,205,196,205,196,205,196,205,196,196,196,205,196,205,196,205,196,205,196,205,196,205,196,0,205,196,205,196,205,196,205,196,196,205,196,205,196,196,196,196,205,196,205,196,196,196,196,205,205,196,196,196,205,196,205,196,205,196,205,196,205,196,205,196,205,196,205,196,205,196,205,196,196,196,196,0,0,0,0,0,0,0,0,0,0,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,0,0,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,0,208,208,208,145,145,145,145,145,0,0,145,145,145,145,145,145,145,145,0,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,211,0,212,0,211,212,211,211,212,211,212,211,212,211,212,211,212,211,212,211,212,211,212,212,211,212,211,212,211,212,211,212,211,212,211,211,211,212,211,211,212,211,212,211,212,211,212,212,211,212,211,212,211,212,211,212,211,212,211,212,212,211,212,211,212,211,212,211,212,0,212,212,211,212,211,212,211,212,212,212,212,211,212,212,211,212,211,212,211,212,211,211,212,211,212,212,211,212,212,211,212,211,212,211,212,211,212,0,185,185,0,0,78,0,0,0,0,298,298,298,185,185,0,0,0,78,0,0,299,185,300,185,185,185,78,299,300,298,301,185,215,78,299,300,298,301,185,215,78,299,300,298,301,185,215,78,299,300,298,301,185,215,78,299,300,298,301,185,215,78,299,300,298,301,185,215,301,215,78,299,300,298,301,185,215,78,299,300,298,301,185,215,78,299,300,298,301,185,215,78,299,300,298,301,185,215,78,299,300,298,301,185,215,215,78,299,300,298,301,185,215,299,300,0,78,299,300,298,301,185,215,301,215,185,185,78,299,300,298,301,185,215,78,299,300,298,301,185,215,299,78,300,185,185,185,78,299,300,298,301,185,215,78,299,300,298,301,185,215,215,0,185,185,0,185,78,299,300,298,301,185,215,78,299,300,298,301,185,215,0,185,185,301,300,301,78,299,300,298,301,185,215,78,299,300,298,301,185,215,78,299,300,298,301,185,215,185,78,299,300,298,301,185,215,78,299,300,298,301,185,215,78,299,300,298,301,185,215,78,299,300,298,301,185,215,299,78,299,300,298,301,185,215,78,299,300,298,301,185,215,0,302,302,0,0,0,0,0,302,302,221,218,223,220,302,221,218,223,220,302,221,218,223,220,302,221,218,223,220,220,302,221,218,223,220,302,221,218,223,220,220,220,221,302,221,218,223,220,302,221,218,223,220,302,221,218,223,220,302,221,218,223,220,302,221,218,223,220,221,221,302,221,218,223,220,221,302,221,218,223,220,218,302,221,218,223,220,302,221,218,223,220,223,218,302,221,218,223,220,302,221,218,223,220,0,0,0,0,218,0,0,223,223,221,302,221,218,223,220,302,221,218,223,220,220,218,218,220,302,221,218,223,220,302,221,218,223,220,302,221,218,223,220,223,302,221,218,223,220,302,221,218,223,220,302,221,218,223,220,302,221,218,223,220,302,221,218,223,220,302,221,218,223,220,0,0,0,0,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,0,0,0,0,0,0,0,0,0,303,0,0,0,0,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,0,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,0,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,0,236,236,236,236,236,236,236,236,0,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,0,238,238,238,238,238,238,238,238,238,238,238,0,238,238,238,238,238,238,238,238,238,238,0,238,238,238,238,238,238,238,238,238,238,238,0,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,0,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,0,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,0,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,0,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,0,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,0,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,247,0,0,219,219,247,0,247,219,247,245,245,245,245,0,219,247,245,219,247,245,219,247,245,219,247,245,219,247,245,219,247,245,219,247,245,219,247,245,0,219,245,245,245,219,247,245,219,247,245,219,245,219,247,245,219,247,245,219,247,219,219,247,247,219,247,245,245,219,247,245,219,247,245,219,247,245,219,247,245,245,219,247,245,219,247,245,219,247,245,219,247,245,245,245,245,245,219,245,0,245,245,219,247,245,219,247,245,219,247,245,219,247,245,219,247,245,219,247,245,219,247,245,245,245,245,245,219,247,245,219,247,245,219,247,245,250,0,250,0,0,249,250,249,250,249,250,249,250,249,249,250,249,250,249,250,249,250,249,250,249,250,249,250,249,250,249,249,249,250,249,250,249,250,249,250,249,250,249,250,249,250,249,250,249,250,0,249,250,249,250,249,0,0,249,250,249,250,249,250,249,250,249,250,249,250,249,250,249,0,0,249,250,249,250,249,250,249,304,304,304,0,0,0,0,252,253,254,252,253,254,252,253,254,252,253,254,252,252,253,254,252,253,254,252,253,254,252,253,254,252,253,254,252,254,0,252,253,254,252,253,254,252,252,253,254,252,253,254,253,252,0,252,253,254,254,252,252,253,254,252,252,252,253,254,252,252,253,254,252,253,254,252,252,253,254,252,253,254,0,0,252,254,252,253,254,252,253,254,252,252,0,252,252,252,253,253,253,253,253,252,253,254,252,252,253,254,252,253,254,252,253,254,252,253,254,252,253,254,254,252,253,254,252,0,252,253,254,252,253,254,252,253,254,256,256,0,0,0,255,256,255,256,255,256,255,256,255,256,255,256,255,255,255,255,0,0,255,255,256,255,256,255,255,256,255,256,255,255,255,255,255,256,255,255,255,0,255,256,255,256,255,256,255,256,255,256,255,256,255,255,0,256,255,256,255,255,255,256,255,256,255,256,255,256,255,256,255,256,255,256,255,256,255,256,255,0,0,0,0,0,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,0,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,0,260,0,0,260,0,260,260,260,260,260,260,260,260,260,260,260,260,260,260,0,260,260,260,260,260,260,260,260,260,260,260,0,0,266,264,266,0,0,264,0,264,263,264,265,266,267,263,264,265,266,267,263,264,265,266,267,263,264,265,266,267,263,264,265,266,267,263,264,265,266,267,263,264,265,266,267,263,264,265,266,267,263,264,265,266,267,265,263,263,265,266,267,263,264,265,266,267,263,264,265,266,267,263,264,265,266,267,263,0,263,264,265,266,267,263,264,265,266,267,264,266,267,264,264,263,264,264,265,266,266,267,263,264,265,266,267,265,0,263,264,265,266,267,263,264,265,266,267,0,267,263,264,265,266,267,263,264,265,266,267,265,267,263,264,265,266,267,263,264,265,266,267,0,267,263,264,265,266,267,263,264,265,266,267,267,0,263,0,263,264,265,266,267,0,263,0,263,263,264,265,266,267,264,266,263,264,265,266,267,263,264,265,266,267,263,264,265,266,267,263,265,267,263,264,265,266,267,263,264,265,266,267,263,264,265,266,267,0,263,264,265,266,267,263,264,265,266,267,263,264,265,266,267,0,0,0,0,272,272,187,272,272,187,272,187,272,187,272,187,272,187,272,272,272,187,272,187,272,187,272,187,272,187,272,272,272,187,272,187,272,187,272,187,272,187,272,187,272,272,187,272,187,272,187,272,187,187,272,272,272,187,272,187,272,187,272,187,272,187,272,187,272,187,272,187,272,187,0,0,274,273,274,273,274,273,274,273,0,274,273,274,273,274,273,274,273,274,273,273,273,273,274,273,274,273,274,273,274,273,274,273,274,273,274,273,274,273,0,274,273,274,273,273,273,274,0,274,273,274,273,274,274,273,274,273,273,273,274,273,274,273,274,274,273,0,274,273,274,273,274,273,274,273,274,273,274,273,274,273,273,0,274,273,274,273,274,273,0,0,279,0,0,0,0,279,0,278,277,279,280,188,188,277,278,277,279,280,188,278,277,279,280,188,278,277,279,280,188,278,277,279,280,188,278,277,279,280,188,278,277,279,280,188,278,277,279,280,278,277,279,280,278,280,188,278,277,279,280,188,278,277,279,280,188,278,277,279,280,188,278,277,279,280,188,278,278,278,278,277,279,280,188,278,277,279,280,188,278,277,279,280,188,278,277,279,280,188,280,278,280,188,188,188,278,277,279,280,188,278,277,279,280,188,278,277,279,280,188,278,277,279,280,188,280,278,278,277,279,280,188,278,277,279,280,188,278,277,278,277,279,280,278,277,279,280,188,278,277,279,280,188,278,277,279,280,188,278,277,279,280,188,278,277,279,280,188,278,277,279,280,188,277,278,277,279,280,188,280,278,277,279,280,188,278,277,279,280,188,0,0,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,0,281,281,281,281,281,0,281,281,0,281,281,281,281,281,281,281,281,281,281,0,281,281,281,284,0,0,0,284,284,285,284,0,285,284,285,284,285,284,285,284,285,284,285,284,284,285,284,285,284,284,285,284,285,284,0,285,284,284,0,285,284,285,284,0,285,284,285,284,284,284,284,284,285,285,284,285,284,284,285,284,285,284,284,284,284,284,284,284,284,0,0,285,284,284,285,284,284,285,284,285,284,285,284,285,285,284,285,284,285,284,284,0,284,285,284,285,284,285,284,0,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286],"f":[0,0,0,0,0,0,0,0,0,0,[1],0,0,0,0,0,[[]],[[]],[[]],0,0,[[]],[[],2],[[],2],[3,3],[[]],0,0,0,[4,5],[6],[6],[[]],[6],0,[[3,3],7],[[],7],[[],7],0,[[3,8],9],0,[[]],[[],10],0,[[],6],[[]],0,0,0,[[],2],[[]],0,0,0,0,0,0,[[]],[[]],0,0,0,0,0,[[[12,[11]]],13],[[14,3,15,[17,[16]]],13],0,[[]],[[]],0,0,0,0,[[]],0,[[],18],[[],18],[[],19],0,[[]],[[]],[[],2],0,0,[[]],[[[21,[20]],22],[[21,[20]]]],[[],23],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[24,14]],0,0,[[]],[[]],[[]],[[]],[[]],[25,26],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[25,22]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[25],[[25,27]],[28,28],[15,15],[29,29],[[]],[[]],[[]],0,0,0,[24],[[],15],[[],29],[[],30],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[],[[18,[29]]]],[[],[[18,[30]]]],[[]],[[]],[[]],[[]],[[]],[6],[6],[6],[6],[6],[[28,28],7],[[29,29],7],[[],7],[[],7],[[],7],[[],7],0,[[22,25]],[[28,8],9],0,[[24,25]],[[]],[[]],[[]],[[]],[[]],[[14,3,15,5,[2,[31]],[21,[16]]],25],[[],32],[[25,22]],[28],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[24,25]],[[]],[[]],[[]],[[]],[[]],0,0,[[33,34],[[2,[35]]]],[36,[[2,[35]]]],[34,[[37,[35]]]],[25,35],[25,7],0,[25,2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[24,25]],0,0,0,[[25,24,38,39]],[[24,38]],[[40,35],41],[25],[[24,42]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24],[22],0,0,0,[[25,[43,[33]]],[[2,[44]]]],[22],0,[[25,[43,[33]]],7],[25],0,[[25,22]],[[45,46,40,35],41],0,[[24,25]],[[24,47,25]],[[25,22]],[[25,48,47,22]],[[25,22,47]],[[25,28]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[25,2]],[[25,31]],[[24,25]],[[35,49,2],11],[25,50],0,0,[29,18],[30,18],[[25,51]],[[30,24,52,35,5,53,40]],[[25,35]],[[25,[55,[54]]],37],0,0,0,[[]],[[]],[[]],0,[[24,47,25,38]],[[24,47,25,38]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[25,22,47]],[[]],[[]],[[]],[[]],[[]],[[24,21]],[[5,24,47]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[],2],[[],2],[6],[6],[[]],[6],[[56,56],7],[[],7],[[],7],[[]],[[],6],[[]],[[],2],[[]],[[]],[[]],[[]],[[]],[[],56],[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[1],[1],[57,7],[57,58],[57,58],[[]],[[]],[[]],[[]],[[]],[[]],[57,58],[57,58],[57,[[59,[58]]]],[60,58],[[]],[[]],[60,61],[57,62],[57,62],[57,62],[60,58],[[],2],[[],2],[[],2],[[],2],[[57,62],62],[60,60],[57,57],[[]],[[]],[[60,61],7],[[57,62],7],[[57,57],7],[60],[[],60],[6],[6],[6],[6],[[],[[18,[60]]]],[[],[[18,[57]]]],[[57,62],58],[[57,62],58],[[]],[[]],[6],[6],[58,58],[60],[[60,60],7],[[57,57],7],[[],7],[[],7],[[],60],[58,57],[58,57],[58,57],[58,57],[[57,58],57],[[57,63],57],[[60,61],60],[[60,61]],[[57,62]],[[57,58]],[[57,58]],[[60,8],[[18,[64]]]],[[57,8],[[18,[64]]]],[[]],[[]],[[],57],[[61,61],60],[[62,63],57],[[61,61],60],[[62,62],57],[[61,61],60],[[62,63],57],[65,60],[[],57],[[62,62],57],[[[59,[58]],[59,[58]]],57],[60,61],[57,58],[[],6],[[],6],[[57,57],57],[[60,60],60],[[57,57],7],[[]],[[]],[60,7],[57,7],[60,7],[57,7],[60,7],[60,7],[57,7],[60,7],[[],7],[57,58],[57,62],[57,62],[57,58],[57,62],[[57,63],62],[66,58],[61,58],[61,58],[[],2],[[],2],[[]],[[]],[[58,58],58],0,0,[[58,58],58],0,0,[[],60],[[]],[[]],[[]],[[]],[[67,60],58],[67,58],[[59,59]],[[59,59]],[57,58],[57,62],[57,62],[57,58],[57,62],[[57,68],57],[[60,69],60],[[]],[[]],[[]],[[]],[60,18],[57,18],[[57,58]],[[57,62]],[[57,58]],[[57,58]],[[57,58]],[[57,58]],[[57,58]],[[57,58],57],[[57,63],57],[[57,62],58],[60,61],[57,63],[57,63],[[]],[[]],[57,58],[57,58],[[60,70],60],[[60,71],60],[[60,72],60],[[57,63],57],[[60,61],60],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[60,60],60],[[57,57],57],[[]],[[]],[[]],[[]],[[],2],[[],2],[60,58],[[]],[[]],[57,58],[[]],[[]],[[]],[[]],[57,[[59,[58]]]],[57,[[59,[58]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[24,73],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],2],[[],2],[[],42],[6],[6],[[],[[18,[42]]]],[[]],[6],[[42,42],7],[[42,8],9],[[]],[[],6],[[]],[[],2],[[]],0,[[]],[[]],[[]],[[]],[42,18],0,0,[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[]],0,[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],74],[6],[6],[6],[6],[[]],[[]],[6],[6],[[]],[[]],0,[[],6],[[],6],[[]],[[]],[[],2],[[],2],[[]],[[]],0,0,[75,76],[74],[[]],[[]],[[]],[[]],[74],0,[[]],[[]],[[]],[[]],0,[[74,75],76],0,[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[]],[[]],[[]],[[]],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],2],[[],2],[[],77],[6],[6],[[]],[6],[[]],[[],6],[[]],[[77,33,78,52],[[2,[[80,[79]]]]]],[[],2],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[]],[[]],[[]],0,0,0,0,0,[1],0,0,[80,[[37,[81]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[82,82],[[]],[[82,82],83],[[],84],[6],[6],[6],[6],[6],[6],[6],[6],[[]],[[]],[[]],[[]],[6],[6],[6],[6],[[81,85],86],0,0,[[82,82],7],[[],7],[[],7],[[82,8],9],[[]],[[]],[[]],[[]],[[52,54,81,85],87],[[52,54,88,80],87],0,[[],32],[[84,52],89],[[84,88,80,52],89],[82],0,[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],0,[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],0,0,[[84,32]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[82,82],[[2,[83]]]],[84],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],2],[[],2],[6],[6],[[]],[6],[[]],[[],6],[[],[[2,[90]]]],[[]],[[],2],[[]],[[],91],[[]],[[]],[[]],[[]],[91],[[91,54]],[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[]],[11],[[]],[[]],[92,54],[93,93],0,0,0,0,0,0,0,[1],[1],[94,[[2,[33]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[95,95],[94,94],[[]],[[]],[[94,95],7],[[95,96,24,97,98]],[[],94],[6],[6],[6],[6],[[],[[18,[95]]]],[[],[[18,[94]]]],[[]],[[]],[6],[6],[[95,95],7],[[94,94],7],[[],7],[[],7],[[],7],[[],7],[94,[[2,[95]]]],[[95,8],9],[[94,8],9],[[]],[[]],[[],32],[95],[[],6],[[],6],[[]],[[]],[94,65],[94,7],[[95,35,26],7],[94,65],[95,33],[94,6],[[],2],[[],2],[[]],[[]],[65,94],[[]],[[]],[[]],[[]],[[94,35,26]],[[]],[[]],[[]],[[]],0,[95,18],[94,18],[[]],[[]],[94,[[17,[95]]]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[]],[[]],[[]],[[]],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[79,60],0,[[]],[[]],[[]],[[],2],[[],2],[6],[6],[[]],[6],[[]],[[],6],[[]],[[54,99,52],[[37,[79]]]],[[54,100,52],[[37,[79]]]],[[54,101,52],[[37,[79]]]],[[54,102,52],[[37,[79]]]],[[],2],[[]],0,[79,33],0,[[]],[[]],[[]],[[]],[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],2],[[],2],[[],51],[6],[6],[[]],[6],[[]],[[],6],[[]],[[],2],[[]],[[]],[[]],[[]],[[]],0,[51],[[]],[51],[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[103,7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[104],[105,105],[106,106],[107,107],[108,108],[103,103],[[]],[[]],[[]],[[]],[[]],[[106,106],83],[[107,107],83],[104,94],[[],105],[[],106],[[],107],[[],108],[[],109],[[],110],[[],104],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[],[[18,[104]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6],[6],[6],[6],[6],[6],[6],[6],[[110,111],103],[[105,105],7],[[106,106],7],[[107,107],7],[[108,108],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[105,8],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[104,95],107],0,[[104,112,113],110],0,0,[104,94],0,[104,105],0,0,0,[[103,114],108],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[106,7],[107,7],[108,7],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[108,108],108],[[104,35,26]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[106,106],[[2,[83]]]],[[107,107],[[2,[83]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[104,[[2,[115]]]],[104,[[2,[115]]]],0,0,[[104,5,24,26],[[2,[94]]]],[104,18],[[104,65]],[[104,105]],[[104,65],94],[[104,95],94],[[]],[[]],[[]],[[]],[[]],[[104,[17,[95]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],0,[[],116],[6],[6],[6],[6],0,[[]],[[]],[6],[6],[[]],[[]],[[116,117],118],[[],6],[[],6],[[]],[[]],[[116,117,117],[[18,[119]]]],[116,65],[[],2],[[],2],[[]],[[]],[117,118],[120,116],[[]],[[]],[[]],[[]],0,0,[[120,117,98],[[2,[121]]]],[[]],[[]],[[]],[[]],0,[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[]],[[]],[[]],[[]],[[],2],[[],2],[[118,116]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[122,[[2,[123]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[124,124],[125,125],[126,126],[127,127],[[]],[[]],[[]],[[]],[122,98],[[],122],[65,[[2,[128]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[],[[18,[124]]]],[[],[[18,[125]]]],[[],[[18,[126]]]],[[],[[18,[127]]]],[[],[[18,[122]]]],[[]],[[]],[[]],[[]],[[]],[6],[6],[6],[6],[6],[[126,126],7],[[127,127],7],[[],7],[[],7],[[],7],[[],7],[[124,8],9],[[125,8],9],[[126,8],9],[[127,8],9],[[122,5,24,129]],0,[122,[[2,[58]]]],0,[[122,24]],[[]],[[]],[[]],[[]],[[]],[[122,129],[[2,[130]]]],[[],32],[[],32],[126],[127],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[122,128,131],7],[[122,5,24]],[122,[[2,[123]]]],0,[122,126],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[132,131],[132,131],0,[[122,22,129]],[[[55,[133]]],125],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[122],[[122,5,24]],[[122,5,24,129]],[[122,5,129,24]],[122,127],[[122,24]],0,[132,130],[122],[122],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[122,129]],[124,18],[125,18],[126,18],[127,18],[122,18],[[122,58]],[[122,123]],[[122,126]],[[122,129,127]],[[122,58]],[[122,[55,[133]]]],[[122,124]],[[122,128]],[[122,128,[55,[133]]]],[122,58],0,0,[[133,132],131],[[133,132,123],133],[[133,132],131],[[133,132,123],133],[[122,129]],[[122,5,24,129]],[[122,129]],[122,[[2,[133]]]],0,[[122,5,129,24]],[122,[[2,[93]]]],[122,[[2,[131]]]],0,[122,134],[122,[[2,[124]]]],[122,128],0,[[122,129,24]],[[]],[[]],[[]],[[]],[[122,129]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[22,54],0,0,0,0,0,0,[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[135,135],[119,119],[[]],[[]],[6],[6],[6],[6],[[120,122,117,136],135],[[]],[[]],[6],[6],0,[[119,8],9],[[]],[[]],[[135,137,120,98,136,138,7]],[[],6],[[],6],[[]],[[]],[[117,120,98,7],[[18,[[2,[138]],119]]]],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[135,117],[[2,[138]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],54],[[117,120,136,98,7],[[18,[[2,[138]],119]]]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],0,[[]],[[]],[[]],[[]],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[96,24,[55,[139]],140],73],0,[96,98],[[96,73,95],73],[[96,24,[55,[139]],112,117],73],[[96,24,[55,[139]],112,141],73],[[],41],[6],[6],[6],[6],[[],[[18,[41]]]],[[]],[[]],[6],[6],[[96,24,[2,[112]],117],73],[[96,24,[2,[112]],117,[55,[139]]],73],[[]],[[]],[96,94],[[],6],[[],6],[[96,24,[2,[112]],142],73],[[96,24,[2,[112]],142,[55,[139]]],73],[[]],[[]],0,[[],2],[[],2],[[]],[[]],[[96,24,143],73],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[96,73]],[96,94],[96,104],0,[96,104],[41,18],[[96,65]],[[96,65],94],[[96,95],94],[[96,24,144],73],[[96,24,[55,[139]],112,145],73],[[96,24,128,131],73],0,[[96,24,128],73],[[96,24,[55,[139]],128],73],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[]],[[]],[[]],[[]],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[12,[11]]],13],[[14,3,15,[17,[16]]],13],0,0,0,[[]],[[]],[[]],0,[[]],[[],2],[[],2],[[146,27]],[[146,[2,[31]]]],[6],[6],[[]],[6],[[]],[[],6],[[]],[[],2],[[]],[[14,3,15,5,[2,[31]],54],146],[[]],[[]],0,[[]],[[]],[[146,31]],[[146,51]],0,[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[146,22,47]],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],0,[147,148],[[147,149],148],[150,151],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[152,[2,[153]]],147],[152,152],[154,154],[148,148],[155,155],[[]],[[]],[[]],[[]],[[148,2,154],151],0,[[],155],[6],[6],[6],[6],[6],[156,80],[6],[6],[6],[6],[6],[6],[6],[[]],[[]],[[]],[[]],[[]],[[]],[6],[6],[6],[6],[6],[6],[[155,[55,[117]]],[[80,[152]]]],[[152,8],9],[[155,8],9],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[148,[2,[54]]],[[2,[54]]]],[[155,96,157]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[1],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[158,158],[[]],[6],[6],[6],[6],[6],[6],[[],[[2,[58]]]],[[]],[[]],[[]],[6],[6],[6],[[[17,[[17,[158]]]]]],[[158,8],9],[[]],[[]],[[]],[[],[[17,[[17,[158]]]]]],[[],[[17,[[17,[158]]]]]],0,[[],6],[[],6],[[],6],[[]],[[]],[[]],[63,159],[63,159],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[63,[17,[[17,[158]]]]],159],[[63,6],159],[[63,6],160],[[]],[[63,132,113],[[161,[112]]]],[[161,162,159]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[26,96,24,116]],[[26,96,24]],0,[[]],[[]],[[]],[[],2],[[],2],[[],26],[6],[6],[[],[[18,[26]]]],[[]],[6],[[]],[[],6],[[]],[[],2],[[]],[[]],[[]],[[26,96,24,116]],[[]],[[]],0,[26,18],0,[[26,96,24,116]],[[],18],[[],18],[[],19],[[]],[[]],[[],2],0,[[]],[[]],[[]],0,0,0,0,[1],[1],[1],[1],[[163,141,117]],[[163,141,117,117]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,[141,141],[164,164],[165,165],[163,163],[[]],[[]],[[]],[[]],[[141,141],83],[[163,117],7],[141,166],0,[163,136],[163,136],[[],141],[[],164],[[],165],[[],163],[6],[6],[6],[6],[6],[6],[6],[6],[[],[[18,[141]]]],[[],[[18,[164]]]],[[],[[18,[165]]]],[[],[[18,[163]]]],0,[[]],[[]],[[]],[[]],[6],[6],[6],[6],0,[163,167],0,[[141,141],7],[[],7],[[],7],[[141,8],9],[166,141],[[]],[[]],[[]],[[]],[[],32],[[163,141],[[2,[164]]]],[[163,141],[[2,[164]]]],0,[141],0,[[],6],[[],6],[[],6],[[],6],[[163,65,117]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[163],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[141,141],[[2,[83]]]],0,[117,54],0,0,0,[[163,117]],[[163,141]],[[163,141]],[163,164],0,[163,141],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[141,18],[164,18],[165,18],[163,18],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[163,141]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[1],0,[[]],[[]],[[]],[[]],[[],2],[[],2],[97,97],[[]],0,0,0,0,[[96,24,97,98]],[6],[6],[[]],[6],0,[[97,8],9],[168,54],[[]],0,[[],6],0,[[]],0,[[],2],[[]],0,[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[]],[[]],[[]],0,[[24,65]],0,[[]],[[]],[[]],[[]],[[],2],[[],2],0,[169,170],[[169,96,24,97,98]],[6],[6],[[]],[6],0,[[]],[[],6],[[]],[[],2],[[]],[169,6],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[]],[[]],[[]],0,0,[53],[[]],[[]],[[]],[[]],[[],2],[[],2],0,[[],53],[6],[6],[[]],[6],[[]],[[],6],[[]],[[],2],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],19],[[53,96,24,97,98,171,114]],[[]],[[]],[[],2],[[]],[[]],[[]],0,0,[[],54],[81,[[2,[[173,[172]]]]]],[[24,174],73],[[24,75,81]],[[24,89,[2,[58]]]],[[24,89,57]],[[24,73,89,57,62,[2,[58]]],73],[[5,24,75,[2,[76]]]],[[5,24,75,[2,[76]]]],[49,37],0,0,0,[[]],[[]],[[]],[[]],[[],2],[[],2],[[],175],[6],[6],[[],[[18,[175]]]],[[]],[6],[[]],[[],6],[[]],[[],2],[[]],[[96,24]],[[]],[[]],[16,58],[[]],[[]],[175,18],[[96,176,16,58]],[[],18],[[],18],[[],19],[[175,96,24]],[[]],[[]],[[],2],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],2],[[],2],[[24,177]],[[],178],[6],[6],[[]],[6],[[]],[[24,38]],0,[[],6],[[]],[[24,177,38,39]],[[],2],[[]],0,[178],[[]],[[]],[[178,24,177]],[[]],[[]],[[24,39]],[33,54],[[24,179]],[[],18],[[],18],[[],19],[[178,24,177,38,39]],[[]],[[]],[[],2],[[178,38,39]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],2],[[],2],[6],[6],[[]],[6],0,0,[[]],[[],6],[[]],[157,65],0,[[],2],[[]],[[]],[[]],[[]],[[]],0,[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[]],[[]],[[]],0,0,0,[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[115,115],[180,180],[[]],[[]],[[180,5,24,26],[[2,[115]]]],[180,[[2,[115]]]],0,[[],180],[6],[6],[6],[6],[[]],[[]],[6],[6],[[115,8],9],[[180,8],9],[[]],[[],115],[[]],[[180,26,24,6]],0,[[],6],[[],6],[[]],[[]],[[],2],[[],2],[[]],[[]],[180,[[2,[115]]]],[[180,5,24,26],[[2,[115]]]],[[180,35,26]],[[]],[[]],[[]],[[]],[[180,5,24,26],[[2,[115]]]],[180,[[2,[115]]]],[[]],[[]],[[]],[[]],[180,[[2,[115]]]],[180,[[2,[115]]]],0,[[180,5,24,26],[[2,[94]]]],0,[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[]],[[]],[[]],[[]],[[],2],[[],2],[[180,94]],[[]],[[]],[[]],[[]],[[]],[[]],[[26,94],54],[[24,95]],[[26,95],54],0,[[]],[[24,96,26,95]],[[]],[[]],[[]],[[],2],[[],2],[[24,181]],[[182,24,96,26]],[[],182],[[96,24,117,181]],[6],[6],[[],[[18,[182]]]],[[]],[6],[[96,24,[2,[117]],181,183]],[[]],[95,7],[[],6],[[]],[[24,96,117,26]],[[],2],[[]],[[]],[[]],[[96,24,117,181]],[[]],[[]],[182,18],[[182,96,24,26]],[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[]],[[24,96,26,95]],[[]],[[]],0,0,0,[1],[1],[1],[[144,137,116,35]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[112,112],[144,144],[183,183],[[]],[[]],[[]],[[112,112],83],0,[[],183],[6],[6],[6],[6],[6],[6],[[],[[18,[112]]]],[[],[[18,[144]]]],[[],[[18,[183]]]],0,[[]],[[]],[[]],[6],[6],[6],0,[[112,112],7],[[],7],[[],7],[[112,8],9],[[]],[[]],[[]],[[],32],[112],0,[[],6],[[],6],[[],6],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[145,117],144],[[144,96,116]],[[]],[[]],[[]],[[]],[[]],[[]],[[112,112],[[2,[83]]]],[[],112],[[144,137]],[[]],[[]],[[]],[[]],[[]],[[]],[[144,96,24,131,110]],0,[[144,96,24]],[112,18],[144,18],[183,18],0,0,0,0,0,0,[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[183,96,24,184]],[[183,96,24,117,185,112,110]],[[183,96,24,186]],[[183,96,24,187]],[[183,96,24,188]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[1],[[96,24,116,33,137,144,45]],[[96,24,116,33,137,144,45]],[[96,24,144]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[189,189],[[]],[[96,137,144,116],[[45,[117,190]]]],[[],189],[[],190],[6],[6],[6],[6],[6],[6],[[]],[[]],[[]],[6],[6],[6],[[189,189],7],[[],7],[[],7],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[]],[[]],[[]],[189,7],[189,7],[[189,189],189],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[5,24,33,7]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[191,96,24,144],7],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[96,116],[[17,[144]]]],[[117,120,98],7],[[96,116],[[17,[144]]]],[[120,[17,[144]]],[[17,[144]]]],[[96,117,116,145],[[17,[117]]]],[[96,117,116],[[192,[145,[17,[117]]]]]],[[117,193,128],7],[[117,117,193,128],7],[[120,144,98],7],[[120,144,194,98],7],0,[[]],0,[[]],[[]],[[]],[[],2],[[],2],[[195,96,24]],[[96,24]],[[],195],[6],[6],[[],[[18,[195]]]],[[]],[6],[[195,96,26,24]],[[]],[24],[[],6],[[96,[59,[58]],[2,[124]]],196],[[196,122,24,57,57],73],[[]],[[35,128,133],7],[[],2],[[]],0,[[]],[[]],0,[[197,58,[59,[58]],198]],[[196,5,24,197,[59,[58]]]],0,[[]],[[]],[195,18],[[195,96,26,73,197,137,24]],[[96,26,73,197,24,6,192,57,196,95]],[[96,26,22,95]],[[195,96,26,24]],[[195,96,26,73,197,199,137,24]],0,[[196,122,24,197,57]],0,0,0,[[96,24]],[[195,96,26,73,197,24]],[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[59,200],124],[[]],[[]],[[]],0,0,[[201,58,58],62],[[]],[[]],[[]],[[]],[[],2],[[],2],[[201,62],58],0,[[],201],[6],[6],[[]],[6],[[]],[[],6],[[]],[[],2],[[]],[[]],[[]],0,[[]],[[]],[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[]],[[]],[[]],[[22,7,202,57,57,123],[[17,[203]]]],[[24,57,134,123],[[17,[203]]]],[[196,24,197,[59,[58]],134]],0,[1],[[]],[[]],[[]],[[]],[[],2],[[],2],[200,200],[[]],[[192,32],[[204,[130]]]],[6],[6],[[]],[6],[[200,8],9],[[]],[[134,192],32],[[],6],[[]],[[],2],[[]],[200,131],[[134,192],200],[[]],[[]],0,[[]],[[]],[200,131],[[131,131],32],[[]],[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[196,133],133],[[],196],[6],[6],[6],[6],[[]],[[]],[6],[6],[[205,8],9],[[196,8],9],[[]],[[]],[59,206],[[],6],[[],6],[[]],[[]],[[],2],[[],2],[[]],[[]],[[[59,[58]],124],196],[[]],[[]],[[]],[[]],[[196,58],[[2,[124]]]],[196,[[2,[206]]]],0,[[]],[[]],[[]],[[]],0,[[196,96]],[[196,133],133],0,0,[[196,58],[[2,[133]]]],[[196,206],[[2,[133]]]],0,[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[]],[[]],[[]],[[]],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],0,[[196,133],[[2,[206]]]],[[196,133],[[2,[58]]]],0,[[196,58,58],[[2,[124]]]],[[24,196,123,207],2],[[24,196,123,207],2],[[134,133],54],[[196,134],[[2,[123]]]],[[35,122,196,24,197,57]],[[24,196,123],2],[[122,123,24,197,57]],0,0,0,[[]],[[]],[[]],[[]],0,[[],2],[[],2],[[],184],[6],[6],[[]],[6],[[]],[[],6],[[]],[[184,96,157]],[[184,96,157]],[[],2],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[]],[[]],[[]],0,0,[1],[[]],[[]],[[]],[[]],[[],2],[[],2],[208,208],[[]],[[],208],[6],[6],[[],[[18,[208]]]],[[]],[6],[[]],[[],6],[[]],[[],2],[[]],[[]],[[]],[[]],[[]],[208,18],[[]],[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[96,24,208,184],73],[[]],[[]],[[]],0,0,0,0,0,0,0,[1],[[]],[[145,[55,[[194,[145]]]]]],[[145,[55,[[194,[145]]]]]],[[145,[55,[[194,[145]]]]]],[[]],[[]],[[]],[[128,35,117],[[194,[145]]]],[[],2],[[],2],[145,145],[[]],[[145,145],83],[[],145],[6],[6],[[],[[18,[145]]]],[[]],[6],[209,145],[145,209],[[145,194],7],[[145,145],7],[[],7],[[],7],[[145,8],9],[[145,8],9],[[]],[145,210],[[],6],[[]],[[],2],[[]],[145],[[]],[[]],[[145,145],[[2,[83]]]],[[]],[[]],[145,18],[[145,[55,[[194,[145]]]]]],[[]],[[],54],[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[211,61,63],58],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[211,211],[212,212],[[]],[[]],[[212,211]],[6],[6],[6],[6],[[],[[18,[211]]]],[[],[[18,[212]]]],[[]],[[]],[6],[6],[[211,211],7],[211,58],[[211,8],9],[[212,8],9],[211,61],0,0,[[]],[[]],[213,[[2,[211]]]],[212,61],[[],6],[[],6],[[212,73,58],7],[[]],[[]],[211,7],[[212,22]],[[211,211,58],211],[[212,212,58],212],[[],2],[[],2],[[]],[[]],[211,58],0,0,[[]],[[]],[[]],[[]],[[211,57,66],67],[212,[[2,[58]]]],[211,61],[212,61],[[61,61],61],[[212,57,62,63]],[[212,63]],[[]],[[]],[[]],[[]],[211,18],[212,18],[[212,61]],[[212,61]],[212,211],[[]],[[]],[[212,63]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[211,57],138],[[]],[[]],[[]],[[]],0,[[],2],[[],2],0,[[]],[[]],0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[214,151,108]],[[151,108],151],[[214,108],214],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,[[],215],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6],[6],[6],[6],[6],[6],[6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,0,[[117,7],216],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[185,96,157,135,110]],[[185,117,[113,[[113,[149,61]]]],80,7]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[78,217],0,[52,185],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[185,66,57,211,58],218],[[185,117],219],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[214,214],0,0,0,0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[220,58,221,7]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,0,[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[]],[[]],[[]],[[]],[[]],[6],[6],[6],[6],[6],[[]],[[]],[[]],[[]],[[]],[[216,58],221],0,[[],6],[[],6],[[],6],[[],6],[[],6],0,[[]],[[]],[[]],[[]],[[]],[218,65],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[66,57,211,222,215,58],218],[[223,220,224]],[[223,220]],[[223,220,225]],0,[[223,220]],[[223,220,215]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[220],[[218,221],61],0,0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[222,72,216,58]],[[]],[[]],[[]],[222,60],0,[[]],[[],2],[[],2],0,[6],[6],[[]],[6],[[]],[[],6],[[]],0,[[],2],[[]],[222,[[17,[226]]]],0,[52,222],[222,6],[[]],[[]],0,[222],[[]],[[]],0,0,[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[]],[[]],[[]],0,0,0,0,0,0,[[117,114,227,181,103],216],0,0,[[185,96,157,135,110]],0,0,0,0,[[]],[[]],[[]],[[]],[[],2],[[],2],[6],[6],[[]],[6],[[]],[[],6],[[]],[[228,185,96,157,135,110]],[[],2],[[]],[[]],[[]],[[185,157,181,227,117,138,110],[[18,[229]]]],[[]],[[]],[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],2],[[],2],[6],[6],[[]],[6],[[]],[[],6],[[]],[[230,185,96,157,135,110]],[[],2],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[185,117,138,216,231,[2,[232]],[2,[233]],[2,[234]],[2,[153]],103]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],2],[[],2],[6],[6],[[]],[6],[[]],[[],6],[[]],[[235,185,96,157,135,110]],[[],2],[[]],[[]],[[]],[[185,181,227,117,138,103],[[18,[229]]]],[[]],[[]],[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],2],[[],2],[6],[6],[[120,122,117],121],[[]],[6],[[]],[[],6],[[]],[[236,185,96,157,135,110]],[[],2],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[185,117,181,135,216,237,121,103]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],2],[[],2],[6],[6],[[]],[6],[[]],[185],[[],6],[[]],[[238,185,96,157,135,110]],[[],2],[[]],[[]],[[]],[[227,185,96,135,181,117,138,110],[[18,[229]]]],[[185,96,135,181,75,117]],[[227,185,96,181,117,138,110,114,75,[2,[232]]]],[[185,96,80,138,216,239]],[[]],[[]],[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],2],[[],2],[6],[6],[[]],[6],[[]],[[],6],[[]],[[240,185,96,157,135,110]],[[],2],[[]],[[]],[[]],[[185,157,181,227,117,138,103],[[18,[229]]]],[[]],[[]],[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],2],[[],2],[6],[6],[[]],[6],[[]],[[],6],[[]],[[241,185,96,157,135,110]],[[],2],[[]],[[]],[[]],[[185,157,181,227,117,138,103],[[18,[229]]]],[[]],[[]],[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],2],[[],2],[6],[6],[[]],[6],[[]],[[],6],[[]],[[242,185,96,157,135,110]],[[],2],[[]],[[]],[[]],[[185,157,181,227,117,138,96,110],[[18,[229]]]],[[]],[[]],[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],2],[[],2],[6],[6],[[]],[6],[[]],[[],6],[[]],[[243,185,96,157,135,110]],[[],2],[[]],[[]],[[]],[[185,157,181,227,117,138,103],[[18,[229]]]],[[]],[[]],[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],2],[[],2],[6],[6],[[]],[6],[[]],[[],6],[[]],[[244,185,96,157,135,110]],[[],2],[[]],0,[[]],[[]],[[157,227,80],[[18,[229]]]],[[227,117],[[18,[65,229]]]],[[244,185,157,181,227,117,138,103],[[18,[229]]]],[[227,138],[[18,[65,229]]]],[227,[[18,[65,229]]]],[[]],[[]],[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[]],[[]],[[]],0,[1],[[]],[[]],[[]],[213,72],[[]],[[],2],[[],2],[213,213],[[]],[6],[6],[[]],[6],0,[[]],[121,[[18,[69,54]]]],[213,[[2,[70]]]],[[],6],0,[[]],[[],2],[[]],[[]],[[]],0,0,[213,61],[[213,61],[[2,[61]]]],[[]],[[]],[[]],[[],18],[[],18],[[],19],[[213,66],[[2,[67]]]],[[]],[[]],[[],2],0,[[]],[213,72],0,[213,[[2,[70]]]],[213,[[2,[72]]]],[[]],[[]],0,0,0,0,0,0,0,0,[1],[1],[1],[[245,63],246],0,[245,58],[[[2,[61]]],54],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[219,219],[247,247],[245,245],[[]],[[]],[[]],[[215,248,248,211,24,110],[[17,[203]]]],[[],219],[[],245],[245,214],[[245,63],214],[6],[6],[6],[6],[6],[6],[[],[[18,[219]]]],[[],[[18,[245]]]],[[]],[[]],[[]],[6],[6],[6],[[219,219],7],[[247,247],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[245,33],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[245,96,24,163,117,112]],[219,18],[245,18],[[24,58,58,214]],0,0,[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[96,163,98,117,58]],[[245,96,163]],[[96,163,98,117,58]],[[245,96,24,117,185,112,110]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[249,63,63,57]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[249,249],[250,250],[[]],[[]],[[],249],[[],250],[6],[6],[6],[6],[[],[[18,[249]]]],[[249,63,57]],[[]],[[]],[6],[6],[[]],[[]],[[],6],[[],6],[[]],[[]],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[96,117,73,248,[2,[58]]]],[[]],[[]],[[]],[[]],[249,18],[[197,248,58,33,246],[[37,[251]]]],[[96,24,117,248],[[17,[203]]]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[]],[[]],[[]],[[]],[[],2],[[],2],[[249,73,248,57,63]],[[96,24,245,117,185,57,112,110],73],[[63,63,96,24,245,117,185,57,112,110],73],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[1],[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[252,252],[253,253],[254,254],[[]],[[]],[[]],[[],252],[[],254],[[60,254],212],[6],[6],[6],[6],[6],[6],[[],[[18,[252]]]],[[]],[[]],[[]],[6],[6],[6],0,0,[216,[[2,[211]]]],[[]],[[]],[[]],[[[2,[121]]],254],0,[[],6],[[],6],[[],6],[[252,211]],[[252,212]],[[]],[[]],[[]],0,[[],2],[[],2],[[],2],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[24,211,57,185,52,33,246]],[[96,252,117]],[[252,60]],0,[[]],[[]],[[]],[[]],[[]],[[]],[252,18],0,[[96,185,60]],0,0,0,0,0,0,[[211,211],58],0,[[]],[[]],[[]],0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],2],[[],2],[[],2],[[252,73,60],212],[[96,24,245,117,112,185,110]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[255,255],[[]],[[255,255],83],[[52,251,222,256],37],[[52,251,57,222,256],[[37,[257]]]],[255,166],[[],255],[6],[6],[6],[6],[[],[[18,[255]]]],[[]],[[]],[6],[6],[[255,255],7],[[],7],[[],7],[[255,8],9],[[]],[166,255],[[]],[[],32],[[57,58]],[255],[[],6],[[],6],[[]],[[]],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[255,255],[[2,[83]]]],[[52,258,259,57,58],257],[[]],[[]],[[]],[[]],[255,18],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[]],[[]],[[]],[[]],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[],2],[[],2],[[],186],[6],[6],[[]],[6],[[]],[[],6],[[]],[[186,96,157]],[[186,117,181,227],[[18,[229]]]],[[],2],[[]],[[]],[[]],[[]],[[]],0,[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[]],[[]],[[]],0,0,0,0,0,0,[1],[[]],[[]],[[]],[[]],[[],2],[[],2],[260,260],[[]],[6],[6],[[5,24,261]],[[]],[[24,207,11]],[[207,6],207],[6],[[24,7,11],262],[[260,260],7],[[],7],[[],7],[[]],[[],6],[[]],[260,7],[[],2],[[]],[[]],[[]],[[260,261],[[2,[6]]]],[[]],[[]],[[24,207,7,[2,[6]],260,260,260]],[[]],[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[]],[[]],[[]],[[260,261,[2,[6]]]],0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[263,263],[264,264],[265,265],[266,266],[267,267],[[]],[[]],[[]],[[]],[[]],[[265,58],151],0,[75,263],[[],265],[[],266],[[],267],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[],[[18,[263]]]],[[],[[18,[264]]]],[[],[[18,[265]]]],[[],[[18,[266]]]],[[],[[18,[267]]]],0,[6,54],[[]],[[]],[[]],[[]],[[]],[6],[6],[6],[6],[6],[[264,264],7],[[266,266],7],[[267,267],7],[[],7],[[],7],[[263,8],9],[[264,8],9],[[264,8],9],[[265,8],9],[[266,8],9],[[266,8],9],[[267,8],9],[[]],[[]],[[]],[[]],[[]],0,[[24,263,86]],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[268,269],86],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[24,197,57,202]],[[267,24,63,86]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[263,270],[[270,[271]]]],0,[[24,263,75]],[263,18],[264,18],[265,18],[266,18],[267,18],[[96,24,263,[270,[271]],269]],0,[[96,24,263,75]],0,[[]],[[]],[[]],[[]],[[]],[[],54],[[],54],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[263,96,24]],[[265,5,24]],[[267,5,24]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[96,24,263,75]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[1],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[272,272],[[]],0,[[],187],[6],[6],[6],[6],[[]],[[]],[6],[6],0,[[272,8],9],[[]],[[]],[[],6],[[],6],[[]],[[]],0,[[187,96,157,273]],[[],2],[[],2],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[]],[[]],[[]],[[]],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[272,58],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[274,274],[273,273],[[]],[[]],0,0,0,[[],274],[[],273],[6],[6],[6],[6],[[],[[18,[274]]]],[[],[[18,[273]]]],[[]],[[]],[6],[6],0,[[273,8],9],[[]],[[]],[[96,272],[[2,[275]]]],[[],6],[[],6],[[]],[[]],[[273,117],7],[[273,33],7],0,[[24,33],276],[[],2],[[],2],[[]],[[]],0,[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[274,5,24]],[274,18],[273,18],[[96,24,274,[2,[6]]]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[]],[[]],[[]],[[]],[[],2],[[],2],[[273,96]],[[96,24,274,187],73],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[[188,33,[17,[277]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[278,278],[277,277],[279,279],[280,280],[[]],[[]],[[]],[[]],0,0,[[],188],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[]],[[]],[[]],[[]],[[]],[6],[6],[6],[6],[6],[[278,278],7],[[],7],[[],7],[[278,8],9],[[277,8],9],[[279,8],9],[[280,8],9],[[188,8],9],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[188,96,157]],[[188,96,157]],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1],[[]],[[]],[[]],[[]],[[],2],[[],2],[281,281],[[]],[[],281],[6],[6],[[],[[18,[281]]]],[[]],[6],[[134,93],54],[[]],[[],6],[[]],[[],2],[[]],[[63,282],[[17,[283]]]],[[]],[[]],[93,93],[[]],[[]],[281,18],[[]],[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[96,24,281,188],73],[[]],[[]],[[]],0,0,0,0,[[284,96,24,116]],[[284,144],112],[[]],[[]],[[5,24,7,7,11,11]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],0,[[96,24,141,144,7]],[[],284],[6],[6],[6],[6],[[],[[18,[284]]]],[[]],[[]],[6],[6],[[161,112]],[[]],[[]],0,[[24,144]],[[],6],[[],6],[[]],[[]],[161,7],[[],2],[[],2],[[]],[[]],[284],0,[[96,116],284],[[284,96,116]],[[285,73]],[[]],[[]],[[]],[[]],[[284,112],[[2,[144]]]],[[]],[[]],[[]],[[]],[284,18],[[284,144],7],[[284,112]],[[284,112],[[2,[144]]]],0,[[284,96,24,112]],[[284,112],[[2,[144]]]],[[96,24,284,57,112,6]],[[96,24,144,110]],0,0,[[284,117],[[17,[112]]]],[285,139],[[284,96,24]],0,[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[285,24]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[284,24,96]],[[5,24,7,7],73],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],2],[[],2],[6],[6],[[286,33]],[[]],[6],[[]],[[],6],[[]],[[],2],[[]],[[],286],[[286,35]],[[286,14,3]],[[]],[[]],[[286,287]],[[286,33,[55,[288]]]],[[]],[[]],[[],18],[[],18],[[],19],[[]],[[]],[[],2],[[]],[[]],[[]]],"p":[[3,"Private"],[4,"Option"],[4,"AppEnvironment"],[3,"CreationContext"],[3,"ReUi"],[15,"usize"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"HardwareTier"],[8,"FnOnce"],[3,"Box"],[6,"Result"],[3,"BuildInfo"],[3,"StartupOptions"],[4,"LogMsg"],[3,"Vec"],[4,"Result"],[3,"TypeId"],[8,"Send"],[3,"Receiver"],[3,"Context"],[3,"WgpuConfiguration"],[3,"Ui"],[3,"App"],[3,"Blueprint"],[3,"Visuals"],[4,"TimeControlCommand"],[4,"PanelSelection"],[3,"AppState"],[8,"Storage"],[15,"u64"],[15,"str"],[8,"Read"],[3,"LogDb"],[3,"Path"],[6,"Result"],[3,"WgpuResourcePoolStatistics"],[3,"DataStoreStats"],[4,"Source"],[3,"RecordingConfig"],[3,"AppOptions"],[8,"AsRef"],[8,"Any"],[6,"IntMap"],[3,"RecordingId"],[3,"Frame"],[4,"Command"],[3,"PathBuf"],[3,"ApplicationId"],[3,"Profiler"],[3,"RenderContext"],[3,"ComponentUiRegistry"],[3,"String"],[8,"Into"],[4,"AppIconStatus"],[3,"Rect"],[15,"f32"],[3,"RangeInclusive"],[3,"BoundingBox"],[3,"Vec3"],[3,"Pos2"],[3,"Vec2"],[3,"Error"],[8,"Iterator"],[3,"Vec2"],[3,"Ray3"],[3,"Rot2"],[3,"Quat"],[3,"Affine3A"],[3,"Conformal3"],[3,"IsoTransform"],[3,"Response"],[3,"Caches"],[3,"Tensor"],[3,"TensorStats"],[3,"MeshCache"],[4,"MeshSourceData"],[3,"LoadedMesh"],[3,"Arc"],[4,"DynamicImage"],[3,"ImageCacheKey"],[4,"Ordering"],[3,"ImageCache"],[4,"TensorDataMeaning"],[3,"ColorImage"],[3,"CachedImage"],[8,"AsDynamicImage"],[3,"TensorImageView"],[3,"Clipboard"],[3,"Clipboard"],[3,"Time"],[15,"i64"],[3,"ItemCollection"],[4,"Item"],[3,"ViewerContext"],[4,"UiVerbosity"],[3,"LatestAtQuery"],[4,"Mesh3D"],[3,"EncodedMesh3D"],[4,"MeshFormat"],[3,"RawMesh3D"],[3,"OptionalSpaceViewEntityHighlight"],[3,"SelectionState"],[4,"HoveredSpace"],[4,"SelectionHighlight"],[4,"HoverHighlight"],[3,"InteractionHighlight"],[3,"SpaceViewEntityHighlight"],[3,"SpaceViewHighlights"],[3,"EntityPathHash"],[3,"SpaceViewId"],[6,"HashMap"],[3,"InstanceKey"],[3,"HistoricalSelection"],[3,"SpaceInfoCollection"],[3,"EntityPath"],[3,"SpaceInfo"],[4,"UnreachableTransform"],[3,"EntityDb"],[3,"ViewCoordinates"],[3,"TimeControl"],[3,"TimeRangeF"],[3,"TimeView"],[3,"TimeState"],[4,"Looping"],[4,"PlayState"],[3,"Timeline"],[3,"TimesPerTimeline"],[3,"TimeRange"],[3,"TimeInt"],[3,"BTreeSet"],[3,"TimeReal"],[4,"TimeType"],[3,"TransformCache"],[3,"EntityPropertyMap"],[3,"EntityTree"],[3,"Mat4"],[4,"WidgetText"],[3,"ComponentPath"],[3,"DataBlueprintGroupHandle"],[3,"InstancePath"],[3,"MsgId"],[3,"SpaceView"],[4,"ViewCategory"],[3,"RemoteViewerApp"],[3,"ResolvedClassDescription"],[3,"ResolvedAnnotationInfo"],[3,"KeypointId"],[15,"u16"],[3,"Color32"],[3,"Annotations"],[3,"ClassId"],[4,"DefaultColor"],[3,"AnnotationMap"],[3,"MISSING_ANNOTATIONS"],[3,"SceneQuery"],[3,"SpaceMakeInfo"],[4,"LayoutSplit"],[4,"SplitDirection"],[3,"Tree"],[3,"NodeIndex"],[3,"DataBlueprintTree"],[3,"DataBlueprintGroup"],[3,"DataBlueprints"],[3,"KeyData"],[6,"IntSet"],[3,"ComponentBundle"],[3,"EntityComponentWithInstances"],[3,"ComponentName"],[3,"ComponentWithInstances"],[15,"u8"],[3,"Rgba"],[6,"RgbImage"],[3,"EventLogView"],[3,"TableRow"],[3,"MemoryLimit"],[3,"MemoryPanel"],[3,"TrackingStatistics"],[3,"SelectionHistory"],[3,"EntityProperties"],[3,"SelectionPanel"],[3,"ViewState"],[3,"SceneBarChart"],[3,"SceneSpatial"],[3,"SceneTensor"],[3,"SceneText"],[3,"SceneTimeSeries"],[4,"CanAddToSpaceView"],[3,"EntityAddInfo"],[3,"SpaceViewEntityPicker"],[3,"BTreeMap"],[3,"DataStore"],[3,"EnumSet"],[3,"TimePanel"],[3,"TimeRangesUi"],[3,"Painter"],[3,"Stroke"],[4,"EntityPathPart"],[3,"TimelineAxis"],[3,"BallScatterer"],[3,"FontId"],[4,"Shape"],[3,"Vec1"],[3,"Segment"],[15,"f64"],[3,"Id"],[3,"BarChartState"],[15,"u32"],[3,"Icon"],[3,"Eye"],[3,"OrbitEye"],[3,"SpaceCamera3D"],[3,"Size"],[3,"SceneSpatialUiData"],[3,"InstancePathHash"],[3,"MeshId"],[3,"PickingResult"],[4,"SpatialNavigationMode"],[3,"PickingState"],[3,"PickingRayHit"],[3,"SceneSpatialPrimitives"],[3,"PickingContext"],[3,"LineStripSeriesBuilder"],[3,"PointCloudBuilder"],[3,"MeshInstance"],[3,"EntityView"],[3,"Arrows3DPart"],[4,"QueryError"],[3,"Boxes2DPart"],[4,"Rect2D"],[3,"ColorRGBA"],[3,"Radius"],[3,"Label"],[3,"Boxes3DPart"],[3,"CamerasPart"],[3,"Pinhole"],[3,"ImagesPart"],[3,"Rgba"],[3,"Lines2DPart"],[3,"Lines3DPart"],[3,"MeshPart"],[3,"Points2DPart"],[3,"Points3DPart"],[3,"ViewSpatialState"],[3,"AutoSizeConfig"],[4,"AutoSizeUnit"],[3,"RectTransform"],[3,"View2DState"],[4,"ZoomState2D"],[3,"TargetConfiguration"],[3,"View3DState"],[3,"EyeInterpolation"],[3,"SpaceSpecs"],[3,"ViewBuilderHandle"],[4,"ScreenBackground"],[3,"PaintCallback"],[3,"CommandBuffer"],[3,"ViewBuilder"],[4,"DragDropAddress"],[3,"DimensionMapping"],[3,"InnerResponse"],[3,"ViewTensorState"],[4,"ColorMap"],[3,"ColorMapping"],[4,"TextureScaling"],[3,"TextureSettings"],[6,"ArrayView2"],[8,"Fn"],[6,"ArrayViewD"],[8,"Copy"],[3,"TextEntry"],[3,"ViewTextFilters"],[3,"ViewTextState"],[3,"TimePoint"],[3,"RichText"],[3,"PlotPoint"],[3,"PlotPointAttrs"],[4,"PlotSeriesKind"],[3,"PlotSeries"],[3,"ViewTimeSeriesState"],[3,"GridInput"],[3,"GridMark"],[3,"Viewport"],[3,"TabViewer"],[3,"ViewerAnalytics"],[3,"Event"],[4,"Property"],[13,"RustSdk"],[13,"RerunCli"],[13,"TwoD"],[13,"ThreeD"],[13,"TopBottom"],[13,"LeftRight"],[8,"DataUi"],[13,"Compatible"],[13,"No"],[4,"UiLabelTarget"],[3,"MeshSource"],[3,"Image"],[3,"UiLabel"],[4,"AdditionalPickingInfo"],[8,"ScenePart"],[13,"Scaled"]]},\
"re_web_viewer_server":{"doc":"Serves the web viewer wasm/html.","t":[3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11],"n":["MakeSvc","Svc","WebViewerServer","analytics","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","call","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","init","init","init","into","into","into","new","new","on_serve_wasm","poll_ready","poll_ready","serve","server","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["re_web_viewer_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Hosts the Web Viewer Wasm+HTML","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,1,4,7,1,4,7,1,4,1,4,7,1,4,7,1,4,7,1,4,7,1,4,7,1,4,7,1,7,1,1,4,7,7,1,4,7,1,4,7,1,4,7],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[1,[3,[2]]]],[4],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[],1],[6,7],[1],[[1,8],[[10,[9]]]],[[4,8],[[10,[9]]]],[7,11],0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],12],[[],12],[[],12]],"p":[[3,"Svc"],[3,"Body"],[3,"Request"],[3,"MakeSvc"],[15,"usize"],[15,"u16"],[3,"WebViewerServer"],[3,"Context"],[4,"Result"],[4,"Poll"],[6,"Result"],[3,"TypeId"]]},\
"re_ws_comms":{"doc":"Communications between server and viewer.","t":[3,17,17,17,6,3,0,5,5,5,12,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,5,11,11,11,11,11,11,11,11,11,11,5,11,11,11,12,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11],"n":["Connection","DEFAULT_WS_SERVER_PORT","PREFIX","PROTOCOL","Result","Server","client","decode_log_msg","default_server_url","encode_log_msg","listener","server","Connection","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","drop","from","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","viewer_to_server","vzip","wrapping_as","wrapping_cast_from","Server","accept_connection","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","drop","from","handle_connection","init","into","listen","listener","lossless_try_into","lossy_into","new","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","to_broadcast_stream","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from"],"q":["re_ws_comms","","","","","","","","","","","","re_ws_comms::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_ws_comms::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Represents a connection to the server. Disconnects on drop.","","","","","","","","","","","The server is a pub-sub architecture.","Represents a connection to the server. Disconnects on drop.","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Connect viewer to server","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Accept new connections forever","","","","Start a pub-sub server listening on the given port","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,19,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,19,19,19,19,19,19,19,19,19,19,0,19,19,19,19,19,19,19,19,19,19,19,0,19,19,19,19,19,19,19,19],"f":[0,0,0,0,0,0,0,[[],[[2,[1]]]],[[],3],[1,[[5,[4]]]],0,0,0,[[]],[[]],[[]],[[]],[[],6],[[],6],[7],[7],[7],[[]],[[],7],[[]],[[],6],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],9],[[]],[[]],[[3,[0,[10,11]]],[[2,[12]]]],[[]],[[]],[[]],0,[[[14,[13]],15,16,[13,[[17,[[5,[13]]]]]]]],[[]],[[]],[[]],[[]],[[],6],[[],6],[7],[7],[7],[[]],[[[14,[13]],16,[13,[[17,[[5,[13]]]]]]],18],[[],7],[[]],[[19,[20,[1]]],21],0,[[],6],[[]],[22,[[21,[19]]]],[[]],[[]],[[]],[[]],[[[20,[1]],[13,[[17,[[5,[13]]]]]]],[[14,[13]]]],[[],8],[[],8],[[],9],[[]],[[]],[[]],[[]],[[]]],"p":[[4,"LogMsg"],[6,"Result"],[3,"String"],[15,"u8"],[3,"Vec"],[4,"Option"],[15,"usize"],[4,"Result"],[3,"TypeId"],[8,"Fn"],[8,"Send"],[3,"Connection"],[3,"Arc"],[3,"Sender"],[4,"SocketAddr"],[3,"TcpStream"],[6,"Mutex"],[6,"Result"],[3,"Server"],[3,"Receiver"],[6,"Result"],[15,"u16"]]},\
"rerun":{"doc":"Rerun - log point clouds, images, etc and visualize them …","tn":["ApplicationId","CallSource","Cli","Component","ComponentName","EntityPath","IllegalInstanceKey","MismatchedRowLengths","MoreThanOneRow","MsgSender","MsgSenderError","PackingError","Python","RecordingId","SerializableComponent","Session","SplattedInstanceKeys","ZERO","__clone_box","__clone_box","__clone_box","__clone_box","application_id","as_ref","as_slice","as_str","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clap","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","components","connect","coordinates","crash_handler","default","default","default_server_addr","demo_util","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","disconnect","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drain_log_messages_buffer","drop","drop","drop","drop","drop","drop","drop","drop_msgs_if_disconnected","enabled","entity_path","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","external","field","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_str","from_uuid","full_name","get_hash","get_hash","get_hash","get_hash","global_session","global_session_with_default_enabled","has_sent_begin_recording_msg","hash","hash","hash","hash","hash","hash","hash","hash64","init","init","init","init","init","init","init","init","instanced","into","into","into","into","into","into","into","into_resettable","is_child_of","is_descendant_of","is_enabled","is_official_example","is_root","is_streaming_over_tcp","iter","join","last","len","log","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","name","new","new","new","num_instances","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","parent","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","provide","random","recording_id","recording_id","recording_source","root","run","run","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","save","send","send","send_path_op","sender","serialize","serialize","serialize","serialize","serve","set_application_id","set_enabled","set_recording_id","set_recording_source","short_name","show","source","spawn","splatted","time","timeless","timepoint","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","tokio_rt","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unknown","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_component","with_splat","with_splat_opt","with_time","with_timeless","with_timepoint","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","RerunArgs","__clone_box","augment_args","augment_args_for_update","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","connect","deref","deref_mut","downcast","drop","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","lossless_try_into","lossy_into","on_startup","on_teardown","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","save","serve","spawn","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","update_from_arg_matches","update_from_arg_matches_mut","vzip","wrapping_as","wrapping_cast_from","AnnotationContext","AnnotationInfo","Arrow3D","Box3D","ClassDescription","ClassId","ClassId","ColorRGBA","Depth","Encoded","EncodedMesh3D","F32","F64","Glb","Gltf","I16","I32","I64","I8","InstanceKey","JPEG","KeypointId","Label","LineStrip2D","LineStrip3D","Mat3x3","Mesh3D","MeshFormat","MeshId","Obj","Pinhole","Pinhole","Point2D","Point3D","Quaternion","Radius","Raw","RawMesh3D","Rect2D","Rigid3","Rigid3","Scalar","ScalarPlotProps","Size3D","Tensor","TensorData","TensorDataMeaning","TensorDimension","TensorId","TensorTrait","TextEntry","Transform","U16","U32","U64","U8","Unknown","Unknown","Vec2D","Vec3D","Vec4D","ViewCoordinates","XCYCW2H2","XCYCWH","XYWH","XYXY","YXHW","YXYX","albedo_factor","body","bytes","class_map","color","data","dtype","format","get","id","id","image_from_cam","indices","info","is_shaped_like_an_image","is_vector","keypoint_connections","keypoint_map","label","level","meaning","meaning","mesh_id","mesh_id","meter","name","normals","num_dim","origin","positions","resolution","rotation","scattered","shape","shape","size","tensor_id","transform","translation","vector","w","x","x","x","x","x","y","y","y","y","y","z","z","z","z","Axis3","Handedness","Left","Negative","Positive","Right","Sign","SignedAxis3","X","Y","Z","axis","sign","BUILD_INFO","anonymize_source_file_path","backtrace_to_string","callstack_from","format_backtrace","install_crash_handlers","install_panic_hook","install_signal_handler","bounce_lerp","color_spiral","grid","lerp","linspace","debug","debug_once","error","error_once","info","info_once","setup_native_logging","trace","trace_once","warn","warn_once","AnnotationContext","ApplicationId","Arrow3D","ArrowMsg","ArrowMsg","BBox2D","BEGINNING","BadEscape","BatchIndex","BeginRecordingMsg","BeginRecordingMsg","Box3","ClearComponents","ClearRecursive","ComponentName","ComponentPath","DTYPE","DoubleSlash","Duration","EmptyString","Encoded","EncodedMesh3D","EntityPath","EntityPathHash","EntityPathImpl","EntityPathOpMsg","EntityPathOpMsg","EntityPathPart","F16","F16","F32","F32","F64","F64","FullIndex","Glb","Gltf","Goodbye","I16","I16","I32","I32","I64","I64","I8","I8","IDENTITY","Index","Index","IndexHash","Integer","InvalidSequence","LeadingSlash","LogMsg","MAX","MAX","MAX","MIN","Mesh3D","MeshFormat","MeshId","MissingSlash","MsgId","NONE","NONE","Name","Obj","Other","PathOp","PathParseError","Pinhole","Pinhole","Pixel","PythonSdk","PythonVersion","Quaternion","Raw","RawMesh3D","RecordingId","RecordingInfo","RecordingSource","Rigid3","Rigid3","RustSdk","Sequence","Sequence","SequentialIndex","String","TensorDataType","TensorDataTypeTrait","TensorElement","Time","Time","TimeInt","TimePoint","TimeRange","TimeRangeF","TimeReal","TimeType","Timeline","TimelineName","Transform","U16","U16","U32","U32","U64","U64","U8","U8","Unknown","Unknown","UnterminatedString","Uuid","ViewCoordinates","ZERO","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","abs","abs","add","add","add","add","add","add_assign","add_assign","add_assign","albedo_factor","application_id","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_msg","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","as_f32","as_f32","as_f64","as_f64","as_f64","as_i64","as_nanos","as_ref","as_secs_f32","as_secs_f64","as_slice","as_str","as_u128","aspect_ratio","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","ceil","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","child_from_parent","chunk","class_map","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","component_name","component_name","component_types","contains","contains","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","datagen","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe","describe_short","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encoding","entity_path","entity_path","entity_path","entity_path","entity_path_vec","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exact_format","external","first64","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focal_length","focal_length_in_pixels","format","format","format","format_range","format_time_range","forward","fov_y","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_i64","from_iter","from_millis","from_nanos","from_nanos","from_ns_since_epoch","from_rub","from_seconds","from_seconds_since_epoch","from_secs","from_sequence","from_str","from_u64","from_up_and_handedness","from_us_since_epoch","get","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","half_size","handedness","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash64","hash64","id","image_from_cam","impl_into_enum","impl_into_enum","indices","info","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","inverse_lerp","is_absolute_date","is_empty","is_empty","is_empty","is_exactly_midnight","is_none","is_none","is_official_example","is_root","is_some","is_some","is_timeless","is_timeless","iter","iter","last","len","len","length","length","lerp","lerp","log_time","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","major","max","max","max","mesh_id","mesh_id","mesh_id","min","min","min","minor","msg_bundle","msg_id","msg_id","msg_id","mul","name","name","name","name","name","name","name","name","nanos_since_epoch","neg","neg","neg","new","new","new","new","new","new","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_child_from_parent","new_parent_from_child","new_sequence","new_temporal","normals","now","num_triangles","origin","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","parent","parent_from_child","parse_entity_path","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","parts","patch","path","path","path_op","point","point","positions","principal_point","provide","push","random","random","recording_id","recording_source","remove","resolution","resolution","right","root","rotation","rotation","round","sanity_check","sanity_check","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","schema","second64","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","short_string","size","started","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","suffix","sum","sum","time_point","time_point","time_point","timeless","timelines","times","to_datetime","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_rub","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","transform","translation","translation","try_as_u16","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","typ","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","up","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vector","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","details","rust_version","ArrowMsg","chunk","msg_id","schema","AnnotationContext","AnnotationInfo","Arrow3D","BadSlice","BadTensorShape","BadValue","Box3D","ClassDescription","ClassId","ClassId","ColorRGBA","Depth","Encoded","EncodedMesh3D","F16NotSupported","F32","F64","FastFixedSizeArrayIter","FastFixedSizeListArray","FieldError","FixedSizeArrayField","Glb","Gltf","I16","I32","I64","I8","IDENTITY","InstanceKey","JPEG","KeypointId","Label","LineStrip2D","LineStrip3D","Mat3x3","Mesh3D","MeshFormat","MeshId","MsgId","NotContiguousStdOrder","Obj","Pinhole","Pinhole","Point2D","Point3D","Quaternion","Radius","Raw","RawMesh3D","Rect2D","Result","Rigid3","Rigid3","SPLAT","Scalar","ScalarPlotProps","Size3D","Tensor","TensorCastError","TensorData","TensorDataMeaning","TensorDimension","TensorId","TensorTrait","TextEntry","Transform","TypeMismatch","U16","U32","U64","U8","Unknown","Unknown","Vec2D","Vec3D","Vec4D","ViewCoordinates","XCYCW2H2","XCYCWH","XYWH","XYXY","YXHW","YXYX","ZERO","ZERO","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","albedo_factor","array","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","class_map","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","color","context","coordinates","data","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","default","default","default","default","default","default","default","default","depth","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","end","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_body","from_dynamic_image","from_image","from_rgb","from_rgba","from_xywh","get","get","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","height","height","id","id","id","image_from_cam","index","index","index","indices","info","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_resettable","is_shaped_like_an_image","is_shaped_like_an_image","is_specific","is_splat","is_vector","is_vector","iter_registered_field_types","keypoint_connections","keypoint_map","label","level","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","meaning","meaning","meaning","mesh_id","mesh_id","meter","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","named","new","new","new","new","new","new","new","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","next","normals","num_dim","num_dim","offset","origin","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","partial_cmp","partial_cmp","positions","provide","provide","random","resolution","rotation","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","scattered","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","shape","shape","shape","size","source","source","specific_index","tensor_from_jpeg_bytes","tensor_from_jpeg_file","tensor_id","to_array","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","top_left_corner","transform","translation","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unnamed","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","values","vector","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","w","w","width","width","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","x","x","x","x","x","x","x","x","y","y","y","y","y","y","y","y","z","z","z","z","z","z","source","AnnotationContext","AnnotationInfo","AnnotationInfoArray","AnnotationInfoArrayIterator","ClassDescription","ClassMapElemArrow","ClassMapElemArrowArray","ClassMapElemArrowArrayIterator","MutableAnnotationInfoArray","MutableClassMapElemArrowArray","arrow_deserialize","arrow_serialize","as_any","as_any","as_arc","as_arc","as_box","as_box","as_mut_any","as_mut_any","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","class_description","class_id","class_map","color","data_type","data_type","data_type","data_type","data_type","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","field_class_description","field_class_description","field_class_id","field_class_id","field_color","field_color","field_id","field_id","field_label","field_label","fmt","fmt","from","from","from","from","from","from","from","has_validity","has_validity","id","info","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","keypoint_connections","keypoint_map","label","len","len","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","new","new","new_array","next","next","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","push_null","push_null","reserve","reserve","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","shrink_to_fit","shrink_to_fit","try_extend","try_extend","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_push","try_push","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","upcast","validity","validity","validity","validity","validity_iter","validity_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Axis3","Back","Down","Forward","Handedness","Left","Left","NEGATIVE_X","NEGATIVE_Y","NEGATIVE_Z","Negative","POSITIVE_X","POSITIVE_Y","POSITIVE_Z","Positive","Right","Right","Sign","SignedAxis3","Up","ViewCoordinates","ViewDir","X","Y","Z","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_vec3","axis","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe","deserialize","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_dim","from_right_handed","from_str","init","init","init","init","init","into","into","into","into","into","long","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","serialize","serialize","short","sign","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","build_frame_nr","build_log_time","build_some_colors","build_some_instances","build_some_instances_from","build_some_labels","build_some_point2d","build_some_rects","build_some_vec3d","Decoder","Encoder","append","az","az","borrow","borrow","borrow_mut","borrow_mut","buffer","buffer","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","encode","finish","from","from","init","init","into","into","into_iter","lossless_try_into","lossless_try_into","lossy_into","lossy_into","new","new","next","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","zdecoder","zstd_encoder","AHashMap","Either","Left","Right","__clone_box","all","any","array","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_pin_mut","as_pin_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","az","bitmap","borrow","borrow_mut","buffer","cast_from","cause","checked_as","checked_cast_from","chunk","cjk_compat_variants","clone","clone_from","clone_into","cmp","collect","compute","consume","count","datatypes","deref","deref","deref_mut","deref_mut","description","downcast","drive","drive_unindexed","drop","either","either_into","either_with","eq","equivalent","equivalent","error","expect_left","expect_right","extend","factor_err","factor_first","factor_none","factor_ok","factor_second","ffi","fill_buf","find","find_map","flip","flush","fmt","fmt","fold","for_each","from","from","get_hash","hash","init","into","into","into_future","into_inner","into_iter","into_iter","into_par_iter","into_vec","io","is_left","is_right","last","left","left_and_then","left_or","left_or_default","left_or_else","len","len","lossless_try_into","lossy_into","map","map_left","map_right","mmap","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","next","next_back","nfc","nfd","nfkc","nfkd","nth","offset","opt_len","overflowing_as","overflowing_cast_from","par_extend","partial_cmp","partition","poll","position","provide","read","read_exact","read_exact_buf","read_line","read_to_end","read_to_string","read_until","rfind","rfold","right","right_and_then","right_or","right_or_default","right_or_else","saturating_as","saturating_cast_from","scalar","seek","size_hint","source","stream_safe","temporal_conversions","to_owned","to_string","trusted_len","try_from","try_into","try_into_arrow","try_into_arrow","try_into_arrow","try_into_arrow","try_into_arrow_as_type","try_into_arrow_as_type","try_into_arrow_as_type","try_into_arrow_as_type","try_poll","type_id","types","unwrap_left","unwrap_right","unwrapped_as","unwrapped_cast_from","upcast","util","vzip","with_producer","wrapping_as","wrapping_cast_from","write","write_all","write_bytes","write_fmt","Array","ArrayValuesIter","BinaryArray","BinaryValueIter","BooleanArray","DaysMsArray","DaysMsVec","DictionaryArray","DictionaryKey","FixedSizeBinaryArray","FixedSizeListArray","Float16Array","Float16Vec","Float32Array","Float32Vec","Float64Array","Float64Vec","GenericBinaryArray","Int128Array","Int128Vec","Int16Array","Int16Vec","Int256Array","Int256Vec","Int32Array","Int32Vec","Int64Array","Int64Vec","Int8Array","Int8Vec","KEY_TYPE","ListArray","ListValuesIter","MapArray","MonthsDaysNsArray","MonthsDaysNsVec","MutableArray","MutableBinaryArray","MutableBinaryValuesArray","MutableBooleanArray","MutableDictionaryArray","MutableFixedSizeBinaryArray","MutableFixedSizeListArray","MutableListArray","MutablePrimitiveArray","MutableStructArray","MutableUtf8Array","MutableUtf8ValuesArray","NullArray","PrimitiveArray","StructArray","TryExtend","TryExtendFromSelf","TryPush","UInt16Array","UInt16Vec","UInt32Array","UInt32Vec","UInt64Array","UInt64Vec","UInt8Array","UInt8Vec","UnionArray","Utf8Array","Utf8ValuesIter","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add","add","add","always_fits_usize","apply_validity","apply_validity","apply_values","apply_values_mut","arced","arced","arced","arced","arced","arced","arced","arced","arced","arced","arced","arced","array","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_arc","as_arc","as_arc","as_arc","as_arc","as_arc","as_arc","as_arc","as_arc","as_arc","as_arc","as_arc","as_box","as_box","as_box","as_box","as_box","as_box","as_box","as_box","as_box","as_box","as_box","as_box","as_mut_any","as_mut_any","as_mut_any","as_mut_any","as_mut_any","as_mut_any","as_mut_any","as_mut_any","as_mut_any","as_mut_any","as_mut_any","as_mut_any","as_ref","as_usize","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","boxed","boxed","boxed","boxed","boxed","boxed","boxed","boxed","boxed","boxed","boxed","boxed_clone","boxed_clone","capacity","capacity","capacity","capacity","capacity","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","check_bounds","check_bounds","checked_add","checked_add","checked_add","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_div","checked_div","checked_div","checked_mul","checked_mul","checked_mul","checked_rem","checked_rem","checked_sub","checked_sub","checked_sub","cjk_compat_variants","clean_for_polars","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","default","default","default","default","default","default","default","default","default","default","default_data_type","default_data_type","default_data_type","default_data_type","default_datatype","default_datatype","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","end","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equal","extend","extend","extend","extend","extend","extend","extend_constant","extend_from_slice","extend_trusted_len","extend_trusted_len","extend_trusted_len","extend_trusted_len","extend_trusted_len","extend_trusted_len","extend_trusted_len_unchecked","extend_trusted_len_unchecked","extend_trusted_len_unchecked","extend_trusted_len_unchecked","extend_trusted_len_unchecked","extend_trusted_len_unchecked","extend_trusted_len_values","extend_trusted_len_values","extend_trusted_len_values","extend_trusted_len_values","extend_trusted_len_values_unchecked","extend_trusted_len_values_unchecked","extend_trusted_len_values_unchecked","extend_trusted_len_values_unchecked","extend_values","extend_values","field","field","fields","fields","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fd","from_filelike","from_into_filelike","from_into_socketlike","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_socketlike","from_trusted_len_iter","from_trusted_len_iter","from_trusted_len_iter","from_trusted_len_iter","from_trusted_len_iter","from_trusted_len_iter","from_trusted_len_iter","from_trusted_len_iter","from_trusted_len_iter","from_trusted_len_iter","from_trusted_len_iter_unchecked","from_trusted_len_iter_unchecked","from_trusted_len_iter_unchecked","from_trusted_len_iter_unchecked","from_trusted_len_iter_unchecked","from_trusted_len_iter_unchecked","from_trusted_len_iter_unchecked","from_trusted_len_iter_unchecked","from_trusted_len_iter_unchecked","from_trusted_len_iter_unchecked","from_trusted_len_values_iter","from_trusted_len_values_iter","from_trusted_len_values_iter","from_trusted_len_values_iter","from_trusted_len_values_iter","from_trusted_len_values_iter","from_trusted_len_values_iter","from_trusted_len_values_iter","from_trusted_len_values_iter_unchecked","from_trusted_len_values_iter_unchecked","from_trusted_len_values_iter_unchecked","from_trusted_len_values_iter_unchecked","from_trusted_len_values_iter_unchecked","from_trusted_len_values_iter_unchecked","from_values","from_vec","from_vec","get","get","get","get","get","get_child_field","get_child_length","get_child_type","get_display","get_fields","get_fields","get_mut_values","get_unchecked","get_unchecked","get_unchecked","get_unchecked","get_unchecked","get_value_display","get_values_size","get_values_size","get_values_size","growable","index","index","index_unchecked","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_arc","into_arc","into_arc","into_arc","into_arc","into_arc","into_arc","into_box","into_box","into_data","into_data","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_mut","into_mut","into_mut","into_mut","into_vec","is_dense","is_empty","is_empty","is_null","is_null_unchecked","is_null_unchecked","is_null_unchecked","is_null_unchecked","is_null_unchecked","is_ordered","is_sorted_and_unique","is_sparse","is_valid","is_valid","is_valid_unchecked","is_valid_unchecked","is_valid_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter_typed","iter_values","key_value","keys","keys","keys","keys","keys_iter","keys_values_iter","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","length","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","map","map","map","mul","mul","mul","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","mut_values","mut_values","mut_values","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_empty","new_empty","new_empty","new_empty","new_empty","new_empty","new_empty","new_empty","new_empty","new_empty","new_empty","new_empty_array","new_from","new_from","new_null","new_null","new_null","new_null","new_null","new_null","new_null","new_null","new_null","new_null","new_null","new_null","new_null_array","new_unchecked","new_unchecked","new_unchecked","new_with_capacity","new_with_field","new_with_field","next","next_back","nfc","nfd","nfkc","nfkd","nth","null_count","offset","offsets","offsets","offsets","offsets","offsets","offsets","offsets","offsets","offsets","offsets","offsets","offsets","offsets","offsets","offsets","offsets","offsets","offsets","offsets","offsets","offsets","ord","overflowing_add","overflowing_add","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_mul","overflowing_mul","overflowing_sub","overflowing_sub","pop","pop","pop","pop","pop","pop","pop","push","push","push","push","push","push","push","push","push_null","push_null","push_null","push_null","push_null","push_null","push_null","push_null","push_null","push_null","push_null","push_null","push_null","rem","rem","reserve","reserve","reserve","reserve","reserve","reserve","reserve","reserve","reserve","reserve","reserve","reserve","reserve","reserve","reserve","reserve","reserve","reserve","reserve","reserve","reserve","reserve","reserve","saturating_add","saturating_add","saturating_add","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_mul","saturating_mul","saturating_mul","saturating_sub","saturating_sub","saturating_sub","set","set","set_unchecked","set_validity","set_validity","set_validity","set_validity","set_validity","set_validity","set_validity","set_validity","set_validity","set_validity","set_validity","set_values","set_values","set_values","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","size","size","size","size","size","size","size","size","size_hint","slice","slice","slice","slice","slice","slice","slice","slice","slice","slice","slice","slice","slice","slice","slice","slice","slice","slice","slice","slice","slice","slice","slice","slice","slice","slice_unchecked","slice_unchecked","slice_unchecked","slice_unchecked","slice_unchecked","slice_unchecked","slice_unchecked","slice_unchecked","slice_unchecked","slice_unchecked","slice_unchecked","slice_unchecked","slice_unchecked","slice_unchecked","slice_unchecked","slice_unchecked","slice_unchecked","slice_unchecked","slice_unchecked","slice_unchecked","slice_unchecked","slice_unchecked","slice_unchecked","slice_unchecked","stream_safe","sub","sub","sub","to","to","to","to_boxed","to_boxed","to_boxed","to_boxed","to_boxed","to_boxed","to_boxed","to_boxed","to_boxed","to_boxed","to_boxed","to_boxed","to_boxed","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_extend","try_extend","try_extend","try_extend","try_extend","try_extend","try_extend","try_extend","try_extend","try_extend","try_extend_from_self","try_extend_from_self","try_extend_from_self","try_extend_from_self","try_extend_from_self","try_extend_from_self","try_extend_from_self","try_extend_from_self","try_extend_from_self","try_extend_from_self","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_iter","try_from_iter","try_from_iter","try_from_iter","try_from_keys","try_from_trusted_len_iter","try_from_trusted_len_iter","try_from_trusted_len_iter","try_from_trusted_len_iter","try_from_trusted_len_iter","try_from_trusted_len_iter","try_from_trusted_len_iter","try_from_trusted_len_iter_unchecked","try_from_trusted_len_iter_unchecked","try_from_trusted_len_iter_unchecked","try_from_trusted_len_iter_unchecked","try_from_trusted_len_iter_unchecked","try_from_trusted_len_iter_unchecked","try_from_trusted_len_iter_unchecked","try_get_child","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_arrow","try_into_arrow","try_into_arrow","try_into_arrow","try_into_arrow_as_type","try_into_arrow_as_type","try_into_arrow_as_type","try_into_arrow_as_type","try_new","try_new","try_new","try_new","try_new","try_new","try_new","try_new","try_new","try_new","try_new","try_new","try_new","try_new","try_new","try_new","try_new","try_new","try_new","try_new","try_new_unchecked","try_new_unchecked","try_push","try_push","try_push","try_push","try_push","try_push","try_push","try_push","try_push","try_push","try_push","try_push_valid","try_push_valid","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","types","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","value","value","value","value","value","value","value","value","value","value","value","value","value","value","value","value_unchecked","value_unchecked","value_unchecked","value_unchecked","value_unchecked","value_unchecked","value_unchecked","value_unchecked","value_unchecked","value_unchecked","value_unchecked","value_unchecked","value_unchecked","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values_iter","values_iter","values_iter","values_iter","values_iter","values_iter","values_iter","values_iter","values_iter","values_iter","values_iter","values_iter","values_iter","values_iter","values_iter_typed","values_mut_slice","values_mut_slice","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacities","with_capacities","with_capacities","with_capacities","with_capacity","with_capacity","with_capacity","with_capacity","with_capacity","with_capacity","with_capacity","with_capacity","with_capacity_from","with_validity","with_validity","with_validity","with_validity","with_validity","with_validity","with_validity","with_validity","with_validity","with_validity","with_validity","with_validity","with_validity","with_validity","with_validity","with_validity","with_validity","with_validity","with_validity","with_validity","with_validity","with_validity","with_validity","with_values","with_values","wrapping_add","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_mul","wrapping_sub","Growable","GrowableBinary","GrowableBoolean","GrowableDictionary","GrowableFixedSizeBinary","GrowableFixedSizeList","GrowableList","GrowableNull","GrowablePrimitive","GrowableStruct","GrowableUnion","GrowableUtf8","arrays","arrays","arrays","arrays","arrays","arrays","arrays","arrays","arrays","as_arc","as_arc","as_arc","as_arc","as_arc","as_arc","as_arc","as_arc","as_arc","as_arc","as_arc","as_arc","as_box","as_box","as_box","as_box","as_box","as_box","as_box","as_box","as_box","as_box","as_box","as_box","az","az","az","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","data_type","data_type","data_type","data_type","data_type","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend_null_bits","extend_null_bits","extend_null_bits","extend_null_bits","extend_null_bits","extend_null_bits","extend_null_bits","extend_null_bits","extend_null_bits","extend_validity","extend_validity","extend_validity","extend_validity","extend_validity","extend_validity","extend_validity","extend_validity","extend_validity","extend_validity","extend_validity","extend_validity","fields","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","key_validity","key_values","keys_values","len","len","len","len","len","len","len","len","len","len","len","len","length","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","make_growable","new","new","new","new","new","new","new","new","new","new","new","offsets","offsets","offsets","offsets","offsets","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","size","size","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","validity","validity","validity","validity","validity","validity","validity","validity","values","values","values","values","values","values","values","values","values","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","DynComparator","build_compare","total_cmp","total_cmp_f32","total_cmp_f64","Bitmap","IntoIter","MutableBitmap","__clone_box","__clone_box","__clone_box","and","as_slice","as_slice","as_slice_mut","az","az","az","binary","binary_assign","bitand","bitand","bitand_assign","bitor","bitor","bitor_assign","bitxor","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buffer","bytes","capacity","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","chunk_iter_to_vec","chunks","clear","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","end","eq","eq","extend_constant","extend_from_bitmap","extend_from_slice","extend_from_trusted_len_iter","extend_from_trusted_len_iter_unchecked","fmt","fmt","fmt","from","from","from","from","from","from","from_chunk_iter_unchecked","from_iter","from_iter","from_len_set","from_len_zeroed","from_trusted_len_iter","from_trusted_len_iter","from_trusted_len_iter_unchecked","from_trusted_len_iter_unchecked","from_u8_slice","from_u8_vec","from_vec","get","get","get_bit","get_bit_unchecked","index","init","init","init","into","into","into","into_iter","into_iter","into_iter","into_iter","into_mut","is_empty","is_empty","iter","iter","len","len","length","length","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","make_mut","new","new","new","new_zeroed","next","next_back","not","not","nth","null_count","null_count","null_count_range","offset","or","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","pop","push","push_unchecked","quaternary","reserve","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","set","set_bit_unchecked","set_unchecked","shrink_to_fit","size_hint","slice","slice_unchecked","ternary","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from_trusted_len_iter","try_from_trusted_len_iter","try_from_trusted_len_iter_unchecked","try_from_trusted_len_iter_unchecked","try_into","try_into","try_into","try_new","try_new","type_id","type_id","type_id","unary","unary_assign","unset_bits","unset_bits","unset_bits","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","utils","values","vzip","vzip","vzip","with_capacity","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","xor","BitChunk","BitChunkIterExact","BitChunks","BitChunksExact","BitChunksExactMut","BitmapIter","Optional","Required","SlicesIterator","ZipValidity","ZipValidityIter","__clone_box","__clone_box","__clone_box","__clone_box","az","az","az","az","az","az","az","bit_offset","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed_clone","boxed_clone","bytes","bytes_for","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","check_bounds","check_bounds","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","chunk_iterator","chunks","cjk_compat_variants","cjk_compat_variants","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","count_zeros","current","current_byte","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","end","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_ne_bytes","get_bit","get_bit_unchecked","index","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_vec","into_vec","is_empty","is_set","iter","last_chunk","len","len","len","len","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","marker","mask","max_len","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","new","new","new","new","new","new","new","new_with_validity","next","next","next","next","next","next","next","next_back","next_back","next_back","nfc","nfc","nfd","nfd","nfkc","nfkc","nfkd","nfkd","nth","nth","nth","on_region","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","phantom","phantom","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder_bytes","remainder_iter","remainder_len","remainder_len","remainder_len","remainder_len","remainder_len","remainder_len","remainder_len","remaining","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","set","set_bit","set_bit_unchecked","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","slots","start","state","stream_safe","stream_safe","to_ne_bytes","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_arrow","try_into_arrow","try_into_arrow","try_into_arrow","try_into_arrow","try_into_arrow","try_into_arrow","try_into_arrow","try_into_arrow_as_type","try_into_arrow_as_type","try_into_arrow_as_type","try_into_arrow_as_type","try_into_arrow_as_type","try_into_arrow_as_type","try_into_arrow_as_type","try_into_arrow_as_type","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_optional","unwrap_required","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","upcast","validity","values","values","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Buffer","__clone_box","arrow_deserialize","arrow_serialize","arrow_serialize","as_slice","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","data","data_type","data_type","default","deref","deref","deref_mut","downcast","drop","eq","fmt","from","from","from_iter","get_mut","init","into","into_iter","into_vec","is_empty","len","length","lossless_try_into","lossy_into","new","new_array","new_array","offset","offset","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","shared_count_strong","shared_count_weak","slice","slice_unchecked","to_owned","try_from","try_into","try_into_arrow","try_into_arrow","try_into_arrow","try_into_arrow","try_into_arrow_as_type","try_into_arrow_as_type","try_into_arrow_as_type","try_into_arrow_as_type","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","Chunk","__clone_box","arrays","arrays","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","columns","deref","deref","deref_mut","downcast","drop","eq","equivalent","equivalent","flatten","fmt","from","init","into","into_arrays","is_empty","len","lossless_try_into","lossy_into","new","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","to_owned","try_from","try_into","try_new","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","aggregate","arithmetics","arity","arity_assign","boolean","boolean_kleene","cast","comparison","concatenate","filter","if_then_else","take","MAX","MIN","SimdOrd","Sum","can_max","can_min","can_sum","estimated_bytes_size","max","max_binary","max_boolean","max_element","max_lane","max_primitive","max_string","min","min_binary","min_boolean","min_element","min_lane","min_primitive","min_string","new_max","new_min","simd_sum","sum","sum_primitive","ArrayAdd","ArrayCheckedAdd","ArrayCheckedDiv","ArrayCheckedMul","ArrayCheckedRem","ArrayCheckedSub","ArrayDiv","ArrayMul","ArrayOverflowingAdd","ArrayOverflowingMul","ArrayOverflowingSub","ArrayRem","ArraySaturatingAdd","ArraySaturatingMul","ArraySaturatingSub","ArraySub","ArrayWrappingAdd","ArrayWrappingMul","ArrayWrappingSub","add","add","add_scalar","basic","can_add","can_div","can_mul","can_neg","can_rem","can_sub","checked_add","checked_div","checked_mul","checked_rem","checked_sub","decimal","div","div","div_scalar","mul","mul","mul_scalar","neg","overflowing_add","overflowing_mul","overflowing_sub","rem","rem","saturating_add","saturating_mul","saturating_sub","sub","sub","sub_scalar","time","wrapping_add","wrapping_mul","wrapping_sub","NativeArithmetics","add","add_scalar","checked_add","checked_add_scalar","checked_div","checked_div_scalar","checked_mul","checked_mul_scalar","checked_negate","checked_powf_scalar","checked_rem","checked_rem_scalar","checked_sub","checked_sub_scalar","div","div_scalar","mul","mul_scalar","negate","overflowing_add","overflowing_add_scalar","overflowing_mul","overflowing_mul_scalar","overflowing_sub","overflowing_sub_scalar","powf_scalar","rem","rem_scalar","saturating_add","saturating_add_scalar","saturating_mul","saturating_mul_scalar","saturating_sub","saturating_sub_scalar","sub","sub_scalar","wrapping_add","wrapping_add_scalar","wrapping_mul","wrapping_mul_scalar","wrapping_negate","wrapping_sub","wrapping_sub_scalar","adaptive_add","adaptive_div","adaptive_mul","adaptive_sub","add","checked_add","checked_div","checked_mul","checked_sub","div","div_scalar","mul","mul_scalar","saturating_add","saturating_div","saturating_mul","saturating_sub","sub","add_duration","add_duration_scalar","add_interval","add_interval_scalar","sub_duration_scalar","sub_timestamps_scalar","subtract_duration","subtract_timestamps","binary","binary_checked","binary_with_bitmap","try_binary","try_unary","unary","unary_checked","unary_with_bitmap","binary","unary","all","and","and_scalar","any","is_not_null","is_null","not","or","or_scalar","all","and","and_scalar","any","or","or_scalar","CastOptions","__clone_box","az","binary_large_to_binary","binary_to_dictionary","binary_to_large_binary","binary_to_large_utf8","binary_to_primitive","binary_to_utf8","boolean_to_binary","boolean_to_primitive","boolean_to_utf8","borrow","borrow_mut","can_cast_types","cast","cast_from","checked_as","checked_cast_from","clone","clone_into","date32_to_date64","date64_to_date32","days_ms_to_months_days_ns","decimal_to_decimal","decimal_to_float","decimal_to_integer","default","deref","deref_mut","dictionary_to_dictionary_keys","dictionary_to_dictionary_values","dictionary_to_values","downcast","drop","f16_to_f32","float_to_decimal","fmt","from","init","integer_to_decimal","into","lossless_try_into","lossy_into","months_to_months_days_ns","naive_timestamp_to_utf8","overflowing_as","overflowing_cast_from","partial","partial_binary_to_primitive","partial_utf8_to_primitive","primitive_as_primitive","primitive_to_binary","primitive_to_boolean","primitive_to_dictionary","primitive_to_primitive","primitive_to_same_primitive","primitive_to_utf8","saturating_as","saturating_cast_from","time32_to_time64","time32ms_to_time32s","time32s_to_time32ms","time64_to_time32","time64ns_to_time64us","time64us_to_time64ns","timestamp_to_date32","timestamp_to_date64","timestamp_to_timestamp","timestamp_to_utf8","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","utf8_large_to_utf8","utf8_to_binary","utf8_to_date32","utf8_to_date64","utf8_to_dictionary","utf8_to_large_utf8","utf8_to_naive_timestamp_ns","utf8_to_primitive","utf8_to_timestamp_ns","vzip","wrapped","wrapping_as","wrapping_cast_from","wrapping_dictionary_to_dictionary_keys","wrapping_dictionary_to_dictionary_values","Simd","Simd8","Simd8Lanes","Simd8PartialEq","Simd8PartialOrd","binary","boolean","can_eq","can_eq_scalar","can_gt","can_gt_eq","can_gt_eq_scalar","can_gt_scalar","can_lt","can_lt_eq","can_lt_eq_scalar","can_lt_scalar","can_neq","can_neq_scalar","eq","eq","eq_and_validity","eq_scalar","eq_scalar_and_validity","finish_eq_validities","finish_neq_validities","from_chunk","from_incomplete_chunk","gt","gt","gt_eq","gt_eq","gt_eq_scalar","gt_scalar","lt","lt","lt_eq","lt_eq","lt_eq_scalar","lt_scalar","neq","neq","neq_and_validity","neq_scalar","neq_scalar_and_validity","primitive","utf8","eq","eq_and_validity","eq_scalar","eq_scalar_and_validity","gt","gt_eq","gt_eq_scalar","gt_scalar","lt","lt_eq","lt_eq_scalar","lt_scalar","neq","neq_and_validity","neq_scalar","neq_scalar_and_validity","compare_op_scalar","eq","eq_and_validity","eq_scalar","eq_scalar_and_validity","gt","gt_eq","gt_eq_scalar","gt_scalar","lt","lt_eq","lt_eq_scalar","lt_scalar","neq","neq_and_validity","neq_scalar","neq_scalar_and_validity","compare_op_scalar","eq","eq_and_validity","eq_scalar","eq_scalar_and_validity","gt","gt_eq","gt_eq_scalar","gt_scalar","lt","lt_eq","lt_eq_scalar","lt_scalar","neq","neq_and_validity","neq_scalar","neq_scalar_and_validity","eq","eq_and_validity","eq_scalar","eq_scalar_and_validity","gt","gt_eq","gt_eq_scalar","gt_scalar","lt","lt_eq","lt_eq_scalar","lt_scalar","neq","neq_and_validity","neq_scalar","neq_scalar_and_validity","concatenate","Filter","build_filter","filter","filter_chunk","if_then_else","can_take","take","Binary","Binary","Boolean","Boolean","DataType","Date32","Date64","DayTime","DaysMs","Decimal","Decimal256","Dense","Dictionary","Dictionary","Duration","Extension","Field","FixedSizeBinary","FixedSizeBinary","FixedSizeList","FixedSizeList","Float16","Float16","Float32","Float32","Float64","Float64","Int128","Int16","Int16","Int16","Int256","Int32","Int32","Int32","Int64","Int64","Int64","Int8","Int8","Int8","IntegerType","Interval","IntervalUnit","LargeBinary","LargeBinary","LargeList","LargeList","LargeUtf8","LargeUtf8","List","List","Map","Map","Metadata","Microsecond","Millisecond","MonthDayNano","MonthDayNano","Nanosecond","Null","Null","PhysicalType","Primitive","PrimitiveType","Schema","SchemaRef","Second","Sparse","Struct","Struct","Time32","Time64","TimeUnit","Timestamp","UInt16","UInt16","UInt16","UInt32","UInt32","UInt32","UInt64","UInt64","UInt64","UInt8","UInt8","UInt8","Union","Union","UnionMode","Utf8","Utf8","YearMonth","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","az","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data_type","data_type","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_primitive","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fields","filter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","get_extension","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash","hash","hash","index_of","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","is_dense","is_nullable","is_sparse","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","metadata","metadata","name","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","sparse","to_logical_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_metadata","with_metadata","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Error","External","ExternalFormat","InvalidArgumentError","Io","NotYetImplemented","OutOfSpec","Overflow","Result","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","downcast","drop","fmt","fmt","from","from","from","from","from","from","from","from","from_external_error","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","provide","saturating_as","saturating_cast_from","to_string","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","ArrowArray","ArrowArrayStream","ArrowArrayStreamReader","ArrowSchema","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffers","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","children","children","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dictionary","dictionary","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","empty","empty","empty","export_array_to_c","export_field_to_c","export_iterator","field","field","flags","fmt","fmt","fmt","format","from","from","from","from","get_last_error","get_next","get_schema","import_array_from_c","import_field_from_c","init","init","init","init","into","into","into","into","iter","length","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","metadata","mmap","n_buffers","n_children","n_children","name","next","null_count","offset","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","private_data","private_data","private_data","release","release","release","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_new","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","slice","ipc","print","IpcField","IpcSchema","__clone_box","__clone_box","append","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","deref_mut","dictionary_id","downcast","downcast","drop","drop","eq","eq","fields","fields","fmt","fmt","from","from","init","init","into","into","is_little_endian","lossless_try_into","lossless_try_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","read","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","write","Dictionaries","ExpectedBuffer","FileMetadata","FileReader","InvalidBitmap","InvalidBuffer","InvalidBuffersLength","InvalidFlatbufferBlock","InvalidFlatbufferBodyLength","InvalidFlatbufferBuffers","InvalidFlatbufferCompression","InvalidFlatbufferData","InvalidFlatbufferDictionaries","InvalidFlatbufferFooter","InvalidFlatbufferHeader","InvalidFlatbufferId","InvalidFlatbufferIsDelta","InvalidFlatbufferMessage","InvalidFlatbufferNodes","InvalidFlatbufferRecordBatches","InvalidFlatbufferSchema","InvalidFlatbufferVersion","InvalidFooter","InvalidHeader","InvalidId","InvalidIdDataType","MissingData","MissingFields","MissingMessageBuffers","MissingMessageHeader","MissingMessageNodes","MissingRecordBatches","MissingSchema","NegativeFooterLength","OutOfSpecKind","Some","StreamMetadata","StreamReader","StreamState","UnexpectedMessageType","UnexpectedNegativeInteger","Waiting","__clone_box","__clone_box","az","az","az","az","az","az","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","current_block","data_buffer","data_scratch","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize_schema","dictionaries","dictionaries","dictionaries","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","finished","fmt","fmt","fmt","from","from","from","from","from","from","get_scratches","init","init","init","init","init","init","into","into","into","into","into","into","into_inner","into_iter","into_iter","ipc_schema","ipc_schema","is_finished","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","message_buffer","message_scratch","metadata","metadata","metadata","metadata","new","new","next","next","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","projection","projection","read_batch","read_file_dictionaries","read_file_metadata","read_stream_metadata","reader","reader","remaining","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","schema","schema","schema","schema","scratch","set_scratches","size","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unwrap","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","version","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","buffer_length","buffers_size","file_size","length","length","number_of_bits","requested_id","requested_id","required_number_of_bytes","type_name","Compression","FileWriter","LZ4","Record","StreamWriter","WriteOptions","ZSTD","__clone_box","__clone_box","__clone_box","az","az","az","az","az","block_offsets","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","columns","columns","compression","default","default_ipc_fields","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dictionary_blocks","dictionary_tracker","dictionary_tracker","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","encoded_message","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fields","fields","finish","finish","finished","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_hash","get_hash","get_scratches","hash","hash","init","init","init","init","init","into","into","into","into","into","into_inner","into_inner","ipc_fields","ipc_fields","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","new","new","options","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","record_blocks","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","schema","schema_to_bytes","set_scratches","start","start","state","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from_file","try_into","try_into","try_into","try_into","try_into","try_new","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","write","write","write","write_options","writer","writer","write","mmap_dictionaries_unchecked","mmap_unchecked","IS_LARGE","Offset","Offsets","OffsetsBuffer","__clone_box","__clone_box","as_slice","as_slice","az","az","borrow","borrow","borrow_mut","borrow_mut","buffer","capacity","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","eq","equivalent","equivalent","extend_constant","fmt","fmt","from","from","from","from","from","get_mut","init","init","into","into","into_inner","into_inner","last","last","len","len","len_proxy","lengths","lossless_try_into","lossless_try_into","lossy_into","lossy_into","new","new","new_unchecked","new_unchecked","new_zeroed","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","pop","reserve","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","shrink_to_fit","slice_unchecked","start_end","start_end","start_end_unchecked","start_end_unchecked","to_owned","to_owned","try_extend_from_lengths","try_extend_from_self","try_extend_from_slice","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_iter","try_from_lengths","try_into","try_into","try_push","try_push_usize","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","with_capacity","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","BinaryScalar","BooleanScalar","DictionaryScalar","FixedSizeBinaryScalar","FixedSizeListScalar","ListScalar","NullScalar","PrimitiveScalar","Scalar","StructScalar","UnionScalar","Utf8Scalar","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","az","az","az","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","new","new","new","new","new","new","new","new","new","new","new","new_scalar","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","phantom","phantom","phantom","phantom","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","value","value","value","value","value","value","value","value","value","value","value","value","value","value","values","values","values","values","values","values","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","EPOCH_DAYS_FROM_CE","MICROSECONDS","MILLISECONDS","MILLISECONDS_IN_DAY","NANOSECONDS","SECONDS_IN_DAY","add_interval","add_naive_interval","date32_to_date","date32_to_datetime","date64_to_date","date64_to_datetime","parse_offset","time32ms_to_time","time32s_to_time","time64ns_to_time","time64us_to_time","timestamp_ms_to_datetime","timestamp_ns_to_datetime","timestamp_s_to_datetime","timestamp_to_datetime","timestamp_to_naive_datetime","timestamp_us_to_datetime","timeunit_scale","utf8_to_naive_timestamp_ns","utf8_to_naive_timestamp_ns_scalar","utf8_to_timestamp_ns","utf8_to_timestamp_ns_scalar","TrustedLen","BitChunk","BitChunkIter","BitChunkOnes","Bytes","DaysMs","EPSILON","Float16","Float32","Float64","IS_LARGE","Index","IndexRange","Int128","Int16","Int256","Int32","Int64","Int8","MonthDayNano","NativeType","Offset","PRIMITIVE","PrimitiveType","UInt16","UInt32","UInt64","UInt8","__clone_box","__clone_box","__clone_box","__clone_box","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","cjk_compat_variants","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","days","days","days_ms","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","end","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","f16","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_as_usize","from_be_bytes","from_be_bytes","from_be_bytes","from_be_bytes","from_be_bytes","from_bits","from_f32","from_le_bytes","from_le_bytes","from_le_bytes","from_le_bytes","from_le_bytes","from_ne_bytes","from_usize","from_words","get_hash","get_hash","get_hash","hash","hash","hash","i256","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_vec","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","mask","milliseconds","months","months_days_ns","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","neg","neg","neg","new","new","new","new","new","next","next","next","nfc","nfd","nfkc","nfkd","ns","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","range","remaining","remaining","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","simd","size_hint","size_hint","size_hint","start","stream_safe","to_be_bytes","to_be_bytes","to_be_bytes","to_be_bytes","to_be_bytes","to_bits","to_f32","to_le_bytes","to_le_bytes","to_le_bytes","to_le_bytes","to_le_bytes","to_ne_bytes","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_usize","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_arrow","try_into_arrow","try_into_arrow","try_into_arrow","try_into_arrow_as_type","try_into_arrow_as_type","try_into_arrow_as_type","try_into_arrow_as_type","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","upcast","value","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Chunk","FromMaskChunk","LANES","Mask","Native","NativeSimd","Simd","Simd","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","align","align","align","align","align","align","align","align","align","align","align","align","align","align","align","align","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","days_msx8","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","f16x32","f32x16","f64x8","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_chunk","from_chunk","from_chunk","from_chunk","from_chunk","from_chunk","from_chunk","from_chunk","from_chunk","from_chunk","from_chunk","from_chunk","from_chunk","from_chunk","from_chunk","from_chunk","from_chunk","from_incomplete_chunk","from_incomplete_chunk","from_incomplete_chunk","from_incomplete_chunk","from_incomplete_chunk","from_incomplete_chunk","from_incomplete_chunk","from_incomplete_chunk","from_incomplete_chunk","from_incomplete_chunk","from_incomplete_chunk","from_incomplete_chunk","from_incomplete_chunk","from_incomplete_chunk","from_incomplete_chunk","from_incomplete_chunk","i128x8","i16x32","i256x8","i32x16","i64x8","i8x64","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_lane","max_lane","max_lane","max_lane","max_lane","max_lane","max_lane","max_lane","max_lane","max_lane","max_lane","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_lane","min_lane","min_lane","min_lane","min_lane","min_lane","min_lane","min_lane","min_lane","min_lane","min_lane","months_days_nsx8","new_max","new_max","new_max","new_max","new_max","new_max","new_max","new_max","new_max","new_max","new_max","new_min","new_min","new_min","new_min","new_min","new_min","new_min","new_min","new_min","new_min","new_min","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","select","select","select","select","select","select","select","select","select","select","select","select","select","select","select","select","simd_sum","simd_sum","simd_sum","simd_sum","simd_sum","simd_sum","simd_sum","simd_sum","simd_sum","simd_sum","simd_sum","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u16x32","u32x16","u64x8","u8x64","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","lexical_to_bytes","lexical_to_bytes_mut","lexical_to_string","ArrowDeserialize","ArrowField","ArrowSerialize","arrow_enable_vec_for_type","deserialize","field","serialize","ArrayType","ArrowDeserialize","TryIntoCollection","arrow_array_deserialize_iterator","arrow_array_deserialize_iterator_as_type","arrow_deserialize","try_into_collection","try_into_collection_as_type","ArrowField","FixedSizeBinary","FixedSizeVec","I128","LargeBinary","LargeString","LargeVec","Type","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_enable_vec_for_type","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","d","d","data_type","data_type","data_type","data_type","data_type","data_type","data_type","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","init","init","init","init","init","init","into","into","into","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","new_array","new_array","new_array","new_array","new_array","new_array","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","ArrowSerialize","FlattenChunk","MutableArrayType","TryIntoArrow","arrow_serialize","arrow_serialize_to_mutable_array","flatten","new_array","try_into_arrow","try_into_arrow_as_type","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","Affine2","Affine3A","BVec2","BVec3","BVec3A","BVec4","BVec4A","DAffine2","DAffine3","DMat2","DMat3","DMat4","DQuat","DVec2","DVec3","DVec4","EulerRot","FALSE","FALSE","FALSE","FALSE","FALSE","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IVec2","IVec3","IVec4","Mat2","Mat3","Mat3A","Mat4","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_W","NEG_W","NEG_W","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Z","NEG_Z","NEG_Z","NEG_Z","NEG_Z","NEG_Z","NEG_Z","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","Quat","TRUE","TRUE","TRUE","TRUE","TRUE","UVec2","UVec3","UVec4","Vec2","Vec2","Vec2","Vec2Swizzles","Vec3","Vec3","Vec3","Vec3A","Vec3Swizzles","Vec4","Vec4","Vec4","Vec4Swizzles","W","W","W","W","X","X","X","X","X","X","X","X","X","X","X","X","X","XYZ","XZY","Y","Y","Y","Y","Y","Y","Y","Y","Y","Y","Y","Y","Y","YXZ","YZX","Z","Z","Z","Z","Z","Z","Z","Z","Z","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZXY","ZYX","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","abs","abs","abs","abs","abs","abs","abs","abs","abs","abs","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_mat2","add_mat2","add_mat3","add_mat3","add_mat3","add_mat4","add_mat4","all","all","all","all","all","angle","angle_between","angle_between","angle_between","angle_between","angle_between","angle_between","angle_between","any","any","any","any","any","any_orthogonal_vector","any_orthogonal_vector","any_orthogonal_vector","any_orthonormal_pair","any_orthonormal_pair","any_orthonormal_pair","any_orthonormal_vector","any_orthonormal_vector","any_orthonormal_vector","as_dmat2","as_dmat3","as_dmat3","as_dmat4","as_dvec2","as_dvec2","as_dvec2","as_dvec3","as_dvec3","as_dvec3","as_dvec3","as_dvec4","as_dvec4","as_dvec4","as_f32","as_f64","as_ivec2","as_ivec2","as_ivec2","as_ivec3","as_ivec3","as_ivec3","as_ivec3","as_ivec4","as_ivec4","as_ivec4","as_mat2","as_mat3","as_mat4","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_uvec2","as_uvec2","as_uvec2","as_uvec3","as_uvec3","as_uvec3","as_uvec3","as_uvec4","as_uvec4","as_uvec4","as_vec2","as_vec2","as_vec2","as_vec3","as_vec3","as_vec3","as_vec3a","as_vec3a","as_vec3a","as_vec4","as_vec4","as_vec4","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","back","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitmask","bitmask","bitmask","bitmask","bitmask","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bool","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","ceil","ceil","ceil","ceil","ceil","ceil","ceil","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp_length","clamp_length","clamp_length","clamp_length","clamp_length","clamp_length","clamp_length","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_min","clamp_length_min","clamp_length_min","clamp_length_min","clamp_length_min","clamp_length_min","clamp_length_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","col","col","col","col","col","col","col","col_mut","col_mut","col_mut","col_mut","col_mut","col_mut","col_mut","conjugate","conjugate","cross","cross","cross","cross","cross","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","determinant","determinant","determinant","determinant","determinant","determinant","determinant","distance","distance","distance","distance","distance","distance","distance","distance_squared","distance_squared","distance_squared","distance_squared","distance_squared","distance_squared","distance_squared","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","dmat2","dmat3","dmat4","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","down","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dquat","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dvec2","dvec3","dvec4","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exp","exp","exp","exp","exp","exp","exp","extend","extend","extend","extend","extend","extend","extend","extend","extend","f32","f64","floor","floor","floor","floor","floor","floor","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward","fract","fract","fract","fract","fract","fract","fract","fract","fract","fract","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_affine3","from_affine3","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle_translation","from_angle_translation","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_diagonal","from_diagonal","from_diagonal","from_diagonal","from_diagonal","from_diagonal","from_diagonal","from_euler","from_euler","from_euler","from_euler","from_euler","from_euler","from_euler","from_mat2","from_mat2","from_mat2","from_mat2","from_mat2","from_mat2_translation","from_mat2_translation","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3_translation","from_mat3_translation","from_mat3a","from_mat3a","from_mat3a","from_mat3a","from_mat4","from_mat4","from_mat4","from_mat4","from_mat4","from_mat4","from_mat4","from_quat","from_quat","from_quat","from_quat","from_quat","from_quat","from_quat","from_rotation_arc","from_rotation_arc","from_rotation_arc_2d","from_rotation_arc_2d","from_rotation_arc_colinear","from_rotation_arc_colinear","from_rotation_translation","from_rotation_translation","from_rotation_translation","from_rotation_translation","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale_angle","from_scale_angle","from_scale_angle_translation","from_scale_angle_translation","from_scale_angle_translation","from_scale_angle_translation","from_scale_angle_translation","from_scale_rotation_translation","from_scale_rotation_translation","from_scale_rotation_translation","from_scale_rotation_translation","from_scaled_axis","from_scaled_axis","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_translation","from_translation","from_translation","from_translation","from_translation","from_translation","from_translation","from_translation","from_translation","from_vec4","from_vec4","from_xyzw","from_xyzw","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","has_equal_components","has_equal_components","has_equal_components","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","i32","index","index","index","index","index","index","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan_mask","is_nan_mask","is_nan_mask","is_nan_mask","is_nan_mask","is_nan_mask","is_nan_mask","is_near_identity","is_near_identity","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_normalized","is_normalized","is_normalized","is_normalized","is_normalized","is_normalized","is_normalized","is_normalized","is_normalized","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","ivec2","ivec3","ivec4","left","length","length","length","length","length","length","length","length","length","length_recip","length_recip","length_recip","length_recip","length_recip","length_recip","length_recip","length_recip","length_recip","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","lerp","lerp","lerp","lerp","lerp","lerp","lerp","lerp","lerp","ln","look_at_lh","look_at_lh","look_at_lh","look_at_lh","look_at_rh","look_at_rh","look_at_rh","look_at_rh","look_to_lh","look_to_lh","look_to_lh","look_to_lh","look_to_rh","look_to_rh","look_to_rh","look_to_rh","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","mat2","mat3","mat3a","mat4","matrix2","matrix2","matrix3","matrix3","max","max","max","max","max","max","max","max","max","max","max","max","max","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","mean","mean","mean","min","min","min","min","min","min","min","min","min","min","min","min","min","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_add","mul_add","mul_add","mul_add","mul_add","mul_add","mul_add","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_mat2","mul_mat2","mul_mat3","mul_mat3","mul_mat3","mul_mat4","mul_mat4","mul_quat","mul_quat","mul_scalar","mul_scalar","mul_scalar","mul_scalar","mul_scalar","mul_scalar","mul_scalar","mul_vec2","mul_vec2","mul_vec3","mul_vec3","mul_vec3","mul_vec3","mul_vec3","mul_vec3a","mul_vec3a","mul_vec3a","mul_vec4","mul_vec4","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","normalize","normalize","normalize","normalize","normalize","normalize","normalize","normalize","normalize","normalize_or_zero","normalize_or_zero","normalize_or_zero","normalize_or_zero","normalize_or_zero","normalize_or_zero","normalize_or_zero","not","not","not","not","not","not","not","not","not","not","not","orthographic_lh","orthographic_lh","orthographic_rh","orthographic_rh","orthographic_rh_gl","orthographic_rh_gl","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","perp","perp","perp","perp_dot","perp_dot","perp_dot","perspective_infinite_lh","perspective_infinite_lh","perspective_infinite_reverse_lh","perspective_infinite_reverse_lh","perspective_infinite_reverse_rh","perspective_infinite_reverse_rh","perspective_infinite_rh","perspective_infinite_rh","perspective_lh","perspective_lh","perspective_rh","perspective_rh","perspective_rh_gl","perspective_rh_gl","powf","powf","powf","powf","powf","powf","powf","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","project_onto","project_onto","project_onto","project_onto","project_onto","project_onto","project_onto","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_point3","project_point3","quat","recip","recip","recip","recip","recip","recip","recip","reflect","reject_from","reject_from","reject_from","reject_from","reject_from","reject_from","reject_from","reject_from_normalized","reject_from_normalized","reject_from_normalized","reject_from_normalized","reject_from_normalized","reject_from_normalized","reject_from_normalized","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","right","rotate","rotate","rotate","rotate_negative_z_towards","rotate_positive_z_towards","round","round","round","round","round","round","round","row","row","row","row","row","row","row","saturate","saturate","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","select","select","select","select","select","select","select","select","select","select","select","select","select","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","signum","signum","signum","signum","signum","signum","signum","signum","signum","signum","slerp","slerp","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","sqrt","sqrt","step","step","step","step_select","step_select","step_select","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_mat2","sub_mat2","sub_mat3","sub_mat3","sub_mat3","sub_mat4","sub_mat4","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","swizzles","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_axis_angle","to_axis_angle","to_bits","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_euler","to_euler","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_scale_rotation_translation","to_scale_rotation_translation","to_scale_rotation_translation","to_scale_rotation_translation","to_scaled_axis","to_scaled_axis","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","transform_point2","transform_point2","transform_point2","transform_point2","transform_point2","transform_point3","transform_point3","transform_point3","transform_point3","transform_point3a","transform_point3a","transform_vector2","transform_vector2","transform_vector2","transform_vector2","transform_vector2","transform_vector3","transform_vector3","transform_vector3","transform_vector3","transform_vector3a","transform_vector3a","translation","translation","translation","translation","transpose","transpose","transpose","transpose","transpose","transpose","transpose","trunc","trunc","trunc","truncate","truncate","truncate","truncate","truncate","truncate","truncate","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_normalize","try_normalize","try_normalize","try_normalize","try_normalize","try_normalize","try_normalize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u32","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","up","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","uvec2","uvec3","uvec4","vec2","vec3","vec3a","vec4","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","w","w","w","w","w","w_axis","w_axis","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","ww","ww","ww","ww","ww","www","www","www","www","www","wwww","wwww","wwww","wwww","wwww","wwwx","wwwx","wwwx","wwwx","wwwx","wwwy","wwwy","wwwy","wwwy","wwwy","wwwz","wwwz","wwwz","wwwz","wwwz","wwx","wwx","wwx","wwx","wwx","wwxw","wwxw","wwxw","wwxw","wwxw","wwxx","wwxx","wwxx","wwxx","wwxx","wwxy","wwxy","wwxy","wwxy","wwxy","wwxz","wwxz","wwxz","wwxz","wwxz","wwy","wwy","wwy","wwy","wwy","wwyw","wwyw","wwyw","wwyw","wwyw","wwyx","wwyx","wwyx","wwyx","wwyx","wwyy","wwyy","wwyy","wwyy","wwyy","wwyz","wwyz","wwyz","wwyz","wwyz","wwz","wwz","wwz","wwz","wwz","wwzw","wwzw","wwzw","wwzw","wwzw","wwzx","wwzx","wwzx","wwzx","wwzx","wwzy","wwzy","wwzy","wwzy","wwzy","wwzz","wwzz","wwzz","wwzz","wwzz","wx","wx","wx","wx","wx","wxw","wxw","wxw","wxw","wxw","wxww","wxww","wxww","wxww","wxww","wxwx","wxwx","wxwx","wxwx","wxwx","wxwy","wxwy","wxwy","wxwy","wxwy","wxwz","wxwz","wxwz","wxwz","wxwz","wxx","wxx","wxx","wxx","wxx","wxxw","wxxw","wxxw","wxxw","wxxw","wxxx","wxxx","wxxx","wxxx","wxxx","wxxy","wxxy","wxxy","wxxy","wxxy","wxxz","wxxz","wxxz","wxxz","wxxz","wxy","wxy","wxy","wxy","wxy","wxyw","wxyw","wxyw","wxyw","wxyw","wxyx","wxyx","wxyx","wxyx","wxyx","wxyy","wxyy","wxyy","wxyy","wxyy","wxyz","wxyz","wxyz","wxyz","wxyz","wxz","wxz","wxz","wxz","wxz","wxzw","wxzw","wxzw","wxzw","wxzw","wxzx","wxzx","wxzx","wxzx","wxzx","wxzy","wxzy","wxzy","wxzy","wxzy","wxzz","wxzz","wxzz","wxzz","wxzz","wy","wy","wy","wy","wy","wyw","wyw","wyw","wyw","wyw","wyww","wyww","wyww","wyww","wyww","wywx","wywx","wywx","wywx","wywx","wywy","wywy","wywy","wywy","wywy","wywz","wywz","wywz","wywz","wywz","wyx","wyx","wyx","wyx","wyx","wyxw","wyxw","wyxw","wyxw","wyxw","wyxx","wyxx","wyxx","wyxx","wyxx","wyxy","wyxy","wyxy","wyxy","wyxy","wyxz","wyxz","wyxz","wyxz","wyxz","wyy","wyy","wyy","wyy","wyy","wyyw","wyyw","wyyw","wyyw","wyyw","wyyx","wyyx","wyyx","wyyx","wyyx","wyyy","wyyy","wyyy","wyyy","wyyy","wyyz","wyyz","wyyz","wyyz","wyyz","wyz","wyz","wyz","wyz","wyz","wyzw","wyzw","wyzw","wyzw","wyzw","wyzx","wyzx","wyzx","wyzx","wyzx","wyzy","wyzy","wyzy","wyzy","wyzy","wyzz","wyzz","wyzz","wyzz","wyzz","wz","wz","wz","wz","wz","wzw","wzw","wzw","wzw","wzw","wzww","wzww","wzww","wzww","wzww","wzwx","wzwx","wzwx","wzwx","wzwx","wzwy","wzwy","wzwy","wzwy","wzwy","wzwz","wzwz","wzwz","wzwz","wzwz","wzx","wzx","wzx","wzx","wzx","wzxw","wzxw","wzxw","wzxw","wzxw","wzxx","wzxx","wzxx","wzxx","wzxx","wzxy","wzxy","wzxy","wzxy","wzxy","wzxz","wzxz","wzxz","wzxz","wzxz","wzy","wzy","wzy","wzy","wzy","wzyw","wzyw","wzyw","wzyw","wzyw","wzyx","wzyx","wzyx","wzyx","wzyx","wzyy","wzyy","wzyy","wzyy","wzyy","wzyz","wzyz","wzyz","wzyz","wzyz","wzz","wzz","wzz","wzz","wzz","wzzw","wzzw","wzzw","wzzw","wzzw","wzzx","wzzx","wzzx","wzzx","wzzx","wzzy","wzzy","wzzy","wzzy","wzzy","wzzz","wzzz","wzzz","wzzz","wzzz","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x_axis","x_axis","x_axis","x_axis","x_axis","x_axis","xw","xw","xw","xw","xw","xww","xww","xww","xww","xww","xwww","xwww","xwww","xwww","xwww","xwwx","xwwx","xwwx","xwwx","xwwx","xwwy","xwwy","xwwy","xwwy","xwwy","xwwz","xwwz","xwwz","xwwz","xwwz","xwx","xwx","xwx","xwx","xwx","xwxw","xwxw","xwxw","xwxw","xwxw","xwxx","xwxx","xwxx","xwxx","xwxx","xwxy","xwxy","xwxy","xwxy","xwxy","xwxz","xwxz","xwxz","xwxz","xwxz","xwy","xwy","xwy","xwy","xwy","xwyw","xwyw","xwyw","xwyw","xwyw","xwyx","xwyx","xwyx","xwyx","xwyx","xwyy","xwyy","xwyy","xwyy","xwyy","xwyz","xwyz","xwyz","xwyz","xwyz","xwz","xwz","xwz","xwz","xwz","xwzw","xwzw","xwzw","xwzw","xwzw","xwzx","xwzx","xwzx","xwzx","xwzx","xwzy","xwzy","xwzy","xwzy","xwzy","xwzz","xwzz","xwzz","xwzz","xwzz","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xxw","xxw","xxw","xxw","xxw","xxww","xxww","xxww","xxww","xxww","xxwx","xxwx","xxwx","xxwx","xxwx","xxwy","xxwy","xxwy","xxwy","xxwy","xxwz","xxwz","xxwz","xxwz","xxwz","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxxw","xxxw","xxxw","xxxw","xxxw","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxyw","xxyw","xxyw","xxyw","xxyw","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxz","xxz","xxz","xxz","xxz","xxz","xxz","xxz","xxz","xxz","xxz","xxzw","xxzw","xxzw","xxzw","xxzw","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xyw","xyw","xyw","xyw","xyw","xyww","xyww","xyww","xyww","xyww","xywx","xywx","xywx","xywx","xywx","xywy","xywy","xywy","xywy","xywy","xywz","xywz","xywz","xywz","xywz","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyxw","xyxw","xyxw","xyxw","xyxw","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyyw","xyyw","xyyw","xyyw","xyyw","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyzw","xyzw","xyzw","xyzw","xyzw","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xz","xz","xz","xz","xz","xz","xz","xz","xz","xz","xz","xzw","xzw","xzw","xzw","xzw","xzww","xzww","xzww","xzww","xzww","xzwx","xzwx","xzwx","xzwx","xzwx","xzwy","xzwy","xzwy","xzwy","xzwy","xzwz","xzwz","xzwz","xzwz","xzwz","xzx","xzx","xzx","xzx","xzx","xzx","xzx","xzx","xzx","xzx","xzx","xzxw","xzxw","xzxw","xzxw","xzxw","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzy","xzy","xzy","xzy","xzy","xzy","xzy","xzy","xzy","xzy","xzy","xzyw","xzyw","xzyw","xzyw","xzyw","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzz","xzz","xzz","xzz","xzz","xzz","xzz","xzz","xzz","xzz","xzz","xzzw","xzzw","xzzw","xzzw","xzzw","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y_axis","y_axis","y_axis","y_axis","y_axis","y_axis","yw","yw","yw","yw","yw","yww","yww","yww","yww","yww","ywww","ywww","ywww","ywww","ywww","ywwx","ywwx","ywwx","ywwx","ywwx","ywwy","ywwy","ywwy","ywwy","ywwy","ywwz","ywwz","ywwz","ywwz","ywwz","ywx","ywx","ywx","ywx","ywx","ywxw","ywxw","ywxw","ywxw","ywxw","ywxx","ywxx","ywxx","ywxx","ywxx","ywxy","ywxy","ywxy","ywxy","ywxy","ywxz","ywxz","ywxz","ywxz","ywxz","ywy","ywy","ywy","ywy","ywy","ywyw","ywyw","ywyw","ywyw","ywyw","ywyx","ywyx","ywyx","ywyx","ywyx","ywyy","ywyy","ywyy","ywyy","ywyy","ywyz","ywyz","ywyz","ywyz","ywyz","ywz","ywz","ywz","ywz","ywz","ywzw","ywzw","ywzw","ywzw","ywzw","ywzx","ywzx","ywzx","ywzx","ywzx","ywzy","ywzy","ywzy","ywzy","ywzy","ywzz","ywzz","ywzz","ywzz","ywzz","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yxw","yxw","yxw","yxw","yxw","yxww","yxww","yxww","yxww","yxww","yxwx","yxwx","yxwx","yxwx","yxwx","yxwy","yxwy","yxwy","yxwy","yxwy","yxwz","yxwz","yxwz","yxwz","yxwz","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxxw","yxxw","yxxw","yxxw","yxxw","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxyw","yxyw","yxyw","yxyw","yxyw","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxz","yxz","yxz","yxz","yxz","yxz","yxz","yxz","yxz","yxz","yxz","yxzw","yxzw","yxzw","yxzw","yxzw","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yyw","yyw","yyw","yyw","yyw","yyww","yyww","yyww","yyww","yyww","yywx","yywx","yywx","yywx","yywx","yywy","yywy","yywy","yywy","yywy","yywz","yywz","yywz","yywz","yywz","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyxw","yyxw","yyxw","yyxw","yyxw","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyyw","yyyw","yyyw","yyyw","yyyw","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyz","yyz","yyz","yyz","yyz","yyz","yyz","yyz","yyz","yyz","yyz","yyzw","yyzw","yyzw","yyzw","yyzw","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yz","yz","yz","yz","yz","yz","yz","yz","yz","yz","yz","yzw","yzw","yzw","yzw","yzw","yzww","yzww","yzww","yzww","yzww","yzwx","yzwx","yzwx","yzwx","yzwx","yzwy","yzwy","yzwy","yzwy","yzwy","yzwz","yzwz","yzwz","yzwz","yzwz","yzx","yzx","yzx","yzx","yzx","yzx","yzx","yzx","yzx","yzx","yzx","yzxw","yzxw","yzxw","yzxw","yzxw","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzy","yzy","yzy","yzy","yzy","yzy","yzy","yzy","yzy","yzy","yzy","yzyw","yzyw","yzyw","yzyw","yzyw","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzz","yzz","yzz","yzz","yzz","yzz","yzz","yzz","yzz","yzz","yzz","yzzw","yzzw","yzzw","yzzw","yzzw","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","z","z","z","z","z","z","z","z","z","z","z_axis","z_axis","z_axis","z_axis","z_axis","zw","zw","zw","zw","zw","zww","zww","zww","zww","zww","zwww","zwww","zwww","zwww","zwww","zwwx","zwwx","zwwx","zwwx","zwwx","zwwy","zwwy","zwwy","zwwy","zwwy","zwwz","zwwz","zwwz","zwwz","zwwz","zwx","zwx","zwx","zwx","zwx","zwxw","zwxw","zwxw","zwxw","zwxw","zwxx","zwxx","zwxx","zwxx","zwxx","zwxy","zwxy","zwxy","zwxy","zwxy","zwxz","zwxz","zwxz","zwxz","zwxz","zwy","zwy","zwy","zwy","zwy","zwyw","zwyw","zwyw","zwyw","zwyw","zwyx","zwyx","zwyx","zwyx","zwyx","zwyy","zwyy","zwyy","zwyy","zwyy","zwyz","zwyz","zwyz","zwyz","zwyz","zwz","zwz","zwz","zwz","zwz","zwzw","zwzw","zwzw","zwzw","zwzw","zwzx","zwzx","zwzx","zwzx","zwzx","zwzy","zwzy","zwzy","zwzy","zwzy","zwzz","zwzz","zwzz","zwzz","zwzz","zx","zx","zx","zx","zx","zx","zx","zx","zx","zx","zx","zxw","zxw","zxw","zxw","zxw","zxww","zxww","zxww","zxww","zxww","zxwx","zxwx","zxwx","zxwx","zxwx","zxwy","zxwy","zxwy","zxwy","zxwy","zxwz","zxwz","zxwz","zxwz","zxwz","zxx","zxx","zxx","zxx","zxx","zxx","zxx","zxx","zxx","zxx","zxx","zxxw","zxxw","zxxw","zxxw","zxxw","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxy","zxy","zxy","zxy","zxy","zxy","zxy","zxy","zxy","zxy","zxy","zxyw","zxyw","zxyw","zxyw","zxyw","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxz","zxz","zxz","zxz","zxz","zxz","zxz","zxz","zxz","zxz","zxz","zxzw","zxzw","zxzw","zxzw","zxzw","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zy","zy","zy","zy","zy","zy","zy","zy","zy","zy","zy","zyw","zyw","zyw","zyw","zyw","zyww","zyww","zyww","zyww","zyww","zywx","zywx","zywx","zywx","zywx","zywy","zywy","zywy","zywy","zywy","zywz","zywz","zywz","zywz","zywz","zyx","zyx","zyx","zyx","zyx","zyx","zyx","zyx","zyx","zyx","zyx","zyxw","zyxw","zyxw","zyxw","zyxw","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyy","zyy","zyy","zyy","zyy","zyy","zyy","zyy","zyy","zyy","zyy","zyyw","zyyw","zyyw","zyyw","zyyw","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyz","zyz","zyz","zyz","zyz","zyz","zyz","zyz","zyz","zyz","zyz","zyzw","zyzw","zyzw","zyzw","zyzw","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zz","zz","zz","zz","zz","zz","zz","zz","zz","zz","zz","zzw","zzw","zzw","zzw","zzw","zzww","zzww","zzww","zzww","zzww","zzwx","zzwx","zzwx","zzwx","zzwx","zzwy","zzwy","zzwy","zzwy","zzwy","zzwz","zzwz","zzwz","zzwz","zzwz","zzx","zzx","zzx","zzx","zzx","zzx","zzx","zzx","zzx","zzx","zzx","zzxw","zzxw","zzxw","zzxw","zzxw","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzy","zzy","zzy","zzy","zzy","zzy","zzy","zzy","zzy","zzy","zzy","zzyw","zzyw","zzyw","zzyw","zzyw","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzz","zzz","zzz","zzz","zzz","zzz","zzz","zzz","zzz","zzz","zzz","zzzw","zzzw","zzzw","zzzw","zzzw","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","BVec2","BVec3","BVec3A","BVec4","BVec4A","w","x","x","x","y","y","y","z","z","Affine2","Affine3A","Mat2","Mat3","Mat3A","Mat4","Quat","Vec2","Vec3","Vec3A","Vec4","mat2","mat3","mat3a","mat4","matrix2","matrix3","quat","translation","translation","vec2","vec3","vec3a","vec4","w_axis","x","x","x_axis","x_axis","x_axis","y","y","y_axis","y_axis","y_axis","z","z_axis","z_axis","z_axis","DAffine2","DAffine3","DMat2","DMat3","DMat4","DQuat","DVec2","DVec3","DVec4","dmat2","dmat3","dmat4","dquat","dvec2","dvec3","dvec4","matrix2","matrix3","translation","translation","w","w","w_axis","x","x","x","x","x_axis","x_axis","x_axis","y","y","y","y","y_axis","y_axis","y_axis","z","z","z","z_axis","z_axis","IVec2","IVec3","IVec4","ivec2","ivec3","ivec4","w","x","x","x","y","y","y","z","z","Vec2","Vec2","Vec2Swizzles","Vec3","Vec3","Vec3Swizzles","Vec4","Vec4","Vec4Swizzles","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxz","xxxz","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyz","xxyz","xxz","xxz","xxzw","xxzx","xxzx","xxzy","xxzy","xxzz","xxzz","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxz","xyxz","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyz","xyyz","xyz","xyz","xyzw","xyzx","xyzx","xyzy","xyzy","xyzz","xyzz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzxw","xzxx","xzxx","xzxy","xzxy","xzxz","xzxz","xzy","xzy","xzyw","xzyx","xzyx","xzyy","xzyy","xzyz","xzyz","xzz","xzz","xzzw","xzzx","xzzx","xzzy","xzzy","xzzz","xzzz","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxz","yxxz","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyz","yxyz","yxz","yxz","yxzw","yxzx","yxzx","yxzy","yxzy","yxzz","yxzz","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxz","yyxz","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyz","yyyz","yyz","yyz","yyzw","yyzx","yyzx","yyzy","yyzy","yyzz","yyzz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzxw","yzxx","yzxx","yzxy","yzxy","yzxz","yzxz","yzy","yzy","yzyw","yzyx","yzyx","yzyy","yzyy","yzyz","yzyz","yzz","yzz","yzzw","yzzx","yzzx","yzzy","yzzy","yzzz","yzzz","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxxw","zxxx","zxxx","zxxy","zxxy","zxxz","zxxz","zxy","zxy","zxyw","zxyx","zxyx","zxyy","zxyy","zxyz","zxyz","zxz","zxz","zxzw","zxzx","zxzx","zxzy","zxzy","zxzz","zxzz","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyxw","zyxx","zyxx","zyxy","zyxy","zyxz","zyxz","zyy","zyy","zyyw","zyyx","zyyx","zyyy","zyyy","zyyz","zyyz","zyz","zyz","zyzw","zyzx","zyzx","zyzy","zyzy","zyzz","zyzz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzxw","zzxx","zzxx","zzxy","zzxy","zzxz","zzxz","zzy","zzy","zzyw","zzyx","zzyx","zzyy","zzyy","zzyz","zzyz","zzz","zzz","zzzw","zzzx","zzzx","zzzy","zzzy","zzzz","zzzz","UVec2","UVec3","UVec4","uvec2","uvec3","uvec4","w","x","x","x","y","y","y","z","z","A8","AnimationDecoder","Avif","Bgr8","Bgra8","Bmp","CHANNEL_COUNT","COLOR_MODEL","COLOR_TYPE","ColorType","DEFAULT_MAX_VALUE","DEFAULT_MIN_VALUE","Dds","Decoding","Delay","DynamicImage","EncodableLayout","Encoding","ExtendedColorType","Farbfeld","FlatSamples","Frame","Frames","GenericImage","GenericImageView","Gif","GrayAlphaImage","GrayImage","Hdr","Ico","ImageBuffer","ImageDecoder","ImageDecoderRect","ImageEncoder","ImageError","ImageFormat","ImageLuma16","ImageLuma8","ImageLumaA16","ImageLumaA8","ImageOutputFormat","ImageResult","ImageRgb16","ImageRgb32F","ImageRgb8","ImageRgba16","ImageRgba32F","ImageRgba8","IoError","Jpeg","Jpeg","L1","L16","L16","L2","L4","L8","L8","La1","La16","La16","La2","La4","La8","La8","Limits","Luma","LumaA","OpenExr","Parameter","Pixel","Pixel","PixelWithColorType","Pixels","Png","Png","Pnm","Primitive","Progress","Reader","Rgb","Rgb1","Rgb16","Rgb16","Rgb2","Rgb32F","Rgb32F","Rgb32FImage","Rgb4","Rgb8","Rgb8","RgbImage","Rgba","Rgba1","Rgba16","Rgba16","Rgba2","Rgba32F","Rgba32F","Rgba32FImage","Rgba4","Rgba8","Rgba8","RgbaImage","SubImage","Subpixel","Tga","Tiff","Unknown","Unsupported","Unsupported","WebP","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_phantom","adjust_contrast","apply","apply","apply","apply","apply","apply2","apply2","apply2","apply2","apply2","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_without_alpha","as_bytes","as_bytes","as_flat_samples","as_flat_samples_f32","as_flat_samples_mut","as_flat_samples_u16","as_flat_samples_u8","as_luma16","as_luma8","as_luma_alpha16","as_luma_alpha8","as_mut","as_mut_luma16","as_mut_luma8","as_mut_luma_alpha16","as_mut_luma_alpha8","as_mut_rgb16","as_mut_rgb32f","as_mut_rgb8","as_mut_rgba16","as_mut_rgba32f","as_mut_rgba8","as_mut_slice","as_raw","as_ref","as_rgb16","as_rgb32f","as_rgb8","as_rgba16","as_rgba32f","as_rgba8","as_slice","as_view","as_view_mut","as_view_with_mut_samples","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","bits_per_pixel","blend","blend","blend","blend","blend","blend_pixel","blend_pixel","blend_pixel","blur","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","bounds","bounds","brighten","buffer","buffer","buffer","buffer_mut","bytes_per_pixel","can_read","can_write","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","change_bounds","channel_count","channel_count","channels","channels","channels","channels","channels","channels4","channels4","channels4","channels4","channels4","channels_mut","channels_mut","channels_mut","channels_mut","channels_mut","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","codecs","collect_frames","color","color_hint","color_type","convert","copy_from","copy_within","copy_within","crop","crop_imm","current","current","data","default","default","delay","delay","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","dimensions","dimensions","dimensions","dimensions","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enumerate_pixels","enumerate_pixels_mut","enumerate_rows","enumerate_rows_mut","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","expand_palette","extensions_str","extents","filter3x3","fits","flat","fliph","flipv","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_channels","from_channels","from_channels","from_channels","from_channels","from_decoder","from_extension","from_fn","from_mime_type","from_numer_denom_ms","from_parts","from_path","from_pixel","from_raw","from_saturating_duration","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_mut","from_slice_mut","from_slice_mut","from_slice_mut","from_slice_mut","from_vec","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_mut_sample","get_pixel","get_pixel","get_pixel","get_pixel","get_pixel_checked","get_pixel_mut","get_pixel_mut","get_pixel_mut","get_pixel_mut","get_pixel_mut_checked","get_sample","grayscale","guess_format","has_aliased_samples","has_alpha","has_color","hash","hash","hash","hash","hash","hash","hash","hash","height","height","height","height","height","huerotate","image","image_dimensions","image_mut_slice","image_slice","imageops","in_bounds","in_bounds","in_bounds_index","index","index","index","index","index","index","index","index_ignoring_bounds","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner","inner_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_buffer","into_bytes","into_flat_samples","into_frames","into_iter","into_iter","into_luma16","into_luma8","into_luma_alpha16","into_luma_alpha8","into_raw","into_reader","into_rgb16","into_rgb32f","into_rgb8","into_rgba16","into_rgba32f","into_rgba8","into_vec","invert","invert","invert","invert","invert","invert","io","is_normal","iterator","layout","left","left","load","load_from_memory","load_from_memory_with_format","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","map","map","map","map","map","map2","map2","map2","map2","map2","map_with_alpha","map_with_alpha","map_with_alpha","map_with_alpha","map_with_alpha","map_without_alpha","math","min_length","multiunzip","new","new","new","new","new_luma16","new_luma8","new_luma_a16","new_luma_a8","new_rgb16","new_rgb32f","new_rgb8","new_rgba16","new_rgba32f","new_rgba8","next","next","numer_denom_ms","open","original_color_type","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","pixels","pixels","pixels_mut","provide","put_pixel","put_pixel","put_pixel","put_pixel","ratio","read_image","read_image_with_progress","read_rect","read_rect_with_progress","remaining","resize","resize_exact","resize_to_fill","rotate180","rotate270","rotate90","rows","rows_mut","sample_layout","samples","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","save","save","save_buffer","save_buffer_with_format","save_with_format","save_with_format","scanline_bytes","set_limits","shrink_to","source","strides_cwh","sub_image","sub_image","thumbnail","thumbnail_exact","to_bytes","to_image","to_luma","to_luma","to_luma","to_luma","to_luma","to_luma16","to_luma32f","to_luma8","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha16","to_luma_alpha32f","to_luma_alpha8","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_rgb","to_rgb","to_rgb","to_rgb","to_rgb","to_rgb16","to_rgb32f","to_rgb8","to_rgba","to_rgba","to_rgba","to_rgba","to_rgba","to_rgba16","to_rgba32f","to_rgba8","to_string","to_vec","top","top","total","total","total_bytes","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_buffer","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsafe_get_pixel","unsafe_get_pixel","unsafe_put_pixel","unsafe_put_pixel","unsharpen","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","view","view","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","width","width","width","width","with_monocolor","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","write_buffer_with_format","write_image","write_to","write_to","x","y","ConvertBuffer","EnumeratePixels","EnumeratePixelsMut","EnumerateRows","EnumerateRowsMut","Pixels","PixelsMut","Rows","RowsMut","__clone_box","__clone_box","__clone_box","__clone_box","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","chunks","chunks","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","convert","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_vec","into_vec","len","len","len","len","len","len","len","len","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","multiunzip","multiunzip","multiunzip","multiunzip","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","pixels","pixels","pixels","pixels","rows","rows","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_arrow","try_into_arrow","try_into_arrow","try_into_arrow","try_into_arrow_as_type","try_into_arrow_as_type","try_into_arrow_as_type","try_into_arrow_as_type","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","width","width","width","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","x","x","y","y","y","y","jpeg","png","Centimeters","Inches","JpegDecoder","JpegEncoder","PixelAspectRatio","PixelDensity","PixelDensityUnit","__clone_box","__clone_box","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","chroma_actable","chroma_dctable","clone","clone","clone_into","clone_into","color_type","components","decoder","default","density","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","downcast","downcast","downcast","downcast","dpi","drop","drop","drop","drop","encode","encode_image","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","into_reader","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","luma_actable","luma_dctable","metadata","new","new","new_with_quality","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","pixel_density","read_image","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","scale","set_pixel_density","tables","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unit","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","write_image","writer","Adaptive","ApngDecoder","Avg","Best","CompressionType","Default","Fast","FilterType","Huffman","NoFilter","Paeth","PngDecoder","PngEncoder","PngReader","Rle","Sub","Up","__clone_box","__clone_box","apng","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","color_type","color_type","compression","current","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","dispose","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","encode","eq","eq","equivalent","equivalent","equivalent","equivalent","filter","fmt","fmt","from","from","from","from","from","from","has_thumbnail","index","init","init","init","init","init","init","inner","into","into","into","into","into","into","into_frames","into_reader","is_apng","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","new","new","new_with_quality","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","previous","read","read_exact_buf","read_image","read_to_end","reader","reader","remaining","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","scanline_bytes","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","w","with_limits","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","write_image","Color","Decoding","DecodingError","DimensionError","DimensionMismatch","Encoding","EncodingError","Exact","FailedAlready","Format","Generic","GenericFeature","ImageError","ImageFormatHint","ImageResult","InsufficientMemory","IoError","LimitError","LimitErrorKind","Limits","Name","NoMoreData","Parameter","ParameterError","ParameterErrorKind","PathExtension","Unknown","Unsupported","Unsupported","UnsupportedError","UnsupportedErrorKind","__clone_box","__clone_box","__clone_box","__clone_box","az","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","format","format_hint","format_hint","format_hint","from","from","from","from","from","from","from","from","from","from","from","from","from_format_and_kind","from_format_hint","from_format_hint","from_kind","from_kind","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","kind","kind","kind","kind","kind","kind","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","provide","provide","provide","provide","provide","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","source","source","source","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying","underlying","underlying","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","limits","supported","ColumnMajorPacked","Error","FlatSamples","ImagePacked","NormalForm","NormalFormRequired","PixelPacked","RowMajorPacked","SampleLayout","TooLarge","Unaliased","View","ViewMut","WrongColor","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","az","az","az","az","az","blend_pixel","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","bounds","cast_from","cast_from","cast_from","cast_from","cast_from","channel_stride","channels","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","color_hint","column_major_packed","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","dimensions","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extents","fits","flat","flat","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_hash","get_hash","get_hash","get_mut_sample","get_mut_sample","get_pixel","get_pixel","get_pixel_mut","get_sample","get_sample","has_aliased_samples","hash","hash","hash","height","height_stride","image_mut_slice","image_mut_slice","image_slice","image_slice","in_bounds","in_bounds","in_bounds","in_bounds_index","index","index_ignoring_bounds","init","init","init","init","init","inner","inner","into","into","into","into","into","into_inner","into_inner","is_normal","layout","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","min_length","min_length","min_length","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","phantom","phantom","provide","put_pixel","row_major_packed","samples","samples","samples","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","shrink_to","shrink_to","shrink_to","strides_cwh","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_upgrade","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","width","width_stride","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","BiLevel","CatmullRom","Color","ColorMap","FilterType","Gaussian","Lanczos3","Nearest","Triangle","__clone_box","__clone_box","az","az","blur","borrow","borrow","borrow_mut","borrow_mut","brighten","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","colorops","contrast","crop","crop_imm","deref","deref","deref_mut","deref_mut","dither","downcast","downcast","drop","drop","eq","filter3x3","flip_horizontal","flip_horizontal_in","flip_horizontal_in_place","flip_vertical","flip_vertical_in","flip_vertical_in_place","fmt","from","from","grayscale","grayscale_alpha","grayscale_with_type","grayscale_with_type_alpha","has_lookup","has_lookup","horizontal_gradient","huerotate","index_colors","index_of","index_of","init","init","into","into","invert","lookup","lookup","lossless_try_into","lossless_try_into","lossy_into","lossy_into","map_color","map_color","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overlay","overlay_bounds","replace","resize","rotate180","rotate180_in","rotate180_in_place","rotate270","rotate270_in","rotate90","rotate90_in","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","thumbnail","tile","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unsharpen","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vertical_gradient","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","BiLevel","Color","ColorMap","brighten","brighten_in_place","contrast","contrast_in_place","dither","grayscale","grayscale_alpha","grayscale_with_type","grayscale_with_type_alpha","has_lookup","huerotate","huerotate_in_place","index_colors","index_of","invert","lookup","map_color","LimitSupport","Limits","Reader","__clone_box","__clone_box","_non_exhaustive","_non_exhaustive","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","check_dimensions","check_support","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clear_format","clone","clone","clone_into","clone_into","decode","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","format","format","free","free_usize","from","from","from","get_hash","get_hash","hash","hash","init","init","init","inner","into","into","into","into_dimensions","into_inner","limits","limits","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","max_alloc","max_image_height","max_image_width","new","no_limits","no_limits","open","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","reserve","reserve_usize","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","set_format","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","vzip","vzip","vzip","with_format","with_guessed_format","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Rect","__clone_box","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","deref","deref_mut","downcast","drop","eq","equivalent","equivalent","fmt","from","get_hash","hash","height","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","width","wrapping_as","wrapping_cast_from","x","y","HASH_RANDOM_STATE","Hash128","Hash64","ZERO","__clone_box","__clone_box","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","first64","fmt","fmt","from","from","get_hash","get_hash","hash","hash","hash","hash","hash64","hash64","init","init","into","into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","second64","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","ArrowSerializationError","BadComponentValues","Component","ComponentBundle","DeserializableComponent","MissingComponentsField","MissingEntityPath","MissingTimelinesField","MsgBundle","MsgBundleError","MultipleTimepoints","NoRowsInTimeline","PathParseError","Result","SerializableComponent","Unreachable","__clone_box","__clone_box","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","components","data_type","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","entity_path","extract_timelines","field","find_component","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","init","init","init","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","msg_id","name","name","name","new","new","new_empty","new_from_boxed","num_components","num_instances","num_instances","num_rows","num_rows","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","provide","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","source","time_point","to_owned","to_owned","to_string","to_string","try_append_component","try_build_msg_bundle1","try_build_msg_bundle2","try_build_msg_bundle3","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","value","value_boxed","value_list","vzip","vzip","vzip","wrap_in_listarray","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","BadEscape","ComponentName","ComponentPath","DoubleSlash","EmptyString","EntityPath","EntityPathHash","EntityPathImpl","EntityPathPart","Index","InvalidSequence","LeadingSlash","MissingSlash","Name","PathParseError","UnterminatedString","component_name","entity_path","entity_path","entity_path_vec","hash","parse_entity_path","parts","path","details","Sequence","Time","TimeInt","TimePoint","TimeType","Timeline","TimelineName","name","typ","AccountingAllocator","CountAndSize","MemoryHistory","MemoryLimit","MemoryUse","ZERO","__clone_box","__clone_box","__clone_box","accounting_allocator","add","alloc","alloc_zeroed","allocator","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capture","capture","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","count","counted","counted","counted_gpu","counted_store","dealloc","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","get_hash","hash","init","init","init","init","init","into","into","into","into","into","is_empty","is_exceeded_by","limit","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","parse","realloc","resident","resident","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","size","sub","sub","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","util","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","AccountingAllocator","TrackingStatistics","allocator","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","downcast","drop","from","fully_tracked","global_allocs","init","into","is_tracking_callstacks","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","overhead","saturating_as","saturating_cast_from","set_tracking_callstacks","stochastically_tracked","top_callstacks","track_size_threshold","tracking_stats","try_from","try_into","turn_on_tracking_if_env_var","type_id","untracked","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","sec_since_start","Client","DEFAULT_SERVER_PORT","PROTOCOL_VERSION","Result","ServerOptions","__clone_box","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone_into","decode_log_msg","default","default","default_server_addr","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","drop","drop_if_disconnected","drop_join","drop_quit_tx","encode_join","encode_log_msg","encode_quit_tx","eq","flush","flushed_rx","fmt","from","from","init","init","into","into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","max_latency_sec","msg_tx","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","quiet","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","send","send_join","send_quit_tx","serve","set_addr","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","App","AppEnvironment","Profiler","PythonSdk","RemoteViewerApp","RerunCli","RustSdk","StartupOptions","Web","__clone_box","__clone_box","analytics","app","app_env","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_info","build_info","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clear_color","clear_color","clone","clone","clone_into","clone_into","cmd_palette","component_ui_registry","ctrl_c","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","env_vars","eq","equivalent","equivalent","external","fmt","frame_time_history","from","from","from","from","from","from_receiver","icon_status","init","init","init","init","init","into","into","into","into","into","latest_memory_purge","latest_queue_interest","log_dbs","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","math","memory_limit","memory_panel","memory_panel_open","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","pending_commands","pending_promises","poll_promise","promise_exists","re_ui","re_ui","run_native_app","run_native_viewer_with_messages","rx","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","save","save","server","set_profiler","set_profiler","spawn_threaded_promise","start","startup_options","startup_options","state","to_owned","to_owned","toasts","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","update","update","url","vzip","vzip","vzip","vzip","vzip","wake_up_ui_thread_on_each_msg","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","rust_version","rust_version","RERUN_TRACK_ALLOCATIONS","APP_KEY","App","AppCreator","BestFirst","CompatibilityFirst","CreationContext","Dark","Error","EventLoopBuilder","EventLoopBuilderHook","Frame","HardwareAcceleration","IconData","IntegrationInfo","Light","NativeOptions","Off","Preferred","Renderer","RequestRepaint","Required","Result","Storage","Theme","UserEvent","WebGl1","WebGl2","WebGlContextOption","Wgpu","Wgpu","WindowInfo","Winit","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_p","always_on_top","auto_save_interval","az","az","az","az","az","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","centered","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clear_color","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","cpu_usage","decorated","default","default","default","default_theme","depth_buffer","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drag_and_drop_support","drag_window","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","egui_ctx","egui_visuals","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","event_loop_builder","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","follow_system_theme","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","fullscreen","fullscreen","get_hash","get_hash","get_hash","get_string","get_value","hardware_acceleration","hash","hash","hash","height","icon_data","info","info","init","init","init","init","init","init","init","init","init","init","init","init","init","initial_window_pos","initial_window_size","integration_info","into","into","into","into","into","into","into","into","into","into","into","into","into","is_web","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","max_size_points","max_window_size","maximized","maximized","min_window_size","minimized","monitor_size","mouse_passthrough","multisampling","native_pixels_per_point","new","on_close_event","on_exit","output","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","persist_egui_memory","persist_native_window","platform_specific","position","post_rendering","provide","quit","renderer","resizable","rgba","run_and_return","run_native","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","save","serialize","serialize","serialize","set_always_on_top","set_centered","set_decorations","set_fullscreen","set_maximized","set_minimized","set_string","set_value","set_visible","set_window_pos","set_window_size","set_window_title","size","source","stencil_buffer","storage","storage","storage","storage_mut","system_theme","system_theme","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","transparent","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","vsync","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","warm_up_enabled","wgpu_options","wgpu_render_state","wgpu_render_state","wgpu_render_state","width","window_info","with_any_thread","with_any_thread","with_user_event","with_wayland","with_x11","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","A","ALL","ALT","ALT_SHIFT","Above","AboveOrBelow","Alias","Align","Align2","AllScroll","Area","ArrowDown","ArrowLeft","ArrowRight","ArrowUp","B","BOTTOM","Background","Backspace","Below","Body","BottomUp","Button","Button","Button","C","CENTER_BOTTOM","CENTER_CENTER","CENTER_TOP","COMMAND","CTRL","Callback","Cancel","Cell","Center","CentralPanel","Checkbox","Checkbox","Circle","ClippedPrimitive","CollapsingHeader","CollapsingHeader","CollapsingResponse","Color","Color32","ColorButton","ColorImage","ComboBox","ComboBox","CompositionEnd","CompositionStart","CompositionUpdate","Context","ContextMenu","Copy","Copy","Crosshair","CubicBezier","CursorIcon","Cut","D","DOWN","Debug","Default","Default","Delete","Direction","DragValue","DragValue","DroppedFile","E","EVERYTHING","End","End","Enter","Escape","Event","Extra1","Extra2","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F3","F4","F5","F6","F7","F8","F9","Font","FontData","FontDefinitions","FontFamily","FontId","FontId","FontImage","FontSelection","FontTweak","Foreground","Frame","FullOutput","G","Galley","Galley","Grab","Grabbing","Grid","H","Heading","Help","Home","Horizontal","HoveredFile","Hyperlink","I","INFINITY","IconPainter","Id","IdMap","Image","ImageButton","ImageButton","ImageData","InnerResponse","InputState","Insert","J","K","Key","Key","KeyboardShortcut","L","LEFT","LEFT","LEFT_BOTTOM","LEFT_CENTER","LEFT_TOP","LINEAR","Label","Label","LayerId","Layout","LayoutJob","LeftToRight","LineSegment","Linear","Link","Link","M","MAC_CMD","Managed","Margin","Max","Memory","Mesh","Mesh","Middle","Middle","Min","Minus","ModifierNames","Modifiers","Monospace","Monospace","Move","Move","MultiTouchInfo","N","NAMES","NAN","NEAREST","NONE","NONE","NOTHING","NUM_POINTER_BUTTONS","Name","Name","Nearest","NoDrop","None","Noop","NotAllowed","Num0","Num1","Num2","Num3","Num4","Num5","Num6","Num7","Num8","Num9","NumExt","O","Options","Order","Other","P","PageDown","PageUp","PaintCallback","PaintCallbackInfo","Painter","PanelResizeLine","Paste","Path","PlatformOutput","PlusEquals","PointerButton","PointerButton","PointerGone","PointerMoved","PointerState","PointingHand","Pos2","Primary","Progress","ProgressBar","Proportional","Q","QuadraticBezier","R","RIGHT","RIGHT","RIGHT_BOTTOM","RIGHT_CENTER","RIGHT_TOP","RadioButton","RadioButton","RawInput","Rect","Rect","Resize","ResizeColumn","ResizeEast","ResizeHorizontal","ResizeNeSw","ResizeNorth","ResizeNorthEast","ResizeNorthWest","ResizeNwSe","ResizeRow","ResizeSouth","ResizeSouthEast","ResizeSouthWest","ResizeVertical","ResizeWest","Response","Rgba","RichText","RichText","RightToLeft","Rounding","S","SHIFT","SYMBOLS","Scroll","ScrollArea","Secondary","SelectableLabel","SelectableLabel","Sense","Separator","Shape","SidePanel","Slider","Slider","SliderOrientation","Small","Space","Spinner","Start","State","Stroke","Style","Style","T","TOP","TOP","Tab","Text","Text","Text","TextBuffer","TextEdit","TextEdit","TextFormat","TextStyle","TextureFilter","TextureHandle","TextureId","TextureOptions","TexturesDelta","Tooltip","TopBottomPanel","TopDown","Touch","TouchDeviceId","TouchId","TouchPhase","U","UP","Ui","User","V","Vec","Vec2","Vertical","VerticalText","Visuals","W","Wait","Widget","WidgetInfo","WidgetText","WidgetType","WidgetWithState","Window","X","X","Y","Y","Z","ZERO","ZERO","Zoom","ZoomIn","ZoomOut","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__run_test_ctx","__run_test_ui","abs","add","add","add","add","add","add_assign","add_assign","add_colored_rect","add_enabled","add_enabled_ui","add_rect_with_uv","add_sized","add_space","add_triangle","add_visible","add_visible_ui","aim_radius","align","align_size_within_range","align_size_within_rect","align_size_within_rect","allocate_at_least","allocate_exact_size","allocate_painter","allocate_rect","allocate_response","allocate_space","allocate_ui","allocate_ui_at_rect","allocate_ui_with_layout","allow_interaction","allow_interaction","alt","alt","always_show_scroll","always_show_scroll","anchor","anchor","anchor","anchor_rect","angle","angled","animate","animate","animate_bool","animate_bool_with_time","animate_value_with_time","animation_time","any","any_click","any_down","any_nan","any_nan","any_nan","any_popup_open","any_pressed","any_released","any_touches","append","append","append","append","append","append_ref","area","area","areas","arrow","as_str","aspect_ratio","aspect_ratio","at_least","at_least","at_least","at_least","at_most","at_most","at_most","at_most","auto_id_with","auto_shrink","auto_shrink","auto_sized","auto_sized","available_height","available_rect","available_rect_before_wrap","available_size","available_size_before_wrap","available_width","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","background","background","background_color","background_color","background_color","begin","begin_frame","begin_frame","bg_fill","bg_fill","binary","binary","bitor","bitor","bitor_assign","body_response","body_returned","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","both","bottom","bottom","bottom","bottom_mut","bottom_up","bottom_up_range","button","button_clicked","button_double_clicked","button_down","button_frame","button_pressed","button_released","button_triple_clicked","byte_index_from_char_index","bytes","bytes_per_pixel","bytes_used","caches","calc_bounds","callback","canvas","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","ceil","ceil","center","center_bottom","center_top","centered","centered_and_justified","centered_and_justified","central_panel","changed","char_range","check_for_id_clash","checkbox","checked","checked","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","child_ui","child_ui_with_id_source","circle","circle_filled","circle_filled","circle_stroke","circle_stroke","clamp","clamp","clamp","clamp_range","clamp_range","clamp_to_range","clamp_to_range","clear","clear","clear","clear_animations","click","click","click_and_drag","clicked","clicked_by","clicked_elsewhere","clip_rect","clip_rect","clip_rect","clip_rect","clip_rect","clip_rect_in_pixels","clip_rect_margin","clip_text","clip_text","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close_menu","close_popup","closed_line","cmp","cmp","cmp","cmp","cmp","cmp","cmp","code","code","code","code","code_bg_color","code_editor","code_editor","collapsible","collapsible","collapsing","collapsing_header_frame","color","color","color","color","color","color","color_edit_button_hsva","color_edit_button_rgb","color_edit_button_rgba_premultiplied","color_edit_button_rgba_unmultiplied","color_edit_button_srgb","color_edit_button_srgba","color_edit_button_srgba_premultiplied","color_edit_button_srgba_unmultiplied","colored_label","colored_vertex","columns","command","command_only","concat","constrain","constrain","constrain","consume_key","consume_shortcut","containers","contains","contains_rect","context_menu","convex_polygon","copied_text","count_and_consume_key","cross_align","cross_align","cross_justify","cross_justify","ctrl","ctrl","ctx","ctx","ctx","ctx","current_pos","current_pos","current_text_value","cursor","cursor_at_end","cursor_at_end","cursor_begin_of_row","cursor_down_one_row","cursor_end_of_row","cursor_from_pos","cursor_icon","cursor_left_one_character","cursor_right_one_character","cursor_up_one_row","custom_formatter","custom_formatter","custom_formatter","custom_formatter","custom_parser","custom_parser","custom_parser","custom_parser","dark","dark_canvas","dark_mode","dashed_line","dashed_line_many","data","data","data","data_mut","data_mut","debug","debug","debug_on_hover","debug_paint_cursor","debug_painter","debug_rect","debug_text","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_height","default_height","default_height","default_height","default_open","default_open","default_open","default_open","default_pos","default_pos","default_pos","default_rect","default_size","default_size","default_size","default_width","default_width","default_width","default_width","delete_char_range","delta","delta","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","desired_height_rows","desired_rows","desired_width","desired_width","desired_width","desired_width","distance","distance_sq","distance_sq_to_pos","distance_to_pos","div","div","dot","dotted_line","double_clicked","double_clicked_by","down","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drag","drag","drag_angle","drag_angle_tau","drag_bounds","drag_bounds","drag_bounds","drag_delta","drag_released","drag_released_by","drag_started","drag_started_by","drag_to_scroll","drag_to_scroll","drag_value","drag_value","drag_value_speed","drag_value_speed","drag_value_text_style","dragged","dragged_by","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dropped_files","egui_assert","egui_assert","empty","enable_scrolling","enabled","enabled","enabled","enabled","enabled","enabled","enabled","enabled","end","end_frame","end_rcursor","end_row","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","error_fg_color","events","events","events","events_description","everything_above","everything_below","everything_is_visible","everything_is_visible","everything_left_of","everything_right_of","exact_height","exact_width","example","expand","expand2","expand_to_include_rect","expand_to_include_x","expand_to_include_y","explanation_tooltips","extend","extend_with","extend_with_x","extend_with_y","extreme_bg_color","fade_out_to_color","fade_to_color","faint_bg_color","fallback_text_style","fallback_text_style","families","family","family","family","fill","fill","fill","fill","fill","fill","fixed_decimals","fixed_decimals","fixed_pos","fixed_pos","fixed_rect","fixed_size","fixed_size","floor","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus","focusable","focusable_noninteractive","font","font","font","font_data","font_height","font_id","font_selection","fonts","fonts","fonts","fonts_mut","force","format","format","format_shortcut","frame","frame","frame","frame","frame","frame","frame","frame","frame","frame","frame","frame","frame","frame","free","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ccursor","from_center_size","from_get_set","from_get_set","from_id_source","from_label","from_label_and_url","from_main_dir_and_cross_align","from_min_max","from_min_size","from_owned","from_pcursor","from_points","from_rcursor","from_rgb","from_rgba_unmultiplied","from_static","from_two_pos","from_x_y_ranges","fully_closed","fully_open","gained_focus","galley","galley","galley_with_color","galley_with_color","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_set_value","get_set_value","github_link_file","github_link_file","github_link_file_line","github_link_file_line","global_dark_light_mode_buttons","global_dark_light_mode_switch","gray_out","group","group","grow","grow","gui_zoom","has_bar","has_focus","has_focus","has_focus","has_lock_focus","has_moved_too_much_for_a_click","has_pointer","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","header_response","heading","heading","heading","height","height","height","height","height_range","height_range","hexadecimal","hexadecimal","highlight","highlight_widget","hint_text","hint_text","hline","hline","horizontal","horizontal","horizontal","horizontal_align","horizontal_align","horizontal_centered","horizontal_justify","horizontal_placement","horizontal_scroll_offset","horizontal_top","horizontal_wrapped","hover","hover_pos","hover_pos","hovered","hovered_files","hscroll","hscroll","hyperlink","hyperlink_color","hyperlink_to","icon","icon","icon","icon","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id_source","id_source","id_source","id_source","id_source","id_source","id_source","id_source","id_source","id_source","image","image","image","image","image","image_and_text","indent","indent_has_left_vline","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","indices","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_margin","inner_margin","input","input","input_mut","input_mut","insert_text","inspection_ui","integer","interact","interact","interact","interact_pointer_pos","interact_pos","interact_pos","interact_selectable","interact_with_hovered","interactable","interactable","interactable","interaction","interaction","interactive","interactive","interactive","interested_in_focus","intersect","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_galley","into_text_job","introspection","is_anything_being_dragged","is_being_dragged","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_enabled","is_enabled","is_finite","is_finite","is_finite","is_horizontal","is_horizontal","is_horizontal_line","is_movable","is_moving","is_mutable","is_negative","is_none","is_pointer_button_down_on","is_pointer_over_area","is_popup_open","is_positive","is_rect_visible","is_resizable","is_same","is_same","is_short","is_still","is_tooltip_open","is_using_pointer","is_valid","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_vertical","is_vertical","is_visible","italics","italics","italics","italics","job","key","key_down","key_pressed","key_released","keys_down","label","label","label","labeled","labelled_by","largest_finite","last_click_time","last_last_click_time","last_modified","latest_pos","layer","layer_id","layer_id","layer_id","layer_id","layer_id_at","layer_id_at","layer_ids","layer_painter","layers","layout","layout","layout_in_ui","layout_no_wrap","layouter","layouter","left","left","left","left_bottom","left_center","left_mut","left_to_right","left_top","left_top","length","length_sq","lerp","lerp","light","light_dark_radio_buttons","light_dark_small_toggle_button","line","line_segment","line_segment","link","load_state","load_texture","lock_focus","lock_focus","lock_focus","logarithmic","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lost_focus","mac_cmd","mac_cmd","magnification","main_align","main_dir","main_dir","main_justify","main_wrap","main_wrap","make_persistent_id","margin","margin","margin","mark_changed","matches","max","max","max","max_cell_size","max_col_width","max_decimals","max_decimals","max_decimals","max_decimals","max_decimals_opt","max_elem","max_height","max_height","max_rect","max_size","max_size","max_size","max_texture_side","max_texture_side","max_width","max_width","memory","memory","memory_mut","memory_mut","memory_ui","menu","menu","menu_button","menu_image_button","menu_rounding","menu_state","mesh","mesh_bounds","middle_clicked","middle_down","mime","min","min","min","min_col_width","min_col_width","min_decimals","min_decimals","min_decimals","min_decimals","min_elem","min_height","min_height","min_height","min_rect","min_row_height","min_row_height","min_scrolled_height","min_scrolled_size","min_scrolled_width","min_size","min_size","min_size","min_size","min_size","min_size","min_size","min_width","min_width","min_width","minification","modifiers","modifiers","modifiers","monospace","monospace","monospace","monospace","movable","movable","movable","move_to_top","mul","mul","mul_assign","multi_touch","multi_touch","multiline","multiline","multiply_with_opacity","mutable_text_under_cursor","mutate","name","name","name","ne","neg","neither","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_font_definitions","new_pixels_per_point","new_pos","next_auto_id","next_auto_id_source","next_widget_position","none","none","none","noninteractive","noninteractive","normalized","null","num_columns","num_columns","num_indices","num_presses","num_touches","num_vertices","nw","octal","octal","offset_x","offset_y","on_disabled_hover_text","on_disabled_hover_ui","on_hover_and_drag_cursor","on_hover_cursor","on_hover_text","on_hover_text_at_pointer","on_hover_ui","on_hover_ui_at_pointer","open","open","open","open","open_popup","open_url","open_url","openness","options","options","options_mut","order","order","order","orientation","orientation","os","os","outer_margin","outer_margin","output","output","output","output_event","output_mut","output_mut","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","override_font_id","override_text_color","override_text_style","paint","paint_at","painter","painter","painter_at","panel_fill","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","password","password","path","path","physical_pixel_size","pivot","pivot","pivot","pixels","pixels","pixels_per_point","pixels_per_point","pixels_per_point","pixels_per_point","pixels_per_point","pixels_per_point","placer","platform_output","plus","pointer","pointer_events","pointer_hover_pos","pointer_interact_pos","pointer_latest_pos","popup","popup","popup_above_or_below_widget","popup_below_widget","popup_shadow","pos2","pos_from_cursor","pos_from_pcursor","pos_history","pos_in_rect","predicted_dt","predicted_dt","prefer_right_to_left","prefix","prefix","prefix","prefix","preload_font_glyphs","press_origin","press_origin","press_start_time","press_start_time","prev_text_value","primary_clicked","primary_down","primary_pressed","primary_released","primitive","progress","proportional","push_id","put","radio","radio_value","raised","raised","raised","range","raw","rect","rect","rect","rect","rect_contains_pointer","rect_filled","rect_filled","rect_stroke","rect_stroke","region","remap","remap_clamp","repaint_after","replace","request_focus","request_focus","request_repaint","request_repaint_after","reserve_triangles","reserve_vertices","reset_areas","reset_button","reset_button_with","reset_style","resizable","resizable","resizable","resizable","resizable","resizable","resizable","resize","resize","resize_corner_size","resolve","resolve","response","right","right","right","right_bottom","right_bottom","right_center","right_mut","right_to_left","right_top","rot90","rotate","rotate","rotate_bb","rotation","rotation_delta","round","round","round_pos_to_pixels","round_to_pixel","round_vec_to_pixels","rounding","rounding","rounding","rounding","rows","run","same","same","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","scale","scope","screen_reader","screen_rect","screen_rect","screen_rect","screen_rect","screen_size_px","scroll","scroll2","scroll2","scroll_delta","scroll_offset","scroll_to_cursor","scroll_to_me","scroll_to_rect","scroll_with_delta","scrolling_enabled","se","secondary_clicked","secondary_clicked","secondary_down","secondary_pressed","secondary_released","selectable","selectable","selectable_label","selectable_value","selected","selected","selected","selected","selected","selected","selected","selected_text","selected_text","selection","sense","sense","sense","sense","sense","sense","sense","sense","sense","separator","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","set","set","set_bottom","set_center","set_clip_rect","set_clip_rect","set_cursor_icon","set_debug_on_hover","set_dragged_id","set_enabled","set_everything_is_visible","set_fonts","set_height","set_height","set_height_range","set_layer_id","set_left","set_max_height","set_max_size","set_max_width","set_min_height","set_min_size","set_min_width","set_os","set_partial","set_pixels_per_point","set_request_repaint_callback","set_right","set_row_height","set_style","set_style","set_top","set_visible","set_visuals","set_width","set_width","set_width_range","settings_ui","shadow","shadow","shapes","shift","shift","shift_only","short_debug_format","short_debug_format","short_debug_format","shortcut_text","shortcut_text","show","show","show","show","show","show","show","show","show","show","show","show_animated","show_animated","show_animated_between","show_animated_between","show_animated_between_inside","show_animated_between_inside","show_animated_inside","show_animated_inside","show_background","show_background","show_index","show_inside","show_inside","show_inside","show_open_close_animation","show_percentage","show_rows","show_separator_line","show_separator_line","show_separator_line","show_separator_line","show_tooltip","show_tooltip_at","show_tooltip_at_pointer","show_tooltip_for","show_tooltip_text","show_ui","show_unindented","show_value","show_value","show_viewport","shrink","shrink","shrink2","shrink_height_to_current","shrink_width_to_current","side","side","side_top_panel","signed_distance_to_pos","simple","singleline","size","size","size","size","size","size","size","size","size","size","size","size","size","size_vec2","skip_ahead_auto_ids","slider","slider_trailing_fill","small","small","small","small","small","small_button","small_raised","small_raised","smallest_positive","smart_aim","smart_aim","spacing","spacing","spacing","spacing","spacing","spacing","spacing_mut","spec","special_emojis","speed","speed","spinner","splat","split_to_u16","square_proportions","srgba_pixels","stable_dt","start_pos","start_row","start_row","start_time","step","step_by","stick_to_bottom","stick_to_end","stick_to_right","stop_text_input","store_state","strikethrough","strikethrough","strikethrough","strikethrough","striped","striped","striped","stroke","stroke","stroke","stroke","stroke_ui","strong","strong","strong","strong","strong_text_color","style","style","style","style","style","style_mut","style_ui","sub","sub","sub","sub_assign","sub_assign","sub_region","suffix","suffix","suffix","suffix","sum","surrender_focus","surrender_focus","sw","symbol_or_name","symmetric","take","take","take","tessellate","tessellation_options","tessellation_options","tessellation_options_mut","tex_manager","tex_mngr","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text","text_color","text_color","text_color","text_color","text_color","text_color_opt","text_cursor_pos","text_cursor_preview","text_cursor_width","text_edit","text_edit_multiline","text_edit_singleline","text_selection","text_selection_changed","text_style","text_style","text_style","text_style","text_style_height","text_styles","text_styles","texture_id","texture_id","texture_id","texture_ui","textures_delta","time","time","time","tint","tint","tint","title","title_bar","to_factor","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_pos2","to_sign","to_sign","to_string","to_string","to_vec2","toggle_popup","toggle_value","top","top","top","top_down","top_down_justified","top_mut","total_margin","touch_states","trace","trace","trace_location","trailing_fill","trailing_fill","translate","translate","translate","translate_layer","translation_delta","triple_clicked","triple_clicked","triple_clicked_by","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tweak","tweak","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ui","ui","ui","ui","ui","ui","ui","ui","ui","ui","ui","ui","ui","ui","ui","ui","ui","ui","ui","ui","ui","ui_contains_pointer","underline","underline","underline","underline","union","union","union","unstable_dt","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","url","used_rect","used_size","util","uv","uv","uv","valign","value","vec2","velocity","velocity","vertical","vertical","vertical","vertical","vertical_align","vertical_align","vertical_centered","vertical_centered_justified","vertical_justify","vertical_scroll_offset","vertices","viewport","viewport_in_pixels","visible","visual_bounding_rect","visuals","visuals","visuals_mut","vline","vline","vscroll","vscroll","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wants_keyboard_input","wants_pointer_input","wants_repaint","warn_fg_color","warn_if_debug_build","was_tooltip_open_last_frame","weak","weak","weak","weak","weak_text_color","widget_info","widget_text","widgets","widgets","width","width","width","width","width","width","width","width_range","width_range","window","window_fill","window_fill","window_interaction","window_rounding","window_shadow","window_stroke","window_stroke","with","with_accessibility_parent","with_clip_rect","with_cross_align","with_cross_justify","with_layer_id","with_layer_id","with_layout","with_main_align","with_main_justify","with_main_wrap","with_new_rect","with_stroke","with_stroke","with_texture","with_title_bar","without_text","wrap","wrap","wrap","wrap","wrap","wrap","wrap_enabled","wrap_text","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","x","x","x","x_range","y","y","y","y_offset","y_offset_factor","y_range","zoom_delta","zoom_delta","zoom_delta_2d","zoom_delta_2d","zoom_factor_delta","button","device_id","force","id","key","modifiers","modifiers","phase","pos","pos","pressed","pressed","repeat","points","stroke","Above","AboveOrBelow","Area","Below","CentralPanel","CollapsingHeader","CollapsingResponse","ComboBox","Frame","IconPainter","Resize","ScrollArea","SidePanel","TopBottomPanel","Window","always_show_scroll","anchor","area","auto_shrink","body_response","body_returned","collapsible","collapsing_header","constrain","default_height","default_open","default_open","default_pos","default_size","default_width","drag_bounds","drag_to_scroll","enabled","enabled","fill","frame","frame","frame","frame","has_bar","header_response","height_range","icon","icon","id","id","id","id","id_source","id_source","id_source","id_source","inner_margin","interactable","label","max_size","max_size","min_scrolled_size","min_size","movable","new_pos","offset_x","offset_y","open","open","openness","order","outer_margin","panel","pivot","popup","popup_above_or_below_widget","popup_below_widget","resizable","resizable","resizable","resize","rounding","scroll","scroll_area","scrolling_enabled","selectable","selected","selected_text","shadow","show_background","show_separator_line","show_separator_line","show_tooltip","show_tooltip_at","show_tooltip_at_pointer","show_tooltip_for","show_tooltip_text","side","side","stick_to_end","stroke","text","title","was_tooltip_open_last_frame","width","width_range","with_stroke","with_title_bar","wrap_enabled","CollapsingHeader","CollapsingResponse","CollapsingState","HeaderResponse","IconPainter","__clone_box","az","az","body","body_response","body_returned","body_unindented","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone_into","default_open","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","enabled","fmt","from","from","header_response","header_response","icon","id","id","id_source","init","init","into","into","is_open","load","load_with_default_open","lossless_try_into","lossless_try_into","lossy_into","lossy_into","open","openness","openness","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","paint_default_icon","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","selectable","selected","set_open","show_background","show_body_indented","show_body_unindented","show_header","show_toggle_button","state","state","store","text","to_owned","toggle","toggle_button_response","try_from","try_from","try_into","try_into","type_id","type_id","ui","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","Bottom","CentralPanel","Left","PanelState","Right","Side","SidePanel","Top","TopBottomPanel","TopBottomSide","__clone_box","__clone_box","__clone_box","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","default_height","default_width","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","frame","frame","frame","from","from","from","height_range","id","id","init","init","init","into","into","into","load","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","rect","resizable","resizable","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","show_separator_line","show_separator_line","side","side","size","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","vzip","vzip","vzip","width_range","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","popup_above_or_below_widget","popup_below_widget","show_tooltip","show_tooltip_at","show_tooltip_at_pointer","show_tooltip_for","show_tooltip_text","was_tooltip_open_last_frame","ScrollArea","ScrollAreaOutput","State","__clone_box","always_show_scroll","auto_shrink","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone_into","content_is_too_large","content_size","default","deref","deref","deref_mut","deref_mut","deserialize","downcast","downcast","drag_to_scroll","drop","drop","fmt","from","from","has_bar","id","id_source","init","init","inner","inner_rect","into","into","load","lossless_try_into","lossless_try_into","lossy_into","lossy_into","max_size","min_scrolled_size","offset","offset_x","offset_y","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","scroll_start_offset_from_top_left","scroll_stuck_to_end","scrolling_enabled","serialize","show_scroll","state","stick_to_end","store","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vel","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","Callback","Callback","Circle","CircleShape","ClippedPrimitive","ClippedShape","Color","Color32","ColorImage","CubicBezier","CubicBezierShape","Font","FontFamily","FontId","FontImage","Fonts","Galley","Hsva","HsvaGamma","ImageData","ImageDelta","LineSegment","Managed","Mesh","Mesh","Mesh","Mesh16","Monospace","NONE","Name","Noop","PaintCallback","PaintCallbackInfo","PaintStats","Path","PathShape","Pos2","Primitive","Proportional","QuadraticBezier","QuadraticBezierShape","Rect","Rect","RectShape","Rgba","Rounding","Shadow","Shape","Stroke","TessellationOptions","Tessellator","Text","TextShape","TextureAtlas","TextureHandle","TextureId","TextureManager","User","Vec","Vec2","Vertex","WHITE_UV","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","a","a","alloc","allocate","allocated","angle","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","begin_frame","bezier_tolerance","big_dark","big_light","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callback","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","center","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clip_rect","clip_rect","clip_rect","clipped_primitives","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed","closed","closed","closed_line","coarse_tessellation_culling","color","color","color","convex_polygon","cursor","debug_ignore_clip_rects","debug_paint_clip_rects","debug_paint_text_rects","default","default","default","default","default","delta","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dirty","discs","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","epaint_assert","epaint_assert","epsilon","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","extrusion","families","family","feathering","feathering","feathering_size_in_pixels","fill","fill","fill","fill","fill","fill_ratio","filled","filled","find_cross_t","flatten","flatten","flatten_closed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","font_atlas_fill_ratio","font_image_delta","font_image_size","font_tex_size","for_each_flattened_with_t","for_each_flattened_with_t","free","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_points_stroke","from_points_stroke","from_shapes","full","galley","glyph_width","h","h","has_glyph","has_glyphs","id","image","image","image","indices","indices","indices","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_valid","is_valid_bit_pattern","is_whole","job","layout","layout_delayed_color","layout_job","layout_no_wrap","line","logical_bounding_rect","logical_bounding_rect","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","max","max_texture_side","mesh_bounds","meta","metas","min","mutex","ne","new","new","new","new","next_id","num_allocated","num_callbacks","num_galleys_in_cache","num_indices","num_quadratics","num_vertices","nw","options","options","overflowed","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","override_text_color","partial","pixels","pixels","pixels_per_point","pixels_per_point","pixels_per_point","pixels_per_point","points","points","points","pos","pos","pos","pos2","prepared_discs","prepared_discs","prerasterized_discs","primitive","radius","rect","rect","rect","retain","round_text_to_pixels","round_to_pixel","rounding","row_height","row_height","rows","s","s","sample","sample","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","scratchpad_path","scratchpad_points","screen_size_px","se","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","set_clip_rect","shape_mesh","shape_path","shape_text","shape_transform","shape_vec","shapes","size","size","size","size","small_dark","small_light","split_range","stats","stroke","stroke","stroke","stroke","stroke","stroke","stroke","sw","take_delta","take_delta","tessellate","tessellate_circle","tessellate_clipped_shape","tessellate_cubic_bezier","tessellate_line","tessellate_mesh","tessellate_path","tessellate_quadratic_bezier","tessellate_rect","tessellate_shape","tessellate_shapes","tessellate_text","tessellator","tex_mngr","text","text_shape_indices","text_shape_vertices","texture_atlas","texture_id","texture_id","textures","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_path_shape","to_path_shapes","transform","transform","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ui","ui","underline","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","util","uv","v","v","vec2","vertices","vertices","vertices","viewport","visual_bounding_rect","visual_bounding_rect","visual_bounding_rect","visual_bounding_rect","visual_bounding_rect","visual_bounding_rect","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","with_clipped_primitives","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","x","x","y","y","points","stroke","AHashMap","AHashSet","AHasher","HashMap","HashMapExt","HashSet","HashSetExt","RandomState","__clone_box","__clone_box","__clone_box","__clone_box","az","az","az","az","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","build_hasher","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","downcast","downcast","downcast","downcast","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","extend","extra_keys","finish","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_iter","from_iter","generate_with","get","get_key_value","get_mut","hash_one","index","init","init","init","init","insert","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_keys","into_values","into_vec","k0","k1","k2","k3","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","new","new","new","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","pad","random_state","remove","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","sub","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_arrow","try_into_arrow","try_into_arrow","try_into_arrow","try_into_arrow_as_type","try_into_arrow_as_type","try_into_arrow_as_type","try_into_arrow_as_type","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_capacity","with_capacity","with_capacity_and_hasher","with_capacity_and_hasher","with_hasher","with_hasher","with_seed","with_seeds","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","write","write_u128","write_u16","write_u32","write_u64","write_u8","write_usize","RandomSource","RandomState","gen_hasher_seed","k0","k1","k2","k3","set_random_source","Color32","Hsva","HsvaGamma","Rgba","__clone_box","__clone_box","a","a","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","ecolor_assert","ecolor_assert","eq","eq","fmt","fmt","from","from","from","from","from","from","from","from","from_additive_rgb","from_rgb","from_rgba_premultiplied","from_rgba_unmultiplied","from_srgb","from_srgba_premultiplied","from_srgba_unmultiplied","gamma_from_linear","gamma_u8_from_linear_f32","h","h","hsv_from_rgb","init","init","into","into","linear_f32_from_gamma_u8","linear_f32_from_linear_u8","linear_from_gamma","linear_u8_from_linear_f32","lossless_try_into","lossless_try_into","lossy_into","lossy_into","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","rgb_from_hsv","s","s","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","tint_color_towards","to_opaque","to_owned","to_owned","to_rgb","to_rgba_premultiplied","to_rgba_unmultiplied","to_srgb","to_srgba_premultiplied","to_srgba_unmultiplied","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","v","v","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","Align","Align2","Center","History","IDENTITY","INTEGRAL","MAX","MIN","Max","Min","NumExt","Numeric","One","Pos2","Real","Rect","RectTransform","Rot2","Vec2","__clone_box","__clone_box","__clone_box","add","align","almost_equal","angle","at_least","at_most","average","az","az","az","bandwidth","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clear","clone","clone","clone","clone_into","clone_into","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","div","downcast","downcast","downcast","drop","drop","drop","duration","emath_assert","emath_assert","eq","eq","equivalent","equivalent","exponential_smooth_factor","flush","fmt","fmt","fmt","format_with_decimals_in_range","format_with_minimum_decimals","from","from","from","from","from","from_angle","from_f64","from_to","identity","init","init","init","into","into","into","inverse","inverse","inverse_lerp","is_empty","is_finite","is_valid_bit_pattern","is_valid_bit_pattern","iter","latest","latest_mut","len","length","length_squared","lerp","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","max","max_age","max_age","max_len","max_len","mean_time_interval","min","min_len","mul","mul","mul","mul","mul","new","normalized","normalized_angle","one","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","pos2","rate","remap","remap_clamp","round_to_decimals","s","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","scale","serialize","serialize","smart_aim","sum","to","to","to_f64","to_owned","to_owned","to_owned","total_count","total_count","transform_pos","transform_pos_clamped","transform_rect","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","values","values","vec2","velocity","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","x","x","y","y","Align","Align2","Center","Max","Min","center_size_in_rect","best_in_range_f64","Color","ColorImage","Font","FontImage","ImageData","ImageDelta","image","options","pixels","pixels","pos","size","size","Mutex","MutexGuard","RwLock","RwLockReadGuard","RwLockWriteGuard","__clone_box","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","drop","from","from","from","init","init","init","into","into","into","lock","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","read","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","write","adjust_colors","AllocInfo","PaintStats","__clone_box","add","add_assign","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clipped_primitives","clone","clone_into","default","deref","deref_mut","downcast","drop","element_size","eq","format","from","from","from_galley","from_mesh","from_slice","indices","init","into","lossless_try_into","lossy_into","megabytes","num_allocs","num_allocs","num_bytes","num_bytes","num_callbacks","num_elements","num_elements","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","shape_mesh","shape_path","shape_text","shape_vec","shapes","sum","text_shape_indices","text_shape_vertices","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vertices","vzip","wrapping_as","wrapping_cast_from","Closed","Open","Path","PathType","TessellationOptions","Tessellator","__clone_box","__clone_box","add_circle","add_line_loop","add_line_segment","add_open_points","add_point","az","az","bezier_tolerance","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clear","clip_rect","clone","clone","clone_into","clone_into","coarse_tessellation_culling","debug_ignore_clip_rects","debug_paint_clip_rects","debug_paint_text_rects","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","epsilon","eq","equivalent","equivalent","feathering","feathering","feathering_size_in_pixels","fill","fmt","font_tex_size","from","from","init","init","into","into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","options","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","path","pixels_per_point","prepared_discs","prerasterized_discs","reserve","round_text_to_pixels","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","scratchpad_path","scratchpad_points","stroke","stroke_closed","stroke_open","tessellate_shapes","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","add_circle_quadrant","rounded_rectangle","FontData","FontDefinitions","FontFamily","FontId","FontTweak","Fonts","FontsImpl","Galley","Glyph","LayoutJob","LayoutSection","Monospace","Name","PASSWORD_REPLACEMENT_CHAR","Proportional","Row","RowVisuals","TAB_SIZE","TextFormat","TextWrapping","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","append","atlas","az","az","az","az","az","az","az","background","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","break_anywhere","break_on_newline","byte_range","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","char_at","char_count_excluding_newline","char_count_including_newline","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","chr","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color","cursor","default","default","default","definitions","definitions","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","ends_with_newline","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","families","family","first_row_min_height","fmt","fmt","fmt","fmt","fmt","fmt","font","font","font_data","font_height","font_id","font_impl_cache","format","from","from","from","from","from","from","from","get_hash","get_hash","get_hash","glyph_vertex_range","glyphs","halign","has_glyph","has_glyphs","hash","hash","hash","height","index","init","init","init","init","init","init","init","into","into","into","into","into","into","into","is_empty","italics","job","justify","layout","leading_space","logical_rect","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","max_rows","max_texture_side","max_width","max_x","max_y","mesh","mesh_bounds","mesh_bounds","min_y","new","num_indices","num_vertices","overflow_character","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","pixels_per_point","pixels_per_point","pixels_per_point","pos","rect","rect","rows","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","scale","section_index","sections","serialize","serialize","serialize","serialize","serialize","serialize","simple","simple_singleline","single_section","size","size","sized_family","strikethrough","text","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tweak","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underline","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","upcast","uv_rect","valign","visuals","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrap","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","x_offset","y_offset","y_offset_factor","CCursor","Cursor","PCursor","RCursor","__clone_box","__clone_box","__clone_box","__clone_box","add","add_assign","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","ccursor","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","column","default","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","index","init","init","init","init","into","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","new","offset","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","paragraph","pcursor","prefer_next_row","prefer_next_row","rcursor","row","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","serialize","sub","sub_assign","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Linear","Nearest","TextureFilter","TextureManager","TextureMeta","TextureOptions","TexturesDelta","__clone_box","az","borrow","borrow_mut","bytes_per_pixel","bytes_used","cast_from","checked_as","checked_cast_from","clone","clone_into","delta","deref","deref_mut","downcast","drop","eq","equivalent","equivalent","fmt","free","from","init","into","lossless_try_into","lossy_into","magnification","metas","minification","name","next_id","options","overflowing_as","overflowing_cast_from","retain_count","saturating_as","saturating_cast_from","set","size","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","FloatOrd","OrderedFloat","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","cmp","deref","deref_mut","downcast","drop","eq","equivalent","equivalent","from","get_hash","hash","hash","hash_with","init","into","lossless_try_into","lossy_into","ord","overflowing_as","overflowing_cast_from","partial_cmp","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","kb_shortcuts","zoom_in","zoom_menu_buttons","zoom_out","zoom_with_keyboard_shortcuts","ZOOM_IN","ZOOM_OUT","ZOOM_RESET","font_family_ui","font_id_ui","Background","Debug","Foreground","LayerId","Middle","Order","PaintList","PanelResizeLine","ShapeIdx","Tooltip","__clone_box","__clone_box","add","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","equivalent","equivalent","extend","from","from","id","init","init","into","into","is_empty","lossless_try_into","lossless_try_into","lossy_into","lossy_into","order","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","set","to_owned","to_owned","translate","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","SubMenu","SubMenuButton","az","az","bar","borrow","borrow","borrow_mut","borrow_mut","button","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","from","from","icon","icon","index","init","init","into","into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","menu_button","menu_image_button","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","parent_state","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","show","text","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","Android","IOS","Mac","Nix","OperatingSystem","Unknown","Windows","__clone_box","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","default","deref","deref_mut","downcast","drop","eq","equivalent","equivalent","fmt","from","from_target_os","from_user_agent","get_hash","hash","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","Alias","AllScroll","Cell","Clicked","ContextMenu","Copy","Crosshair","CursorIcon","Default","DoubleClicked","FocusGained","FullOutput","Grab","Grabbing","Help","Move","NoDrop","None","NotAllowed","OpenUrl","OutputEvent","PlatformOutput","PointingHand","Progress","ResizeColumn","ResizeEast","ResizeHorizontal","ResizeNeSw","ResizeNorth","ResizeNorthEast","ResizeNorthWest","ResizeNwSe","ResizeRow","ResizeSouth","ResizeSouthEast","ResizeSouthWest","ResizeVertical","ResizeWest","Text","TextSelectionChanged","TripleClicked","ValueChanged","VerticalText","Wait","WidgetInfo","ZoomIn","ZoomOut","__clone_box","__clone_box","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","copied_text","current_text_value","cursor_icon","deref","deref","deref_mut","deref_mut","deserialize","deserialize","downcast","downcast","drop","drop","enabled","eq","eq","equivalent","equivalent","events","fmt","from","from","init","init","into","into","label","lossless_try_into","lossless_try_into","lossy_into","lossy_into","mutable_text_under_cursor","new_tab","new_tab","open_url","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","platform_output","prev_text_value","repaint_after","same_tab","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","selected","serialize","serialize","shapes","text_cursor_pos","text_selection","textures_delta","to_owned","to_owned","try_from","try_from","try_into","try_into","typ","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","url","value","vzip","vzip","widget_info","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","GIT","GITHUB","OS_ANDROID","OS_APPLE","OS_LINUX","OS_WINDOWS","TWITTER","Body","Button","DebugOptions","Default","FontId","FontSelection","Heading","Interaction","Margin","Monospace","Name","Selection","Small","Spacing","Style","Style","TextStyle","Visuals","WidgetVisuals","Widgets","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","active","animation_time","az","az","az","az","az","az","bg_fill","bg_fill","bg_stroke","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","button_frame","button_padding","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clip_rect_margin","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code_bg_color","collapsing_header_frame","combo_height","combo_width","dark","dark_mode","debug","debug_on_hover","default","default","default","default","default","default_text_styles","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","drag_value_text_style","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","equivalent","equivalent","error_fg_color","expansion","explanation_tooltips","extreme_bg_color","faint_bg_color","fg_stroke","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hovered","hyperlink_color","icon_rectangles","icon_spacing","icon_width","icon_width_inner","inactive","indent","indent_ends_with_horizontal_line","indent_has_left_vline","init","init","init","init","init","init","interact_size","interaction","into","into","into","into","into","into","item_spacing","left","light","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","menu_margin","menu_rounding","noninteractive","open","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","override_font_id","override_text_color","override_text_style","panel_fill","popup_shadow","resize_corner_size","resize_grab_radius_corner","resize_grab_radius_side","right","rounding","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","scroll_bar_inner_margin","scroll_bar_outer_margin","scroll_bar_width","scroll_handle_min_length","selection","serialize","serialize","serialize","serialize","serialize","serialize","show_blocking_widget","show_expand_height","show_expand_width","show_interactive_widgets","show_resize","show_tooltips_only_when_still","slider_trailing_fill","slider_width","spacing","striped","stroke","style","text_color","text_cursor_preview","text_cursor_width","text_edit_width","text_styles","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","tooltip_width","top","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","ui","ui","ui","ui","ui","ui","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","visuals","vzip","vzip","vzip","vzip","vzip","vzip","warn_fg_color","weak_bg_fill","widgets","window_fill","window_margin","window_rounding","window_shadow","window_stroke","wrap","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","CCursor","CCursorRange","FontData","FontDefinitions","FontFamily","Fonts","Galley","LayoutJob","LayoutSection","Monospace","Name","Proportional","TAB_SIZE","TextFormat","__clone_box","az","background","borrow","borrow_mut","break_on_newline","byte_range","cast_from","checked_as","checked_cast_from","clone","clone_into","color","default","deref","deref_mut","deserialize","downcast","drop","eq","families","first_row_min_height","fmt","font","font_data","font_id","format","from","halign","index","index","init","into","is_sorted","italics","job","justify","leading_space","lossless_try_into","lossy_into","mesh_bounds","num_indices","num_vertices","one","overflowing_as","overflowing_cast_from","pixels_per_point","prefer_next_row","primary","rect","rows","saturating_as","saturating_cast_from","secondary","sections","serialize","sorted","strikethrough","text","to_owned","try_from","try_into","tweak","two","type_id","underline","unwrapped_as","unwrapped_cast_from","upcast","valign","vzip","wrap","wrapping_as","wrapping_cast_from","History","IdTypeMap","__clone_box","az","borrow","borrow_mut","cache","cast_from","checked_as","checked_cast_from","clear","clone","clone_into","count","count_serialized","default","deref","deref_mut","deserialize","downcast","drop","fmt","from","get_persisted","get_persisted_mut_or","get_persisted_mut_or_default","get_persisted_mut_or_insert_with","get_temp","get_temp_mut_or","get_temp_mut_or_default","get_temp_mut_or_insert_with","hash","hash_with","id_type_map","init","insert_persisted","insert_temp","into","is_empty","len","lossless_try_into","lossy_into","max_age","max_len","min_len","overflowing_as","overflowing_cast_from","remove","remove_by_type","saturating_as","saturating_cast_from","serialize","to_owned","total_count","try_from","try_into","type_id","undoer","unwrapped_as","unwrapped_cast_from","upcast","values","vzip","wrapping_as","wrapping_cast_from","CacheStorage","CacheTrait","ComputerMut","FrameCache","__clone_box","as_any_mut","as_any_mut","az","az","borrow","borrow","borrow_mut","borrow_mut","cache","cache","caches","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone_into","compute","computer","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","evice_cache","fmt","from","from","generation","get","init","init","into","into","len","len","lossless_try_into","lossless_try_into","lossy_into","lossy_into","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","update","update","update","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","IdTypeMap","SerializableAny","TypeId","__clone_box","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","deref","deref_mut","deserialize","downcast","drop","eq","equivalent","equivalent","fmt","from","from","get_hash","hash","init","into","lossless_try_into","lossy_into","of","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","serialize","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","Settings","Undoer","__clone_box","__clone_box","add_undo","auto_save_interval","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","downcast","downcast","drop","drop","eq","feed_state","flux","fmt","fmt","from","from","has_undo","init","init","into","into","is_in_flux","lossless_try_into","lossless_try_into","lossy_into","lossy_into","max_undos","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","serialize","serialize","settings","stable_time","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","undo","undos","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","Galley","LayoutJob","RichText","RichText","WidgetText","WidgetTextGalley","WidgetTextJob","__clone_box","__clone_box","az","az","background_color","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","code","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","eq","family","from","from","galley","galley","galley_has_color","init","init","into","into","into_galley","italics","job","job_has_color","lossless_try_into","lossless_try_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","paint_with_color_override","paint_with_fallback_color","paint_with_visuals","raised","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","size","size","strikethrough","strong","text","text","text_color","text_style","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","underline","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","weak","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","Button","Checkbox","DragValue","Horizontal","Hyperlink","Image","ImageButton","Label","Link","ProgressBar","RadioButton","SelectableLabel","Separator","Slider","SliderOrientation","Spinner","State","TextBuffer","TextEdit","Vertical","Widget","WidgetWithState","align","animate","as_str","bg_fill","byte_index_from_char_index","char_range","checked","checked","clamp_range","clamp_to_range","clear","clip_text","color","color_picker","cursor_at_end","custom_formatter","custom_formatter","custom_parser","custom_parser","delete_char_range","desired_height_rows","desired_width","desired_width","drag_value_speed","fill","fill","font_selection","frame","frame","frame","get_set_value","get_set_value","global_dark_light_mode_buttons","global_dark_light_mode_switch","grow","hint_text","id","id_source","image","image","insert_text","interactive","is_horizontal_line","is_mutable","layouter","lock_focus","margin","max_decimals","max_decimals","min_decimals","min_decimals","min_size","min_size","multiline","orientation","password","plot","prefix","prefix","progress","range","replace","reset_button","reset_button_with","rotation","rounding","selected","selected","sense","sense","sense","sense","shortcut_text","show_value","size","size","small","smart_aim","spacing","spec","speed","step","stroke","stroke_ui","suffix","suffix","take","text","text","text","text","text","text","text","text","text","text","text_color","text_edit","texture_id","tint","trailing_fill","ui","url","uv","wrap","wrap","Alpha","BlendOrAdditive","OnlyBlend","Opaque","__clone_box","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","color_edit_button_hsva","color_edit_button_rgb","color_edit_button_rgba","color_edit_button_srgb","color_edit_button_srgba","color_picker_color32","color_picker_hsva_2d","deref","deref_mut","downcast","drop","eq","equivalent","equivalent","from","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","show_color","show_color_at","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","Arrows","Asterisk","Bar","BarChart","BoxElem","BoxPlot","BoxSpread","Circle","CoordinatesFormatter","Corner","Cross","Dashed","Diamond","Dotted","Down","Generator","GridInput","GridMark","HLine","Horizontal","Left","LeftBottom","LeftTop","Legend","Line","LineStyle","LinkedAxisGroup","LinkedCursorsGroup","MarkerShape","NOTHING","Orientation","Owned","Plot","PlotBounds","PlotImage","PlotPoint","PlotPoints","PlotUi","Plus","Points","Polygon","Right","RightBottom","RightTop","Solid","Square","Text","Up","VLine","Vertical","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","all","all","allow_boxed_zoom","allow_boxed_zoom","allow_double_click_reset","allow_double_click_reset","allow_drag","allow_drag","allow_scroll","allow_scroll","allow_zoom","allow_zoom","anchor","anchor","argument","argument","arrows","auto_bounds","auto_bounds_x","auto_bounds_y","axis_formatters","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","background_alpha","background_alpha","bar_chart","bar_width","bars","base_offset","base_offset","base_step_size","bg_fill","bg_fill","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","both","both","bounds","bounds","bounds_modified","box_plot","box_width","box_width","boxed_zoom_pointer_button","boxed_zoom_pointer_button","boxes","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","center","center_x_axis","center_x_axis","center_y_axis","center_y_axis","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clamp_grid","clamp_grid","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color","color","color","color","color","color","color","color","color","color","color","color","coordinates_formatter","coordinates_formatter","ctx","ctx","dashed_dense","dashed_loose","data_aspect","data_aspect","default","default","default","default","default_color","default_color","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dotted_dense","dotted_loose","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","element_formatter","element_formatter","element_formatter","element_formatter","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fill","fill","fill","fill","fill","fill","fill_alpha","fill_alpha","filled","filled","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format_number","frames","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_explicit_callback","from_iter","from_min_max","from_parametric_callback","from_ys_f32","from_ys_f64","function","grid_spacers","height","height","height","highlight","highlight","highlight","highlight","highlight","highlight","highlight","highlight","highlight","highlight","highlight","highlight","highlight","highlight","highlight","highlight","highlight","highlight","highlight","highlight","hline","horizontal","horizontal","horizontal","horizontal","id_source","image","include_x","include_y","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_finite","is_finite_x","is_finite_y","is_valid","is_valid_x","is_valid_y","items","label_formatter","label_formatter","last_screen_transform","legend","legend_config","line","link_axis","link_cursor","link_x","link_x","link_y","link_y","linked_axes","linked_cursors","log_grid_spacer","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lower_whisker","margin_fraction","max","max","median","min","min","min_auto_bounds","min_size","min_size","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","next_auto_color_idx","orientation","orientation","origins","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","plot_bounds","plot_clicked","plot_from_screen","plot_hovered","plot_secondary_clicked","pointer_coordinate","pointer_coordinate_drag_delta","points","points","polygon","position","position","position","position","quartile1","quartile3","radius","radius","reset","reset","response","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","screen_from_plot","serialize","series","series","series","set_link_x","set_link_x","set_link_y","set_link_y","set_margin_fraction","set_plot_bounds","shape","shape","sharp_grid_lines","sharp_grid_lines","show","show_axes","show_axes","show_background","show_background","show_x","show_x","show_y","show_y","size","spread","stack_on","stems","stems","step_size","stroke","stroke","stroke","stroke","stroke","stroke","stroke","stroke","stroke","stroke","stroke","stroke","style","style","style","style","style","style","style","style","text","text","text_style","text_style","texture_id","tint","tint","tips","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_pos2","to_string","to_vec2","translate_bounds","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uniform_grid_spacer","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upper_whisker","uv","uv","value","value","vertical","vertical","vertical","vertical","view_aspect","view_aspect","vline","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","whisker_width","whisker_width","width","width","width","width","width","width","width","width","width","with_decimals","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","x","x","x","x","x_axis_formatter","x_grid_spacer","y","y","y","y","y_axis_formatter","y_grid_spacer","length","spacing","CCursorRange","CursorRange","PCursorRange","TextBuffer","TextEdit","TextEditOutput","TextEditState","__clone_box","__clone_box","__clone_box","align","as_ccursor_range","as_sorted_char_range","as_str","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_index_from_char_index","cast_from","cast_from","cast_from","cast_from","ccursor_range","ccursor_range","char_range","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clear","clip_text","clone","clone","clone","clone_into","clone_into","clone_into","cursor_at_end","cursor_range","cursor_range","cursor_range","default","default","default","delete_char_range","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","desired_height_rows","desired_width","downcast","downcast","downcast","downcast","drop","drop","drop","drop","eq","eq","fmt","fmt","font_selection","frame","from","from","from","from","galley","has_ime","hint_text","id","id_source","init","init","init","init","insert_text","interactive","into","into","into","into","is_empty","is_mutable","is_sorted","layouter","load","lock_focus","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","margin","min_size","multiline","one","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","password","primary","primary","primary","replace","response","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","secondary","secondary","secondary","serialize","serialize","serialize","set_ccursor_range","set_cursor_range","single","singleline_offset","sorted","sorted_cursors","state","store","take","text","text_clip_rect","text_color","text_draw_pos","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","two","type_id","type_id","type_id","type_id","undoer","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","CallbackFn","DeviceError","RecreateSurface","RenderState","Renderer","SkipFrame","SurfaceError","SurfaceErrorAction","WgpuConfiguration","WgpuError","__clone_box","__clone_box","az","az","az","az","az","az","backends","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","default","default","depth_format","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","device","device_descriptor","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","fmt","fmt","free_texture","from","from","from","from","from","from","from","from","index_buffer","init","init","init","init","init","init","into","into","into","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","new","new","next_user_texture_id","on_surface_error","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","paint","paint","paint_callback_resources","pipeline","power_preference","preferred_framebuffer_format","prepare","prepare","present_mode","provide","queue","register_native_texture","register_native_texture_with_sampler_options","render","renderer","renderer","samplers","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","source","target_format","texture","texture_bind_group_layout","textures","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","uniform_bind_group","uniform_buffer","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","update_buffers","update_egui_texture_from_wgpu_texture","update_egui_texture_from_wgpu_texture_with_sampler_options","update_texture","vertex_buffer","vzip","vzip","vzip","vzip","vzip","vzip","winit","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","CallbackFn","Renderer","ScreenDescriptor","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","downcast","drop","from","index_buffer","init","into","lossless_try_into","lossy_into","next_user_texture_id","overflowing_as","overflowing_cast_from","paint","paint_callback_resources","pipeline","pixels_per_point","prepare","samplers","saturating_as","saturating_cast_from","size_in_pixels","texture_bind_group_layout","textures","try_from","try_into","type_id","uniform_bind_group","uniform_buffer","unwrapped_as","unwrapped_cast_from","upcast","vertex_buffer","vzip","wrapping_as","wrapping_cast_from","ADDRESS_MODE_CLAMP_TO_BORDER","ADDRESS_MODE_CLAMP_TO_ZERO","ALL","ALPHA","ALPHA_BLENDING","ANISOTROPIC_FILTERING","Adapter","AdapterInfo","Add","AddressMode","All","Always","Astc","AstcBlock","AstcChannel","Auto","AutoNoVsync","AutoVsync","B10x10","B10x5","B10x6","B10x8","B12x10","B12x12","B4x4","B5x4","B5x5","B6x5","B6x6","B8x5","B8x6","B8x8","BASE_VERTEX","BLACK","BLENDABLE","BLUE","BLUE","BROWSER_WEBGPU","BUFFER_BINDINGS_NOT_16_BYTE_ALIGNED","BUFFER_BINDING_ARRAY","Back","Backend","Backends","Bc1RgbaUnorm","Bc1RgbaUnormSrgb","Bc2RgbaUnorm","Bc2RgbaUnormSrgb","Bc3RgbaUnorm","Bc3RgbaUnormSrgb","Bc4RSnorm","Bc4RUnorm","Bc5RgSnorm","Bc5RgUnorm","Bc6hRgbSfloat","Bc6hRgbUfloat","Bc7RgbaUnorm","Bc7RgbaUnormSrgb","Bgra8Unorm","Bgra8UnormSrgb","BindGroup","BindGroupDescriptor","BindGroupEntry","BindGroupLayout","BindGroupLayoutDescriptor","BindGroupLayoutEntry","BindingResource","BindingType","BlendComponent","BlendFactor","BlendOperation","BlendState","BrowserWebGpu","Buffer","Buffer","Buffer","BufferAddress","BufferArray","BufferAsyncError","BufferBinding","BufferBindingType","BufferDescriptor","BufferSize","BufferSlice","BufferUsages","BufferView","BufferViewMut","CLEAR_TEXTURE","CLIPPER_INVOCATIONS","CLIPPER_PRIMITIVES_OUT","COLOR","COMPARISON_SAMPLERS","COMPUTE","COMPUTE_SHADERS","COMPUTE_SHADER_INVOCATIONS","CONSERVATIVE_RASTERIZATION","COPY_BUFFER_ALIGNMENT","COPY_BYTES_PER_ROW_ALIGNMENT","COPY_DST","COPY_DST","COPY_SRC","COPY_SRC","CUBE_ARRAY_TEXTURES","Ccw","ClampToBorder","ClampToEdge","Clear","Color","ColorTargetState","ColorWrites","CommandBuffer","CommandBufferDescriptor","CommandEncoder","CommandEncoderDescriptor","CompareFunction","Comparison","CompositeAlphaMode","ComputePass","ComputePassDescriptor","ComputePipeline","ComputePipelineDescriptor","Constant","Cpu","CreateSurfaceError","Cube","CubeArray","Cw","D1","D1","D2","D2","D2Array","D3","D3","DEPTH32FLOAT_STENCIL8","DEPTH_BIAS_CLAMP","DEPTH_CLIP_CONTROL","DEPTH_TEXTURE_AND_BUFFER_COPIES","DX11","DX12","DecrementClamp","DecrementWrap","Depth","Depth16Unorm","Depth24Plus","Depth24PlusStencil8","Depth32Float","Depth32FloatStencil8","DepthBiasState","DepthOnly","DepthStencilState","Device","DeviceDescriptor","DeviceType","DiscreteGpu","DisplayP3","DownlevelCapabilities","DownlevelFlags","Dst","DstAlpha","Dx11","Dx12","Dx12Compiler","Dxc","DynamicOffset","EacR11Snorm","EacR11Unorm","EacRg11Snorm","EacRg11Unorm","Empty","Equal","Error","ErrorFilter","Etc2Rgb8A1Unorm","Etc2Rgb8A1UnormSrgb","Etc2Rgb8Unorm","Etc2Rgb8UnormSrgb","Etc2Rgba8Unorm","Etc2Rgba8UnormSrgb","Extent3d","FILTERABLE","FRAGMENT","FRAGMENT_SHADER_INVOCATIONS","FRAGMENT_STORAGE","FRAGMENT_WRITABLE_STORAGE","FULL_DRAW_INDEX_UINT32","Face","Features","Fifo","FifoRelaxed","Fill","FilterMode","Filtering","Float","Float16x2","Float16x4","Float32","Float32x2","Float32x3","Float32x4","Float64","Float64x2","Float64x3","Float64x4","FragmentState","Front","FrontFace","Fxc","GL","GREEN","GREEN","Gl","Good","Greater","GreaterEqual","Hdr","HighPerformance","IGNORE","INDEPENDENT_BLEND","INDEX","INDIRECT","INDIRECT_EXECUTION","INDIRECT_FIRST_INSTANCE","INVALID_TIMESTAMP","ImageCopyBuffer","ImageCopyBufferBase","ImageCopyTexture","ImageCopyTextureBase","ImageCopyTextureTagged","ImageCopyTextureTaggedBase","ImageDataLayout","ImageSubresourceRange","Immediate","IncrementClamp","IncrementWrap","IndexFormat","Inherit","Instance","Instance","InstanceDescriptor","IntegratedGpu","Invert","Keep","Label","Less","LessEqual","Limits","Line","LineList","LineStrip","Linear","Load","LoadOp","Lost","Lost","LowPower","MAPPABLE_PRIMARY_BUFFERS","MAP_ALIGNMENT","MAP_READ","MAP_WRITE","METAL","MULTISAMPLED_SHADING","MULTISAMPLE_RESOLVE","MULTISAMPLE_X2","MULTISAMPLE_X4","MULTISAMPLE_X8","MULTIVIEW","MULTI_DRAW_INDIRECT","MULTI_DRAW_INDIRECT_COUNT","Mailbox","Maintain","MaintainBase","MapMode","Max","Metal","Min","MirrorRepeat","MultisampleState","NONE","NON_POWER_OF_TWO_MIPMAPPED_TEXTURES","Nearest","Never","NonFiltering","NotEqual","OVER","Occlusion","One","OneMinusConstant","OneMinusDst","OneMinusDstAlpha","OneMinusSrc","OneMinusSrcAlpha","Opaque","OpaqueBlack","OpaqueWhite","Operations","Origin2d","Origin3d","Other","OutOfMemory","OutOfMemory","OutOfMemory","Outdated","Outdated","PARTIALLY_BOUND_BINDING_ARRAY","PIPELINE_STATISTICS_QUERY","POLYGON_MODE_LINE","POLYGON_MODE_POINT","PREMULTIPLIED_ALPHA_BLENDING","PRIMARY","PUSH_CONSTANTS","PUSH_CONSTANT_ALIGNMENT","PipelineLayout","PipelineLayoutDescriptor","PipelineStatistics","PipelineStatisticsTypes","Point","PointList","Poll","PolygonMode","PostMultiplied","PowerPreference","PreMultiplied","PredefinedColorSpace","PresentMode","PresentationTimestamp","PrimitiveState","PrimitiveTopology","PushConstantRange","QUERY_RESOLVE_BUFFER_ALIGNMENT","QUERY_SET_MAX_QUERIES","QUERY_SIZE","QuerySet","QuerySetDescriptor","QueryType","Queue","QueueWriteBufferView","R16Float","R16Sint","R16Snorm","R16Uint","R16Unorm","R32Float","R32Sint","R32Uint","R8Sint","R8Snorm","R8Uint","R8Unorm","READ_ONLY_DEPTH_STENCIL","RED","RED","RENDER_ATTACHMENT","REPLACE","REPLACE","Read","ReadOnly","ReadWrite","RenderBundle","RenderBundleDepthStencil","RenderBundleDescriptor","RenderBundleEncoder","RenderBundleEncoderDescriptor","RenderPass","RenderPassColorAttachment","RenderPassDepthStencilAttachment","RenderPassDescriptor","RenderPipeline","RenderPipelineDescriptor","Repeat","Replace","RequestAdapterOptions","RequestAdapterOptionsBase","RequestDeviceError","ReverseSubtract","Rg11b10Float","Rg16Float","Rg16Sint","Rg16Snorm","Rg16Uint","Rg16Unorm","Rg32Float","Rg32Sint","Rg32Uint","Rg8Sint","Rg8Snorm","Rg8Uint","Rg8Unorm","Rgb10a2Unorm","Rgb9e5Ufloat","Rgba16Float","Rgba16Sint","Rgba16Snorm","Rgba16Uint","Rgba16Unorm","Rgba32Float","Rgba32Sint","Rgba32Uint","Rgba8Sint","Rgba8Snorm","Rgba8Uint","Rgba8Unorm","Rgba8UnormSrgb","SAMPLED_TEXTURE_AND_STORAGE_BUFFER_ARRAY_NON_UNIFORM_INDEXING","SECONDARY","SHADER_FLOAT16","SHADER_FLOAT64","SHADER_PRIMITIVE_INDEX","SPIRV_SHADER_PASSTHROUGH","STORAGE","STORAGE_ATOMICS","STORAGE_BINDING","STORAGE_READ_WRITE","STORAGE_RESOURCE_BINDING_ARRAY","SURFACE_VIEW_FORMATS","Sampler","Sampler","Sampler","SamplerArray","SamplerBindingType","SamplerBorderColor","SamplerDescriptor","ShaderLocation","ShaderModel","ShaderModule","ShaderModuleDescriptor","ShaderModuleDescriptorSpirV","ShaderSource","ShaderStages","Sint","Sint16x2","Sint16x4","Sint32","Sint32x2","Sint32x3","Sint32x4","Sint8x2","Sint8x4","Sm2","Sm4","Sm5","Snorm16x2","Snorm16x4","Snorm8x2","Snorm8x4","Src","SrcAlpha","SrcAlphaSaturated","Srgb","Stencil8","StencilFaceState","StencilOnly","StencilOperation","StencilState","Storage","StorageTexture","StorageTextureAccess","SubmissionIndex","Suboptimal","Subtract","Surface","SurfaceCapabilities","SurfaceConfiguration","SurfaceError","SurfaceStatus","SurfaceTexture","TEXTURE_ADAPTER_SPECIFIC_FORMAT_FEATURES","TEXTURE_BINDING","TEXTURE_BINDING_ARRAY","TEXTURE_COMPRESSION_ASTC_HDR","TEXTURE_COMPRESSION_ASTC_LDR","TEXTURE_COMPRESSION_BC","TEXTURE_COMPRESSION_ETC2","TEXTURE_FORMAT_16BIT_NORM","TIMESTAMP_QUERY","TRANSPARENT","Texture","Texture","TextureAspect","TextureDescriptor","TextureDimension","TextureFormat","TextureFormatFeatureFlags","TextureFormatFeatures","TextureSampleType","TextureUsages","TextureView","TextureView","TextureViewArray","TextureViewDescriptor","TextureViewDimension","Timeout","Timeout","Timestamp","TransparentBlack","TriangleList","TriangleStrip","UNIFORM","UNIFORM_BUFFER_AND_STORAGE_TEXTURE_ARRAY_NON_UNIFORM_INDEXING","UNRESTRICTED_EXTERNAL_TEXTURE_COPIES","UNRESTRICTED_INDEX_BUFFER","Uint","Uint16","Uint16x2","Uint16x4","Uint32","Uint32","Uint32x2","Uint32x3","Uint32x4","Uint8x2","Uint8x4","UncapturedErrorHandler","Uniform","Unorm","Unorm16x2","Unorm16x4","Unorm8x2","Unorm8x4","UnormSrgb","VERTEX","VERTEX","VERTEX_ATTRIBUTE_64BIT","VERTEX_FRAGMENT","VERTEX_SHADER_INVOCATIONS","VERTEX_STORAGE","VERTEX_STRIDE_ALIGNMENT","VERTEX_WRITABLE_STORAGE","VIEW_FORMATS","VULKAN","Validation","Validation","Vertex","VertexAttribute","VertexBufferLayout","VertexFormat","VertexState","VertexStepMode","VirtualGpu","Vulkan","WEBGPU_TEXTURE_FORMAT_SUPPORT","WHITE","WRITE_TIMESTAMP_INSIDE_PASSES","Wait","WaitForSubmissionIndex","Wgsl","Write","WriteOnly","ZERO","ZERO","Zero","Zero","Zero","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_p","a","add_srgb_suffix","address_mode_u","address_mode_v","address_mode_w","all","all","all","all","all","all","all","all","all","all_native_mask","all_webgpu_mask","allowed_usages","alpha","alpha_modes","alpha_to_coverage_enabled","anisotropy_clamp","array_layer_count","array_layer_count","array_stride","as_entire_binding","as_entire_buffer_binding","as_hal","as_hal","as_hal","as_hal","as_hal_mut","as_image_copy","as_mut","as_mut","as_ref","aspect","aspect","aspect","aspect","attributes","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","b","back","backend","backends","base_array_layer","base_array_layer","base_mip_level","base_mip_level","begin_compute_pass","begin_pipeline_statistics_query","begin_pipeline_statistics_query","begin_render_pass","bias","bind_group_layouts","binding","binding","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","blend","border_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer","buffer","buffer","buffers","bytes_per_row","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","check_limits","check_limits_with_fail_fn","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clamp","clear_buffer","clear_texture","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","color","color_attachments","color_formats","color_space","compare","compare","compatible_surface","compatible_texture_dimension","complement","complement","complement","complement","complement","complement","complement","complement","complement","compliant","config","configure","conservative","constant","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","context","context","context","context","context","context","context","context","context","context","context","context","context","context","context","context","context","context","context","context","copy_buffer_to_buffer","copy_buffer_to_texture","copy_texture_to_buffer","copy_texture_to_texture","count","count","create_adapter_from_hal","create_bind_group","create_bind_group_layout","create_buffer","create_buffer_init","create_command_encoder","create_compute_pipeline","create_device_from_hal","create_pipeline_layout","create_query_set","create_render_bundle_encoder","create_render_pipeline","create_sampler","create_shader_module","create_shader_module_spirv","create_shader_module_unchecked","create_surface","create_texture","create_texture_from_hal","create_texture_with_data","create_view","cull_mode","data","data","data","data","data","data","data","data","data","data","data","data","data","data","data","data","data","data","data","data","data","data","data","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","depth_compare","depth_fail_op","depth_ops","depth_or_array_layers","depth_or_array_layers","depth_read_only","depth_stencil","depth_stencil","depth_stencil_attachment","depth_write_enabled","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe","descriptor","destroy","destroy","detail","device","device_type","difference","difference","difference","difference","difference","difference","difference","difference","difference","dimension","dimension","dispatch_workgroups","dispatch_workgroups_indirect","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downlevel_defaults","downlevel_webgl2_defaults","draw","draw","draw","draw","draw_indexed","draw_indexed","draw_indexed","draw_indexed","draw_indexed_indirect","draw_indexed_indirect","draw_indexed_indirect","draw_indexed_indirect","draw_indirect","draw_indirect","draw_indirect","draw_indirect","driver","driver_info","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dst_factor","dx12_shader_compiler","empty","empty","empty","empty","empty","empty","empty","empty","empty","end_pipeline_statistics_query","end_pipeline_statistics_query","entries","entries","entry_point","entry_point","entry_point","enumerate_adapters","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execute_bundles","extend","extend","extend","extend","extend","extend","extend","extend","extend","fail_op","features","features","finish","finish","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_fallback_adapter","format","format","format","format","format","format","formats","fragment","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_core","from_hal","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","front","front_face","g","generate_report","get_bind_group_layout","get_bind_group_layout","get_capabilities","get_current_texture","get_default_config","get_downlevel_capabilities","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_info","get_mapped_range","get_mapped_range_mut","get_presentation_timestamp","get_texture_format_features","get_timestamp_period","has_dynamic_offset","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","include_spirv_raw","include_wgsl","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert_debug_marker","insert_debug_marker","insert_debug_marker","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_depth_enabled","is_depth_read_only","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_enabled","is_enabled","is_full_resource","is_invalid","is_read_only","is_read_only","is_stencil_read_only","is_strip","is_surface_supported","is_wait","is_webgpu_compliant","label","label","label","label","label","label","label","label","label","label","label","label","label","layer_range","layout","layout","layout","layout","limits","limits","limits","load","lod_max_clamp","lod_min_clamp","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","mag_filter","map_async","map_context","map_index","map_label","mask","max_bind_groups","max_bindings_per_bind_group","max_buffer_size","max_compute_invocations_per_workgroup","max_compute_workgroup_size_x","max_compute_workgroup_size_y","max_compute_workgroup_size_z","max_compute_workgroup_storage_size","max_compute_workgroups_per_dimension","max_dynamic_storage_buffers_per_pipeline_layout","max_dynamic_uniform_buffers_per_pipeline_layout","max_inter_stage_shader_components","max_mips","max_push_constant_size","max_sampled_textures_per_shader_stage","max_samplers_per_shader_stage","max_storage_buffer_binding_size","max_storage_buffers_per_shader_stage","max_storage_textures_per_shader_stage","max_texture_array_layers","max_texture_dimension_1d","max_texture_dimension_2d","max_texture_dimension_3d","max_uniform_buffer_binding_size","max_uniform_buffers_per_shader_stage","max_vertex_attributes","max_vertex_buffer_array_stride","max_vertex_buffers","min_filter","min_storage_buffer_offset_alignment","min_uniform_buffer_offset_alignment","mip_level","mip_level","mip_level_count","mip_level_count","mip_level_count","mip_level_size","mip_range","mipmap_filter","module","module","module","multi_draw_indexed_indirect","multi_draw_indexed_indirect_count","multi_draw_indirect","multi_draw_indirect_count","multisample","multiview","multiview","name","needs_ref_value","needs_ref_value","needs_ref_value","new","not","not","not","not","not","not","not","not","not","offset","offset","offset","offset","offset","on_submitted_work_done","on_uncaptured_error","operation","ops","origin","origin","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","owned","parent","parent","parent","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pass_op","physical_size","poll","poll_all","polygon_mode","pop_debug_group","pop_debug_group","pop_debug_group","pop_error_scope","power_preference","premultiplied_alpha","present","present_modes","presented","primitive","provide","provide","provide","provide","provide","push_constant_ranges","push_debug_group","push_debug_group","push_debug_group","push_error_scope","queue","r","range","read_mask","readable","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove_srgb_suffix","request_adapter","request_device","resolve_query_set","resolve_target","resource","rows_per_image","sample_count","sample_count","sample_count_supported","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","set","set","set","set","set","set","set","set","set","set_bind_group","set_bind_group","set_bind_group","set_bind_group","set_bind_group","set_blend_constant","set_index_buffer","set_index_buffer","set_index_buffer","set_index_buffer","set_pipeline","set_pipeline","set_pipeline","set_pipeline","set_pipeline","set_push_constants","set_push_constants","set_push_constants","set_push_constants","set_push_constants","set_scissor_rect","set_stencil_reference","set_vertex_buffer","set_vertex_buffer","set_vertex_buffer","set_vertex_buffer","set_viewport","shader_location","shader_model","size","size","size","size","size","size","slice","slice","slice","slope_scale","source","source","source","src_factor","stages","start_capture","stencil","stencil_ops","stencil_read_only","step_mode","stop_capture","store","strip_index_format","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","submit","suboptimal","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","targets","texture","texture","texture","to_2d","to_3d","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_tagged","to_untagged","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","topology","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unclipped_depth","union","union","union","union","union","union","union","union","union","unmap","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","usage","usage","usage","uses_constant","using_alignment","using_resolution","util","vendor","vertex","vertex_attr_array","view","view","visibility","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","width","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","write_buffer","write_buffer_with","write_mask","write_mask","write_texture","write_timestamp","write_timestamp","write_timestamp","x","x","y","y","z","access","format","has_dynamic_offset","min_binding_size","multisampled","sample_type","ty","view_dimension","view_dimension","read_only","dxc_path","dxil_path","description","source","source","block","channel","filterable","BufferInitDescriptor","DeviceExt","DispatchIndirect","DownloadBuffer","DrawIndexedIndirect","DrawIndirect","RenderEncoder","StagingBelt","__clone_box","__clone_box","__clone_box","__clone_box","active_chunks","align_to","as_bytes","as_bytes","as_bytes","az","az","az","az","az","az","backend_bits_from_env","base_index","base_instance","base_instance","base_vertex","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","chunk_size","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","closed_chunks","contents","create_buffer_init","create_texture_with_data","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","draw","draw_indexed","draw_indexed_indirect","draw_indirect","drop","drop","drop","drop","drop","drop","dx12_shader_compiler_from_env","eq","equivalent","equivalent","finish","fmt","fmt","fmt","fmt","fmt","free_chunks","from","from","from","from","from","from","get_hash","hash","init","init","init","init","init","init","initialize_adapter_from_env","initialize_adapter_from_env_or_default","instance_count","instance_count","into","into","into","into","into","into","label","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","make_spirv_raw","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","parse_backends_from_comma_list","power_preference_from_env","read_buffer","recall","receiver","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","sender","set_bind_group","set_index_buffer","set_pipeline","set_push_constants","set_vertex_buffer","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","usage","vertex_count","vertex_count","vertex_offset","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","write_buffer","x","y","z","Painter","adapter","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","configuration","depth_format","depth_texture_view","deref","deref_mut","destroy","downcast","drop","from","init","instance","into","lossless_try_into","lossy_into","max_texture_side","msaa_samples","new","on_window_resized","overflowing_as","overflowing_cast_from","paint_and_update_textures","render_state","render_state","saturating_as","saturating_cast_from","set_window","support_transparent_backbuffer","surface_state","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","AUTO","AUTO_LARGE","AutoSizeConfig","BLACK","BLACK","BLUE","BLUE","BROWN","Buffer","Color32","ColorMap","ColorMapInferno","ColorMapMagma","ColorMapPlasma","ColorMapTurbo","ColorMapViridis","DARK_BLUE","DARK_GRAY","DARK_GREEN","DARK_RED","DEBUG_COLOR","DebugLabel","DepthOffset","FileResolver","FileServer","FileSystem","GOLD","GRAY","GREEN","GREEN","Grayscale","ImportClause","KHAKI","LIGHT_BLUE","LIGHT_GRAY","LIGHT_GREEN","LIGHT_RED","LIGHT_YELLOW","LineStripBuilder","LineStripSeriesBuilder","PREFIX","PointCloudBatchBuilder","PointCloudBuilder","RED","RED","RecommendedFileResolver","RenderContext","Rgba","SearchPath","Size","TEMPORARY_COLOR","TRANSPARENT","TRANSPARENT","WHITE","WHITE","WgpuResourcePoolStatistics","YELLOW","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","a","a","active_frame","add","add_point","add_point_2d","add_points","add_points_2d","additive","additive","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","b","b","batch","batch","batches","batches","before_submit","begin_frame","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonicalize","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","collect","color","color_buffer","colormap_inferno_srgb","colormap_magma_srgb","colormap_plasma_srgb","colormap_srgb","colormap_turbo_srgb","colormap_viridis_srgb","config","cpu_write_gpu_read_belt","create_dir_all","create_file","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","device","dirs","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","err_tracker","events_rx","exists","file_watch_count","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_additive_luminance","from_black_alpha","from_black_alpha","from_env","from_gray","from_gray","from_luminance_alpha","from_rgb","from_rgb","from_rgb_additive","from_rgba_premultiplied","from_rgba_premultiplied","from_rgba_unmultiplied","from_rgba_unmultiplied","from_srgba_premultiplied","from_srgba_unmultiplied","from_str","from_str","from_white_alpha","from_white_alpha","fs","g","g","gamma_multiply","get","get","get_filesystem","get_hash","get_hash","get_hash","get_mut","gpu_resources","grayscale_srgb","hash","hash","hash","importer","include_file","index","index","index_mut","index_mut","inflight_queue_submissions","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert","intensity","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_auto","is_empty","is_opaque","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","iter","iter_strips_with_vertices","iter_vertices_and_userdata_by_batch","iter_vertices_by_batch","iter_vertices_by_batch","label","line_radius","linear_multiply","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","mesh","mesh_manager","mul","mul","mul","mul_assign","multiply","new","new","new","new_points","new_recommended_file_resolver","new_scene","num_bind_group_layouts","num_bind_groups","num_buffers","num_pipeline_layouts","num_render_pipelines","num_samplers","num_shader_modules","num_textures","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","path","point_radius","points","populate","push","push_str","queue","r","r","radius","read_to_string","renderer","renderers","resolver","resource_managers","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","scene","search_path","serialize","serialize","serialize","serialize","shared_renderer_data","strip_user_data","strips","strips","texture_manager_2d","to_array","to_array","to_draw_data","to_draw_data","to_normalized_gamma_f32","to_opaque","to_opaque","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_rgba_unmultiplied","to_srgba_unmultiplied","to_srgba_unmultiplied","to_string","to_string","to_tuple","to_tuple","total_buffer_size_in_bytes","total_bytes","total_texture_size_in_bytes","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwatch","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","user_data","user_data","user_data","vertices","vertices","view_builder","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","watch","watcher","with_search_path","world_from_obj","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","HardwareTier","RenderContextConfig","Web","__clone_box","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","check_downlevel_capabilities","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone_into","deref","deref","deref_mut","deref_mut","device_descriptor","downcast","downcast","drop","drop","features","fmt","from","from","hardware_tier","init","init","into","into","limits","lossless_try_into","lossless_try_into","lossy_into","lossy_into","output_format_color","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","required_downlevel_capabilities","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","supported_backends","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","calculate_bounding_box","gltf","obj","to_uniform_scale","load_gltf_from_buffer","load_obj_from_buffer","Material","Mesh","__clone_box","__clone_box","albedo","albedo_multiplier","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","from","from","index_range","indices","init","init","into","into","label","label","lossless_try_into","lossless_try_into","lossy_into","lossy_into","materials","mesh_vertices","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vertex_data","vertex_positions","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","MeshVertexData","__clone_box","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","deref","deref_mut","downcast","drop","fmt","from","init","into","is_valid_bit_pattern","lossless_try_into","lossy_into","next_free_shader_location","normal","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","texcoord","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vertex_buffer_layouts","vzip","wrapping_as","wrapping_cast_from","Background","CAP_END_ROUND","CAP_END_TRIANGLE","CAP_START_ROUND","CAP_START_TRIANGLE","Compositing","DepthCloud","DepthCloudDepthData","DepthCloudDrawData","DepthCloudRenderer","DrawData","DrawPhase","ENABLE_SHADING","F32","GenericSkyboxDrawData","LineBatchInfo","LineDrawData","LineStripFlags","LineStripInfo","LineVertex","Linear","Linear","MAX_NUM_POINTS","MAX_NUM_STRIPS","MAX_NUM_VERTICES","MeshDrawData","MeshInstance","NO_COLOR_GRADIENT","Nearest","Nearest","NumberOfColorsNotEqualNumberOfVertices","Opaque","PointCloudBatchFlags","PointCloudBatchInfo","PointCloudDrawData","PointCloudDrawDataError","PointCloudVertex","RectangleDrawData","Renderer","Renderer","RendererDrawData","TestTriangleDrawData","TextureFilterMag","TextureFilterMin","TexturedRect","U16","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","additive_tint","all","all","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","batches","batches","batches","bind_group_all_lines","bind_group_all_points","bind_group_layout","bind_groups","bind_groups","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","color","colormap","complement","complement","compositor","contains","contains","create_renderer","create_renderer","default","default","default","default","default","default","depth_camera_extrinsics","depth_camera_intrinsics","depth_data","depth_dimensions","depth_offset","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","difference","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw","draw","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","empty","empty","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extent_u","extent_v","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","get_hash","get_hash","get_hash","get_triangle_cap_tip_length","gpu_mesh","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert","insert","instance_buffer","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_all","is_empty","is_empty","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","label","label","line_vertex_count","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","mesh","multiplicative_tint","new","new","new","new","new","new","new","not","not","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","participated_phases","point_count","position","position","provide","radius","radius","radius_scale","remove","remove","render_pipeline","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","set","set","strip_index","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","texture","texture_filter_magnification","texture_filter_minification","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","toggle","toggle","top_left_corner_position","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","world_from_mesh","world_from_obj","world_from_obj","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Compositor","CompositorDrawData","__clone_box","az","az","bind_group","bind_group_layout","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone_into","create_renderer","deref","deref","deref_mut","deref_mut","downcast","downcast","draw","drop","drop","from","from","init","init","into","into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","participated_phases","render_pipeline","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","ExpiredResource","Frame","GpuMeshHandle","GpuTexture2DHandle","LongLived","LongLived","MeshManager","NullHandle","ResourceHandle","ResourceLifeTime","ResourceManagerError","ResourceNotFound","ResourcePoolError","SingleFrame","Texture2DCreationDesc","TextureManager2D","__clone_box","__clone_box","__clone_box","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","convert_rgb8_to_rgba8","create","create","data","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","device","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","format","from","from","from","from","from","from","from","height","init","init","init","init","init","init","init","into","into","into","into","into","into","into","invalid","label","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","manager","mesh_bind_group_layout","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","provide","queue","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","white_texture","white_texture_handle","width","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","key","valid_frame_index","current_frame_index","valid_frame_index","AutoSizeConfig","MAIN_TARGET_COLOR_FORMAT","MAIN_TARGET_DEFAULT_DEPTH_STATE","MAIN_TARGET_DEFAULT_MSAA_STATE","MAIN_TARGET_DEPTH_FORMAT","MAIN_TARGET_SAMPLE_COUNT","NearPlaneCenter","Orthographic","OrthographicCameraMode","Perspective","Projection","SharedViewBuilder","TargetConfiguration","TopLeftCornerAndExtendZ","ViewBuilder","__clone_box","__clone_box","__clone_box","auto_size_config","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","composite","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","draw","drop","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","line_radius","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","name","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","pixels_from_point","point_radius","projection_from_view","queue_draw","queued_draws","resolution_in_pixel","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","setup","setup_view","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","view_from_world","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","camera_mode","far_plane_distance","near_plane_distance","vertical_fov","vertical_world_size","BoundingBox","Rect","ZERO","__clone_box","az","borrow","borrow_mut","bounding_sphere_radius","cast_from","center","centered_bounding_sphere_radius","checked_as","checked_cast_from","clone","clone_into","contains","corners","default","deref","deref_mut","deserialize","downcast","drop","ease_out","edges","eq","everything","expanded","extend","fmt","from","from_center_size","from_min_max","from_min_size","from_points","half_size","init","intersection","into","is_finite","is_nan","is_nothing","is_point","is_something","line_segment_distance_sq_to_point_2d","line_segment_distance_sq_to_point_3d","line_segment_distance_to_point_3d","lossless_try_into","lossy_into","max","max","min","min","nothing","overflowing_as","overflowing_cast_from","ray_bbox_intersect","ray_closest_t_line_segment","remap","remap_clamp","rotated_around_origin","saturating_as","saturating_cast_from","serialize","size","to_owned","transform_affine3","transform_conformal3","transform_iso","translated","try_from","try_into","type_id","union","unwrapped_as","unwrapped_cast_from","upcast","volume","vzip","wrapping_as","wrapping_cast_from","ArrowMsg","BeginRecordingMsg","ClearComponents","ClearRecursive","ComponentBundle","EntityPathOpMsg","Goodbye","LogMsg","MsgBundle","MsgId","PathOp","components","entity_path","msg_id","name","time_point","value","Analytics","AnalyticsCommands","Args","CallSource","Clear","Cli","Commands","Config","Details","Disable","Email","Enable","Python","__clone_box","__clone_box","__clone_box","app_env","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands","augment_subcommands_for_update","augment_subcommands_for_update","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","command","command_for_update","commands","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop_at_latency","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","has_subcommand","host_web_viewer","init","init","init","init","into","into","into","into","is_python","load_file_to_channel","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","memory_limit","native_viewer_connect_to_ws_url","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","parse_max_latency","port","profile","profiler","run","run_analytics","run_impl","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","url_or_path","version","vzip","vzip","vzip","vzip","web_viewer","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","email","Sequence","Time","Time","TimeInt","TimePoint","TimeType","Timeline","name","typ"],"q":["rerunrerun::clap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::components","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::coordinates","","","","","","","","","","","","","rerun::crash_handler","","","","","","","","rerun::demo_util","","","","","rerun::external::re_log","","","","","","","","","","","rerun::external::re_log_typesrerun::external::re_log_types::PathParseError","rerun::external::re_log_types::RecordingSource","rerun::external::re_log_types::arrow_msg","","","","rerun::external::re_log_types::component_typesrerun::external::re_log_types::component_types::TensorCastError","rerun::external::re_log_types::component_types::contextrerun::external::re_log_types::component_types::coordinatesrerun::external::re_log_types::datagen","","","","","","","","","rerun::external::re_log_types::encoding","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_log_types::external::arrowrerun::external::re_log_types::external::arrow2::arrayrerun::external::re_log_types::external::arrow2::array::growablererun::external::re_log_types::external::arrow2::array::ord","","","","","rerun::external::re_log_types::external::arrow2::bitmaprerun::external::re_log_types::external::arrow2::bitmap::utilsrerun::external::re_log_types::external::arrow2::buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_log_types::external::arrow2::chunk","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_log_types::external::arrow2::compute","","","","","","","","","","","","rerun::external::re_log_types::external::arrow2::compute::aggregate","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_log_types::external::arrow2::compute::arithmetics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_log_types::external::arrow2::compute::arithmetics::basic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_log_types::external::arrow2::compute::arithmetics::decimal","","","","","","","","","","","","","","","","","","rerun::external::re_log_types::external::arrow2::compute::arithmetics::time","","","","","","","","rerun::external::re_log_types::external::arrow2::compute::arity","","","","","","","","rerun::external::re_log_types::external::arrow2::compute::arity_assign","","rerun::external::re_log_types::external::arrow2::compute::boolean","","","","","","","","","rerun::external::re_log_types::external::arrow2::compute::boolean_kleene","","","","","","rerun::external::re_log_types::external::arrow2::compute::cast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_log_types::external::arrow2::compute::comparison","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_log_types::external::arrow2::compute::comparison::binary","","","","","","","","","","","","","","","","rerun::external::re_log_types::external::arrow2::compute::comparison::boolean","","","","","","","","","","","","","","","","","rerun::external::re_log_types::external::arrow2::compute::comparison::primitive","","","","","","","","","","","","","","","","","rerun::external::re_log_types::external::arrow2::compute::comparison::utf8","","","","","","","","","","","","","","","","rerun::external::re_log_types::external::arrow2::compute::concatenate","rerun::external::re_log_types::external::arrow2::compute::filter","","","","rerun::external::re_log_types::external::arrow2::compute::if_then_else","rerun::external::re_log_types::external::arrow2::compute::take","","rerun::external::re_log_types::external::arrow2::datatypes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_log_types::external::arrow2::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_log_types::external::arrow2::ffi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_log_types::external::arrow2::ffi::mmap","rerun::external::re_log_types::external::arrow2::io","","rerun::external::re_log_types::external::arrow2::io::ipc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_log_types::external::arrow2::io::ipc::readrerun::external::re_log_types::external::arrow2::io::ipc::read::OutOfSpecKind","","","","","","","","","","rerun::external::re_log_types::external::arrow2::io::ipc::writererun::external::re_log_types::external::arrow2::io::print","rerun::external::re_log_types::external::arrow2::mmap","","rerun::external::re_log_types::external::arrow2::offset","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_log_types::external::arrow2::scalarrerun::external::re_log_types::external::arrow2::temporal_conversions","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_log_types::external::arrow2::trusted_len","rerun::external::re_log_types::external::arrow2::typesrerun::external::re_log_types::external::arrow2::types::simdrerun::external::re_log_types::external::arrow2::util","","","rerun::external::re_log_types::external::arrow2_convert","","","","","","","rerun::external::re_log_types::external::arrow2_convert::deserialize","","","","","","","","rerun::external::re_log_types::external::arrow2_convert::field","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_log_types::external::arrow2_convert::serialize","","","","","","","","","","rerun::external::re_log_types::external::glamrerun::external::re_log_types::external::glam::bool","","","","","","","","","","","","","","rerun::external::re_log_types::external::glam::f32","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_log_types::external::glam::f64","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_log_types::external::glam::i32","","","","","","","","","","","","","","","rerun::external::re_log_types::external::glam::swizzlesrerun::external::re_log_types::external::glam::u32","","","","","","","","","","","","","","","rerun::external::re_log_types::external::imagererun::external::re_log_types::external::image::bufferrerun::external::re_log_types::external::image::codecs","","rerun::external::re_log_types::external::image::codecs::jpeg","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_log_types::external::image::codecs::pngrerun::external::re_log_types::external::image::errorrerun::external::re_log_types::external::image::error::LimitErrorKind","","rerun::external::re_log_types::external::image::flatrerun::external::re_log_types::external::image::imageops","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_log_types::external::image::imageops::colorops","","","","","","","","","","","","","","","","","","","","rerun::external::re_log_types::external::image::io","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_log_types::external::image::math","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_log_types::hash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_log_types::msg_bundle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_log_types::path","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_log_types::path::PathParseError","rerun::external::re_log_types::time_point","","","","","","","","","rerun::external::re_memoryrerun::external::re_memory::accounting_allocator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_memory::util","rerun::external::re_sdk_comms","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewerrerun::external::re_viewer::AppEnvironment","","rerun::external::re_viewer::env_vars","rerun::external::re_viewer::external::eframererun::external::re_viewer::external::eframe::eguirerun::external::re_viewer::external::eframe::egui::Event","","","","","","","","","","","","","rerun::external::re_viewer::external::eframe::egui::Shape","","rerun::external::re_viewer::external::eframe::egui::containers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewer::external::eframe::egui::containers::collapsing_header","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewer::external::eframe::egui::containers::panel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewer::external::eframe::egui::containers::popup","","","","","","","","rerun::external::re_viewer::external::eframe::egui::containers::scroll_area","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewer::external::eframe::egui::epaintrerun::external::re_viewer::external::eframe::egui::epaint::Shape","","rerun::external::re_viewer::external::eframe::egui::epaint::ahash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewer::external::eframe::egui::epaint::ahash::random_state","","","","","","","","rerun::external::re_viewer::external::eframe::egui::epaint::ecolor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewer::external::eframe::egui::epaint::emathrerun::external::re_viewer::external::eframe::egui::epaint::emath::align","","","","","","rerun::external::re_viewer::external::eframe::egui::epaint::emath::smart_aim","rerun::external::re_viewer::external::eframe::egui::epaint::image","","","","","","","","","","","","","rerun::external::re_viewer::external::eframe::egui::epaint::mutex","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewer::external::eframe::egui::epaint::shape_transform","rerun::external::re_viewer::external::eframe::egui::epaint::stats","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewer::external::eframe::egui::epaint::tessellator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewer::external::eframe::egui::epaint::tessellator::path","","rerun::external::re_viewer::external::eframe::egui::epaint::textrerun::external::re_viewer::external::eframe::egui::epaint::text::cursorrerun::external::re_viewer::external::eframe::egui::epaint::textures","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewer::external::eframe::egui::epaint::util","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewer::external::eframe::egui::gui_zoom","","","","","rerun::external::re_viewer::external::eframe::egui::gui_zoom::kb_shortcuts","","","rerun::external::re_viewer::external::eframe::egui::introspection","","rerun::external::re_viewer::external::eframe::egui::layers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewer::external::eframe::egui::menu","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewer::external::eframe::egui::os","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewer::external::eframe::egui::output","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewer::external::eframe::egui::special_emojis","","","","","","","rerun::external::re_viewer::external::eframe::egui::stylererun::external::re_viewer::external::eframe::egui::text","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewer::external::eframe::egui::util","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewer::external::eframe::egui::util::cache","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewer::external::eframe::egui::util::id_type_map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewer::external::eframe::egui::util::undoer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewer::external::eframe::egui::widget_text","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewer::external::eframe::egui::widgets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewer::external::eframe::egui::widgets::color_picker","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewer::external::eframe::egui::widgets::plotrerun::external::re_viewer::external::eframe::egui::widgets::plot::LineStyle","","rerun::external::re_viewer::external::eframe::egui::widgets::text_editrerun::external::re_viewer::external::eframe::egui_wgpurerun::external::re_viewer::external::eframe::egui_wgpu::renderer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewer::external::eframe::egui_wgpu::wgpurerun::external::re_viewer::external::eframe::egui_wgpu::wgpu::BindingType","","","","","","","","","rerun::external::re_viewer::external::eframe::egui_wgpu::wgpu::BufferBindingType","rerun::external::re_viewer::external::eframe::egui_wgpu::wgpu::Dx12Compiler","","rerun::external::re_viewer::external::eframe::egui_wgpu::wgpu::Error","","","rerun::external::re_viewer::external::eframe::egui_wgpu::wgpu::TextureFormat","","rerun::external::re_viewer::external::eframe::egui_wgpu::wgpu::TextureSampleType","rerun::external::re_viewer::external::eframe::egui_wgpu::wgpu::utilrerun::external::re_viewer::external::eframe::egui_wgpu::winit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewer::external::re_rendererrerun::external::re_viewer::external::re_renderer::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewer::external::re_renderer::importer","","","","rerun::external::re_viewer::external::re_renderer::importer::gltf","rerun::external::re_viewer::external::re_renderer::importer::obj","rerun::external::re_viewer::external::re_renderer::mesh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewer::external::re_renderer::mesh::mesh_vertices","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewer::external::re_renderer::rendererrerun::external::re_viewer::external::re_renderer::renderer::compositor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewer::external::re_renderer::resource_managersrerun::external::re_viewer::external::re_renderer::resource_managers::ResourceHandle","","rerun::external::re_viewer::external::re_renderer::resource_managers::ResourceManagerError","","rerun::external::re_viewer::external::re_renderer::view_builder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::external::re_viewer::external::re_renderer::view_builder::Projection","","","","","rerun::external::re_viewer::math","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun::log","","","","","","","","","","","","","","","","","rerun::runrerun::run::AnalyticsCommands","rerun::time","","","","","","","",""],"d":["The user-chosen name of the application doing the logging.","Where are we calling <code>run</code> from?","Called from a command-line-input (the terminal).","A type that can used as a Component of an Entity.","The name of an entity component, e.g. <code>pos</code> or <code>color</code>.","<code>camera / &quot;left&quot; / points / #42</code>","<code>InstanceKey</code> with a <code>u64::MAX</code> was found, but is reserved for …","Some components had more or less instances than some other.","The same component were put in the same log message …","Facilitates building and sending component payloads with …","Errors that can occur when constructing or sending messages","A message during packing. See <code>MsgBundleError</code>.","Called from the Rerun Python SDK.","A unique id per recording (a stream of <code>LogMsg</code>es).","A <code>Component</code> that fulfils all the conditions required to be …","This is the main object you need to create to use the …","Instance keys cannot be splatted","The recording id:s given to recordings that don’t have …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module provides integration with integration with <code>clap</code>…","","","","","","","","","","","","","These are the different <em>components</em> you can log.","Send log data to a remote viewer/server.","Coordinate system helpers, for use with …","","","","The default address of a Rerun TCP server which an SDK …","This module contains utilities to support Rerun examples.","","","","","","","","","","","","","","","","","","","","Disconnects any TCP connection, shuts down any server, and …","","","","","","","","Drain all buffered <code>LogMsg</code>es and return them.","","","","","","","","If the tcp session is disconnected, allow it to quit early …","","","","","","","","","","","","","","","","Re-exports of other crates.","Create a <code>Field</code> for this <code>Component</code>.","Wait until all logged data have been sent to the remove …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Includes namespace, e.g. <code>rerun.color</code> or <code>ext.confidence</code>.","","","","","Access a global <code>Session</code> singleton for convenient logging.","Access a global <code>Session</code> singleton for convenient logging.","","","Precomputed hash of the string.","","","","","","Precomputed 64-bit hash.","","Initializes a new session with a properly set <code>ApplicationId</code>…","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Is this a direct child of the other path.","Is this a strict descendant of the given path.","Check if logging is enabled on this <code>Session</code>.","","","Are we streaming log messages over TCP?","","","","Number of parts","Things directly related to logging.","","","","","","","","","","","","","","","The name of the component.","Starts a new <code>MsgSender</code> for the given entity path.","","","","","","","","","","","","","","","","","","Return <code>None</code> if root.","","","","","","","","The current <code>RecordingId</code>, if set.","","","","","Run the Rerun application and return an exit code.","","","","","","","","","","","","","","","Drains all pending log messages and saves them to disk …","Consumes, packs, sanity checks and finally sends the …","Send a <code>LogMsg</code>.","Send a <code>PathOp</code>.","","","","","","Serve log-data over WebSockets and serve a Rerun web …","Set the <code>ApplicationId</code> to use for the following stream of …","Enable or disable logging on this <code>Session</code>.","Set the <code>RecordingId</code> of this message stream.","Set where the recording is coming from. The default is …","Excludes the rerun namespace, so you’ll get <code>color</code> but …","Drains all pending log messages and starts a Rerun viewer …","","Starts a Rerun viewer on the current thread and migrates …","","Time-related types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The default <code>ApplicationId</code> if the user hasn’t set one.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Appends a component collection to the current message.","Appends a splatted component to the current message.","Helper to make it easier to optionally append splatted …","Appends a given <code>timeline</code>/<code>time</code> pair to the current message.","Specifies whether the current message is timeless.","Appends a given <code>timepoint</code> to the current message.","","","","","","","","","","","","","","","This struct implements a <code>clap::Parser</code> that defines all the …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","Run common Rerun script setup actions. Connect to the …","Run common post-actions. Sleep if serving the web viewer.","","","","","","","","","","","","","","","","","","","","The <code>AnnotationContext</code> provides additional information on …","Information about an Annotation.","A 3D Arrow","A 3D bounding box represented by it’s half-lengths","The description of a semantic Class.","A 16-bit ID representing a type of semantic class.","The data is an annotated <code>crate::component_types::ClassId</code> …","An RGBA color tuple.","Image data interpreted as depth map.","","Compressed/encoded mesh format","","","Binary <code>glTF</code>.","<code>glTF</code>.","","","","","A number used to specify a specific instance in an entity.","","A 16-bit ID representing a type of semantic keypoint …","A String label component","A Line Strip of 2D points","A Line Strip of 3D points","A 3x3 column-major Matrix made up of 3 Vecs","A Generic 3D Mesh.","The format of a binary mesh file, e.g. GLTF, GLB, OBJ","A unique id per <code>Mesh3D</code>.","Wavefront .obj.","Camera perspective projection (a.k.a. intrinsics).","The parent is some local camera space, the child an image …","A point in 2D space.","A point in 3D space.","A Quaternion represented by 4 real numbers.","A Radius component","","A raw “triangle soup” mesh.","A rectangle in 2D space.","A proper rigid 3D transform, i.e. a rotation and a …","For example: the parent is a 3D world space, the child a …","A double-precision scalar.","Additional properties of a scalar when rendered as a plot.","A 3D size, e.g. the size of a 3D box.","A Multi-dimensional Tensor","Flattened <code>Tensor</code> data payload","How to interpret the contents of a tensor.","Flattened <code>Tensor</code> data payload","A unique id per <code>Tensor</code>.","","A text entry component, comprised of a text body and its …","A transform between two spaces.","","","","","Default behavior: guess based on shape","We don’t know the transform, but it is …","A vector in 2D space.","A vector in 3D space.","A vector in 4D space.","How we interpret the coordinate system of an entity/space.","[x_center, y_center, width/2, height/2]","[x_center, y_center, width, height]","[x, y, w, h], with x,y = left,top.","[x0, y0, x1, y1], with x0,y0 = left,top and x1,y1 = …","[y, x, h, w], with x,y = left,top.","[y0, x0, y1, x1], with x0,y0 = left,top and x1,y1 = …","Albedo factor applied to the final color of the mesh.","","","","","Data payload","","","","","<code>ClassId</code> or <code>KeypointId</code> to which this annotation info …","Column-major projection matrix.","Optionally, the flattened indices array for this mesh.","","","","Semantic connections between two keypoints.","","","","","The per-element data meaning Used to indicated if the data …","","","Reciprocal scale of meter unit for depth images","Optional name of the dimension, e.g. “color” or “…","Optionally, the flattened normals array for this mesh.","","","The flattened positions array of this mesh.","Pixel resolution (usually integers) of child image space. …","How is the child rotated?","","","Dimensionality and length","Number of elements on this dimension. I.e. size-1 is the …","Unique identifier for the tensor","four columns of an affine transformation matrix","Translation to parent from child.","","","","","","","","","","","","","","","","","One of <code>X</code>, <code>Y</code>, <code>Z</code>.","Left or right handedness. Used to describe a coordinate …","","","","","Positive (<code>+</code>) or Negative (<code>-</code>).","One of: <code>+X</code>, <code>-X</code>, <code>+Y</code>, <code>-Y</code>, <code>+Z</code>, <code>-Z</code>, i.e. one of the six …","","","","","","","Anonymize a path to a Rust source file from a callstack.","","","","Install handlers for panics and signals (crashes) that …","","","A linear interpolator that bounces between <code>a</code> and <code>b</code> as <code>t</code> …","Create a spiral of points with colors along the Z axis.","Given two 3D vectors <code>from</code> and <code>to</code>, linearly interpolates …","Linear interpolator.","Linearly interpolates from <code>a</code> through <code>b</code> in <code>n</code> steps, …","Constructs an event at the debug level.","Logs a message once at the debug level.","Constructs an event at the error level.","Logs a message once at the error level.","Constructs an event at the info level.","Logs a message once at the info level.","","Constructs an event at the trace level.","Logs a message once at the trace level.","Constructs an event at the warn level.","Logs a message once at the warn level.","The <code>AnnotationContext</code> provides additional information on …","The user-chosen name of the application doing the logging.","A 3D Arrow","Message containing an Arrow payload","Log an entity using an <code>ArrowMsg</code>.","","The beginning of time.","","","","A new recording has begun.","Oriented 3D box","Clear all the components stored at an <code>EntityPath</code>","Clear all the components of an <code>[EntityPath]</code> and any …","The name of an entity component, e.g. <code>pos</code> or <code>color</code>.","A <code>EntityPath</code> plus a <code>ComponentName</code>.","","","A signed duration represented as nanoseconds since unix …","","","Compressed/encoded mesh format","<code>camera / &quot;left&quot; / points / #42</code>","A 128 bit hash of <code>EntityPath</code> with negligible risk of …","<code>camera / &quot;left&quot; / points / #42</code>","An operation (like a ‘clear’) on an <code>EntityPath</code>.","Server-backed operation on an <code>EntityPath</code>.","The different parts that make up an <code>EntityPath</code>.","16-bit floating point number.","16-bit floating point number.","32-bit floating point number.","32-bit floating point number.","64-bit floating point number.","64-bit floating point number.","Some batches want to provide explicit indices","Binary <code>glTF</code>.","<code>glTF</code>.","Sent when the client shuts down the connection.","Signed 16 bit integer.","Signed 16 bit integer.","Signed 32 bit integer.","Signed 32 bit integer.","Signed 64 bit integer.","Signed 64 bit integer.","Signed 8 bit integer.","Signed 8 bit integer.","","The key of a table.","Array/table/map member. Each member must be of the same …","A 128 bit hash of <code>Index</code> with negligible risk of collision.","Any integer, e.g. a hash or an arbitrary identifier.","","","The most general log message sent from the SDK to the …","All ones.","","","","A Generic 3D Mesh.","The format of a binary mesh file, e.g. GLTF, GLB, OBJ","A unique id per <code>Mesh3D</code>.","","A unique id per <code>crate::LogMsg</code>.","","Sometimes used as the hash of <code>None</code>.","Struct member. Each member can have a different type.","Wavefront .obj.","Perhaps from some manual data ingestion?","Operation to perform on an <code>EntityPath</code>, e.g. clearing all …","","Camera perspective projection (a.k.a. intrinsics).","The parent is some local camera space, the child an image …","X,Y pixel coordinates, from top left.","The official Rerun Python Logging SDK","","Order: XYZW","","A raw “triangle soup” mesh.","A unique id per recording (a stream of <code>LogMsg</code>es).","","","A proper rigid 3D transform, i.e. a rotation and a …","For example: the parent is a 3D world space, the child a …","The official Rerun Rust Logging SDK","For arrays, assumed to be dense (0, 1, 2, …).","Used e.g. for frames in a film.","Many batches use implicit sequential-indexing","Anything goes.","The data types supported by a …","","The data that can be stored in a …","A date-time represented as nanoseconds since unix epoch","Normal wall time.","A 64-bit number describing either nanoseconds OR sequence …","A point in time on any number of <code>Timeline</code>s.","","Like <code>TimeRange</code>, but using <code>TimeReal</code> for improved precision.","Either nanoseconds or sequence numbers.","The type of a <code>TimeInt</code> or <code>Timeline</code>.","A time frame/space, e.g. <code>log_time</code> or <code>frame_nr</code>, coupled …","The name of a timeline. Often something like <code>&quot;log_time&quot;</code> or …","A transform between two spaces.","Unsigned 16 bit integer.","Unsigned 16 bit integer.","Unsigned 32 bit integer.","Unsigned 32 bit integer.","Unsigned 64 bit integer.","Unsigned 64 bit integer.","Unsigned 8 bit integer.","Unsigned 8 bit integer.","We don’t know the transform, but it is …","","","UUID/GUID","How we interpret the coordinate system of an entity/space.","All zeroes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Albedo factor applied to the final color of the mesh.","The user-chosen name of the application doing the logging.","","","","","","","","","","","","","","<code>ArrowMsg</code> is the <code>crate::LogMsg</code> sub-type containing an Arrow …rrow chunk","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","“color”","Potentially user-facing component types.","","Inclusive","","","","","","","","","","","","","","Generate random data for tests and benchmarksncoding/decoding <code>LogMsg</code>:es as <code>.rrd</code> files.","","","<code>camera / &quot;left&quot; / points / #42</code>","Build a <code>EntityPath</code>:","Build a <code>Vec&lt;EntityPathPart&gt;</code>:","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Focal length.","X &amp; Y focal length in pixels.","Human-readable formatting","","","","Returns a formatted string of <code>time_range</code> on this <code>Timeline</code>.","","Field of View on the Y axis, i.e. the angle between top …","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","For time timelines.","","Returns a matrix that translates RUB to this coordinate …","For time timelines.","","","For sequence timelines.","","","Choses a coordinate system based on just an up-axis.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Precomputed hash of the string.","","","","","","","","","","Column-major projection matrix.","","","Optionally, the flattened indices array for this mesh.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Where in the range is this value? Returns 0-1 if within …","If true, this time is likely relative to unix epoch.","","","","","","","True if the recording is one of the official Rerun …","","","","","","","","","","Number of components","The amount of time or sequences covered by this range.","The amount of time or sequences covered by this range.","","","The log time timeline to which all API functions will …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","e.g. 3","Lower right corner.","","","","","","Upper left corner.","","","e.g. 11","Structs and functions used for framing and de-framing a …","A unique id per <code>crate::LogMsg</code>.","","A unique id per <code>EntityPathOpMsg</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Optionally, the flattened normals array for this mesh.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return <code>None</code> if root.","","Parses an entity path, e.g. …","","","","","","","","","","","","","","","","","","e.g. 0","Every logged entity in Rerun is logged to an <code>EntityPath</code>.","","What operation.","","","The flattened positions array of this mesh.","Principal point of the pinhole camera, i.e. the …","","","","","Should be unique for each recording.","","","","Pixel resolution (usually integers) of child image space. …","","","How is the child rotated?","","","Returns an error if this does not span all three …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Arrow schema","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A shortened string representation of the message id.","Number of bytes used by the type","When the recording started.","","","","","","","","","e.g. <code>a0</code> for alpha releases.","","","","","Time information (when it was logged, when it was …","Logging to this time means the data will show upp in all …","","","Returns the absolute datetime if applicable.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a matrix that translates this coordinate system to …","","","","","","","","","","","","four columns of an affine transformation matrix","Translation to parent from child.","","","","Build a single Arrow log message tuple from this <code>MsgBundle</code>…essage containing an Arrow payload","Arrow chunk","A unique id per <code>crate::LogMsg</code>.","Arrow schema","The <code>AnnotationContext</code> provides additional information on …","Information about an Annotation.","A 3D Arrow","","","","A 3D bounding box represented by it’s half-lengths","The description of a semantic Class.","A 16-bit ID representing a type of semantic class.","The data is an annotated <code>crate::component_types::ClassId</code> …","An RGBA color tuple.","Image data interpreted as depth map.","","Compressed/encoded mesh format","","","","","","","<code>arrow2_convert</code> helper for fields of type <code>[T; SIZE]</code>","Binary <code>glTF</code>.","<code>glTF</code>.","","","","","","A number used to specify a specific instance in an entity.","","A 16-bit ID representing a type of semantic keypoint …","A String label component","A Line Strip of 2D points","A Line Strip of 3D points","A 3x3 column-major Matrix made up of 3 Vecs","A Generic 3D Mesh.","The format of a binary mesh file, e.g. GLTF, GLB, OBJ","A unique id per <code>Mesh3D</code>.","A unique id per <code>crate::LogMsg</code>.","","Wavefront .obj.","Camera perspective projection (a.k.a. intrinsics).","The parent is some local camera space, the child an image …","A point in 2D space.","A point in 3D space.","A Quaternion represented by 4 real numbers.","A Radius component","","A raw “triangle soup” mesh.","A rectangle in 2D space.","","A proper rigid 3D transform, i.e. a rotation and a …","For example: the parent is a 3D world space, the child a …","A special value indicating that this [<code>InstanceKey]</code> is …","A double-precision scalar.","Additional properties of a scalar when rendered as a plot.","A 3D size, e.g. the size of a 3D box.","A Multi-dimensional Tensor","","Flattened <code>Tensor</code> data payload","How to interpret the contents of a tensor.","Flattened <code>Tensor</code> data payload","A unique id per <code>Tensor</code>.","","A text entry component, comprised of a text body and its …","A transform between two spaces.","","","","","","Default behavior: guess based on shape","We don’t know the transform, but it is …","A vector in 2D space.","A vector in 3D space.","A vector in 4D space.","How we interpret the coordinate system of an entity/space.","[x_center, y_center, width/2, height/2]","[x_center, y_center, width, height]","[x, y, w, h], with x,y = left,top.","[x0, y0, x1, y1], with x0,y0 = left,top and x1,y1 = …","[y, x, h, w], with x,y = left,top.","[y0, x0, y1, x1], with x0,y0 = left,top and x1,y1 = …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Albedo factor applied to the final color of the meshata payloadeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Construct a tensor from [<code>image::DynamicImage</code>].","Construct a tensor from something that can be turned into …","","","","","","","","","","","","","","","","","","<code>ClassId</code> or <code>KeypointId</code> to which this annotation info …","Column-major projection matrix.","","","","Optionally, the flattened indices array for this mesh.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Are we referring to a specific instance of the entity …","Are we referring to all instances of the entity (e.g. all …","","","Iterate over the registered field types","Semantic connections between two keypoints.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The per-element data meaning Used to indicated if the data …","","","Reciprocal scale of meter unit for depth images","","","","","","","","","","","","","","","","","","","","","Optional name of the dimension, e.g. “color” or “…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Optionally, the flattened normals array for this mesh.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The flattened positions array of this mesh.","","","","Pixel resolution (usually integers) of child image space. …","How is the child rotated?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Dimensionality and length","Number of elements on this dimension. I.e. size-1 is the …","","","Returns <code>None</code> if splat, otherwise the index.","Construct a tensor from the contents of a JPEG file.","Construct a tensor from the contents of a JPEG file on …","Unique identifier for the tensor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","four columns of an affine transformation matrix","Translation to parent from childhe <code>AnnotationContext</code> provides additional information on …","Information about an Annotation.","","","The description of a semantic Class.","Helper struct for converting <code>AnnotationContext</code> to arrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","<code>ClassId</code> or <code>KeypointId</code> to which this annotation info …","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Semantic connections between two keypoints.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","One of <code>X</code>, <code>Y</code>, <code>Z</code>.","","","","Left or right handedness. Used to describe a coordinate …","","","","","","","","","","","","","Positive (<code>+</code>) or Negative (<code>-</code>).","One of: <code>+X</code>, <code>-X</code>, <code>+Y</code>, <code>-Y</code>, <code>+Z</code>, <code>-Z</code>, i.e. one of the six …","","How we interpret the coordinate system of an entity/space.","The six cardinal directions for 3D view-space and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build a (<code>Timeline</code>, <code>TimeInt</code>) tuple from <code>frame_nr</code> suitable …","Build a (<code>Timeline</code>, <code>TimeInt</code>) tuple from <code>log_time</code> suitable …","Create <code>len</code> dummy colors","Create <code>len</code> dummy <code>InstanceKey</code> keys. These keys will be …","","Create <code>len</code> dummy labels","Create <code>len</code> dummy <code>Point2D</code>","Create <code>len</code> dummy rectangles","Create <code>len</code> dummy <code>Vec3D</code>","","Encode a stream of <code>LogMsg</code> into an <code>.rrd</code> file.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A <code>HashMap</code> using <code>RandomState</code> to hash the items. (Requires …","The enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general …","A value of type <code>L</code>.","A value of type <code>R</code>.","","","","Contains the <code>Array</code> and <code>MutableArray</code> trait objects …","Convert <code>&amp;mut Either&lt;L, R&gt;</code> to <code>Either&lt;&amp;mut L, &amp;mut R&gt;</code>.","","","","","","","Convert <code>Pin&lt;&amp;mut Either&lt;L, R&gt;&gt;</code> to …","Convert <code>Pin&lt;&amp;Either&lt;L, R&gt;&gt;</code> to <code>Either&lt;Pin&lt;&amp;L&gt;, Pin&lt;&amp;R&gt;&gt;</code>, …","","","","","","","Convert <code>&amp;Either&lt;L, R&gt;</code> to <code>Either&lt;&amp;L, &amp;R&gt;</code>.","","contains <code>Bitmap</code> and <code>MutableBitmap</code>, containers of <code>bool</code>.","","","Contains <code>Buffer</code>, an immutable container for all Arrow …","","","","","Contains <code>Chunk</code>, a container of <code>Array</code> where every array has …","","","","","","","contains a wide range of compute operations (e.g. …","","","Contains all metadata, such as <code>PhysicalType</code>, <code>DataType</code>, …","","","","","","","","","","Apply one of two functions depending on contents, unifying …","Convert the contained value into <code>T</code>","Like <code>either</code>, but provide some context to whichever of the …","","","","Defines <code>Error</code>, representing all errors returned by this …","Returns the left value","Returns the right value","","Factors out a homogenous type from an <code>Either</code> of <code>Result</code>.","Factor out a homogeneous type from an either of pairs.","Factors out <code>None</code> from an <code>Either</code> of <code>Option</code>.","Factors out a homogenous type from an <code>Either</code> of <code>Result</code>.","Factor out a homogeneous type from an either of pairs.","contains FFI bindings to import and export <code>Array</code> via Arrow…","","","","Convert <code>Either&lt;L, R&gt;</code> to <code>Either&lt;R, L&gt;</code>.","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","Extract the value of an either over two equivalent types.","","Convert the inner value to an iterator.","","","Contains modules to interface with other formats such as […","Return true if the value is the <code>Left</code> variant.","Return true if the value is the <code>Right</code> variant.","","Convert the left side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;L&gt;</code>.","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Return left value or given value","Return left or a default","Returns left value or computes it from a closure","","","","","Map <code>f</code> over the contained value and return the result in the","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","Memory maps regions defined on the IPC format into <code>Array</code>.","","","","","","","","","","","","","","","","","","","","","Contains the declaration of <code>Offset</code>","","","","","","","","","","","","","","","","","","","Convert the right side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;R&gt;</code>.","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","Return right value or given value","Return right or a default","Returns right value or computes it from a closure","","","contains the <code>Scalar</code> trait object representing individual …","","","","","Conversion methods for dates and times.","","","Declares <code>TrustedLen</code>.","","","","","","","","","","","","","Sealed traits and implementations to handle all <em>physical </em>…","Returns the left value","Returns the right value","","","","Misc utilities used in different places in the crate.","","","","","","","","","A trait representing an immutable Arrow array. Arrow …","Iterator of values of an <code>ArrayAccessor</code>.","A <code>BinaryArray</code> is Arrow’s semantically equivalent of an …","Iterator of values of an <code>BinaryArray</code>.","A <code>BooleanArray</code> is Arrow’s semantically equivalent of an …","A type definition <code>PrimitiveArray</code> for <code>days_ms</code>","A type definition <code>MutablePrimitiveArray</code> for <code>days_ms</code>","An <code>Array</code> whose values are stored as indices. This <code>Array</code> is …","Trait denoting <code>NativeType</code>s that can be used as keys of a …","The Arrow’s equivalent to an immutable …","The Arrow’s equivalent to an immutable …","A type definition <code>PrimitiveArray</code> for <code>f16</code>","A type definition <code>MutablePrimitiveArray</code> for <code>f16</code>","A type definition <code>PrimitiveArray</code> for <code>f32</code>","A type definition <code>MutablePrimitiveArray</code> for <code>f32</code>","A type definition <code>PrimitiveArray</code> for <code>f64</code>","A type definition <code>MutablePrimitiveArray</code> for <code>f64</code>","Trait that <code>BinaryArray</code> and <code>Utf8Array</code> implement for the …","A type definition <code>PrimitiveArray</code> for <code>i128</code>","A type definition <code>MutablePrimitiveArray</code> for <code>i128</code>","A type definition <code>PrimitiveArray</code> for <code>i16</code>","A type definition <code>MutablePrimitiveArray</code> for <code>i16</code>","A type definition <code>PrimitiveArray</code> for <code>i256</code>","A type definition <code>MutablePrimitiveArray</code> for <code>i256</code>","A type definition <code>PrimitiveArray</code> for <code>i32</code>","A type definition <code>MutablePrimitiveArray</code> for <code>i32</code>","A type definition <code>PrimitiveArray</code> for <code>i64</code>","A type definition <code>MutablePrimitiveArray</code> for <code>i64</code>","A type definition <code>PrimitiveArray</code> for <code>i8</code>","A type definition <code>MutablePrimitiveArray</code> for <code>i8</code>","The corresponding <code>IntegerType</code> of this key","An <code>Array</code> semantically equivalent to …","Iterator of values of a <code>ListArray</code>.","An array representing a (key, value), both of arbitrary …","A type definition <code>PrimitiveArray</code> for <code>months_days_ns</code>","A type definition <code>MutablePrimitiveArray</code> for <code>months_days_ns</code>","A trait describing a mutable array; i.e. an array whose …","The Arrow’s equivalent to <code>Vec&lt;Option&lt;Vec&lt;u8&gt;&gt;&gt;</code>. …","A <code>MutableArray</code> that builds a <code>BinaryArray</code>. It differs from …","The Arrow’s equivalent to <code>Vec&lt;Option&lt;bool&gt;&gt;</code>, but with …","A mutable, strong-typed version of <code>DictionaryArray</code>.","The Arrow’s equivalent to a mutable …","The mutable version of <code>FixedSizeListArray</code>.","The mutable version of <code>ListArray</code>.","The Arrow’s equivalent to <code>Vec&lt;Option&lt;T&gt;&gt;</code> where <code>T</code> is …","Converting a <code>MutableStructArray</code> into a <code>StructArray</code> is <code>O(1)</code>.","A <code>MutableArray</code> that builds a <code>Utf8Array</code>. It differs from …","A <code>MutableArray</code> that builds a <code>Utf8Array</code>. It differs from …","The concrete <code>Array</code> of <code>DataType::Null</code>.","A <code>PrimitiveArray</code> is Arrow’s semantically equivalent of …","A <code>StructArray</code> is a nested <code>Array</code> with an optional validity …","A trait describing the ability of a struct to create …","A trait describing the ability of a struct to extend from …","A trait describing the ability of a struct to receive new …","A type definition <code>PrimitiveArray</code> for <code>u16</code>","A type definition <code>MutablePrimitiveArray</code> for <code>u16</code>","A type definition <code>PrimitiveArray</code> for <code>u32</code>","A type definition <code>MutablePrimitiveArray</code> for <code>u32</code>","A type definition <code>PrimitiveArray</code> for <code>u64</code>","A type definition <code>MutablePrimitiveArray</code> for <code>u64</code>","A type definition <code>PrimitiveArray</code> for <code>u8</code>","A type definition <code>MutablePrimitiveArray</code> for <code>u8</code>","<code>UnionArray</code> represents an array whose each slot can contain …","A <code>Utf8Array</code> is arrow’s semantic equivalent of an …","Iterator of values of an <code>Utf8Array</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","If the key type always can be converted to <code>usize</code>.","Applies a function <code>f</code> to the validity of this array.","Applies a function <code>f</code> to the validity of this array.","Applies a function <code>f</code> to the values of this array, cloning …","Applies a function <code>f</code> to the values of this array, cloning …","Boxes self into a <code>std::sync::Arc&lt;dyn Array&gt;</code>.","Boxes self into a <code>std::sync::Arc&lt;dyn Array&gt;</code>.","Boxes self into a <code>std::sync::Arc&lt;dyn Array&gt;</code>.","Boxes self into a <code>std::sync::Arc&lt;dyn Array&gt;</code>.","Boxes self into a <code>Arc&lt;dyn Array&gt;</code>.","Boxes self into a <code>Arc&lt;dyn Array&gt;</code>.","Boxes self into a <code>std::sync::Arc&lt;dyn Array&gt;</code>.","Boxes self into a <code>std::sync::Arc&lt;dyn Array&gt;</code>.","Boxes self into a <code>std::sync::Arc&lt;dyn Array&gt;</code>.","Boxes self into a <code>std::sync::Arc&lt;dyn Array&gt;</code>.","Boxes self into a <code>std::sync::Arc&lt;dyn Array&gt;</code>.","Boxes self into a <code>std::sync::Arc&lt;dyn Array&gt;</code>.","","Converts itself to a reference of <code>Any</code>, which enables …","Convert to <code>Any</code>, to enable dynamic casting.","","","","","","","","","","","","","","","","","","","","","","","","Converts itself to a mutable reference of <code>Any</code>, which …","","","","","","","","","","","","","Convert itself to an (immutable) atomically reference …","","","","","","","","","","","","Convert itself to an (immutable) <code>Array</code>.","","","","","","","","","","","","Convert to mutable <code>Any</code>, to enable dynamic casting.","","","","","","","","","","","","","Represents this key as a <code>usize</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Boxes self into a <code>Box&lt;dyn Array&gt;</code>.","Boxes self into a <code>Box&lt;dyn Array&gt;</code>.","Boxes self into a <code>Box&lt;dyn Array&gt;</code>.","Boxes self into a <code>Box&lt;dyn Array&gt;</code>.","Boxes self into a <code>Box&lt;dyn Array&gt;</code>.","Boxes self into a <code>Box&lt;dyn Array&gt;</code>.","Boxes self into a <code>Box&lt;dyn Array&gt;</code>.","Boxes self into a <code>Box&lt;dyn Array&gt;</code>.","Boxes self into a <code>Box&lt;dyn Array&gt;</code>.","Boxes self into a <code>Box&lt;dyn Array&gt;</code>.","Boxes self into a <code>Box&lt;dyn Array&gt;</code>.","Boxes self into a <code>Box&lt;dyn Array&gt;</code>.","","","Returns the capacity in number of items","Returns the capacity of this array","Returns the capacity of this <code>MutablePrimitiveArray</code>.","Reserves <code>additional</code> elements and <code>additional_values</code> on the …","Returns the capacity in number of items","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new <code>Array</code> which avoids problematic types for …","Clones a dynamic <code>Array</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>DataType</code> of the <code>Array</code>. In combination with …","The <code>DataType</code> of the array.","","","","Returns the <code>DataType</code> of this array.","","","Returns the arrays’ <code>DataType</code>.","","","Returns the <code>DataType</code> of this <code>DictionaryArray</code>","","","","","","","","","","Returns the arrays’ <code>DataType</code>.","","","","","","","","Returns the <code>DataType</code> of this array.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the default <code>DataType</code> of this container: …","Returns the default <code>DataType</code>, <code>DataType::Binary</code> or …","Returns the default <code>DataType</code> of this container: …","Returns a default <code>DataType</code> of this array, which depends on …","Returns a <code>DataType</code> consistent with <code>FixedSizeListArray</code>.","Returns a default <code>DataType</code>: inner field is named “item”…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Logically compares two <code>Array</code>s. Two arrays are logically …","","","","","","","Extends the <code>MutablePrimitiveArray</code> with a constant","Extends the <code>MutablePrimitiveArray</code> from a slice","Extends the <code>MutableBinaryValuesArray</code> from a <code>TrustedLen</code>","Extends the <code>MutableBinaryArray</code> from an iterator of …","Extends the <code>MutableBooleanArray</code> from an iterator of …","Extends the <code>MutablePrimitiveArray</code> from an iterator of …","Extends the <code>MutableUtf8Array</code> from an iterator of trusted …","Extends the <code>MutableUtf8ValuesArray</code> from a <code>TrustedLen</code>","Extends <code>MutableBinaryValuesArray</code> from an iterator of …","Extends the <code>MutableBinaryArray</code> from an iterator of …","Extends the <code>MutableBooleanArray</code> from an iterator of …","Extends the <code>MutablePrimitiveArray</code> from an iterator of …","Extends <code>MutableUtf8Array</code> from an iterator of trusted len.","Extends <code>MutableUtf8ValuesArray</code> from an iterator of trusted …","Extends the <code>MutableBinaryArray</code> from an iterator of trusted …","Extends the <code>MutableBooleanArray</code> from an iterator of values …","Extends the <code>MutablePrimitiveArray</code> from an iterator of …","Extends the <code>MutableUtf8Array</code> from an iterator of values of …","Extends the <code>MutableBinaryArray</code> from an <code>iterator</code> of values …","Extends the <code>MutableBooleanArray</code> from an iterator of values …","Extends the <code>MutablePrimitiveArray</code> from an iterator of …","Extends the <code>MutableUtf8Array</code> from an iterator of values of …","Extends the <code>MutableBinaryArray</code> from an iterator of values. …","Extends the <code>MutableUtf8Array</code> from an iterator of values. …","Returns the field (guaranteed to be a <code>Struct</code>)","","Returns the fields of this <code>StructArray</code>.","The fields.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Creates a new <code>MutableBinaryArray</code> from a slice of optional …","","Returns the argument unchanged.","","Creates a new <code>BinaryArray</code> from a slice of optional <code>&amp;[u8]</code>.","","Creates a new <code>MutableBooleanArray</code> out of a slice of …","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Creates a new <code>MutableFixedSizeBinaryArray</code> from a slice of …","Returns the argument unchanged.","Creates a new <code>FixedSizeBinaryArray</code> from a slice of …","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Creates a new <code>MutableUtf8Array</code> from a slice of optional …","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns a new <code>Utf8Array</code> from a slice of <code>&amp;str</code>.","Returns the argument unchanged.","","","","","","","","","","","","","","Creates a <code>FixedSizeBinaryArray</code> from an iterator of …","","","","","","","","","","Creates a new <code>MutableBinaryArray</code> from a <code>Iterator</code> of <code>&amp;[u8]</code>.","Returns a new <code>BinaryArray</code> from a <code>Iterator</code> of <code>&amp;[u8]</code>.","Creates a new <code>MutableUtf8Array</code> from a <code>Iterator</code> of <code>&amp;str</code>.","Creates a new <code>Utf8Array</code> from a <code>Iterator</code> of <code>&amp;str</code>.","Creates a new <code>BinaryArray</code> from slices of <code>&amp;[u8]</code>.","Creates a new <code>MutableBooleanArray</code> from a slice of <code>bool</code>.","Creates a new <code>BooleanArray</code> from a slice of <code>bool</code>.","Creates a <code>FixedSizeBinaryArray</code> from a slice of arrays of …","Creates a <code>MutablePrimitiveArray</code> from a slice of values.","Creates a (non-null) <code>PrimitiveArray</code> from a slice of values.","Returns a <code>Utf8Array</code> from a slice of <code>&amp;str</code>.","","Creates a <code>MutableBinaryValuesArray</code> from a <code>TrustedLen</code>","Creates a <code>MutableBinaryArray</code> from an iterator of trusted …","Creates a <code>BinaryArray</code> from a <code>TrustedLen</code>","Creates a <code>BooleanArray</code> from a <code>TrustedLen</code>.","Creates a <code>BooleanArray</code> from a <code>TrustedLen</code>.","Creates a <code>MutablePrimitiveArray</code> from a <code>TrustedLen</code>.","Creates a <code>PrimitiveArray</code> from a <code>TrustedLen</code> of optional …","Creates a <code>MutableUtf8Array</code> from an iterator of trusted …","Creates a <code>MutableUtf8ValuesArray</code> from a <code>TrustedLen</code>","Creates a <code>Utf8Array</code> from an iterator of trusted length.","Returns a new <code>MutableBinaryValuesArray</code> from an iterator of …","Creates a <code>MutableBinaryArray</code> from an iterator of trusted …","Creates a <code>BinaryArray</code> from an iterator of trusted length.","Creates a <code>BooleanArray</code> from an iterator of trusted length. …","Creates a <code>BooleanArray</code> from an iterator of trusted length. …","Creates a <code>MutablePrimitiveArray</code> from an iterator of …","Creates a <code>PrimitiveArray</code> from an iterator of optional …","Creates a <code>MutableUtf8Array</code> from an iterator of trusted …","Returns a new <code>MutableUtf8ValuesArray</code> from an iterator of …","Creates a <code>Utf8Array</code> from an iterator of trusted length.","Creates a new <code>BinaryArray</code> from a <code>TrustedLen</code> of <code>&amp;[u8]</code>.","Returns a <code>BinaryArray</code> from an iterator of trusted length.","Creates a new <code>MutableBooleanArray</code> from an <code>TrustedLen</code> of …","Creates a new <code>BooleanArray</code> from an <code>TrustedLen</code> of <code>bool</code>.","Creates a new <code>MutablePrimitiveArray</code> out an iterator over …","Creates a (non-null) <code>PrimitiveArray</code> from a <code>TrustedLen</code> of …","Creates a new <code>MutableUtf8Array</code> from a <code>TrustedLen</code> of <code>&amp;str</code>.","Returns a (non-null) <code>Utf8Array</code> created from a <code>TrustedLen</code> …","Creates a new <code>BinaryArray</code> from a <code>TrustedLen</code> of <code>&amp;[u8]</code>.","Creates a new <code>MutableBooleanArray</code> from an <code>TrustedLen</code> of …","Creates a new <code>BooleanArray</code> from an <code>TrustedLen</code> of <code>bool</code>. Use …","Creates a new <code>MutablePrimitiveArray</code> from an iterator over …","Creates a new <code>PrimitiveArray</code> from an iterator over values","Creates a <code>MutableUtf8Array</code> from an iterator of trusted …","Creates a (non-null) <code>PrimitiveArray</code> from an iterator of …","Creates a (non-null) <code>MutablePrimitiveArray</code> from a vector …","Creates a (non-null) <code>PrimitiveArray</code> from a vector of …","","","","","","Returns a the inner <code>Field</code>","Return the length of the first child.","Returns a the inner <code>DataType</code>","Returns a function that writes the element of <code>array</code> at …","Returns the fields the <code>DataType::Struct</code>.","Returns all fields from <code>DataType::Union</code>.","Returns an option of a mutable reference to the values of …","","","","","","Returns a function that writes the value of the element of …","","","","Contains the trait <code>Growable</code> and corresponding concreate …","Returns the index and slot of the field to select from …","","Returns the index and slot of the field to select from …","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts itself into an <code>Array</code>.","Converts itself into an <code>Array</code>.","converts itself into <code>Arc&lt;dyn Array&gt;</code>","Converts itself into an <code>Array</code>.","Converts itself into an <code>Array</code>.","Converts itself into an <code>Array</code>.","Converts itself into an <code>Array</code>.","converts itself into <code>Box&lt;dyn Array&gt;</code>","converts itself into <code>Box&lt;dyn Array&gt;</code>","Deconstructs the <code>StructArray</code> into its individual …","Extract the low-end APIs from the <code>MutableUtf8Array</code>.","Extract the low-end APIs from the <code>MutableBinaryValuesArray</code>.","Returns its internal representation","Extract the low-end APIs from the <code>MutablePrimitiveArray</code>.","Returns its internal representation","Extract the low-end APIs from the <code>MutableStructArray</code>.","Extract the low-end APIs from the <code>MutableUtf8ValuesArray</code>.","","","","","","","","","","","","","","","","","","","","Try to convert this <code>BinaryArray</code> to a <code>MutableBinaryArray</code>","Try to convert this <code>BooleanArray</code> to a <code>MutableBooleanArray</code>","Try to convert this <code>PrimitiveArray</code> to a …","Try to convert this <code>Utf8Array</code> to a <code>MutableUtf8Array</code>","","","whether the array is empty","Whether the array is empty.","Returns whether slot <code>i</code> is null.","","","","","","Returns whether the values of this <code>DictionaryArray</code> are …","","Returns whether the <code>DataType::Union</code> is sparse or not.","Returns whether slot <code>i</code> is valid.","Whether <code>index</code> is valid / set.","","","","","","Returns an iterator of <code>&amp;[u8]</code>","Returns an iterator of <code>Option&lt;&amp;[u8]&gt;</code>","Returns an iterator of <code>Option&lt;&amp;[u8]&gt;</code> over every element of …","Returns an iterator over the optional values of this …","Returns an iterator over the optional values of this …","Returns an iterator of <code>Option&lt;Box&lt;dyn Scalar&gt;&gt;</code>.","constructs a new iterator","constructs a new iterator","Returns an iterator of <code>Option&lt;Box&lt;dyn Array&gt;&gt;</code>","Returns an iterator of <code>Option&lt;Box&lt;dyn Array&gt;&gt;</code>","Returns an iterator of <code>Option&lt;Box&lt;dyn Array&gt;&gt;</code>","Returns an iterator over <code>Option&lt;T&gt;</code>","Returns an iterator over the values and validity, …","Returns an iterator of <code>Option&lt;Box&lt;dyn Array&gt;&gt;</code>","constructs a new iterator","Returns an iterator of <code>Option&lt;&amp;str&gt;</code>","Returns an iterator of <code>&amp;str</code>","Returns an iterator of <code>Option&lt;&amp;str&gt;</code>","Returns an iterator over the the optional values of  …","Returns iterator over the values of …","Returns the keys’ value of the <code>DictionaryArray</code> as <code>usize</code>","Returns the dictionary keys","Returns the keys of the <code>DictionaryArray</code>. These keys can be …","","","Returns an iterator of the keys’ of the <code>DictionaryArray</code> …","Returns an iterator of the keys’ values of the …","The length of the <code>Array</code>. Every array has a length …","The length of the array.","Returns the length of this array","","","","Returns the length of this array","","Returns the length of this array","","","","Returns the length of this array","Returns the length of this array","","","Returns the length of this array","","The length of this array","","Returns the length of this array","Returns the length of this array","","","Returns the length of this array","","Returns the length of this array","","","","Returns the length of this array","","","","Returns the length of this array","","Returns the length of this array","","Returns the length of this array","Returns the length of this array","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the dictionary map","","","","","","","","","","","","","","","","","","","The values as a mutable reference","The values","The mutable values","Returns an empty <code>MutableBinaryValuesArray</code>.","Creates a new empty <code>MutableBinaryArray</code>.","Alias for unwrapping <code>Self::try_new</code>","Creates an new empty <code>MutableBooleanArray</code>.","Alias to <code>Self::try_new().unwrap()</code>","Creates an empty <code>MutableDictionaryArray</code>.","Creates a new empty <code>MutableFixedSizeBinaryArray</code>.","Creates a new <code>FixedSizeBinaryArray</code>.","Creates a new <code>MutableFixedSizeListArray</code> from a <code>MutableArray</code>…","Alias to <code>Self::try_new(...).unwrap()</code>","Creates a new empty <code>MutableListArray</code>.","Creates a new <code>ListArray</code>.","Creates a new <code>MapArray</code>.","Returns a new <code>NullArray</code>.","Creates a new empty <code>MutablePrimitiveArray</code>.","Alias for <code>Self::try_new(..).unwrap()</code>.","Creates a new <code>MutableStructArray</code>.","Returns a new <code>StructArray</code>","Returns a new <code>UnionArray</code>.","Initializes a new empty <code>MutableUtf8Array</code>.","Returns an empty <code>MutableUtf8ValuesArray</code>.","Creates a new <code>Utf8Array</code>.","Creates a new <code>ArrayValuesIter</code>","Creates an empty <code>BinaryArray</code>, i.e. whose <code>.len</code> is zero.","Returns a new empty <code>BooleanArray</code>.","Returns a new empty <code>DictionaryArray</code>.","Returns a new empty <code>FixedSizeBinaryArray</code>.","Returns a new empty <code>FixedSizeListArray</code>.","Returns a new empty <code>ListArray</code>.","Returns a new empty <code>MapArray</code>.","Returns a new empty <code>NullArray</code>.","Returns a new empty (zero-length) <code>PrimitiveArray</code>.","Creates an empty <code>StructArray</code>.","Creates a new empty <code>UnionArray</code>.","Returns a new empty <code>Utf8Array</code>.","Creates a new <code>Array</code> with a <code>Array::len</code> of 0.","Creates a new <code>MutableFixedSizeListArray</code> from a <code>MutableArray</code>…","Creates a new <code>MutableListArray</code> from a <code>MutableArray</code> and …","Creates an null <code>BinaryArray</code>, i.e. whose …","Returns a new <code>BooleanArray</code> whose all slots are null / <code>None</code>.","Returns an <code>DictionaryArray</code> whose all elements are null","Returns a new null <code>FixedSizeBinaryArray</code>.","Returns a new null <code>FixedSizeListArray</code>.","Returns a new null <code>ListArray</code>.","Returns a new null <code>MapArray</code> of <code>length</code>.","Returns a new <code>NullArray</code>.","Returns a new <code>PrimitiveArray</code> where all slots are null / …","Creates a null <code>StructArray</code> of length <code>length</code>.","Creates a new null <code>UnionArray</code>.","Returns a new <code>Utf8Array</code> whose all slots are null / <code>None</code>.","Creates a new <code>Array</code> of <code>DataType</code> <code>data_type</code> and <code>length</code>. The …","Create a <code>MutableUtf8Array</code> out of low-end APIs.","Returns a <code>MutableUtf8ValuesArray</code> created from its internal …","Creates a new <code>Utf8Array</code> without checking for offsets …","Creates a new <code>MutableListArray</code> from a <code>MutableArray</code> and …","Creates a new <code>MutableFixedSizeListArray</code> from a <code>MutableArray</code>…","Creates a new <code>MutableListArray</code> from a <code>MutableArray</code>.","","","","","","","","The number of null slots on this <code>Array</code>.","","The offsets of the array","returns its offsets.","returns its offsets.","","Returns the offsets of this <code>BinaryArray</code>.","The offsets","The offsets [<code>Buffer</code>].","returns the offsets","The optional offsets.","returns its offsets.","returns its offsets.","","Returns the offsets of this <code>Utf8Array</code>.","","","","","","","","","Contains functions and function factories to order values …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pop the last entry from <code>MutableBinaryValuesArray</code>. This …","Pop the last entry from <code>MutableBinaryArray</code>. This function …","Pop an entry from <code>MutableBooleanArray</code>. Note If the values …","Pop the last entry from <code>MutableFixedSizeBinaryArray</code>. This …","Pop a value from the array. Note if the values is empty, …","Pop the last entry from <code>MutableUtf8Array</code>. This function …","Pop the last entry from <code>MutableUtf8ValuesArray</code>. This …","Pushes a new item to the array.","Pushes a new element to the array.","Pushes a new entry to <code>MutableBooleanArray</code>.","pushes a new entry to <code>MutableFixedSizeBinaryArray</code>.","Adds a new value to the array.","Call this once for each “row” of children you push.","Pushes a new element to the array.","Pushes a new item to the array.","Adds a new null element to the array.","","","","pushes a null value","","","","","","","","","","","Reserves additional slots to its capacity.","Reserves <code>additional</code> elements and <code>additional_values</code> on the …","","","Reserves <code>additional</code> elements and <code>additional_values</code> on the …","","Reserves <code>additional</code> slots.","","Reserves <code>additional</code> slots.","Reserves <code>additional</code> slots.","","Reserves <code>additional</code> slots.","","Reserves <code>additional</code> slots.","","","Reserves <code>additional</code> entries.","","Reserves <code>additional</code> entries.","","Reserves <code>additional</code> elements and <code>additional_values</code> on the …","","Reserves <code>additional</code> elements and <code>additional_values</code> on the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets position <code>index</code> to <code>value</code>. Note that if it is the first …","Sets position <code>index</code> to <code>value</code>. Note that if it is the first …","Sets position <code>index</code> to <code>value</code>. Note that if it is the first …","Sets the validity of this <code>BinaryArray</code>.","Sets the validity of this <code>BooleanArray</code>.","Sets the validity of the keys of this <code>DictionaryArray</code>.","Sets the validity of this <code>FixedSizeBinaryArray</code>.","Sets the validity of this <code>FixedSizeListArray</code>.","Sets the validity of this <code>ListArray</code>.","Sets the validity of this <code>MapArray</code>.","Sets the validity.","Sets the validity of this <code>PrimitiveArray</code>.","Sets the validity of this <code>StructArray</code>.","Sets the validity of this <code>Utf8Array</code>.","Sets the values of this <code>BooleanArray</code>.","Sets values.","Update the values of this <code>PrimitiveArray</code>.","Shrink the array to fit its length.","Shrinks the capacity of the <code>MutableBinaryValuesArray</code> to …","","Shrinks the capacity of the <code>MutableBinaryArray</code> to fit its …","","Shrinks the capacity of the <code>MutableBooleanArray</code> to fit its …","","","Shrinks the capacity of the <code>MutableDictionaryArray</code> to fit …","","Shrinks the capacity of the <code>MutableFixedSizeBinaryArray</code> to …","Shrinks the capacity of the <code>MutableFixedSizeListArray</code> to …","","","Shrinks the capacity of the <code>MutableListArray</code> to fit its …","","Shrinks the capacity of the <code>MutablePrimitiveArray</code> to fit …","Shrinks the capacity of the <code>MutableStructArray</code> to fit its …","","","Shrinks the capacity of the <code>MutableUtf8Array</code> to fit its …","","Shrinks the capacity of the <code>MutableUtf8ValuesArray</code> to fit …","returns the (fixed) size of the <code>MutableFixedSizeBinaryArray</code>…","Returns the size","Returns the size (number of elements per slot) of this …","Returns the size (number of elements per slot) of this …","","","","","","Slices the <code>Array</code>, returning a new <code>Box&lt;dyn Array&gt;</code>.","","Creates a new <code>BinaryArray</code> by slicing this <code>BinaryArray</code>.","Returns a slice of this <code>BooleanArray</code>.","","Creates a new <code>DictionaryArray</code> by slicing the existing …","","Returns a slice of this <code>FixedSizeBinaryArray</code>.","","","Returns a slice of this <code>FixedSizeListArray</code>.","Returns a slice of this <code>ListArray</code>.","","","Returns a slice of this <code>MapArray</code>.","","Returns a slice of the <code>NullArray</code>.","Returns a clone of this <code>PrimitiveArray</code> sliced by an offset …","","Creates a new <code>StructArray</code> that is a slice of <code>self</code>.","","Returns a slice of this <code>UnionArray</code>.","","","Returns a slice of this <code>Utf8Array</code>.","Slices the <code>Array</code>, returning a new <code>Box&lt;dyn Array&gt;</code>.","","Creates a new <code>BinaryArray</code> by slicing this <code>BinaryArray</code>.","","Returns a slice of this <code>BooleanArray</code>.","","Creates a new <code>DictionaryArray</code> by slicing the existing …","Returns a slice of this <code>FixedSizeBinaryArray</code>.","","Returns a slice of this <code>FixedSizeListArray</code>.","","","Returns a slice of this <code>ListArray</code>.","Returns a slice of this <code>MapArray</code>.","","","Returns a clone of this <code>PrimitiveArray</code> sliced by an offset …","","","Creates a new <code>StructArray</code> that is a slice of <code>self</code>.","","Returns a slice of this <code>UnionArray</code>.","Returns a slice of this <code>Utf8Array</code>.","","","","","","Returns a new <code>FixedSizeBinaryArray</code> with a different …","Changes the arrays’ <code>DataType</code>, returning a new …","Returns a new <code>PrimitiveArray</code> with a different logical type.","Clone a <code>&amp;dyn Array</code> to an owned <code>Box&lt;dyn Array&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallible version of <code>Extend::extend</code>.","","","This is infalible and is implemented for consistency with …","","","","This is infalible and is implemented for consistency with …","","","Tries to extend itself with elements from <code>other</code>, failing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a new <code>MutableBinaryValuesArray</code> from an iterator.","Creates a new <code>MutableFixedSizeBinaryArray</code> from an iterator …","Creates a <code>FixedSizeBinaryArray</code> from an fallible iterator …","Returns a new <code>MutableUtf8ValuesArray</code> from an iterator.","Returns a new <code>DictionaryArray</code>.","Creates a <code>MutableBinaryArray</code> from an falible iterator of …","Creates a <code>BinaryArray</code> from an fallible iterator of trusted …","Creates a <code>BooleanArray</code> from a <code>TrustedLen</code>.","Creates a <code>BooleanArray</code> from a <code>TrustedLen</code>.","Creates a <code>MutablePrimitiveArray</code> from an fallible iterator …","Creates a <code>MutableUtf8Array</code> from an falible iterator of …","Creates a <code>Utf8Array</code> from an fallible iterator of trusted …","Creates a <code>MutableBinaryArray</code> from an falible iterator of …","Creates a <code>BinaryArray</code> from an falible iterator of trusted …","Creates a <code>BooleanArray</code> from an falible iterator of trusted …","Creates a <code>BooleanArray</code> from an falible iterator of trusted …","Creates a <code>MutablePrimitiveArray</code> from an fallible iterator …","Creates a <code>MutableUtf8Array</code> from an falible iterator of …","Creates a <code>Utf8Array</code> from an falible iterator of trusted …","Returns a the inner <code>Field</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a <code>MutableBinaryValuesArray</code> created from its …","Returns a <code>MutableBinaryArray</code> created from its internal …","Returns a <code>BinaryArray</code> created from its internal …","The canonical method to create a <code>MutableBooleanArray</code> out …","The canonical method to create a <code>BooleanArray</code> out of …","Returns a new <code>DictionaryArray</code>.","Creates a new <code>MutableFixedSizeBinaryArray</code>.","Creates a new <code>FixedSizeBinaryArray</code>.","Creates a new <code>FixedSizeListArray</code>.","Creates a new <code>ListArray</code>.","Returns a new <code>MapArray</code>.","Returns a new <code>NullArray</code>.","The canonical method to create a <code>MutablePrimitiveArray</code> out …","The canonical method to create a <code>PrimitiveArray</code> out of its …","Create a <code>MutableStructArray</code> out of low-end APIs.","Returns a new <code>StructArray</code>.","Returns a new <code>UnionArray</code>.","Returns a <code>MutableUtf8Array</code> created from its internal …","Returns a <code>MutableUtf8ValuesArray</code> created from its internal …","Returns a <code>Utf8Array</code> created from its internal …","Returns a new <code>DictionaryArray</code>.","Creates a new <code>Utf8Array</code> without checking for offsets …","Tries to push a new element.","","","This is infalible and is implemented for consistency with …","","tries to push a new entry to <code>MutableFixedSizeBinaryArray</code>.","","","This is infalible and is implemented for consistency with …","","","Needs to be called when a valid value was extended to this …","Needs to be called when a valid value was extended to this …","","","","","","","","","","","","","","","","","","","","","","","","","The types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The validity of the <code>Array</code>: every array has an optional …","The optional validity of the array.","","","","The optional validity.","","Returns the optional validity.","","","The optional validity. Equivalent to <code>self.keys().validity()</code>…","","","The optional validity.","","","","The optional validity.","","","The optional validity.","","","","Returns the optional validity.","","","","The optional validity.","","","","The optional validity.","","","","","","","","","","","","","","","","","","","Returns the value of the element at index <code>i</code>.","Returns the element at index <code>i</code>","Returns the value at index <code>i</code>","Returns the value of the <code>DictionaryArray</code> at position <code>i</code>.","Returns the element at index <code>i</code> as <code>&amp;[u8]</code>","Returns value at position <code>i</code>.","Returns the <code>Vec&lt;T&gt;</code> at position <code>i</code>.","Returns the element at index <code>i</code>","Returns the element at index <code>i</code>.","Returns the value at slot <code>i</code>.","Return the <code>i</code>th child array.","Returns the slot <code>index</code> as a <code>Scalar</code>.","Returns the value of the element at index <code>i</code>, ignoring the …","Returns the value of the element at index <code>i</code>.","Returns the value of the element at index <code>i</code>, ignoring the …","Returns the value of the element at index <code>i</code>.","Returns the element at index <code>i</code>","Returns the element at index <code>i</code> as bool","Returns the element at index <code>i</code> as <code>&amp;[u8]</code>","Returns the element at index <code>i</code> as &amp;str","Returns the <code>Vec&lt;T&gt;</code> at position <code>i</code>.","Returns the element at index <code>i</code> as &amp;str","Returns the element at index <code>i</code>.","Returns the value at index <code>i</code>. The value on null slots is …","Returns the slot <code>index</code> as a <code>Scalar</code>.","Returns the value of the element at index <code>i</code>, ignoring the …","Returns the value of the element at index <code>i</code>.","Returns the value of the element at index <code>i</code>, ignoring the …","The values of the array","returns its values.","returns its values.","Returns the values of this <code>BinaryArray</code>.","","Returns its values.","The values <code>Bitmap</code>. Values on null slots are undetermined …","returns a reference to the inner values.","Returns the values of the <code>DictionaryArray</code>.","Returns its values.","Returns the values allocated on this <code>FixedSizeBinaryArray</code>.","The inner values","Returns the inner array.","The values","The values.","Returns its values.","The values <code>Buffer</code>. Values on null slots are undetermined …","The values","Returns the values of this <code>StructArray</code>.","returns its values.","returns its values.","","Returns the values of this <code>Utf8Array</code>.","","","","","","","","","","","","","","","","","","","","","Returns an iterator over the values of this array","Returns an iterator of <code>&amp;[u8]</code> over every element of this …","Returns an iterator over the values of this …","Returns an iterator over the values of this <code>BooleanArray</code>.","Returns an iterator of <code>Box&lt;dyn Scalar&gt;</code>","Returns iterator over the values of <code>FixedSizeBinaryArray</code>","Returns an iterator of <code>Box&lt;dyn Array&gt;</code>","Returns an iterator of <code>Box&lt;dyn Array&gt;</code>","Returns an iterator of <code>Box&lt;dyn Array&gt;</code>","Returns an iterator of <code>T</code>","Returns an iterator of the values, <code>&amp;T</code>, ignoring the arrays…","Returns an iterator of <code>Box&lt;dyn Array&gt;</code>","Returns an iterator of <code>&amp;str</code>","Returns an iterator of <code>&amp;str</code>","Returns an iterator over the the values [<code>V::IterValue</code>].","Returns a mutable slice of values.","Returns a mutable slice of values.","","","","","","","","","","","","","","","","","","","","","","","","","Initializes a new <code>MutableBinaryValuesArray</code> with a …","Initializes a new <code>MutableBinaryArray</code> with a pre-allocated …","Initializes a new <code>MutableUtf8Array</code> with a pre-allocated …","Initializes a new <code>MutableUtf8ValuesArray</code> with a …","Initializes a new <code>MutableBinaryValuesArray</code> with a …","Initializes a new <code>MutableBinaryArray</code> with a pre-allocated …","Creates an new <code>MutableBooleanArray</code> with a capacity of …","Creates a new <code>MutableFixedSizeBinaryArray</code> with capacity …","Creates a new <code>MutableListArray</code> with a capacity.","Creates a new <code>MutablePrimitiveArray</code> with a capacity.","Initializes a new <code>MutableUtf8Array</code> with a pre-allocated …","Initializes a new <code>MutableUtf8ValuesArray</code> with a …","Creates a new <code>MutablePrimitiveArray</code> from a capacity and …","Clones this <code>Array</code> with a new new assigned bitmap.","Returns this <code>BinaryArray</code> with a new validity.","","Returns this <code>BooleanArray</code> with a new validity.","","","Returns this <code>DictionaryArray</code> with a new validity.","","Returns this <code>FixedSizeBinaryArray</code> with a new validity.","Returns this <code>FixedSizeListArray</code> with a new validity.","","","Returns this <code>ListArray</code> with a new validity.","","Returns this <code>MapArray</code> with a new validity.","","","Returns this <code>PrimitiveArray</code> with a new validity.","Returns this <code>StructArray</code> with a new validity.","","","","Returns this <code>Utf8Array</code> with a new validity.","Returns a clone of this <code>BooleanArray</code> with new values.","Returns this <code>PrimitiveArray</code> with new values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes a struct that can be extended from slices of …","Concrete <code>Growable</code> for the <code>BinaryArray</code>.","Concrete <code>Growable</code> for the <code>BooleanArray</code>.","Concrete <code>Growable</code> for the <code>DictionaryArray</code>.","Concrete <code>Growable</code> for the <code>FixedSizeBinaryArray</code>.","Concrete <code>Growable</code> for the <code>FixedSizeListArray</code>.","Concrete <code>Growable</code> for the <code>ListArray</code>.","Concrete <code>Growable</code> for the <code>NullArray</code>.","Concrete <code>Growable</code> for the <code>PrimitiveArray</code>.","Concrete <code>Growable</code> for the <code>StructArray</code>.","Concrete <code>Growable</code> for the <code>UnionArray</code>.","Concrete <code>Growable</code> for the <code>Utf8Array</code>.","","","","","","","","","","","","","","","","","","","","","Converts this <code>Growable</code> to an <code>Arc&lt;dyn Array&gt;</code>, thereby …","Converts this <code>Growable</code> to an <code>Box&lt;dyn Array&gt;</code>, thereby …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extends this <code>Growable</code> with elements from the bounded <code>Array</code> …","","","","","","","","","","","","","","","","","","","","","Extends this <code>Growable</code> with null elements, disregarding the …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","The current length of the <code>Growable</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Growable</code> from an arbitrary number of <code>Array</code>s.","Creates a new <code>GrowableBinary</code> bound to <code>arrays</code> with a …","Creates a new <code>GrowableUnion</code> bound to <code>arrays</code> with a …","Creates a new <code>GrowableBoolean</code> bound to <code>arrays</code> with a …","Creates a new <code>GrowableFixedSizeBinary</code> bound to <code>arrays</code> with …","Creates a new <code>GrowableNull</code>.","Creates a new <code>GrowablePrimitive</code> bound to <code>arrays</code> with a …","Creates a new <code>GrowableList</code> bound to <code>arrays</code> with a …","Creates a new <code>GrowableStruct</code> bound to <code>arrays</code> with a …","Creates a new <code>GrowableFixedSizeList</code> bound to <code>arrays</code> with a …","Creates a new <code>GrowableUtf8</code> bound to <code>arrays</code> with a …","Creates a new <code>GrowableDictionary</code> bound to <code>arrays</code> with a …ompare the values at two arbitrary indices in two arrays.","returns a comparison function that compares values at two …","Total order of all native types whose Rust implementation …","implements comparison using IEEE 754 total ordering for f32","implements comparison using IEEE 754 total ordering for f64","An immutable container semantically equivalent to …","This crates’ equivalent of <code>std::vec::IntoIter</code> for <code>Bitmap</code>.","A container of booleans. <code>MutableBitmap</code> is semantically …","","","","Compute bitwise AND operation","Returns the byte slice of this <code>Bitmap</code>.","Returns the slice of bytes of this <code>MutableBitmap</code>. Note …","","","","","Apply a bitwise operation <code>op</code> to two inputs and return the …","Apply a bitwise binary operation to a <code>MutableBitmap</code>.","","","","","","","","","","","","","","","","","","Returns the capacity of <code>MutableBitmap</code> in number of bits.","","","","","","","","","","Creates a <code>Vec&lt;u8&gt;</code> from a <code>TrustedLen</code> of <code>BitChunk</code>.","Returns an iterator over bits in bit chunks <code>BitChunk</code>.","Empties the <code>MutableBitmap</code>.","","","","","","","","","","","","","","","","","","","","","","","","Extends <code>MutableBitmap</code> by <code>additional</code> values of constant …","Extends the <code>MutableBitmap</code> from a <code>Bitmap</code>.","Extends the <code>MutableBitmap</code> from a slice of bytes with …","Extends <code>self</code> from a <code>TrustedLen</code> iterator.","Extends <code>self</code> from an iterator of trusted len.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Creates a Vec from an <code>Iterator</code> of <code>BitChunk</code>.","","","Initializes a <code>MutableBitmap</code> with all values set to valid/ …","Initializes a zeroed <code>MutableBitmap</code>.","Creates a new <code>Bitmap</code> from an iterator of booleans.","Creates a new <code>MutableBitmap</code> from an iterator of booleans.","Creates a new <code>Bitmap</code> from an iterator of booleans.","Creates a new <code>MutableBitmap</code> from an iterator of booleans.","Creates a new <code>Bitmap</code> from a slice and length.","Alias for <code>Bitmap::try_new().unwrap()</code> This function is <code>O(1)</code>","Initializes a <code>MutableBitmap</code> from a <code>Vec&lt;u8&gt;</code> and a length. …","Returns whether the bit at position <code>i</code> is set.","Returns whether the position <code>index</code> is set.","Returns whether the bit at position <code>i</code> is set.","Unsafely returns whether the bit at position <code>i</code> is set.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Converts this <code>Bitmap</code> to <code>MutableBitmap</code>, returning itself if …","Returns whether <code>Bitmap</code> is empty","Returns whether <code>MutableBitmap</code> is empty.","Returns a new iterator of <code>bool</code> over this bitmap","constructs a new iterator over the bits of <code>MutableBitmap</code>.","Returns the length of the <code>Bitmap</code>.","Returns the length of the <code>MutableBitmap</code>.","","","","","","","","","Converts this <code>Bitmap</code> into a <code>MutableBitmap</code>, cloning its …","Initializes an empty <code>Bitmap</code>.","Creates a new <code>IntoIter</code> from a <code>Bitmap</code>","Initializes an empty <code>MutableBitmap</code>.","Initializes an new <code>Bitmap</code> filled with unset values.","","","","","","Returns the number of unset bits on this <code>Bitmap</code>.","Returns the number of unset bits on this <code>MutableBitmap</code>.","Counts the nulls (unset bits) starting from <code>offset</code> bits …","","Compute bitwise OR operation","","","","","","","Pop the last bit from the <code>MutableBitmap</code>. Note if the …","Pushes a new bit to the <code>MutableBitmap</code>, re-sizing it if …","Pushes a new bit to the <code>MutableBitmap</code>","Apply a bitwise operation <code>op</code> to four inputs and return the …","Reserves <code>additional</code> bits in the <code>MutableBitmap</code>, potentially …","","","","","","","Sets the position <code>index</code> to <code>value</code>","","Sets the position <code>index</code> to <code>value</code>","Shrinks the capacity of the <code>MutableBitmap</code> to fit its …","","Slices <code>self</code>, offsetting by <code>offset</code> and truncating up to …","Slices <code>self</code>, offseting by <code>offset</code> and truncating up to …","Apply a bitwise operation <code>op</code> to three inputs and return …","","","","","","","Creates a new <code>Bitmap</code> from a fallible iterator of booleans.","Creates a new <code>MutableBitmap</code> from an iterator of booleans.","Creates a new <code>Bitmap</code> from a fallible iterator of booleans.","Creates a new <code>MutableBitmap</code> from an falible iterator of …","","","","Initializes a new <code>Bitmap</code> from vector of bytes and a length.","Initializes a new <code>MutableBitmap</code> from a <code>Vec&lt;u8&gt;</code> and a …","","","","Apply a bitwise operation <code>op</code> to one input and return the …","Applies a function to every bit of this <code>MutableBitmap</code> in …","Returns the number of unset bits on this <code>Bitmap</code>.","Returns the number of unset bits on this <code>MutableBitmap</code>.","","","","","","","","","","","General utilities for bitmaps representing items where LSB …","","","","","Initializes a pre-allocated <code>MutableBitmap</code> with capacity …","","","","","","","Compute bitwise XOR operation","A chunk of bits. This is used to create masks of a given …","Trait representing an exact iterator over bytes in <code>BitChunk</code>…","This struct is used to efficiently iterate over bit masks …","An iterator over a slice of bytes in <code>BitChunk</code>s.","An iterator over mutable slices of bytes of exact size.","An iterator over bits according to the LSB, i.e. the bytes …","There are null values","There are no null values","Iterator over a bitmap that returns slices of set regions …","An <code>Iterator</code> over <code>Option&lt;T&gt;</code> This enum can be used in two …","An <code>Iterator</code> over validity and values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of bytes required to hold <code>bits</code> bits.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of zero bits in the slice offsetted by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Formats <code>bytes</code> taking into account an offset and length of …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","convert itself from bytes.","Returns whether bit at position <code>i</code> in <code>data</code> is set","Returns whether bit at position <code>i</code> in <code>data</code> is set or not.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns whether there are still elements in this iterator","Returns whether bit at position <code>i</code> in <code>byte</code> is set or not","","","Returns the number of chunks of this iterator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>BitChunksExact</code>.","Creates a <code>BitChunks</code>.","Returns a new <code>BitChunksExactMut</code>","Creates a new <code>BitmapIter</code>.","Creates a new <code>SlicesIterator</code>","Creates a new <code>ZipValidityIter</code>.","Returns a new <code>ZipValidity</code>","Returns a new <code>ZipValidity</code> and drops the <code>validity</code> if all …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The remainder of the iterator.","Returns the remaining <code>BitChunk</code>. It is zero iff <code>len / 8 == 0</code>…","","","Returns the remainder <code>BitChunk</code>.","The remainder slice","","","","An iterator over individual items of the remainder","The number of items in the remainder","","","Returns the remainder bits in <code>BitChunks::remainder</code>.","The length of the remainder slice in bits.","","","","","","","","","","","","","","","","","","Sets bit at position <code>i</code> in <code>byte</code>","Sets bit at position <code>i</code> in <code>data</code>","Sets bit at position <code>i</code> in <code>data</code> without doing bound checks","","","","","","","Returns the total number of slots. It corresponds to the …","","","","","convert itself into bytes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unwrap into an iterator that has null values.","Unwrap into an iterator that has no null values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>Buffer</code> is a contiguous memory region that can be shared …","","","","","Returns the byte slice stored in this buffer","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns a mutable reference to its underlying <code>Vec</code>, if …","","Calls <code>U::from(self)</code>.","","","Returns whether the buffer is empty.","Returns the number of bytes in the buffer","","","","Creates an empty <code>Buffer</code>.","","","Returns the offset of this buffer.","","","","","","Get the strong count of underlying <code>Arc</code> data buffer.","Get the weak count of underlying <code>Arc</code> data buffer.","Returns a new <code>Buffer</code> that is a slice of this buffer …","Returns a new <code>Buffer</code> that is a slice of this buffer …","","","","","","","","","","","","","","","","","","","A vector of trait objects of <code>Array</code> where every item has …","","returns the <code>Array</code>s in <code>Chunk</code>","","","","","","","","","","returns the <code>Array</code>s in <code>Chunk</code>","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Consumes <code>Chunk</code> into its underlying arrays. The arrays are …","returns whether the columns have any rows","returns the number of rows of every array","","","Creates a new <code>Chunk</code>.","","","","","","","","Creates a new <code>Chunk</code>.","","","","","","","","Contains different aggregation functions","Defines basic arithmetic kernels for <code>PrimitiveArray</code>s.","Defines kernels suitable to perform operations to …","Defines generics suitable to perform operations to …","null-preserving operators such as <code>and</code>, <code>or</code> and <code>not</code>.","Boolean operators of Kleene logic.","Defines different casting operators such as <code>cast</code> or …","Contains comparison operators","Contains the concatenate kernel","Contains operators to filter arrays such as <code>filter</code>.","Contains the operator <code>if_then_else</code>.","Defines take kernel for <code>Array</code>","The maximum value","The minimum value","Trait describing a type describing multiple lanes with an …","Object that can reduce itself to a number. This is used in …","Whether <code>max</code> supports <code>data_type</code>","Whether <code>min</code> supports <code>data_type</code>","Whether <code>sum</code> supports <code>data_type</code>","Returns the total (heap) allocated size of the array in …","Returns the maximum of <code>Array</code>. The scalar is null when all …","Returns the maximum value in the binary array, according …","Returns the maximum value in the boolean array","reduce itself to the minimum","lane-wise maximum between two instances","Returns the maximum value in the array, according to the …","Returns the maximum value in the string array, according …","Returns the minimum of <code>Array</code>. The scalar is null when all …","Returns the minimum value in the binary array, according …","Returns the minimum value in the boolean array.","reduce itself to the maximum","lane-wise minimum between two instances","Returns the minimum value in the array, according to the …","Returns the minimum value in the string array, according …","returns a new instance with all lanes equal to <code>MAX</code>","returns a new instance with all lanes equal to <code>MIN</code>","Reduces this element to a single value.","Returns the sum of all elements in <code>array</code> as a <code>Scalar</code> of …","Returns the sum of values in the array.","Defines basic addition operation for primitive arrays","Defines checked addition operation for primitive arrays","Defines checked division operation for primitive arrays","Defines checked multiplication operation for primitive …","Defines checked reminder operation for primitive arrays","Defines checked subtraction operation for primitive arrays","Defines basic division operation for primitive arrays","Defines basic multiplication operation for primitive arrays","Defines Overflowing addition operation for primitive arrays","Defines Overflowing multiplication operation for primitive …","Defines Overflowing subtraction operation for primitive …","Defines basic reminder operation for primitive arrays","Defines saturating addition operation for primitive arrays","Defines saturating multiplication operation for primitive …","Defines saturating subtraction operation for primitive …","Defines basic subtraction operation for primitive arrays","Defines wrapping addition operation for primitive arrays","Defines wrapping multiplication operation for primitive …","Defines wrapping subtraction operation for primitive arrays","Adds two <code>Array</code>s.","Adds itself to <code>rhs</code>","Adds an <code>Array</code> and a <code>Scalar</code>.","Contains arithemtic functions for <code>PrimitiveArray</code>s.","Returns whether two <code>DataType</code>s can be added by <code>add</code>.","Returns whether two <code>DataType</code>s can be divided by <code>div</code>.","Returns whether two <code>DataType</code>s can be multiplied by <code>mul</code>.","Whether <code>neg</code> is supported for a given <code>DataType</code>","Returns whether two <code>DataType</code>s “can be remainder” by <code>rem</code>…","Returns whether two <code>DataType</code>s can be subtracted by <code>sub</code>.","Checked add","checked division","checked multiplication","checked remainder","checked subtraction","Defines the arithmetic kernels for Decimal <code>PrimitiveArrays</code>…","Divide of two <code>Array</code>s.","division","Divide an <code>Array</code> with a <code>Scalar</code>.","Multiply two <code>Array</code>s.","multiplication","Multiply an <code>Array</code> with a <code>Scalar</code>.","Negates an <code>Array</code>.","Overflowing add","overflowing multiplication","overflowing subtraction","Remainder of two <code>Array</code>s.","remainder","Saturating add","saturating multiplication","saturarting subtraction","Subtracts two <code>Array</code>s.","subtraction","Adds an <code>Array</code> and a <code>Scalar</code>.","Defines the arithmetic kernels for adding a Duration to a …","Adds itself to <code>rhs</code> using wrapping addition","wrapping multiplication","wrapping subtraction","Trait describing a <code>NativeType</code> whose semantics of …","Adds two primitive arrays with the same type. Panics if …","Adds a scalar T to a primitive array of type T. Panics if …","Checked addition of two primitive arrays. If the result …","Checked addition of a scalar T to a primitive array of …","Checked division of two primitive arrays. If the result …","Checked division of a primitive array of type T by a …","Checked multiplication of two primitive arrays. If the …","Checked multiplication of a scalar T to a primitive array …","Checked negates values from array.","Checked operation of raising an array of primitives to the …","Checked remainder of two primitive arrays. If the result …","Checked remainder of a primitive array of type T by a …","Checked subtraction of two primitive arrays. If the result …","Checked subtraction of a scalar T to a primitive array of …","Divides two primitive arrays with the same type. Panics if …","Divide a primitive array of type T by a scalar T. Panics …","Multiplies two primitive arrays with the same type. Panics …","Multiply a scalar T to a primitive array of type T. Panics …","Negates values from array.","Overflowing addition of two primitive arrays. If the …","Overflowing addition of a scalar T to a primitive array of …","Overflowing multiplication of two primitive arrays. If the …","Overflowing multiplication of a scalar T to a primitive …","Overflowing subtraction of two primitive arrays. If the …","Overflowing subtraction of a scalar T to a primitive array …","Raises an array of primitives to the power of exponent. …","Remainder of two primitive arrays with the same type. …","Remainder a primitive array of type T by a scalar T. …","Saturating addition of two primitive arrays. If the result …","Saturated addition of a scalar T to a primitive array of …","Saturating multiplication of two primitive arrays. If the …","Saturated multiplication of a scalar T to a primitive …","Saturating subtraction of two primitive arrays. If the …","Saturated subtraction of a scalar T to a primitive array …","Subtracts two primitive arrays with the same type. Panics …","Subtract a scalar T to a primitive array of type T. Panics …","Wrapping addition of two <code>PrimitiveArray</code>s. It wraps around …","Wrapping addition of a scalar T to a <code>PrimitiveArray</code> of …","Wrapping multiplication of two <code>PrimitiveArray</code>s. It wraps …","Wrapping multiplication of a scalar T to a <code>PrimitiveArray</code> …","Wrapping negates values from array.","Wrapping subtraction of two <code>PrimitiveArray</code>s. It wraps …","Wrapping subtraction of a scalar T to a <code>PrimitiveArray</code> of …","Adaptive addition of two decimal primitive arrays with …","Adaptive division of two decimal primitive arrays with …","Adaptive multiplication of two decimal primitive arrays …","Adaptive subtract of two decimal primitive arrays with …","Adds two decimal <code>PrimitiveArray</code> with the same precision …","Checked addition of two decimal primitive arrays with the …","Checked division of two decimal primitive arrays with the …","Checked multiplication of two decimal primitive arrays …","Checked subtract of two decimal primitive arrays with the …","Divide two decimal primitive arrays with the same …","Multiply a decimal <code>PrimitiveArray</code> with a <code>PrimitiveScalar</code> …","Multiply two decimal primitive arrays with the same …","Multiply a decimal <code>PrimitiveArray</code> with a <code>PrimitiveScalar</code> …","Saturated addition of two decimal primitive arrays with …","Saturated division of two decimal primitive arrays with …","Saturated multiplication of two decimal primitive arrays …","Saturated subtraction of two decimal primitive arrays with …","Subtract two decimal primitive arrays with the same …","Adds a duration to a time array (Timestamp, Time and …","Adds a duration to a time array (Timestamp, Time and …","Adds an interval to a <code>DataType::Timestamp</code>.","Adds an interval to a <code>DataType::Timestamp</code>.","Subtract a duration to a time array (Timestamp, Time and …","Calculates the difference between two timestamps as …","Subtract a duration to a time array (Timestamp, Time and …","Calculates the difference between two timestamps returning …","Applies a binary operations to two primitive arrays. This …","Version of binary that creates a mutable bitmap that is …","Version of binary that returns an array and bitmap. Used …","Version of binary that checks for errors in the closure …","Version of unary that checks for errors in the closure …","Applies an unary and infallible function to a …","Version of unary that creates a mutable bitmap that is …","Version of unary that returns an array and bitmap. Used …","Applies a binary function to two <code>PrimitiveArray</code>s, …","Applies an unary function to a <code>PrimitiveArray</code>, optionally …","Check if all of the values in the array are <code>true</code>","Performs <code>&amp;&amp;</code> operation on two <code>BooleanArray</code>, combining the …","Performs <code>AND</code> operation on an array and a scalar value. If …","Returns whether any of the values in the array is <code>true</code>","Returns a non-null <code>BooleanArray</code> with whether each value of …","Returns a non-null <code>BooleanArray</code> with whether each value of …","Performs unary <code>NOT</code> operation on an arrays. If value is …","Performs <code>||</code> operation on two <code>BooleanArray</code>, combining the …","Performs <code>OR</code> operation on an array and a scalar value. If …","Returns whether all values in the array are <code>true</code>","Logical ‘and’ operation on two arrays with Kleene logic","Logical ‘and’ operation on an array and a scalar value …","Returns whether any of the values in the array is <code>true</code>","Logical ‘or’ operation on two arrays with Kleene logic","Logical ‘or’ operation on an array and a scalar value …","options defining how Cast kernels behave","","","Conversion of binary","Cast <code>BinaryArray</code> to <code>DictionaryArray</code>, also known as packing.","Conversion of binary","Conversion to utf8","Casts a <code>BinaryArray</code> to a <code>PrimitiveArray</code>, making any …","Conversion to utf8","Casts the <code>BooleanArray</code> to a <code>BinaryArray</code>, casting trues to …","Casts the <code>BooleanArray</code> to a <code>PrimitiveArray</code>.","Casts the <code>BooleanArray</code> to a <code>Utf8Array</code>, casting trues to <code>&quot;1&quot;</code>…","","","Return true if a value of type <code>from_type</code> can be cast into a","Cast <code>array</code> to the provided data type and return a new <code>Array</code>…","","","","","","Conversion of dates","Conversion of dates","Casts <code>days_ms</code>s to <code>months_days_ns</code>. This operation is …","Returns a <code>PrimitiveArray&lt;i128&gt;</code> with the casted values. …","Returns a <code>PrimitiveArray&lt;i128&gt;</code> with the casted values. …","Returns a <code>PrimitiveArray&lt;i128&gt;</code> with the casted values. …","","","","Casts a <code>DictionaryArray</code> to a new <code>DictionaryArray</code> backed by …","Casts a <code>DictionaryArray</code> to a new <code>DictionaryArray</code> by …","Casts a <code>DictionaryArray</code> to its values’ <code>DataType</code>, also …","","","Casts f16 into f32","Returns a <code>PrimitiveArray&lt;i128&gt;</code> with the casted values. …","","Returns the argument unchanged.","","Returns a <code>PrimitiveArray&lt;i128&gt;</code> with the casted values. …","Calls <code>U::from(self)</code>.","","","Casts months represented as <code>i32</code>s to <code>months_days_ns</code>. This …","Returns a <code>Utf8Array</code> where every element is the utf8 …","","","default to false whether to cast to an integer at the …","Casts a <code>BinaryArray</code> to a <code>PrimitiveArray</code> at best-effort …","Casts a <code>Utf8Array</code> to a <code>PrimitiveArray</code> at best-effort using …","Cast <code>PrimitiveArray</code> as a <code>PrimitiveArray</code> Same as …","Returns a <code>BinaryArray</code> where every element is the binary …","Returns a <code>BooleanArray</code> where every element is different …","Cast <code>PrimitiveArray</code> to <code>DictionaryArray</code>. Also known as …","Cast <code>PrimitiveArray</code> to a <code>PrimitiveArray</code> of another …","Cast <code>PrimitiveArray</code> to a <code>PrimitiveArray</code> of the same …","Returns a <code>Utf8Array</code> where every element is the utf8 …","","","Conversion of time","Conversion of times","Conversion of times","Conversion of time","Conversion of times","Conversion of times","Conversion of timestamp","Conversion of timestamp","Conversion of timestamp","Returns a <code>Utf8Array</code> where every element is the utf8 …","","","","","","","","Conversion of utf8","Conversion to binary","Casts a <code>Utf8Array</code> to a Date32 primitive, making any …","Casts a <code>Utf8Array</code> to a Date64 primitive, making any …","Cast <code>Utf8Array</code> to <code>DictionaryArray</code>, also known as packing.","Conversion of utf8","<code>crate::temporal_conversions::utf8_to_timestamp_ns</code> applied …","Casts a <code>Utf8Array</code> to a <code>PrimitiveArray</code>, making any …","<code>crate::temporal_conversions::utf8_to_timestamp_ns</code> applied …","","default to false whether an overflowing cast should be …","","","Similar to dictionary_to_dictionary_keys, but overflowing …","Similar to dictionary_to_dictionary_values, but …","The 8 lane representation of <code>Self</code>","<code>NativeType</code> that supports a representation of 8 lanes","Trait declaring an 8-lane multi-data.","Trait implemented by implementors of <code>Simd8Lanes</code> whose <code>Simd8</code>…","Trait implemented by implementors of <code>Simd8Lanes</code> whose <code>Simd8</code>…","Comparison functions for <code>BinaryArray</code>","Comparison functions for <code>BooleanArray</code>","Returns whether a <code>DataType</code> is comparable is supported by <code>eq</code>…","Returns whether a <code>DataType</code> is supported by <code>eq_scalar</code>.","Returns whether a <code>DataType</code> is comparable is supported by <code>gt</code>…","Returns whether a <code>DataType</code> is comparable is supported by …","Returns whether a <code>DataType</code> is supported by <code>gt_eq_scalar</code>.","Returns whether a <code>DataType</code> is supported by <code>gt_scalar</code>.","Returns whether a <code>DataType</code> is comparable is supported by <code>lt</code>…","Returns whether a <code>DataType</code> is comparable is supported by <code>lt</code>…","Returns whether a <code>DataType</code> is supported by <code>lt_eq_scalar</code>.","Returns whether a <code>DataType</code> is supported by <code>lt_scalar</code>.","Returns whether a <code>DataType</code> is comparable is supported by …","Returns whether a <code>DataType</code> is supported by <code>neq_scalar</code>.","<code>==</code> between two <code>Array</code>s. Use <code>can_eq</code> to check whether the …","Equal","<code>==</code> between two <code>Array</code>s and includes validities in …","<code>==</code> between an <code>Array</code> and a <code>Scalar</code>. Use <code>can_eq_scalar</code> to …","<code>==</code> between an <code>Array</code> and a <code>Scalar</code> and includes validities …","Utility for low level end users that implement their own …","Utility for low level end users that implement their own …","loads a complete chunk","loads an incomplete chunk, filling the remaining items …","<code>&gt;</code> between two <code>Array</code>s. Use <code>can_gt</code> to check whether the …","Greater than","<code>&gt;=</code> between two <code>Array</code>s. Use <code>can_gt_eq</code> to check whether the …","Greater than or equal to","<code>&gt;=</code> between an <code>Array</code> and a <code>Scalar</code>. Use <code>can_gt_eq_scalar</code> to …","<code>&gt;</code> between an <code>Array</code> and a <code>Scalar</code>. Use <code>can_gt_scalar</code> to …","<code>&lt;</code> between two <code>Array</code>s. Use <code>can_lt</code> to check whether the …","Less than","<code>&lt;=</code> between two <code>Array</code>s. Use <code>can_lt_eq</code> to check whether the …","Less than or equal to","<code>&lt;=</code> between an <code>Array</code> and a <code>Scalar</code>. Use <code>can_lt_eq_scalar</code> to …","<code>&lt;</code> between an <code>Array</code> and a <code>Scalar</code>. Use <code>can_lt_scalar</code> to …","<code>!=</code> between two <code>Array</code>s. Use <code>can_neq</code> to check whether the …","Not equal","<code>!=</code> between two <code>Array</code>s and includes validities in …","<code>!=</code> between an <code>Array</code> and a <code>Scalar</code>. Use <code>can_neq_scalar</code> to …","<code>!=</code> between an <code>Array</code> and a <code>Scalar</code> and includes validities …","Comparison functions for <code>PrimitiveArray</code>","Comparison functions for <code>Utf8Array</code>","Perform <code>lhs == rhs</code> operation on <code>BinaryArray</code>.","Perform <code>lhs == rhs</code> operation on <code>BinaryArray</code> and include …","Perform <code>lhs == rhs</code> operation on <code>BinaryArray</code> and a scalar.","Perform <code>lhs == rhs</code> operation on <code>BinaryArray</code> and a scalar …","Perform <code>lhs &gt; rhs</code> operation on <code>BinaryArray</code>.","Perform <code>lhs &gt;= rhs</code> operation on <code>BinaryArray</code>.","Perform <code>lhs &gt;= rhs</code> operation on <code>BinaryArray</code> and a scalar.","Perform <code>lhs &gt; rhs</code> operation on <code>BinaryArray</code> and a scalar.","Perform <code>lhs &lt; rhs</code> operation on <code>BinaryArray</code>.","Perform <code>lhs &lt;= rhs</code> operation on <code>BinaryArray</code>.","Perform <code>lhs &lt;= rhs</code> operation on <code>BinaryArray</code> and a scalar.","Perform <code>lhs &lt; rhs</code> operation on <code>BinaryArray</code> and a scalar.","Perform <code>lhs != rhs</code> operation on <code>BinaryArray</code>.","Perform <code>lhs != rhs</code> operation on <code>BinaryArray</code>.","Perform <code>lhs != rhs</code> operation on <code>BinaryArray</code> and a scalar.","Perform <code>lhs != rhs</code> operation on <code>BinaryArray</code> and a scalar …","Evaluate <code>op(left, right)</code> for <code>BooleanArray</code> and scalar using …","Perform <code>lhs == rhs</code> operation on two <code>BooleanArray</code>s.","Perform <code>lhs == rhs</code> operation on two <code>BooleanArray</code>s and …","Perform <code>lhs == rhs</code> operation on a <code>BooleanArray</code> and a …","Perform <code>lhs == rhs</code> operation on a <code>BooleanArray</code> and a …","Perform <code>left &gt; right</code> operation on two arrays. Non-null …","Perform <code>left &gt;= right</code> operation on two arrays. Non-null …","Perform <code>left &gt;= right</code> operation on an array and a scalar …","Perform <code>left &gt; right</code> operation on an array and a scalar …","Perform <code>left &lt; right</code> operation on two arrays.","Perform <code>left &lt;= right</code> operation on two arrays.","Perform <code>left &lt;= right</code> operation on an array and a scalar …","Perform <code>left &lt; right</code> operation on an array and a scalar …","<code>lhs != rhs</code> for <code>BooleanArray</code>","<code>lhs != rhs</code> for <code>BooleanArray</code> and include validities in …","Perform <code>left != right</code> operation on an array and a scalar …","Perform <code>left != right</code> operation on an array and a scalar …","Evaluate <code>op(left, right)</code> for <code>PrimitiveArray</code> and scalar …","Perform <code>lhs == rhs</code> operation on two arrays.","Perform <code>lhs == rhs</code> operation on two arrays and include …","Perform <code>left == right</code> operation on an array and a scalar …","Perform <code>left == right</code> operation on an array and a scalar …","Perform <code>left &gt; right</code> operation on two arrays. Non-null …","Perform <code>left &gt;= right</code> operation on two arrays. Non-null …","Perform <code>left &gt;= right</code> operation on an array and a scalar …","Perform <code>left &gt; right</code> operation on an array and a scalar …","Perform <code>left &lt; right</code> operation on two arrays.","Perform <code>left &lt;= right</code> operation on two arrays.","Perform <code>left &lt;= right</code> operation on an array and a scalar …","Perform <code>left &lt; right</code> operation on an array and a scalar …","Perform <code>left != right</code> operation on two arrays.","Perform <code>left != right</code> operation on two arrays and include …","Perform <code>left != right</code> operation on an array and a scalar …","Perform <code>left != right</code> operation on an array and a scalar …","Perform <code>lhs == rhs</code> operation on <code>Utf8Array</code>.","Perform <code>lhs == rhs</code> operation on <code>Utf8Array</code> and include …","Perform <code>lhs == rhs</code> operation on <code>Utf8Array</code> and a scalar.","Perform <code>lhs == rhs</code> operation on <code>Utf8Array</code> and a scalar. …","Perform <code>lhs &gt; rhs</code> operation on <code>Utf8Array</code>.","Perform <code>lhs &gt;= rhs</code> operation on <code>Utf8Array</code>.","Perform <code>lhs &gt;= rhs</code> operation on <code>Utf8Array</code> and a scalar.","Perform <code>lhs &gt; rhs</code> operation on <code>Utf8Array</code> and a scalar.","Perform <code>lhs &lt; rhs</code> operation on <code>Utf8Array</code>.","Perform <code>lhs &lt;= rhs</code> operation on <code>Utf8Array</code>.","Perform <code>lhs &lt;= rhs</code> operation on <code>Utf8Array</code> and a scalar.","Perform <code>lhs &lt; rhs</code> operation on <code>Utf8Array</code> and a scalar.","Perform <code>lhs != rhs</code> operation on <code>Utf8Array</code>.","Perform <code>lhs != rhs</code> operation on <code>Utf8Array</code> and include …","Perform <code>lhs != rhs</code> operation on <code>Utf8Array</code> and a scalar.","Perform <code>lhs != rhs</code> operation on <code>Utf8Array</code> and a scalar. …","Concatenate multiple Array of the same type into a single …","Function that can filter arbitrary arrays","Returns a prepared function optimized to filter multiple …","Filters an Array, returning elements matching the filter …","Returns a new Chunk with arrays containing only values …","Returns the values from <code>lhs</code> if the predicate is <code>true</code> or …","Checks if an array of type <code>datatype</code> can perform take …","Returns a new <code>Array</code> with only indices at <code>indices</code>. Null …","Opaque binary data of variable length.","Opaque binary data of variable length whose offsets are …","A boolean represented as a single bit.","<code>true</code> and <code>false</code>.","The set of supported logical types in this crate.","An <code>i32</code> representing the elapsed time since UNIX epoch …","An <code>i64</code> representing the elapsed time since UNIX epoch …","The number of elapsed days and milliseconds, stored as 2 …","Two i32 representing days and ms","Decimal value with precision and scale precision is the …","Decimal backed by 256 bits","Dense union","A dictionary encoded array by <code>IntegerType</code>.","A dictionary encoded array (<code>key_type</code>, <code>value_type</code>), where …","Measure of elapsed time. This elapsed time is a physical …","Extension type.","Represents Arrow’s metadata of a “column”.","Opaque binary data of fixed size.","Opaque binary data of fixed size. Enum parameter specifies …","A list of some data type with fixed length.","A list of some logical data type with a fixed number of …","A 16-bit floating point number.","An 16-bit float","A 32-bit floating point number.","A <code>f32</code>","A 64-bit floating point number.","A <code>f64</code>","A signed 128-bit integer.","A signed 16-bit integer.","A signed 16-bit integer.","An <code>i16</code>","A signed 256-bit integer.","A signed 32-bit integer.","A signed 32-bit integer.","An <code>i32</code>","A signed 64-bit integer.","A signed 64-bit integer.","An <code>i64</code>","A signed 8-bit integer.","A signed 8-bit integer.","An <code>i8</code>","the set of valid indices types of a dictionary-encoded …","A “calendar” interval modeling elapsed time that takes …","Interval units defined in Arrow","Opaque binary data of variable length and 64-bit offsets.","Opaque binary data of variable length whose offsets are …","A list of some data type with variable length and 64-bit …","A list of some logical data type whose offsets are …","A variable-length string in Unicode with UFT-8 encoding …","A variable-length UTF-8 encoded string whose offsets are …","A list of some data type with variable length.","A list of some logical data type whose offsets are …","A nested type.","A nested type that is represented as","typedef for BTreeMap&lt;String, String&gt; denoting <code>Field</code>’s …","Time in microseconds.","Time in milliseconds.","months_days_ns(i32, i32, i64)","The number of elapsed months (i32), days (i32) and …","Time in nanoseconds.","A Null with no allocation.","Null type","The set of physical types: unique in-memory …","An array where each slot has a known compile-time size.","The set of all implementations of the sealed trait …","An ordered sequence of <code>Field</code>s with associated <code>Metadata</code>.","typedef for <code>Arc&lt;Schema&gt;</code>.","Time in seconds.","Sparse union","A nested type that contains an arbitrary number of fields.","A nested <code>DataType</code> with a given number of <code>Field</code>s.","A 32-bit time representing the elapsed time since midnight …","A 64-bit time representing the elapsed time since midnight …","The time units defined in Arrow.","A <code>i64</code> representing a timestamp measured in <code>TimeUnit</code> with …","An unsigned 16-bit integer.","An unsigned 16-bit integer.","An <code>u16</code>","An unsigned 32-bit integer.","An unsigned 32-bit integer.","An <code>u32</code>","An unsigned 64-bit integer.","An unsigned 64-bit integer.","An <code>u64</code>","An unsigned 8-bit integer.","An unsigned 8-bit integer.","An <code>u8</code>","A nested type that represents slots of differing types.","A nested datatype that can represent slots of differing …","Mode of <code>DataType::Union</code>","A variable-length string in Unicode with UTF-8 encoding.","A variable-length UTF-8 encoded string whose offsets are …","The number of elapsed whole months.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>Field</code>’s <code>DataType</code>.","Its logical <code>DataType</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether this physical type equals <code>PhysicalType::Primitive</code> …","","","","","","","","","","","","","","","","","","","The fields composing this schema.","Returns a new <code>Schema</code> with a subset of all fields whose …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","support get extension for metadata","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether the mode is dense","Its nullability","Returns whether the mode is sparse","","","","","","","","","","","","","","","","","","","Additional custom (opaque) metadata.","Optional metadata.","Its name","Creates a new <code>Field</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs a <code>UnionMode::Sparse</code> if the input bool is true, …","Returns <code>&amp;self</code> for all but <code>DataType::Extension</code>. For …","","","","","","","","","","the <code>PhysicalType</code> of this <code>DataType</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Field</code> with metadata.","Attaches a <code>Metadata</code> to <code>Schema</code>","","","","","","","","","","","","","","","","","","","Enum with all errors in this crate.","Wrapper for an error triggered by a dependency","Error during import or export to/from a format","When an invalid argument is passed to a function.","Wrapper for IO errors","Returned when functionality is not yet available.","Whenever incoming data from the C data interface, IPC or …","Whenever pushing to a container fails because it does not …","Typedef for a <code>std::result::Result</code> of an <code>Error</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Wraps an external error in an <code>Error</code>.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","ABI-compatible struct for <code>ArrowArray</code>","ABI-compatible struct for <code>ArrowArrayStream</code>.","Implements an iterator of <code>Array</code> consumed from the C stream …","ABI-compatible struct for <code>ArrowSchema</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","create an empty ArrowSchema","creates an empty <code>ArrowArray</code>, which can be used to import …","Creates an empty <code>ArrowArrayStream</code> used to import from a …","Exports an <code>Box&lt;dyn Array&gt;</code> to the C data interface.","Exports a <code>Field</code> to the C data interface.","Exports an iterator to the C stream interface","Returns the field provided by the stream","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Imports an <code>Array</code> from the C data interface.","Imports a <code>Field</code> from the C data interface.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Functionality to mmap in-memory data regions.","","","","","Advances this iterator by one array","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a new <code>ArrowArrayStreamReader</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a (non-null) <code>PrimitiveArray</code> from a slice of values.","APIs to read from and write to Arrow’s IPC format.","APIs to represent <code>Chunk</code> as a formatted table.","Struct containing <code>dictionary_id</code> and nested <code>IpcField</code>, …","Struct containing fields and whether the file is written …","","","A struct adapter of Read+Seek+Write to append to IPC files","","","","","","","","","","","","","","","","","","","","","","dictionary id","","","","","","","optional children","The fields in the schema","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Endianness of the file","","","","","","","","","APIs to read Arrow’s IPC format.","","","","","","","","","","","","","","","","","","","","","","","","","APIs to write to Arrow’s IPC format.","how dictionaries are tracked in this crate","The record contains a number of buffers that does not …","Metadata of an Arrow IPC file, written in the footer of …","An iterator of <code>Chunk</code>s from an Arrow IPC file.","A bitmap’s size is smaller than the required for the …","A buffer’s size is smaller than the required for the …","A buffer’s size is larger than the file size","The block is an invalid flatbuffer","The message’s body length is an invalid flatbuffer","The message’s buffers is an invalid flatbuffer","The compression is an invalid flatbuffer","The message’s data is an invalid flatbuffer","The footer’s dictionaries is an invalid flatbuffer","The footer is an invalid flatbuffer","The message’s header is an invalid flatbuffer","The dictionary id is an invalid flatbuffer","The dictionary is_delta is an invalid flatbuffer","The dictionary message is an invalid flatbuffer","The message’s nodes is an invalid flatbuffer","The footer’s record batches is an invalid flatbuffer","The footer’s schema is an invalid flatbuffer","The version is an invalid flatbuffer","The IPC file does not end with [b’A’, b’R’, b’R…","The IPC file does not start with [b’A’, b’R’, b’R…","Invalid dictionary id","Field id is not a dictionary","The message does not contain data","The file’s schema does not contain fields","RecordBatch messages do not contain buffers","The message does not contain a header","RecordBatch messages does not contain nodes","The file’s footer does not contain record batches","The file’s footer does not contain a schema","The first 4 bytes of the last 10 bytes is &lt; 0","The different types of errors that reading from IPC can …","Next item in the stream","Metadata of an Arrow IPC stream, written at the start of …","Arrow Stream reader.","Encodes the stream’s status after each read.","dictionaries can only contain dictionary messages; record …","Relative positions in the file is &lt; 0","A live stream without data","","","","","","","","","The blocks in the file","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Deserialize an flatbuffers-encoded Schema message into …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the inner memory scratches so they can be reused in a …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this FileReader, returning the underlying reader","","","The files’ <code>IpcSchema</code>","The IPC fields tracking dictionaries","Check if the stream is finished","","","","","","","","","","","","","","","Returns the <code>FileMetadata</code>","Return the schema of the stream","","","Creates a new <code>FileReader</code>. Use <code>projection</code> to only take …","Try to create a new stream reader","","","","","","","","","","","","","","","","","Reads the record batch at position <code>index</code> from the reader.","Reads all file’s dictionaries, if any This function is …","Read the Arrow IPC file’s metadata","Reads the metadata of the stream","","","","","","","","","","","","","","","","Return the schema of the file","Return the schema of the file","The schema that is read from the file footer","The schema that is read from the stream’s first message","","Set the inner memory scratches so they can be reused in a …","The total size of the file in bytes","","","","","","","","","","","","","","","","","","","","","Return the data inside this wrapper.","","","","","","","","","","","","","","","","","","","The IPC version of the stream","","","","","","","","","","","","","","","","","","","The size of the IPC buffer","number of bytes of all buffers in the record","the size of the file","Declared number of elements in the buffer","Declared length of the bitmap","Number of bits on the IPC buffer","The requested dictionary id","The requested dictionary id","Bytes required for the <code>length</code> and <code>type</code>","The name of the <code>NativeType</code>","Compression codec","Arrow file writer","LZ4 (framed)","An array <code>Chunk</code> with optional accompanying IPC fields.","Arrow stream writer","Options declaring the behaviour of writing to IPC","ZSTD","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the Arrow columns in this record.","","Whether the buffers should be compressed and which codec …","","Assigns every dictionary field a unique ID","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the IPC fields for this record.","","Write continuation bytes, and mark the stream as done","Write footer and closing tag, then mark the writer as done","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Get the inner memory scratches so they can be reused in a …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes itself, returning the inner writer.","Consumes itself into the inner writer","","","","","","","","","","","","","Creates a new <code>StreamWriter</code>","Creates a new <code>FileWriter</code>.","","","","","","","","","","","","","","","","","","","","","","","","Converts a Schema and IpcFields to a flatbuffers-encoded […","Set the inner memory scratches so they can be reused in a …","Starts the stream by writing a Schema message to it. Use …","Writes the header and first (schema) message to the file.","","","","","","","","","","Creates a new <code>FileWriter</code> from an existing file, seeking to …","","","","","","Creates a new <code>FileWriter</code> and writes the header to <code>writer</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Writes an <code>Array</code> to <code>arrow_data</code>","Writes <code>Chunk</code> to the stream","Writes <code>Chunk</code> to the file","","","","Returns a visual representation of <code>Chunk</code>","Memory maps dictionaries from an IPC file into","Memory maps an record batch from an IPC file into a <code>Chunk</code>.","Whether it is <code>i32</code> (false) or <code>i64</code> (true).","Sealed trait describing the subset (<code>i32</code> and <code>i64</code>) of <code>Index</code> …","A wrapper type of <code>Vec&lt;O&gt;</code> representing the invariants of …","A wrapper type of <code>Buffer&lt;O&gt;</code> that is guaranteed to:","","","Returns the byte slice stored in this buffer","Returns the byte slice stored in this buffer","","","","","","","Returns a reference to its internal <code>Buffer</code>.","Returns the capacity of <code>Offsets</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Extends itself with <code>additional</code> elements equal to the last …","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Copy-on-write API to convert <code>OffsetsBuffer</code> into <code>Offsets</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the inner <code>Vec</code>.","Returns the inner <code>Buffer</code>.","Returns the last offset of this container.","Returns the last offset of this container, which is …","Returns the number of offsets in this container.","Returns the length of this container","Returns the length an array with these offsets would be.","Returns an iterator with the lengths of the offsets","","","","","Returns an empty <code>Offsets</code> (i.e. with a single element, the …","Returns an empty <code>OffsetsBuffer</code> (i.e. with a single …","Returns <code>Offsets</code> assuming that <code>offsets</code> fulfills its …","Safety","Returns an <code>Offsets</code> whose all lengths are zero.","","","","","Pops the last element","Reserves <code>additional</code> entries.","","","","","Shrinks the capacity of self to fit.","Returns a new <code>OffsetsBuffer</code> that is a slice of this buffer …","Returns a range (start, end) corresponding to the position …","Returns a range (start, end) corresponding to the position …","Returns a range (start, end) corresponding to the position …","Returns a range (start, end) corresponding to the position …","","","Try extend from an iterator of lengths","Extends itself from another <code>Offsets</code>","Extends itself from another <code>Offsets</code> sliced by <code>start, length</code>","","","","","","","","Creates a new <code>Offsets</code> from an iterator of lengths","Try to create a new <code>Offsets</code> from a sequence of <code>lengths</code>","","","Pushes a new element with a given length.","Pushes a new element with a given length.","","","","","","","","","","","Returns a new <code>Offsets</code> with a capacity, allocating at least …","","","","","The <code>Scalar</code> implementation of binary (<code>Option&lt;Vec&lt;u8&gt;&gt;</code>).","The <code>Scalar</code> implementation of a boolean.","The <code>DictionaryArray</code> equivalent of <code>Array</code> for <code>Scalar</code>.","The <code>Scalar</code> implementation of fixed size binary ([…","The scalar equivalent of <code>FixedSizeListArray</code>. Like …","The scalar equivalent of <code>ListArray</code>. Like <code>ListArray</code>, this …","The representation of a single entry of a …","The implementation of <code>Scalar</code> for primitive, semantically …","Trait object declaring an optional value with a <code>DataType</code>. …","A single entry of a <code>crate::array::StructArray</code>.","A single entry of a <code>crate::array::UnionArray</code>.","The implementation of <code>Scalar</code> for utf8, semantically …","","","","","","","","","","","","convert itself to","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the logical type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","whether it is valid","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","returns a new <code>DictionaryScalar</code>","Returns a new <code>PrimitiveScalar</code>.","Returns a new <code>Utf8Scalar</code>","Returns a new <code>BinaryScalar</code>.","Returns a new <code>BooleanScalar</code>","returns a new <code>ListScalar</code>","A new <code>NullScalar</code>","Returns a new <code>StructScalar</code>","returns a new <code>FixedSizeListScalar</code>","Returns a new <code>FixedSizeBinaryScalar</code>.","Returns a new <code>UnionScalar</code>","creates a new <code>Scalar</code> from an <code>Array</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a new <code>PrimitiveScalar</code> with the same value but …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type of the union scalar","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The values of the <code>DictionaryScalar</code>","Returns the optional value.","Returns the value irrespectively of the validity.","Its value","The value","Its value","Returns the inner value","","","","","","","","The values of the <code>ListScalar</code>","Returns the values irrespectively of the validity.","The values of the <code>FixedSizeListScalar</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of days between 0001-01-01 and 1970-01-01","Number of microseconds in a second","Number of milliseconds in a second","Number of milliseconds in a day","Number of nanoseconds in a second","Number of seconds in a day","Adds an <code>interval</code> to a <code>timestamp</code> in <code>time_unit</code> units and …","Adds an <code>interval</code> to a <code>timestamp</code> in <code>time_unit</code> units without …","converts a <code>i32</code> representing a <code>date32</code> to <code>NaiveDate</code>","converts a <code>i32</code> representing a <code>date32</code> to <code>NaiveDateTime</code>","converts a <code>i64</code> representing a <code>date64</code> to <code>NaiveDate</code>","converts a <code>i64</code> representing a <code>date64</code> to <code>NaiveDateTime</code>","Parses an offset of the form <code>&quot;+WX:YZ&quot;</code> or <code>&quot;UTC&quot;</code> into …","converts a <code>i32</code> representing a <code>time32(ms)</code> to <code>NaiveTime</code>","converts a <code>i32</code> representing a <code>time32(s)</code> to <code>NaiveDateTime</code>","converts a <code>i64</code> representing a <code>time64(ns)</code> to <code>NaiveDateTime</code>","converts a <code>i64</code> representing a <code>time64(us)</code> to <code>NaiveDateTime</code>","converts a <code>i64</code> representing a <code>timestamp(ms)</code> to …","converts a <code>i64</code> representing a <code>timestamp(ns)</code> to …","converts a <code>i64</code> representing a <code>timestamp(s)</code> to <code>NaiveDateTime</code>","Converts a timestamp in <code>time_unit</code> and <code>timezone</code> into […","Converts a timestamp in <code>time_unit</code> and <code>timezone</code> into […","converts a <code>i64</code> representing a <code>timestamp(us)</code> to …","Calculates the scale factor between two TimeUnits. The …","Parses a <code>Utf8Array</code> to naive timestamp, i.e. …","Parses <code>value</code> to <code>Option&lt;i64&gt;</code> consistent with the Arrow’s …","Parses a <code>Utf8Array</code> to a timeozone-aware timestamp, i.e. …","Parses <code>value</code> to <code>Option&lt;i64&gt;</code> consistent with the Arrow’s …","An iterator of known, fixed size. A trait denoting Rusts’…","A chunk of bits. This is used to create masks of a given …","An [<code>Iterator&lt;Item=bool&gt;</code>] over a <code>BitChunk</code>. This iterator is …","An [<code>Iterator&lt;Item=usize&gt;</code>] over a <code>BitChunk</code> returning the …","Type denoting its representation as bytes. This is <code>[u8; N]</code> …","Two i32 representing days and ms","The difference between 1.0 and the next largest …","A 16-bit floating point number.","A 32-bit floating point number.","A 64-bit floating point number.","Whether it is <code>i32</code> (false) or <code>i64</code> (true).","Sealed trait describing the subset of <code>NativeType</code> (<code>i32</code>, <code>i64</code>…","Range of <code>Index</code>, equivalent to <code>(a..b)</code>. <code>Step</code> is unstable in …","A signed 128-bit integer.","A signed 16-bit integer.","A signed 256-bit integer.","A signed 32-bit integer.","A signed 64-bit integer.","A signed 8-bit integer.","months_days_ns(i32, i32, i64)","Sealed trait implemented by all physical types that can be …","Sealed trait describing the subset (<code>i32</code> and <code>i64</code>) of <code>Index</code> …","The corresponding variant of <code>PrimitiveType</code>.","The set of all implementations of the sealed trait …","An unsigned 16-bit integer.","An unsigned 32-bit integer.","An unsigned 64-bit integer.","An unsigned 8-bit integer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The number of days","The number of days","The in-memory representation of the DayMillisecond variant …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Type representation of the Float16 physical type","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert itself from <code>usize</code>.","From bytes in big endian","","","","","Casts from u16.","Casts an <code>f32</code> into <code>f16</code>","From bytes in little endian","","","","","convert itself from bytes.","Convert itself from <code>usize</code>.","Returns a new <code>i256</code> from two <code>i128</code>.","","","","","","","Physical representation of a decimal","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","The number of milliseconds","The number of months","The in-memory representation of the MonthDayNano variant …","","","","","","","","","","","","","","","","","Creates a new <code>BitChunkIter</code> with <code>len</code> bits.","Creates a new <code>BitChunkOnes</code> with <code>len</code> bits.","Returns a new <code>IndexRange</code>.","A new <code>days_ms</code>.","A new <code>months_days_ns</code>.","","","","","","","","The number of nanoseconds","","","","","","","","","","","","","","","","An iterator from (inclusive) <code>start</code> to (exclusive) <code>end</code>.","","","","","","","","","","","","","","","","","Contains traits and implementations of multi-data used in …","","","","","","To bytes in big endian","","","","","Casts to u16.","Casts this <code>f16</code> to <code>f32</code>","To bytes in little endian","","","","","convert itself into bytes.","","","","","","","","","Convert itself to <code>usize</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The type holding bits for masks.","Describes the ability to convert itself from a <code>BitChunk</code>.","Number of lanes","Type used for masking.","The <code>NativeType</code> of this struct. E.g. <code>f32</code> for a …","A struct that lends itself well to be compiled leveraging …","Trait implemented by some <code>NativeType</code> that have a SIMD …","The SIMD type associated with this trait. This type …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a tuple of 3 items whose middle item is itself, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Multi-Data correspondence of the native type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Multi-Data correspondence of the native type","Multi-Data correspondence of the native type","Multi-Data correspondence of the native type","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert itself from a slice.","Convert itself from a slice.","","","","","","","","","","","","","","","","creates a new Self from <code>v</code> by populating items from <code>v</code> up to …","","","","","","","","","","","","","","","","Multi-Data correspondence of the native type","Multi-Data correspondence of the native type","Multi-Data correspondence of the native type","Multi-Data correspondence of the native type","Multi-Data correspondence of the native type","Multi-Data correspondence of the native type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Multi-Data correspondence of the native type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets values to <code>default</code> based on <code>mask</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Multi-Data correspondence of the native type","Multi-Data correspondence of the native type","Multi-Data correspondence of the native type","Multi-Data correspondence of the native type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts numeric type to a <code>String</code>","Converts numeric type to a <code>String</code>","Converts numeric type to a <code>String</code>","Derive macro for arrow deserialize","Derive macro for arrow fields","Derive macro for arrow serialize","Enables the blanket implementations of <code>Vec&lt;T&gt;</code> as an Arrow …","Implementation and traits for deserializing from Arrow.","Implementation and traits for mapping rust types to Arrow …","Implementation and traits for serializing to Arrow.","The <code>arrow2::Array</code> type corresponding to this field","Implemented by <code>ArrowField</code> that can be deserialized from …","Top-level API to deserialize from Arrow","Return an iterator that deserializes an <code>Array</code> to an …","Returns a typed iterator to a target type from an …","Deserialize this field from arrow","Convert from a <code>arrow2::Array</code> to any collection that …","Same as <code>try_into_collection</code> except can coerce the …","Trait implemented by all types that can be used as an …","Represents the <code>FixedSizeBinary</code> Arrow type.","Represents the <code>FixedSizeList</code> Arrow type.","Maps a rust i128 to an Arrow Decimal where precision and …","Represents the <code>LargeString</code> Arrow type.","Represents the <code>LargeUtf8</code> Arrow type","Represents the <code>LargeList</code> Arrow type.","This should be <code>Self</code> except when implementing large offset …","","","","","","","Enables the blanket implementations of <code>Vec&lt;T&gt;</code> as an Arrow …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>DataType</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait that is implemented by all types that are …","API to flatten a Chunk consisting of an …","The [<code>arrow2::array::MutableArray</code>] that holds this value","Top-level API to serialize to Arrow","Serialize this field to arrow","Serializes an iterator into an <code>arrow2::MutableArray</code>","Convert an <code>arrow2::chunk::Chunk</code> containing a …","Create a new mutable array","Convert from any iterable collection into an <code>arrow2::Array</code>","Convert from any iterable collection into an <code>arrow2::Array</code> …","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","A 2-dimensional <code>bool</code> vector mask.","A 3-dimensional <code>bool</code> vector mask.","A 3-dimensional SIMD vector mask.","A 4-dimensional <code>bool</code> vector mask.","A 4-dimensional SIMD vector mask.","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","A 2x2 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","A quaternion representing an orientation.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Euler rotation sequences.","All false.","All false.","All false.","All false.","All false.","The identity transform.","The identity transform.","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","A 2x2 identity matrix, where all diagonal elements are <code>1</code>, …","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","A 4x4 identity matrix, where all diagonal elements are <code>1</code>, …","The identity quaternion. Corresponds to no rotation.","The identity transform.","The identity transform.","A 2x2 identity matrix, where all diagonal elements are <code>1</code>, …","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","A 4x4 identity matrix, where all diagonal elements are <code>1</code>, …","The identity quaternion. Corresponds to no rotation.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","A 2x2 column major matrix.","A 3x3 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","All NAN:s.","All NAN:s.","All NAN:s.","All NAN.","All NAN.","All NAN:s.","All NAN:s.","All NAN:s.","All NANs.","All NAN.","All NAN.","All NAN:s.","All NAN:s.","All NAN:s.","All NAN:s.","All NAN:s.","All NANs.","All NAN.","All NAN.","All NAN.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","A unit-length vector pointing along the negative W axis.","A unit-length vector pointing along the negative W axis.","A unit-length vector pointing along the negative W axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","A quaternion representing an orientation.","All true.","All true.","All true.","All true.","All true.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","A 2-dimensional vector.","","","","A 3-dimensional vector.","","","A 3-dimensional vector with SIMD support.","","A 4-dimensional vector with SIMD support.","","","","A unit-length vector pointing along the positive W axis.","A unit-length vector pointing along the positive W axis.","A unit-length vector pointing along the positive W axis.","A unit-length vector pointing along the positive W axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","Intrinsic three-axis rotation XYZ","Intrinsic three-axis rotation XZY","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","Intrinsic three-axis rotation YXZ","Intrinsic three-axis rotation YZX","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","The degenerate zero transform.","The degenerate zero transform.","A 3x3 matrix with all elements set to <code>0.0</code>.","All zeroes.","All zeroes.","A 2x2 matrix with all elements set to <code>0.0</code>.","A 3x3 matrix with all elements set to <code>0.0</code>.","A 4x4 matrix with all elements set to <code>0.0</code>.","All zeroes.","All zeroes.","The degenerate zero transform.","The degenerate zero transform.","A 2x2 matrix with all elements set to <code>0.0</code>.","A 3x3 matrix with all elements set to <code>0.0</code>.","A 4x4 matrix with all elements set to <code>0.0</code>.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","Intrinsic three-axis rotation ZXY","Intrinsic three-axis rotation ZYX","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","","","","","","","","","Adds two quaternions.","","","","","","","","Adds two quaternions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds two 2x2 matrices.","Adds two 2x2 matrices.","Adds two 3x3 matrices.","Adds two 3x3 matrices.","Adds two 3x3 matrices.","Adds two 4x4 matrices.","Adds two 4x4 matrices.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","","Returns the angle (in radians) between <code>self</code> and <code>rhs</code>.","Returns the angle (in radians) between two vectors.","Returns the angle (in radians) for the minimal rotation …","Returns the angle (in radians) between two vectors.","Returns the angle (in radians) for the minimal rotation …","Returns the angle (in radians) between <code>self</code> and <code>rhs</code>.","Returns the angle (in radians) between two vectors.","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Returns some vector that is orthogonal to the given one.","Returns some vector that is orthogonal to the given one.","Returns some vector that is orthogonal to the given one.","Given a unit-length vector return two other vectors that …","Given a unit-length vector return two other vectors that …","Given a unit-length vector return two other vectors that …","Returns any unit-length vector that is orthogonal to the …","Returns any unit-length vector that is orthogonal to the …","Returns any unit-length vector that is orthogonal to the …","","","","","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","","","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a bitmask with the lowest 2 bits set from the …","Returns a bitmask with the lowest 3 bits set from the …","Returns a bitmask with the lowest 4 bits set from the …","Returns a bitmask with the lowest 3 bits set from the …","Returns a bitmask with the lowest 4 bits set from the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>bool</code> vector mask types. ","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f64::clamp</code>.","Component-wise clamping of values, similar to <code>f64::clamp</code>.","Component-wise clamping of values, similar to <code>f64::clamp</code>.","Component-wise clamping of values, similar to <code>i32::clamp</code>.","Component-wise clamping of values, similar to <code>i32::clamp</code>.","Component-wise clamping of values, similar to <code>i32::clamp</code>.","Component-wise clamping of values, similar to <code>u32::clamp</code>.","Component-wise clamping of values, similar to <code>u32::clamp</code>.","Component-wise clamping of values, similar to <code>u32::clamp</code>.","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns the quaternion conjugate of <code>self</code>. For a unit …","Returns the quaternion conjugate of <code>self</code>. For a unit …","Computes the cross product of <code>self</code> and <code>rhs</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","Default <code>YXZ</code> as yaw (y-axis), pitch (x-axis), roll (z-axis).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","","","","","Divides a quaternion by a scalar value. The quotient is …","","","","","Divides a quaternion by a scalar value. The quotient is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a 2x2 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 4x4 matrix from column vectors.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>. The dot product …","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>. The dot product …","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","<code>f32</code> vector, quaternion and matrix types. ","<code>f64</code> vector, quaternion and matrix types. ","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Creates a <code>Vec3A</code> from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code> …","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","Creates a quaternion from a 3x3 rotation matrix inside a …","Creates a quaternion from a 3x3 rotation matrix inside a …","Creates an affine transform from the given rotation <code>angle</code>.","Creates an affine transformation matrix from the given 2D …","","Creates a 2D vector containing <code>[angle.cos(), angle.sin()]</code>. …","Creates a 2x2 matrix containing a rotation of <code>angle</code> (in …","Creates an affine transformation matrix from the given 2D …","Creates an affine transform from the given rotation <code>angle</code>.","Creates a 2x2 matrix containing a rotation of <code>angle</code> (in …","Creates an affine transformation matrix from the given 2D …","Creates a 2D vector containing <code>[angle.cos(), angle.sin()]</code>. …","Creates an affine transform from the given 2D rotation …","Creates an affine transform from the given 2D rotation …","Creates a new vector from an array.","Creates a new vector from an array.","Creates a rotation quaternion from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a rotation quaternion from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from a normalized rotation …","Creates a 3D rotation matrix from a normalized rotation …","Creates an affine transformation matrix containing a 3D …","Create a quaternion for a normalized rotation <code>axis</code> and …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from a normalized rotation …","Creates an affine transformation matrix containing a 3D …","Create a quaternion for a normalized rotation <code>axis</code> and …","Creates an affine transform from three column vectors.","Creates an affine transform from three column vectors.","Creates a 3x3 matrix from two column vectors.","Creates a 2x2 matrix from two column vectors.","Creates a 3x3 matrix from two column vectors.","Creates a 4x4 matrix from two column vectors.","Creates an affine transform from three column vectors.","Creates an affine transform from three column vectors.","Creates a 2x2 matrix from two column vectors.","Creates a 3x3 matrix from two column vectors.","Creates a 4x4 matrix from two column vectors.","Creates an affine transform from a <code>[f32; 6]</code> array stored …","Creates an affine transform from a <code>[f32; 12]</code> array stored …","Creates a 3x3 matrix from a <code>[f32; 9]</code> array stored in …","Creates a 2x2 matrix from a <code>[f32; 4]</code> array stored in …","Creates a 3x3 matrix from a <code>[f32; 9]</code> array stored in …","Creates a 4x4 matrix from a <code>[f32; 16]</code> array stored in …","Creates an affine transform from a <code>[f64; 6]</code> array stored …","Creates an affine transform from a <code>[f64; 12]</code> array stored …","Creates a 2x2 matrix from a <code>[f64; 4]</code> array stored in …","Creates a 3x3 matrix from a <code>[f64; 9]</code> array stored in …","Creates a 4x4 matrix from a <code>[f64; 16]</code> array stored in …","Creates an affine transform from a <code>[[f32; 2]; 3]</code> 2D array …","Creates an affine transform from a <code>[[f32; 3]; 4]</code> 3D array …","Creates a 3x3 matrix from a <code>[[f32; 3]; 3]</code> 3D array stored …","Creates a 2x2 matrix from a <code>[[f32; 2]; 2]</code> 2D array stored …","Creates a 3x3 matrix from a <code>[[f32; 3]; 3]</code> 3D array stored …","Creates a 4x4 matrix from a <code>[[f32; 4]; 4]</code> 4D array stored …","Creates an affine transform from a <code>[[f64; 2]; 3]</code> 2D array …","Creates an affine transform from a <code>[[f64; 3]; 4]</code> 3D array …","Creates a 2x2 matrix from a <code>[[f64; 2]; 2]</code> 2D array stored …","Creates a 3x3 matrix from a <code>[[f64; 3]; 3]</code> 3D array stored …","Creates a 4x4 matrix from a <code>[[f64; 4]; 4]</code> 4D array stored …","Creates an affine transform from the first 6 values in …","Creates an affine transform from the first 12 values in …","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates a 2x2 matrix from the first 4 values in <code>slice</code>.","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates a 4x4 matrix from the first 16 values in <code>slice</code>.","Creates an affine transform from the first 6 values in …","Creates an affine transform from the first 12 values in …","Creates a 2x2 matrix from the first 4 values in <code>slice</code>.","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates a 4x4 matrix from the first 16 values in <code>slice</code>.","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 2x2 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 4x4 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 2x2 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 4x4 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 3D rotation matrix from the given euler rotation …","Creates a 3D rotation matrix from the given euler rotation …","Creates a affine transformation matrix containing a …","Creates a quaternion from the given Euler rotation …","Creates a 3D rotation matrix from the given euler rotation …","Creates a affine transformation matrix containing a …","Creates a quaternion from the given Euler rotation …","Creates an affine transform from a 2x2 matrix (expressing …","Creates an affine transformation matrix from the given 2x2 …","Creates an affine transformation matrix from the given 2x2 …","Creates an affine transform from a 2x2 matrix (expressing …","Creates an affine transformation matrix from the given 2x2 …","Creates an affine transform from a 2x2 matrix (expressing …","Creates an affine transform from a 2x2 matrix (expressing …","The given <code>Mat3</code> must be an affine transform,","Creates an affine transform from a 3x3 matrix (expressing …","Creates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …","Creates an affine transformation matrix from the given 3x3 …","Creates a quaternion from a 3x3 rotation matrix.","The given <code>DMat3</code> must be an affine transform,","Creates an affine transform from a 3x3 matrix (expressing …","Creates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …","Creates an affine transformation matrix from the given 3x3 …","Creates a quaternion from a 3x3 rotation matrix.","Creates an affine transform from a 3x3 matrix (expressing …","Creates an affine transform from a 3x3 matrix (expressing …","The given <code>Mat3A</code> must be an affine transform,","Creates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …","Creates an affine transformation matrix from the given 3x3 …","Creates a quaternion from a 3x3 SIMD aligned rotation …","The given <code>Mat4</code> must be an affine transform, i.e. contain …","Creates a 3x3 matrix from a 4x4 matrix, discarding the 4th …","Creates a 3x3 matrix from a 4x4 matrix, discarding the 4th …","Creates a quaternion from a 3x3 rotation matrix inside a …","The given <code>DMat4</code> must be an affine transform, i.e. contain …","Creates a 3x3 matrix from a 4x4 matrix, discarding the 4th …","Creates a quaternion from a 3x3 rotation matrix inside a …","Creates an affine transform from the given <code>rotation</code> …","Creates a 3D rotation matrix from the given quaternion.","Creates a 3D rotation matrix from the given quaternion.","Creates an affine transformation matrix from the given …","Creates an affine transform from the given <code>rotation</code> …","Creates a 3D rotation matrix from the given quaternion.","Creates an affine transformation matrix from the given …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to either …","Gets the minimal rotation for transforming <code>from</code> to either …","Creates an affine transform from the given 3D <code>rotation</code> and …","Creates an affine transformation matrix from the given 3D …","Creates an affine transform from the given 3D <code>rotation</code> and …","Creates an affine transformation matrix from the given 3D …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform that changes scale. Note that …","Creates an affine transform that changes scale. Note that …","Creates an affine transformation matrix from the given …","Creates an affine transformation matrix from the given …","Creates an affine transformation matrix containing the …","Creates an affine transform that changes scale. Note that …","Creates an affine transform that changes scale. Note that …","Creates an affine transformation matrix from the given …","Creates an affine transformation matrix containing the …","Creates a 2x2 matrix containing the combining non-uniform …","Creates a 2x2 matrix containing the combining non-uniform …","Creates an affine transform from the given 2D <code>scale</code>, …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transform from the given 2D <code>scale</code>, …","Creates an affine transformation matrix from the given 2D …","Creates an affine transform from the given 3D <code>scale</code>, …","Creates an affine transformation matrix from the given 3D …","Creates an affine transform from the given 3D <code>scale</code>, …","Creates an affine transformation matrix from the given 3D …","Create a quaternion that rotates <code>v.length()</code> radians around …","Create a quaternion that rotates <code>v.length()</code> radians around …","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a rotation quaternion from a slice.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","Creates a rotation quaternion from a slice.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","Creates an affine transformation from the given 2D …","Creates an affine transformation from the given 3D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 3D …","Creates an affine transformation from the given 2D …","Creates an affine transformation from the given 3D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 3D …","Creates a new rotation quaternion from a 4D vector.","Creates a new rotation quaternion from a 4D vector.","Creates a new rotation quaternion.","Creates a new rotation quaternion.","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>i32</code> vector types. ","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return the inverse of this transform.","Return the inverse of this transform.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of a normalized quaternion.","Return the inverse of this transform.","Return the inverse of this transform.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of a normalized quaternion.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","","","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> of length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> of length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","","","","","","","","","","","","","","","","","","","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a 2x2 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 4x4 matrix from column vectors.","","","","","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","","","","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Multiplies two quaternions. If they each represent a …","","Multiplies a quaternion and a 3D vector, returning the …","Multiplies a quaternion by a scalar value.","","","","","","","","","","","","","","","","","","","","Multiplies a quaternion by a scalar value.","Multiplies two quaternions. If they each represent a …","Multiplies a quaternion and a 3D vector, returning the …","","","","","","","","","","","","","","","","","","","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","","","","","","","","","","","","","Multiplies two quaternions. If they each represent a …","","","","","","","","","","","Multiplies two quaternions. If they each represent a …","","","","","","","","","","","","","","","","","","","Multiplies two 2x2 matrices.","Multiplies two 2x2 matrices.","Multiplies two 3x3 matrices.","Multiplies two 3x3 matrices.","Multiplies two 3x3 matrices.","Multiplies two 4x4 matrices.","Multiplies two 4x4 matrices.","Multiplies two quaternions. If they each represent a …","Multiplies two quaternions. If they each represent a …","Multiplies a 3x3 matrix by a scalar.","Multiplies a 2x2 matrix by a scalar.","Multiplies a 3x3 matrix by a scalar.","Multiplies a 4x4 matrix by a scalar.","Multiplies a 2x2 matrix by a scalar.","Multiplies a 3x3 matrix by a scalar.","Multiplies a 4x4 matrix by a scalar.","Transforms a 2D vector.","Transforms a 2D vector.","Transforms a 3D vector.","Transforms a 3D vector.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a 3D vector.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a <code>Vec3A</code>.","Transforms a <code>Vec3A</code>.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a 4D vector.","Transforms a 4D vector.","","","","","","","","","","","","","","","","","","","","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","","","","","","","","","","","","Creates a left-handed orthographic projection matrix with …","Creates a left-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector that is equal to <code>self</code> rotated by 90 …","Returns a vector that is equal to <code>self</code> rotated by 90 …","Returns a vector that is equal to <code>self</code> rotated by 90 …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","Creates an infinite left-handed perspective projection …","Creates an infinite left-handed perspective projection …","Creates an infinite left-handed perspective projection …","Creates an infinite left-handed perspective projection …","Creates an infinite reverse right-handed perspective …","Creates an infinite reverse right-handed perspective …","Creates an infinite right-handed perspective projection …","Creates an infinite right-handed perspective projection …","Creates a left-handed perspective projection matrix with …","Creates a left-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with […","Creates a right-handed perspective projection matrix with […","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Transforms the given 3D vector as a point, applying …","Transforms the given 3D vector as a point, applying …","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","","","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Performs a spherical linear interpolation between <code>self</code> and …","Performs a spherical linear interpolation between <code>self</code> and …","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","","","","","","","","","","","","","","","","","Subtracts the <code>rhs</code> quaternion from <code>self</code>.","","","","","","","","Subtracts the <code>rhs</code> quaternion from <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Subtracts two 2x2 matrices.","Subtracts two 2x2 matrices.","Subtracts two 3x3 matrices.","Subtracts two 3x3 matrices.","Subtracts two 3x3 matrices.","Subtracts two 4x4 matrices.","Subtracts two 4x4 matrices.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Traits adding swizzle methods to all vector types. ","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y, z, w]</code>","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","Returns the rotation axis and angle (in radians) of <code>self</code>.","Returns the rotation axis and angle (in radians) of <code>self</code>.","","Creates a <code>[f32; 6]</code> array storing data in column major …","Creates a <code>[f32; 12]</code> array storing data in column major …","Creates a <code>[f32; 9]</code> array storing data in column major …","Creates a <code>[f32; 4]</code> array storing data in column major …","Creates a <code>[f32; 9]</code> array storing data in column major …","Creates a <code>[f32; 16]</code> array storing data in column major …","Creates a <code>[f64; 6]</code> array storing data in column major …","Creates a <code>[f64; 12]</code> array storing data in column major …","Creates a <code>[f64; 4]</code> array storing data in column major …","Creates a <code>[f64; 9]</code> array storing data in column major …","Creates a <code>[f64; 16]</code> array storing data in column major …","Creates a <code>[[f32; 2]; 3]</code> 2D array storing data in column …","Creates a <code>[[f32; 3]; 4]</code> 3D array storing data in column …","Creates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …","Creates a <code>[[f32; 2]; 2]</code> 2D array storing data in column …","Creates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …","Creates a <code>[[f32; 4]; 4]</code> 4D array storing data in column …","Creates a <code>[[f64; 2]; 3]</code> 2D array storing data in column …","Creates a <code>[[f64; 3]; 4]</code> 3D array storing data in column …","Creates a <code>[[f64; 2]; 2]</code> 2D array storing data in column …","Creates a <code>[[f64; 3]; 3]</code> 3D array storing data in column …","Creates a <code>[[f64; 4]; 4]</code> 4D array storing data in column …","Returns the rotation angles for the given euler rotation …","Returns the rotation angles for the given euler rotation …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …","Returns the rotation axis scaled by the rotation in …","Returns the rotation axis scaled by the rotation in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Transforms the given 2D point, applying shear, scale, …","Transforms the given 2D vector as a point.","Transforms the given 2D vector as a point.","Transforms the given 2D point, applying shear, scale, …","Transforms the given 2D vector as a point.","Transforms the given 3D points, applying shear, scale, …","Transforms the given 3D vector as a point.","Transforms the given 3D points, applying shear, scale, …","Transforms the given 3D vector as a point.","Transforms the given <code>Vec3A</code>, applying shear, scale, …","Transforms the given <code>Vec3A</code> as 3D point.","Transforms the given 2D vector, applying shear, scale and …","Rotates the given 2D vector.","Rotates the given 2D vector.","Transforms the given 2D vector, applying shear, scale and …","Rotates the given 2D vector.","Transforms the given 3D vector, applying shear, scale and …","Transforms the give 3D vector as a direction.","Transforms the given 3D vector, applying shear, scale and …","Transforms the give 3D vector as a direction.","Transforms the given <code>Vec3A</code>, applying shear, scale and …","Transforms the give <code>Vec3A</code> as 3D vector.","","","","","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","","For element <code>i</code> of <code>self</code>, return <code>v[i].trunc()</code>","","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>u32</code> vector types. ","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Writes the columns of <code>self</code> to the first 6 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 12 elements in …","Writes the columns of <code>self</code> to the first 9 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 4 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 9 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 16 elements in …","Writes the columns of <code>self</code> to the first 6 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 12 elements in …","Writes the columns of <code>self</code> to the first 4 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 9 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 16 elements in …","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the quaternion to an unaligned slice.","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …","Writes the quaternion to an unaligned slice.","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …eturns the vector part of the quaternion.","","","Returns the vector part of the quaterniondimensional <code>bool</code> vector mask.","A 3-dimensional <code>bool</code> vector mask.","A 3-dimensional SIMD vector mask.","A 4-dimensional <code>bool</code> vector mask.","A 4-dimensional SIMD vector mask.","","","","","","","","","","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","A 2x2 column major matrix.","A 3x3 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","A quaternion representing an orientation.","A 2-dimensional vector.","A 3-dimensional vector.","A 3-dimensional vector with SIMD support.","A 4-dimensional vector with SIMD support.","Creates a 2x2 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 4x4 matrix from column vectors.","","","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","","","","","","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","A 2x2 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","A quaternion representing an orientation.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Creates a 2x2 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 4x4 matrix from column vectors.","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vectordimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","Pixel is 8-bit alpha","AnimationDecoder trait","An Image in AVIF format.","Pixel contains 8-bit B, G and R channels","Pixel is 8-bit BGR with an alpha channel","An Image in BMP Format","The number of channels of this pixel type.","A string that can help to interpret the meaning each …","This pixel has the format of one of the predefined …","An enumeration over supported color types and bit depths","The maximum value for this type of primitive within the …","The minimum value for this type of primitive within the …","An Image in DDS Format","An error was encountered while decoding.","The delay of a frame relative to the previous one.","A Dynamic Image","Types which are safe to treat as an immutable byte slice …","An error was encountered while encoding.","An enumeration of color types encountered in image formats.","An Image in farbfeld Format","A flat buffer over a (multi channel) image.","A single animation frame","An implementation dependent iterator, reading the frames …","A trait for manipulating images.","Trait to inspect an image.","An Image in GIF Format","Sendable grayscale + alpha channel image buffer","Sendable grayscale image buffer","An Image in Radiance HDR Format","An Image in ICO Format","Generic image buffer","The trait that all decoders implement","Specialized image decoding not be supported by all formats","The trait all encoders implement","The generic error type for image operations.","An enumeration of supported image formats. Not all formats …","Each pixel in this image is 16-bit Luma","Each pixel in this image is 8-bit Luma","Each pixel in this image is 16-bit Luma with alpha","Each pixel in this image is 8-bit Luma with alpha","An enumeration of supported image formats for encoding.","Result of an image decoding/encoding process","Each pixel in this image is 16-bit Rgb","Each pixel in this image is 32-bit float Rgb","Each pixel in this image is 8-bit Rgb","Each pixel in this image is 16-bit Rgb with alpha","Each pixel in this image is 32-bit float Rgb with alpha","Each pixel in this image is 8-bit Rgb with alpha","An error occurred while interacting with the environment.","An Image in JPEG Format","An Image in JPEG Format with specified quality","Pixel is 1-bit luminance","Pixel is 16-bit luminance","Pixel is 16-bit luminance","Pixel is 2-bit luminance","Pixel is 4-bit luminance","Pixel is 8-bit luminance","Pixel is 8-bit luminance","Pixel is 1-bit luminance with an alpha channel","Pixel is 16-bit luminance with an alpha channel","Pixel is 16-bit luminance with an alpha channel","Pixel is 2-bit luminance with an alpha channel","Pixel is 4-bit luminance with an alpha channel","Pixel is 8-bit luminance with an alpha channel","Pixel is 8-bit luminance with an alpha channel","Completing the operation would have required more …","Grayscale colors.","Grayscale colors + alpha channel","An Image in OpenEXR Format","An error was encountered in input arguments.","A generalized pixel.","The type of pixel.","The pixel with an associated <code>ColorType</code>. Not all possible …","Immutable pixel iterator","An Image in PNG Format","An Image in PNG Format","An Image in general PNM Format","The type of each channel in a pixel. For example, this can …","Represents the progress of an image operation.","The type of reader produced by <code>into_reader</code>.","RGB colors.","Pixel contains 1-bit R, G and B channels","Pixel is 16-bit RGB","Pixel contains 16-bit R, G and B channels","Pixel contains 2-bit R, G and B channels","Pixel is 32-bit float RGB","Pixel is 32-bit float RGB","An image buffer for 32-bit float RGB pixels, where the …","Pixel contains 4-bit R, G and B channels","Pixel contains 8-bit R, G and B channels","Pixel contains 8-bit R, G and B channels","Sendable Rgb image buffer","RGB colors + alpha channel","Pixel is 1-bit RGB with an alpha channel","Pixel is 16-bit RGBA","Pixel is 16-bit RGB with an alpha channel","Pixel is 2-bit RGB with an alpha channel","Pixel is 32-bit float RGBA","Pixel is 32-bit float RGBA","An image buffer for 32-bit float RGBA pixels, where the …","Pixel is 4-bit RGB with an alpha channel","Pixel is 8-bit RGB with an alpha channel","Pixel is 8-bit RGB with an alpha channel","Sendable Rgb + alpha channel image buffer","A View into another image","The scalar type that is used to store each channel in this …","An Image in TGA Format","An Image in TIFF Format","Pixel is of unknown color type with the specified bits per …","An operation can not be completed by the chosen …","A value for signalling an error: An unsupported format was …","An Image in WEBP Format","","","","","","","","","","","","","","","","","","Adjust the contrast of this image. <code>contrast</code> is the amount …","Apply the function <code>f</code> to each channel of this pixel.","","","","","Apply the function <code>f</code> to each channel of this pixel and …","","","","","Apply the function <code>f</code> to each channel except the alpha …","","","","","Apply the function <code>f</code> to each channel except the alpha …","Get the bytes of this value.","Return this image’s pixels as a native endian byte slice.","Return a view on the raw sample buffer.","Return a view on the raw sample buffer for 32bit per …","Return a mutable view on the raw sample buffer.","Return a view on the raw sample buffer for 16 bit per …","Return a view on the raw sample buffer for 8 bit per …","Return a reference to an 16bit Grayscale image","Return a reference to an 8bit Grayscale image","Return a reference to an 16bit Grayscale image with an …","Return a reference to an 8bit Grayscale image with an …","Get a mutable reference based version.","Return a mutable reference to an 16bit Grayscale image","Return a mutable reference to an 8bit Grayscale image","Return a mutable reference to an 16bit Grayscale image …","Return a mutable reference to an 8bit Grayscale image with …","Return a mutable reference to an 16bit RGB image","Return a mutable reference to an 32bit RGB image","Return a mutable reference to an 8bit RGB image","Return a mutable reference to an 16bit RGBA image","Return a mutable reference to an 16bit RGBA image","Return a mutable reference to an 8bit RGBA image","View the samples as a slice.","Returns the underlying raw buffer","Get a reference based version.","Return a reference to an 16bit RGB image","Return a reference to an 32bit RGB image","Return a reference to an 8bit RGB image","Return a reference to an 16bit RGBA image","Return a reference to an 32bit RGBA image","Return a reference to an 8bit RGBA image","View the samples as a slice.","View this buffer as an image over some type of pixel.","Interpret this buffer as a mutable image.","View this buffer but keep mutability at a sample level.","","","","","","","","","","","","","","","","","","","Returns the number of bits contained in a pixel of …","Blend the color of a given pixel into ourself, taking into …","","","","","Put a pixel at location (x, y), taking into account alpha …","Put a pixel at location (x, y), taking into account alpha …","","Performs a Gaussian blur on this image. <code>sigma</code> is a measure …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bounding rectangle of this image.","Tuple of bounds in the order of coordinate inputs.","","","Brighten the pixels of this image. <code>value</code> is the amount to …","Iterators and other auxiliary structure for the <code>ImageBuffer</code>…","Returns the image buffer","","Returns a mutable image buffer","Returns the number of bytes contained in a pixel of …","Return if the ImageFormat can be decoded by the lib.","Return if the ImageFormat can be encoded by the lib.","","","","","","","","","","","","","","","","","","","Change the coordinates of this subimage.","Returns the number of color channels that make up this …","Get the number of channels for colors of this type.","Returns the components as a slice.","","","","","Returns the channels of this pixel as a 4 tuple. If the …","","","","","Returns the components as a mutable slice","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encoding and decoding for various image file formats.","Steps through the iterator from the current frame until …","Return this image’s color type.","Supplementary color information.","Returns the color type of the image data produced by this …","Examples","Copies all of the pixels from another image into this …","Copies all of the pixels from one part of this image to …","","Return a cut-out of this image delimited by the bounding …","Return a cut-out of this image delimited by the bounding …","A measure of completed decoding.","","","","","Delay of this frame","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a tuple containing the width and height of the …","The width and height of this image.","The width and height of this image.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enumerates over the pixels of the image. The iterator …","Enumerates over the pixels of the image. The iterator …","Enumerates over the rows of the image. The iterator yields …","Enumerates over the rows of the image. The iterator yields …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains detailed error representation.","Expands a color palette by re-using the existing buffer. …","Return a list of applicable extensions for this format.","Get the dimensions <code>(channels, width, height)</code>.","Filters this image with the specified 3x3 kernel.","Check if a buffer of length <code>len</code> is large enough.","Image representations for ffi.","Flip this image horizontally","Flip this image vertically","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Construct a pixel from the 4 channels a, b, c and d. If …","","","","","Decodes an encoded image into a dynamic image.","Return the image format specified by a path’s file …","Constructs a new ImageBuffer by repeated application of …","Return the image format specified by a MIME type.","Create a delay from a ratio of milliseconds.","Constructs a new frame","Return the image format specified by the path’s file …","Constructs a new ImageBuffer by copying a pixel","Constructs a buffer from a generic container (for example …","Convert from a duration, clamped between 0 and an …","Returns a view into a slice.","","","","","Returns mutable view into a mutable slice.","","","","","Creates an image buffer out of an existing buffer. Returns …","","","","","","","","","Get a mutable reference to a single sample.","Returns the pixel located at (x, y). Indexed from top left.","Gets a reference to the pixel at location <code>(x, y)</code>","","","Gets a reference to the pixel at location <code>(x, y)</code> or …","Gets a reference to the mutable pixel at location <code>(x, y)</code>. …","","Gets a reference to the mutable pixel at location <code>(x, y)</code>","Do not use is function: It is unimplemented!","Gets a reference to the mutable pixel at location <code>(x, y)</code> …","Get a reference to a single sample.","Return a grayscale version of this image. Returns <code>Luma</code> …","Guess image format from memory block","If there are any samples aliasing each other.","Returns if there is an alpha channel.","Returns false if the color scheme is grayscale, true …","","","","","","","","","The height of this image.","The height of this image.","Returns the height of the underlying image","","","Hue rotate the supplied image. <code>value</code> is the degrees to …","","Read a tuple containing the (width, height) of the image …","Mutable portion of the buffer that holds sample values.","Return the portion of the buffer that holds sample values.","Image Processing Functions","Returns true if this x, y coordinate is contained inside …","Check that the pixel and the channel index are in bounds.","Get an index provided it is inbouds.","Return a reference to a single sample at specified …","Resolve the index of a particular sample.","","","","","","Get the theoretical position of sample (x, y, channel).","Return a mutable reference to a single sample at specified …","","","","","","","","","","","","","","","","","","","","","","","","Get a reference to the underlying image.","","Get a mutable reference to the underlying image.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the image buffer","Return this image’s pixels as a byte vector. If the …","Return the raw sample buffer with its stride an dimension …","Consume the decoder producing a series of frames.","","","Consume the image and returns a Luma image.","Consume the image and returns a Luma image.","Consume the image and returns a LumaA image.","Consume the image and returns a LumaA image.","Returns the underlying raw buffer","Returns a reader that can be used to obtain the bytes of …","Consume the image and returns a RGB image.","Consume the image and returns a RGB image.","Consume the image and returns a RGB image.","Consume the image and returns a RGBA image.","Consume the image and returns a RGBA image.","Consume the image and returns a RGBA image.","Consumes the image buffer and returns the underlying data …","Invert this pixel","","","","","Invert the colors of this image. This method operates …","Input and output of images.","Check if a buffer fulfills the requirements of a normal …","","A <code>repr(C)</code> description of the layout of buffer samples.","Returns the x offset","","Create a new image from a Reader.","Create a new image from a byte slice","Create a new image from a byte slice","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Apply the function <code>f</code> to each channel of this pixel.","","","","","Apply the function <code>f</code> to each channel of this pixel and …","","","","","Apply the function <code>f</code> to each channel except the alpha …","","","","","Apply the function <code>f</code> to each channel except the alpha …","Mathematical helper functions and types.","Get the minimum length of a buffer such that all in-bounds …","","Creates a new <code>Frames</code> from an implementation specific …","Constructs a new frame without any delay.","Creates a new image buffer based on a <code>Vec&lt;P::Subpixel&gt;</code>.","Construct a new subimage The coordinates set the position …","Creates a dynamic image backed by a buffer of gray pixels.","Creates a dynamic image backed by a buffer of gray pixels.","Creates a dynamic image backed by a buffer of gray pixels …","Creates a dynamic image backed by a buffer of gray pixels …","Creates a dynamic image backed by a buffer of RGB pixels.","Creates a dynamic image backed by a buffer of RGB pixels.","Creates a dynamic image backed by a buffer of RGB pixels.","Creates a dynamic image backed by a buffer of RGBA pixels.","Creates a dynamic image backed by a buffer of RGBA pixels.","Creates a dynamic image backed by a buffer of RGBA pixels.","","","The numerator and denominator of the delay in milliseconds.","Open the image located at the path specified. The image’…","Returns the color type of the image file before decoding","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an Iterator over the pixels of this image. The …","Returns an iterator over the pixels of this image. The …","Returns an iterator over the mutable pixels of this image.","","Put a pixel at location (x, y). Indexed from top left.","Puts a pixel at location <code>(x, y)</code>","","","","Returns all the bytes in the image.","Same as <code>read_image</code> but periodically calls the provided …","Decode a rectangular section of the image; see …","Decode a rectangular section of the image, periodically …","Calculate a measure for remaining decoding work.","Resize this image using the specified filter algorithm. …","Resize this image using the specified filter algorithm. …","Resize this image using the specified filter algorithm. …","Rotate this image 180 degrees clockwise.","Rotate this image 270 degrees clockwise.","Rotate this image 90 degrees clockwise.","Returns an iterator over the rows of this image.","Returns an iterator over the mutable rows of this image.","Get the format of the buffer when viewed as a matrix of …","Underlying linear container holding sample values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Saves the buffer to a file at the path specified.","Saves the buffer to a file at the path specified.","Saves the supplied buffer to a file at the path specified.","Saves the supplied buffer to a file at the path specified …","Saves the buffer to a file at the specified path in the …","Saves the buffer to a file at the specified path in the …","Returns the minimum number of bytes that can be …","Set decoding limits for this decoder. See <code>Limits</code> for the …","Shrink the image to the minimum of current and given …","","Get the strides for indexing matrix-like <code>[(c, w, h)]</code>.","Returns a mutable subimage that is a view into this image. …","Create a mutable sub-view of the image.","Scale this image down to fit within a specific size. …","Scale this image down to a specific size. Returns a new …","Return a copy of this image’s pixels as a byte vector. …","Convert this subimage to an ImageBuffer","Convert this pixel to luma","","","","","Returns a copy of this image as a Luma image.","Returns a copy of this image as a Luma image.","Returns a copy of this image as a Luma image.","Convert this pixel to luma with an alpha channel","","","","","Returns a copy of this image as a LumaA image.","Returns a copy of this image as a LumaA image.","Returns a copy of this image as a LumaA image.","","","","","","","","","","","","","","","","","Convert this pixel to RGB","","","","","Returns a copy of this image as an RGB image.","Returns a copy of this image as an RGB image.","Returns a copy of this image as an RGB image.","Convert this pixel to RGB with an alpha channel","","","","","Returns a copy of this image as an RGBA image.","Returns a copy of this image as an RGBA image.","Returns a copy of this image as an RGBA image.","","Copy the data into an owned vector.","Returns the y offset","","A measure of all necessary decoding work.","","Returns the total number of bytes in the decoded image.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Move the data into an image buffer.","","","","","","","","","","","","","","","","","","","Returns the pixel located at (x, y). Indexed from top left.","Returns the pixel located at (x, y), ignoring bounds …","Puts a pixel at location (x, y). Indexed from top left.","Puts a pixel at location (x, y), ignoring bounds checking.","Performs an unsharpen mask on this image. <code>sigma</code> is the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a subimage that is an immutable view into this …","Create a sub-view of the image.","","","","","","","","","","","","","","","","","","","The width of this image.","The width of this image.","Returns the width of the underlying image","","","Create a monocolor image from a single pixel.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Writes the supplied buffer to a writer in the specified …","Writes all the bytes in an image to the encoder.","Writes the buffer to a writer in the specified format.","Encode this image and write it to <code>w</code>.","","","Provides color conversions for whole image buffers.","Enumerate the pixels of an image.","Enumerate the pixels of an image.","Enumerate the rows of an image.","Enumerate the rows of an image.","Iterate over pixel refs.","Iterate over mutable pixel refs.","Iterate over rows of an image","Iterate over mutable rows of an image","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts <code>self</code> to a buffer of type T","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeecoding and Encoding of JPEG Images","Decoding and Encoding of PNG Images","Pixels per centimeter","Pixels per inch (2.54 cm)","JPEG decoder","The representation of a JPEG encoder","Represents the absence of a unit, the values indicate only …","Represents the pixel density of an image","Represents a unit in which the density of an image is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a pixel density with a pixel aspect ratio of 1","A couple of values for (Xdensity, Ydensity)","","","","","","","","","","","","","","Creates the most common pixel density type: the horizontal …","","","","","Encodes the image stored in the raw byte buffer <code>image</code> that …","Encodes the given image.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Create a new decoder that decodes from the stream <code>r</code>","Create a new encoder that writes its output to <code>w</code>","Create a new encoder that writes its output to <code>w</code>, and has …","","","","","","","","","","","","","","","","","","","Configure the decoder to scale the image during decoding.","Set the pixel density of the images the encoder will …","","","","","","","","","","","","","","","","The unit in which the density is measured","","","","","","","","","","","","","","","","","","","","","","","","","","","Uses a heuristic to select one of the preceding filters …","An <code>AnimationDecoder</code> adapter of <code>PngDecoder</code>.","Filters based on the average of left and right neighbor …","High compression level","Compression level of a PNG encoder. The default setting is …","Default compression level","Fast, minimal compression","Filter algorithms used to process image data to improve …","Huffman coding compression","No processing done, best used for low bit depth grayscale …","Algorithm that takes into account the left, upper left, …","PNG decoder","PNG encoder","Png Reader","Run-length encoding compression","Filters based on previous pixel in the same scanline","Filters based on the scanline above","","","Turn this into an iterator over the animation frames.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the image <code>data</code> that has dimensions <code>width</code> and <code>height</code>…","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns if the image contains an animation.","","","","","","","","","","","","","Creates a new decoder that decodes from the stream <code>r</code>","Create a new encoder that writes its output to <code>w</code>","Create a new encoder that writes its output to <code>w</code> with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new decoder that decodes from the stream <code>r</code> with …","","","","","","","","","","","","","Write a PNG image with the specified width, height, and …","The required color type can not be handled.","An error was encountered while decoding.","An error was encountered while decoding an image.","The resulting image exceed dimension limits in either …","The dimensions passed are wrong.","An error was encountered while encoding.","An error was encountered while encoding an image.","The format is known exactly.","Repeated an operation for which error that could not be …","An image format is not supported.","A string describing the parameter. This is discouraged and …","Some feature specified by string. This is discouraged and …","The generic error type for image operations.","A best effort representation for image formats.","Result of an image decoding/encoding process","The operation would have performed an allocation larger …","An error occurred while interacting with the environment.","Completing the operation would have required more …","Indicates the limit that prevented an operation from …","Completing the operation would have required more …","The format can be identified by a name.","The end of the image has been reached.","An error was encountered in input arguments.","An error was encountered in inputs arguments.","Details how a parameter is malformed.","A common path extension for the format is known.","The format is not known or could not be determined.","An operation can not be completed by the chosen …","The specified strict limits are not supported for this …","The implementation for an operation was not provided.","Details what feature is not supported.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the image format associated with this error.","Return the image format associated with this error.","Returns the image format associated with this error.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Create an <code>UnsupportedError</code> for an image with details on …","Create an <code>EncodingError</code> for an image format.","Create a <code>DecodingError</code> for an image format.","Construct a <code>ParameterError</code> directly from a corresponding …","Construct a generic <code>LimitError</code> directly from a …","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the corresponding <code>UnsupportedErrorKind</code> of the …","Returns the corresponding <code>ParameterErrorKind</code> of the error.","Returns the corresponding <code>LimitErrorKind</code> of the error.","","","","","","","","","","","","","","","","","","","","","","Create an <code>EncodingError</code> that stems from an arbitrary error …","Create a <code>DecodingError</code> that stems from an arbitrary error …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The given limits","The supported strict limits","The samples are in column-major form and all samples are …","Denotes invalid flat sample buffers when trying to convert …","A flat buffer over a (multi channel) image.","All samples are packed.","Different normal forms of buffers.","The represented image can not use this representation.","At least pixels are packed.","The samples are in row-major form and all samples are …","A ffi compatible description of a sample buffer.","The represented image was too large.","No pixel aliases another.","A flat buffer that can be used as an image view.","A mutable owning version of a flat buffer.","The color format did not match the channel count.","","","","","","","","","","","","","","","","","","","","","","Tuple of bounds in the order of coordinate inputs.","","","","","","","","Add this to an index to get to the sample in the next …","The number of channels in the color representation of the …","","","","","","","","","","","","","","","","","","","","","Supplementary color information.","Describe a column-major image packed in all directions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the dimensions <code>(channels, width, height)</code>.","Check if a buffer of length <code>len</code> is large enough.","Get a reference on the inner sample descriptor.","Get a reference on the sample buffer descriptor.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get a mutable reference to a selected subpixel if it is …","Get a mutable reference to a selected sample.","","","","Get a reference to a selected subpixel if it is in-bounds.","Get a reference to a selected subpixel.","If there are any samples aliasing each other.","","","","The height of the represented image.","Add this to an index to get to the next sample in …","Return the mutable portion of the buffer that holds sample …","Return the mutable buffer that holds sample values.","Return the portion of the buffer that holds sample values.","Return the portion of the buffer that holds sample values.","Check that the pixel and the channel index are in bounds.","","","Get an index provided it is inbouds.","Resolve the index of a particular sample.","Get the theoretical position of sample (channel, x, y).","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Take out the sample buffer.","Take out the sample buffer.","Check if a buffer fulfills the requirements of a normal …","A <code>repr(C)</code> description of the layout of buffer samples.","","","","","","","","","","","Get the minimum length of a buffer such that all in-bounds …","Get the minimum length of a buffer such that all in-bounds …","Get the minimum length of a buffer such that all in-bounds …","","","","","","","","","","","Compares the logical preconditions.","","","","","Describe a row-major image packed in all directions.","Get a reference on the inner buffer.","Get a reference on the inner buffer.","Underlying linear container holding sample values.","","","","","","","","","","","Shrink the image to the minimum of current and given …","Shrink the inner image.","Shrink the inner image.","Get the strides for indexing matrix-like <code>[(c, w, h)]</code>.","","","","","","","","","","","","","","","","","Try to convert this into an image with mutable pixels.","","","","","","","","","","","","","","","","","","","","","","","","","","The width of the represented image.","Add this to an index to get to the next sample in …","","","","","","","","","","","A bi-level color map","Cubic Filter","The color type on which the map operates on","A color map","Available Sampling Filters.","Gaussian Filter","Lanczos with window 3","Nearest Neighbor","Linear Filter","","","","","Performs a Gaussian blur on the supplied image. <code>sigma</code> is a …","","","","","Brighten the supplied image. <code>value</code> is the amount to …","","","","","","","","","","","Functions for altering and converting the color of …","Adjust the contrast of the supplied image. <code>contrast</code> is the …","Return a mutable view into an image The coordinates set …","Return an immutable view into an image The coordinates set …","","","","","Reduces the colors of the image using the supplied …","","","","","","Perform a 3x3 box filter on the supplied image. <code>kernel</code> is …","Flip an image horizontally","Flip an image horizontally and put the result into the …","Flip an image horizontally in place.","Flip an image vertically","Flip an image vertically and put the result into the …","Flip an image vertically in place.","","Returns the argument unchanged.","Returns the argument unchanged.","Convert the supplied image to grayscale. Alpha channel is …","Convert the supplied image to grayscale. Alpha channel is …","Convert the supplied image to a grayscale image with the …","Convert the supplied image to a grayscale image with the …","Determine if this implementation of ColorMap overrides the …","Indicate NeuQuant implements <code>lookup</code>.","Fill the image with a linear horizontal gradient","Hue rotate the supplied image. <code>value</code> is the degrees to …","Reduces the colors using the supplied <code>color_map</code> and …","Returns the index of the closest match of <code>color</code> in the …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Invert each pixel within the supplied image. This function …","Looks up color by index in the color map.  If <code>idx</code> is out …","","","","","","Maps <code>color</code> to the closest color in the color map.","","","","","","Overlay an image at a given coordinate (x, y)","Calculate the region that can be copied from top to bottom.","Replace the contents of an image at a given coordinate (x, …","Resize the supplied image to the specified dimensions. …","Rotate an image 180 degrees clockwise.","Rotate an image 180 degrees clockwise and put the result …","Rotate an image 180 degrees clockwise in place.","Rotate an image 270 degrees clockwise.","Rotate an image 270 degrees clockwise and put the result …","Rotate an image 90 degrees clockwise.","Rotate an image 90 degrees clockwise and put the result …","","","","","Resize the supplied image to the specific dimensions.","Tile an image by repeating it multiple times","","","","","","","","","Performs an unsharpen mask on the supplied image. <code>sigma</code> is …","","","","","","","Fill the image with a linear vertical gradient","","","","","","","A bi-level color map","The color type on which the map operates on","A color map","Brighten the supplied image. <code>value</code> is the amount to …","Brighten the supplied image in place. <code>value</code> is the amount …","Adjust the contrast of the supplied image. <code>contrast</code> is the …","Adjust the contrast of the supplied image in place. …","Reduces the colors of the image using the supplied …","Convert the supplied image to grayscale. Alpha channel is …","Convert the supplied image to grayscale. Alpha channel is …","Convert the supplied image to a grayscale image with the …","Convert the supplied image to a grayscale image with the …","Determine if this implementation of ColorMap overrides the …","Hue rotate the supplied image. <code>value</code> is the degrees to …","Hue rotate the supplied image in place. <code>value</code> is the …","Reduces the colors using the supplied <code>color_map</code> and …","Returns the index of the closest match of <code>color</code> in the …","Invert each pixel within the supplied image. This function …","Looks up color by index in the color map.  If <code>idx</code> is out …","Maps <code>color</code> to the closest color in the color map.","Set of supported strict limits for a decoder.","Resource limits for decoding.","A multi-format image reader.","","","","","","","","","","","","","","","","","This function checks the <code>max_image_width</code> and …","This function checks that all currently set strict limits …","","","","","","","Remove the current information on the image format.","","","","","Read the image (replaces <code>load</code>).","","","","","","","","","","","","","","","","","","","","","","","Get the currently determined format.","","This function increases the <code>max_alloc</code> limit with amount. …","This function acts identically to [<code>free</code>], but takes a <code>usize</code>…","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Read the image dimensions.","Unwrap the reader.","Set a custom set of decoding limits.","","","","","","","","The maximum allowed sum of allocations allocated by the …","The maximum allowed image height. This limit is strict. …","The maximum allowed image width. This limit is strict. The …","Create a new image reader without a preset format.","Disable all decoding limits.","Disable all limits.","Open a file to read, format will be guessed from path.","","","","","","","This function checks that the current limit allows for …","This function acts identically to [<code>reserve</code>], but takes a …","","","","","","","Supply the format as which to interpret the read image.","","","","","","","","","","","","","","","","","","","","","","","","Construct a reader with specified format.","Make a format guess based on the content, replacing it on …","","","","","","","A Rectangle defined by its top left corner, width and …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","The rectangle’s height.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","The rectangle’s width.","","","The x coordinate of the top left corner.","The y coordinate of the top left corner.","","128-bit hash. Negligible risk for collision.","64-bit hash.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A type that can used as a Component of an Entity.","A <code>ComponentBundle</code> holds an Arrow component column, and its …","A <code>Component</code> that fulfils all the conditions required to be …","","","","A <code>MsgBundle</code> holds data necessary for composing a single …","The errors that can occur when trying to convert between …","","","","","A <code>Component</code> that fulfils all the conditions required to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the datatype of the bundled component, discarding …","","","","","","","","","","","","","","Extract a <code>TimePoint</code> from the “timelines” column. This …","Create a <code>Field</code> for this <code>Component</code>.","Returns the index of <code>component</code> in the bundle, if it exists.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","A unique id per <code>crate::LogMsg</code>.","The name of the component.","","","","Create a new <code>MsgBundle</code> with a pre-built Vec of …","","Create a new <code>ComponentBundle</code> from a boxed <code>Array</code>. The <code>Array</code> …","Returns the number of component collections in this …","Returns the number of <em>instances</em> for a given <code>row</code> in the …","Returns the number of <em>instances</em> for a given <code>row</code> in the …","Returns the number of <em>rows</em> in this bundle, i.e. the length …","Returns the number of <em>rows</em> for each component collections …","","","","","","","","","","","","","","","","","","","","Try to append a collection of <code>Component</code> onto the …","Helper to build a <code>MessageBundle</code> from 1 component","Helper to build a <code>MessageBundle</code> from 2 components","Helper to build a <code>MessageBundle</code> from 3 components","","","","","","","Extract a <code>MsgBundle</code> from an <code>ArrowMsg</code>.","","","","","","","","","","","","","","","","","Get the <code>ComponentBundle</code> value as a boxed <code>Array</code>.","Get the <code>ComponentBundle</code> value","","","","Wrap <code>field_array</code> in a single-element <code>ListArray</code>","","","","","","","","The name of an entity component, e.g. <code>pos</code> or <code>color</code>.","A <code>EntityPath</code> plus a <code>ComponentName</code>.","","","<code>camera / &quot;left&quot; / points / #42</code>","A 128 bit hash of <code>EntityPath</code> with negligible risk of …","<code>camera / &quot;left&quot; / points / #42</code>","The different parts that make up an <code>EntityPath</code>.","Array/table/map member. Each member must be of the same …","","","","Struct member. Each member can have a different type.","","","“color”","<code>camera / &quot;left&quot; / points / #42</code>","Build a <code>EntityPath</code>:","Build a <code>Vec&lt;EntityPathPart&gt;</code>:","","Parses an entity path, e.g. …","","","","Used e.g. for frames in a film.","Normal wall time.","A 64-bit number describing either nanoseconds OR sequence …","A point in time on any number of <code>Timeline</code>s.","The type of a <code>TimeInt</code> or <code>Timeline</code>.","A time frame/space, e.g. <code>log_time</code> or <code>frame_nr</code>, coupled …","The name of a timeline. Often something like <code>&quot;log_time&quot;</code> or …","","","Install this as the global allocator to get memory usage …","Number of allocation and their total size.","Tracks memory use over time.","","","","","","","Track allocations and memory use.","Add an allocation.","","","","","","","","","","","","","","","","","","","Add data to history","","","","","","","","","","","","","","","","","","","","","","","Number of allocations.","Bytes used by the application according to our own memory …","Bytes used by the application according to our own memory …","VRAM bytes used by the application according to its own …","Bytes used by the datastore according to its own …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns how large fraction of memory we should free to go …","Limit in bytes.","","","","","","","","","","","","","","","","","","","","","","","","Bytes allocated by the application according to operating …","Bytes allocated by the application according to operating …","","","","","","","","","","","Number of bytes.","","Remove an allocation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Install this as the global allocator to get memory usage …","","","","","","","","","","","","","Returns the argument unchanged.","All live largish allocations, fully tracked.","Total number of live allocations, and the number of live …","","Calls <code>U::from(self)</code>.","Are we doing (slightly expensive) tracking of the …","","","","","All live allocations used for internal book-keeping.","","","Should we do (slightly expensive) tracking of the …","All live allocations sampled of medium size, …","The most popular callstacks.","Allocations smaller than these are left untracked.","Gather statistics from the live tracking, if enabled.","","","Turn on callstack tracking (slightly expensive) if a given …","","All live allocations that we are NOT tracking (because …","","","","","","","Returns monotonically increasing time in seconds.","Send <code>LogMsg</code>es to a server.","","","","","","","","","","","","","","","","","","","","","","","The default address of a Rerun TCP server which an SDK …","","","","","","","Wait until everything has been sent.","","","Switch to a mode where we drop messages if disconnected.","","","","","","","Stall until all messages so far has been sent.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","If the latency in the <code>LogMsg</code> channel is greater than this, …","","","","","","","Turns <code>info</code>-level logs into <code>debug</code>-level logs.","","","","","","","","Listen to multiple SDK:s connecting to us over TCP.","","","","","","","","","","","","","","","","","","","","","The Rerun viewer as an [<code>eframe</code>] application.","Where is this App running in?","Wraps a connection to a <code>puffin</code> viewer.","Created from the Rerun Python SDK.","Connects to a server over WebSockets.","Running the Rust <code>rerun</code> binary from the CLI.","Created from the Rerun Rust SDK.","Settings set once at startup (e.g. via command-line …","We are a web-viewer running in a browser as Wasm.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a viewer that receives new log messages over time","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","url to rerun server","","","","","","","","","","","","","Polls the promise with the given name.","Returns whether a promise with the given name is currently …","","","","","","","","","","","","","","","","","","","","","Creates a promise with the specified name that will run <code>f</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This wakes up the ui thread each time we receive a new …","","","","","","","","","","","","","Enable allocation tracking (very slow - use it to find …","<code>Storage</code> key used for app","Implement this trait to write apps that can be compiled …","This is how your app is created.","Use WebGl2 first.","Use WebGl1 first","Data that is passed to <code>AppCreator</code> that can be used to …","Dark mode: light text on a dark background.","The different problems that can occur when trying to run …","Object that allows building the event loop.","Hook into the building of an event loop before it is run","Represents the surroundings of your app.","Selects the level of hardware graphics acceleration.","Image data for an application icon.","Information about the integration passed to the use app …","Light mode: dark text on a light background.","Options controlling the behavior of a native window.","Do NOT use graphics acceleration.","Prefer graphics acceleration, but fall back to software.","What rendering backend to use.","","Require graphics acceleration.","","A place where you can store custom data in a way that …","Dark or Light theme.","","Force Use WebGL1.","Force use WebGL2.","WebGL Context options","Use [<code>egui_wgpu</code>] renderer for <code>wgpu</code>.","","Information about the application’s main window, if …","","","","","","","","","","","Sets whether or not the window will always be on top of …","Time between automatic calls to <code>Self::save</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a new event loop.","","","","","","","","","","","","","","On desktop: make the window position to be centered at …","","","","","","","","","","","","","","","","","","","","","","","","","","","Background color values for the app, e.g. what is sent to …","","","","","","","","","","","","","","","","","Tell <code>eframe</code> to close the desktop window.","Seconds of cpu usage (in seconds) of UI code on the …","On desktop: add window decorations (i.e. a frame around …","","","","Which theme to use in case <code>Self::follow_system_theme</code> is …","Sets the number of bits in the depth buffer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","On Windows: enable drag and drop support. Drag and drop can","When called, the native window will follow the movement of …","","","","","","","","","","","","","","The egui Context.","Get the egui visuals corresponding to this theme.","","","","","","","","","","","","","Hook into the building of an event loop before it is run.","write-to-disk or similar","","","","","","","","","","","Only used if the <code>dark-light</code> feature is enabled:","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Start in (borderless) fullscreen?","Are we in fullscreen mode?","","","","Get the value for the given key.","Get and deserialize the RON stored at the given key.","Specify whether or not hardware acceleration is preferred, …","","","","Image height. This should be a multiple of 4.","The application icon, e.g. in the Windows task bar etc.","Information about the integration.","","","","","","","","","","","","","","","The initial (inner) position of the native window in …","The initial inner size of the native window in points …","Information about the surrounding environment.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","True if you are in a web environment.","","","","","","","","","","","","","","","","","","","","","","","","","","","The size limit of the web app canvas.","The maximum inner window size in points (logical pixels).","Show window in maximized mode","Are we maximized?","The minimum inner window size in points (logical pixels).","Are we minimized?","Current monitor size in egui points (logical pixels)","On desktop: mouse clicks pass through the window, used for …","Set the level of the multisampling anti-aliasing (MSAA).","The OS native pixels-per-point","Start building a new event loop.","Called when the user attempts to close the desktop window …","Called once on shutdown, after <code>Self::save</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Controls whether or not the egui memory (window positions …","Controls whether or not the native window position and …","","Coordinates of the window’s outer top left corner, …","Called each time after the rendering the UI.","","Tell <code>eframe</code> to close the desktop window.","What rendering backend to use.","Should the app window be resizable?","RGBA pixels, unmultiplied.","This controls what happens when you close the main eframe …","This is how you start a native (desktop) app.","","","","","","","","","","","","","","","","","","","","","","","","","","","Called on shutdown, and perhaps at regular intervals. …","","","","On desktop: Set the window always on top.","On desktop: Set the window to be centered.","Set whether to show window decorations (i.e. a frame …","Turn borderless fullscreen on/off (native only).","Maximize or unmaximize window. (native only)","Minimize or unminimize window. (native only)","Set the value for the given key.","Serialize the given value as RON and store with the given …","Set the visibility of the window.","set the position of the outer window.","Set the desired inner size of the window (in egui points).","Set the desired title of the window.","Window inner size in egui points (logical pixels).","","Sets the number of bits in the stencil buffer.","A place where you can store custom data in a way that …","You can use the storage to restore app state(requires the …","","A place where you can store custom data in a way that …","The theme used by the system.","Does the OS use dark or light mode?","","","","","","","","","","","On desktop: make the window transparent. You control the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Called each time the UI needs repainting, which may be …","Turn on vertical syncing, limiting the FPS to the display …","","","","","","","","","","","","","","If <code>true</code> a warm-up call to <code>Self::update</code> will be issued where","Configures wgpu instance/device/adapter/surface creation …","The underlying WGPU render state.","The underlying WGPU render state.","","Image width. This should be a multiple of 4.","The position and size of the native window.","","","Start building a new event loop, with the given type as …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicate wether or not a popup will be shown above or …","Indicated an alias, e.g. a shortcut","left/center/right or top/center/bottom alignment for e.g. …","Two-dimension alignment, e.g. <code>Align2::LEFT_TOP</code>.","Something can be scrolled in any direction (panned).","An area on the screen that can be moved by dragging.","","","","","","Convenience for <code>Self::Max</code>","Painted behind all floating windows","","","Normal labels. Easily readable, doesn’t take up too much …","","Clickable button with text.","Buttons. Maybe slightly bigger than <code>Self::Body</code>.","","","","","","On Mac: ⌘ Command key, elsewhere: Ctrl key","","Backend-specific painting.","Touch operation has been disrupted by something (various …","Hover a cell in a table","Horizontal or vertical center.","A panel that covers the remainder of the screen, i.e. …","Boolean on/off control with text label.","","Circle with optional outline and fill.","A <code>Mesh</code> or <code>PaintCallback</code> within a clip rectangle.","A header which can be collapsed/expanded, revealing a …","","The response from showing a <code>CollapsingHeader</code>.","RGBA image.","This format is used for space-efficient color …","","A 2D RGBA color image in RAM.","A drop-down selection menu with a descriptive label.","","IME composition ended with this final result.","IME composition start.","A new IME candidate is being suggested.","Your handle to egui.","A context menu is available","The integration detected a “copy” event (e.g. Cmd+C).","Indicate that a copy will be made","For precision work","A cubic Bézier Curve.","A mouse cursor icon.","The integration detected a “cut” event (e.g. Cmd+X).","","","Debug layer, always painted last / on top","Default text style - will use <code>TextStyle::Body</code>, unless …","Normal cursor icon, whatever that is.","","Layout direction, one of <code>LeftToRight</code>, <code>RightToLeft</code>, <code>TopDown</code>…","A numeric value that you can change by dragging the …","","A file dropped into egui.","","Infinite rectangle that contains every point.","","User lifted the finger or pen from the surface, or slid …","","","An input event generated by the integration.","The first extra mouse button on some mice. In web …","The second extra mouse button on some mice. In web …","","","","","","","","","","","","","","","","","","","","","","Used for the font texture.","A <code>.ttf</code> or <code>.otf</code> file and a font face index.","Describes the font data and the sizes to use.","Font of unknown size.","How to select a sized font.","Directly select size and font family","A single-channel image designed for the font texture.","A way to select <code>FontId</code>, either by picking one directly or …","Extra scale and vertical tweak to apply to all text of a …","Popups, menus etc that should always be painted on top of …","Add a background, frame and/or margin to a rectangular …","What egui emits each frame from <code>crate::Context::run</code>.","","Text that has been laid out, ready for painting.","Use exactly this galley when painting the text.","The thing you are hovering can be grabbed","You are grabbing the thing you are hovering","A simple grid layout.","","Heading. Probably larger than <code>Self::Body</code>.","Question mark","","","A file about to be dropped into egui.","A clickable hyperlink, e.g. to …","","","A function that paints the <code>ComboBox</code> icon","egui tracks widgets frame-to-frame using <code>Id</code>s.","<code>IdMap&lt;V&gt;</code> is a <code>HashMap&lt;Id, V&gt;</code> optimized by knowing that <code>Id</code> …","An widget to show an image of a given size.","A clickable image within a frame.","","An image stored in RAM.","Returned when we wrap some ui-code and want to return both …","Input state that egui updates each frame.","","","","Keyboard keys.","A key was pressed or released.","A keyboard shortcut, e.g. <code>Ctrl+Alt+W</code>.","","Convenience for <code>Self::Min</code>","","","","","Linear magnification and minification.","Static text.","","An identifier for a paint layer. Also acts as an …","The layout of a <code>Ui</code>, e.g. “vertical &amp; centered”.","Use this <code>LayoutJob</code> when laying out the text.","","A line between two points.","Linearly interpolate the nearest neighbors, creating a …","Clickable text, that looks like a hyperlink.","e.g. a hyperlink","","The Mac ⌘ Command key","Textures allocated using <code>TextureManager</code>.","","Right or bottom.","The data that egui persists between frames.","Textured triangles in two dimensions.","A general triangle mesh.","The tertiary mouse button is usually the middle mouse …","Normal moveable windows that you reorder by click","Left or top.","The virtual keycode for the Minus key.","Names of different modifier keys.","State of the modifier keys. These must be fed to egui.","A font where each character is the same width (<code>w</code> is the …","Same size as <code>Self::Body</code>, but used when monospace is …","User moves a touch point along the surface. This event is …","Omnidirectional move icon (e.g. arrows in all cardinal …","All you probably need to know about a multi-touch gesture.","","Alt, Ctrl, Shift, Cmd","An invalid <code>Rect</code> filled with <code>f32::NAN</code>;","Nearest magnification and minification.","Same as <code>Stroke::default</code>.","","The inverse of <code>Self::EVERYTHING</code>: stretches from positive …","Number of pointer buttons supported by egui, i.e. the …","One of the names in <code>FontDefinitions::families</code>.","A user-chosen style, found in <code>Style::text_styles</code>.","Show the nearest pixel value.","Can’t drop here","Show no cursor","Paint nothing. This can be useful as a placeholder.","Forbidden","Either from the main row or from the numpad.","Either from the main row or from the numpad.","Either from the main row or from the numpad.","Either from the main row or from the numpad.","Either from the main row or from the numpad.","Either from the main row or from the numpad.","Either from the main row or from the numpad.","Either from the main row or from the numpad.","Either from the main row or from the numpad.","Either from the main row or from the numpad.","Extends <code>f32</code>, <code>Vec2</code> etc with <code>at_least</code> and <code>at_most</code> as aliases …","","Some global options that you can read and write.","Different layer categories","If you cannot fit any of the above slots.","","","","If you want to paint some 3D shapes inside an egui region, …","Information passed along with <code>PaintCallback</code> (…","Helper to paint shapes and text to a specific region on a …","Special layer between panels and windows","The integration detected a “paste” event (e.g. Cmd+V).","A series of lines between points. The path can have a …","The non-rendering part of what egui emits each frame.","The virtual keycode for the Plus/Equals key.","Mouse button (or similar for touch input)","A mouse button was pressed or released (or a touch started …","The mouse left the screen, or the last/primary touch input …","The mouse or touch moved to a new place.","Mouse or touch state.","Pointing hand, used for e.g. web links","A position on screen.","The primary mouse button is usually the left one.","Shows that processing is being done, but that the program …","A simple progress bar.","A font where some characters are wider than other (e.g. ‘…","","A quadratic Bézier Curve.","","Convenience for <code>Self::Max</code>","","","","","One out of several alternatives, either selected or not.","","What the integrations provides to egui at the start of …","A rectangular region of space.","Rectangle with optional outline and fill.","A region that can be resized by dragging the bottom right …","Resize a column","Resize something rightwards (e.g. when dragging the …","Horizontal resize <code>-</code> to make something wider or more narrow …","Diagonal resize <code>/</code> (right-up to/from left-down)","Resize something up (e.g. when dragging the top edge of …","Resize something up and right (e.g. when dragging the …","Resize something up and left (e.g. when dragging the …","Diagonal resize <code>\\\\</code> (left-up to/from right-down)","Resize a row","Resize something downwards (e.g. when dragging the bottom …","Resize something down and right (e.g. when dragging the …","Resize something down and left (e.g. when dragging the …","Vertical resize <code>|</code> (up-down or down-up)","Resize something leftwards (e.g. when dragging the left …","The result of adding a widget to a <code>Ui</code>.","0-1 linear space <code>RGBA</code> color with premultiplied alpha.","Text and optional style choices for it.","","","How rounded the corners of things should be","","","⌥ ^ ⇧ ⌘ - NOTE: not supported by the default egui …","How many points (logical pixels) the user scrolled.","Add vertical and/or horizontal scrolling to a contained <code>Ui</code>.","The secondary mouse button is usually the right one, and …","One out of several alternatives, either selected or not. …","","What sort of interaction is a widget sensitive to?","A visual separator. A horizontal or vertical line …","A paint primitive such as a circle or a piece of text. …","A panel that covers the entire left or right side of a <code>Ui</code> …","Control a number with a slider.","","Specifies the orientation of a <code>Slider</code>.","Used when small text is needed.","","A spinner widget used to indicate loading.","User just placed a touch point on the touch surface","","Describes the width and color of a line.","Specifies the look and feel of egui.","Use a <code>TextStyle</code> to look up the <code>FontId</code> in <code>Style::text_styles</code>…","","Convenience for <code>Self::Min</code>","","","Text.","Text input, e.g. via keyboard.","Text caret, e.g. “Click here to edit text”","Trait constraining what types <code>crate::TextEdit</code> may use as …","A text region that the user can edit the contents of.","","","Alias for a <code>FontId</code> (font of a certain size).","How the texture texels are filtered.","Used to paint images.","What texture to use in a <code>Mesh</code> mesh.","How the texture texels are filtered.","What has been allocated and freed during the last period.","Things floating on top of everything else, like tooltips. …","A panel that covers the entire top or bottom of a <code>Ui</code> or …","","On touch screens, report this <em>in addition to</em> …","this is a <code>u64</code> as values of this kind can always be …","Unique identification of a touch occurrence (finger or pen …","In what phase a touch event is in.","","","This is what you use to place widgets.","Your own texture, defined in any which way you want. The …","","Recursively nest more shapes - sometimes a convenience to …","A vector has a direction and length. A <code>Vec2</code> is often used …","","Vertical text caret, e.g. “Click here to edit vertical …","Controls the visual style (colors etc) of egui.","","Not yet ready, try later.","Anything implementing Widget can be added to a <code>Ui</code> with …","Describes a widget such as a <code>crate::Button</code> or a …","This is how you specify text for a widget.","The different types of built-in widgets in egui","Helper so that you can do <code>TextEdit::State::read…</code>","Builder for a floating window which can be dragged, …","","","","","","The zero position, the origin. The top left corner in a …","","Zoom scale factor this frame (e.g. from ctrl-scroll or …","Enhance!","Let’s get a better overview","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","For use in tests; especially doctests.","For use in tests; especially doctests.","","","","Add a <code>Widget</code> to this <code>Ui</code> at a location dependent on the …","It is up to the caller to make sure there is room for this.","","","","Uniformly colored rectangle.","Add a single <code>Widget</code> that is possibly disabled, i.e. greyed …","Add a section that is possibly disabled, i.e. greyed out …","Rectangle with a texture and color.","Add a <code>Widget</code> to this <code>Ui</code> with a given size. The widget will …","Add extra space before the next widget.","Add a triangle.","Add a single <code>Widget</code> that is possibly invisible.","Add a section that is possibly invisible, i.e. greyed out …","How imprecise do we expect the mouse/touch input to be? …","","Returns a range of given size within a specified range.","e.g. center a size within a given frame","","Allocate at least as much space as needed, and interact …","Returns a <code>Rect</code> with exactly what you asked for.","Convenience function to get a region to paint on.","Allocate a specific part of the <code>Ui</code>.","Allocate space for a widget and check for interaction in …","Reserve this much space and move the cursor. Returns where …","Allocated the given space and then adds content to that …","Allocated the given rectangle and then adds content to …","Allocated the given space and then adds content to that …","","","Either of the alt keys are down (option ⌥ on Mac).","","If <code>false</code> (default), the scroll bar will be hidden when not …","","Set anchor and distance.","Set anchor and distance.","","Used e.g. to anchor a piece of text to a part of the …","Measures the angle of the vector.","Create a unit vector with the given CW angle (in radians).","Whether to display a loading animation when progress <code>&lt; 1</code>. …","","Returns a value in the range [0, 1], to indicate “how on…","Like <code>Self::animate_bool</code> but allows you to control the …","Smoothly animate an <code>f32</code> value.","How many seconds a typical animation should last.","","Were there any type of click this frame?","Is any pointer button currently down?","True if any member is NaN.","True if any member is NaN.","True if any member is NaN.","","Was any pointer button pressed (<code>!down -&gt; down</code>) this frame? …","Was any pointer button released (<code>down -&gt; !down</code>) this frame?","True if there currently are any fingers touching egui.","Append all the indices and vertices of <code>other</code> to <code>self</code>.","","Add on new input.","Add on new output.","Add on new output.","Append all the indices and vertices of <code>other</code> to <code>self</code> …","","","","Show an arrow starting at <code>origin</code> and going in the …","Returns this buffer as a <code>str</code>.","Width / height","width / height","More readable version of <code>self.max(lower_limit)</code>","","","Make sure each corner has a rounding of at least this.","More readable version of <code>self.min(upper_limit)</code>","","","Make sure each corner has a rounding of at most this.","","For each axis, should the containing area shrink if the …","","Not resizable, just takes the size of its contents. Also …","Not manually resizable, just takes the size of its …","","How much space is still available after panels has been …","","The available space at the moment, given the current …","In case of a wrapping layout, how much space is left on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fill-color behind the text.","Prefer using <code>RichText</code> directly!","","","An alternative to calling <code>Self::run</code>.","","A solid color to put behind the image. Useful for …","","Set <code>custom_formatter</code> and <code>custom_parser</code> to display and …","Set <code>custom_formatter</code> and <code>custom_parser</code> to display and …","","","","None iff collapsed.","None iff collapsedreate a bi-directional (horizontal and vertical) scroll …","The id should be globally unique, e.g. …","<code>max.y</code>","","<code>max.y</code>","Place elements vertically, bottom up.","","Usage: <code>if ui.button(&quot;Click me&quot;).clicked() { … }</code>","Was the button given clicked this frame?","Was the button given double clicked this frame?","Is this button currently down?","Show a background behind buttons.","Was the button given pressed this frame?","Was the button given released this frame?","Was the button given triple clicked this frame?","","Set by the <code>eframe</code> web backend.","","","Can be used to cache computations from one frame to …","Calculate a bounding rectangle.","Paint something custom (e.g. 3D stuff).","A canvas to draw on.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This will make the next added widget centered and …","For when you want to add a single widget to a layout, and …","","What the underlying data changed?","Reads the given character range.","If the given <code>Id</code> has been used previously the same frame at …","Show a checkbox.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new <code>Ui</code> at a specific region.","Create a new <code>Ui</code> at a specific region with a specific id.","","","","","","","Return the given points clamped to be inside the rectangle …","","Clamp incoming and outgoing values to this range.","","If set to <code>true</code>, all incoming and outgoing values will be …","","Restore to default state, but without freeing memory.","","Clears all characters in this buffer","Clear memory of any animations.","Sense clicks and hover, but not drags.","buttons, sliders, windows, …","Sense both clicks, drags and hover (e.g. a slider or …","Returns true if this widget was clicked this frame by the …","Returns true if this widget was clicked this frame by the …","<code>true</code> if there was a click <em>outside</em> this widget this frame.","Screen-space rectangle for clipping what we paint in this …","Everything painted in this <code>Painter</code> will be clipped against …","Clip rectangle in points.","Clip / scissor rectangle. Only show the part of the <code>Mesh</code> …","","The “scissor” or “clip” rectangle. This is what …","Allow child widgets to be just on the border and still …","When <code>true</code> (default), overflowing text will be clipped.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Close the menu we are in (including submenus), if any.","","A line that closes back to the start point again.","","","","","","","","Show text as monospace with a gray background.","Monospace label with different background color.","Prefer using <code>RichText</code> directly!","","Background color behind code-styled monospaced labels.","A <code>TextEdit</code> for code editing.","Build a <code>TextEdit</code> focused on code editing. By default it …","Can the window be collapsed by clicking on its title?","","A <code>CollapsingHeader</code> that starts out collapsed.","Show a background behind collapsing headers.","Override text color.","Override text color if, and only if, this is a <code>RichText</code>.","Sets the spinner’s color.","","Text color","","Shows a button with the given color. If the user clicks …","Shows a button with the given color. If the user clicks …","Shows a button with the given color. If the user clicks …","Shows a button with the given color. If the user clicks …","Shows a button with the given color. If the user clicks …","Shows a button with the given color. If the user clicks …","Shows a button with the given color. If the user clicks …","Shows a button with the given color. If the user clicks …","Show colored text.","","Temporarily split a <code>Ui</code> into several columns.","On Windows and Linux, set this to the same value as <code>ctrl</code>. …","true if only <code>Self::ctrl</code> or only <code>Self::mac_cmd</code> is pressed.","What goes between the names","Constrains this window to the screen bounds.","Constrains this area to the screen bounds.","","Check for a key press. If found, <code>true</code> is returned and the …","Check if the given shortcut has been pressed.","Containers are pieces of the UI which wraps other pieces …","","","Response to secondary clicks (right-clicks) by showing the …","A convex polygon with a fill and optional stroke.","If set, put this text in the system clipboard. Ignore if …","Count presses of a key. If non-zero, the presses are …","","How to align things on the cross axis. For vertical …","","Justify the cross axis? For vertical layouts justify mean …","Either of the control keys are down. When checking for …","","Get a reference to the parent <code>Context</code>.","Get a reference to the parent <code>Context</code>.","","Used for optionally showing a tooltip and checking for …","Set current position of the window. If the window is …","Positions the window but you can still move it.","The contents of some editable text (for <code>TextEdit</code> fields).","Where the next widget will be put.","When <code>true</code> (default), the cursor will initially be placed …","","","","","Cursor at the given position within the galley","Set the cursor to this icon.","","","","Set custom formatter defining how numbers are converted …","Set custom formatter defining how numbers are converted …","","","Set custom parser defining how the text input is parsed …","Set custom parser defining how the text input is parsed …","","","Default dark theme.","A dark canvas to draw on.","If true, the visuals are overall dark with light text. If …","Turn a line into dashes.","Turn a line into dashes. If you need to create many dashed …","Read-only access to the shared <code>IdTypeMap</code>, which stores …","Read-only access to <code>IdTypeMap</code>, which stores superficial …","This map stores some superficial state for all widgets …","Read-write access to the shared <code>IdTypeMap</code>, which stores …","Read-write access to <code>IdTypeMap</code>, which stores superficial …","","Options to help debug why egui behaves strangely.","Whether or not to debug widget layout on hover.","Shows where the next widget is going to be placed","Paint on top of everything else","","text with a background","","","","","","","","","","","","","Specifies the default fonts if the feature <code>default_fonts</code> …","","The default is linear for both magnification and …","","","The epaint font texture.","","","","","","","","","","","","","","","","","","","","","","","The initial height of the <code>SidePanel</code>. Defaults to …","Set initial height of the window.","Preferred / suggested height. Actual height will depend on …","","By default, the <code>CollapsingHeader</code> is collapsed. Call …","Set initial collapsed state of the window","","","Set initial position of the window.","","","Set initial position and size of the window.","Set initial size of the window.","","","The initial wrapping width of the <code>SidePanel</code>.","Set initial width of the window.","Preferred / suggested width. Actual width will depend on …","","Deletes a range of text <code>char_range</code> from this buffer.","How much the pointer moved compared to last frame, in …his can be used by a text-to-speech system to describe …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the number of rows to show by default. The default for …","The desired width of the bar. Will use all horizontal …","Set to 0.0 to keep as small as possible. Set to …","","","","","The distance from the rect to the position, squared.","The distance from the rect to the position.","","","The dot-product of two vectors.","Turn a line into equally spaced dots.","Returns true if this widget was double-clicked this frame …","Returns true if this widget was double-clicked this frame …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sense drags and hover, but not clicks.","sliders, windows, scroll bars, scroll areas, …","Modify an angle. The given angle should be in radians, but …","Modify an angle. The given angle should be in radians, but …","Constrain the area up to which the window can be dragged.","Constrain the area up to which the window can be dragged.","","If dragged, how many points were we dragged and in what …","The widget was being dragged, but now it has been released.","The widget was being dragged by the button, but now it has …","Did a drag on this widgets begin this frame?","Did a drag on this widgets by the button begin this frame?","Can the user drag the scroll area to scroll?","","","","When dragging the value, how fast does it move?","","The style to use for <code>DragValue</code> text.","The widgets is being dragged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Dragged files dropped into egui.","An assert that is only active when <code>egui</code> is compiled with …","An assert that is only active when <code>egui</code> is compiled with …","No fonts.","Control the scrolling behavior.","If you set this to <code>false</code>, the <code>CollapsingHeader</code> will be …","If <code>false</code> the window will be grayed out and non-interactive.","If false, no content responds to click and widgets will be …","Was the widget enabled? If false, there was no interaction …","","","","Whether the widget is enabled.","Cursor to one-past last character.","Call at the end of each frame.","","Move to the next row in a grid layout or wrapping layout. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A good color for error text (e.g. red).","In-order events received this frame.","Events that may be useful to e.g. a screen reader.","In-order events received this frame","This can be used by a text-to-speech system to describe …","A <code>Rect</code> that contains every point above a certain y …","A <code>Rect</code> that contains every point below a certain y …","If true, all windows, menus, tooltips etc are to be …","","A <code>Rect</code> that contains every point to the left of the given …","A <code>Rect</code> that contains every point to the right of the given …","Enforce this exact height.","Enforce this exact width.","An example color image, useful for tests.","Expand by this much in each direction, keeping the center","Expand by this much in each direction, keeping the center","Expand the <code>min_rect</code> and <code>max_rect</code> of this ui to include a …","Ensure we are big enough to contain the given x-coordinate.","Ensure we are big enough to contain the given y-coordinate.","Show tooltips explaining <code>DragValue</code>:s etc when hovered.","Add many shapes at once.","","Expand to include the given x coordinate","Expand to include the given y coordinate","Very dark or light color (for corresponding theme). Used …","When fading out things, we fade the colors towards this.","","Something just barely different from the background color. …","Set the <code>TextStyle</code> unless it has already been set","Set the <code>TextStyle</code> unless it has already been set","Which fonts (names) to use for each <code>FontFamily</code>.","Select the font family.","What font family to use.","","Override background fill color. Note that this will …","The fill color of the bar.","","","","","Set an exact number of decimals to display. Values will …","Set an exact number of decimals to display.","Sets the window position and prevents it from being …","Positions the window and prevents it from being moved","Sets the window pos and size and prevents it from being …","Sets the window size and prevents it from being resized by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Which widget has keyboard focus?","this widgets want focus. Anything interactive + labels …","Senses no clicks or drags, but can be focused with the …","Pick a <code>FontId</code> or <code>TextStyle</code>.","Select the font and size. This overrides the value from …","The content of a <code>.ttf</code> or <code>.otf</code> file.","List of font names and their definitions.","Read the font height of the selected text style.","","","Read-only access to <code>Fonts</code>.","Read-only access to <code>Fonts</code>.","Read-only access to the shared <code>Fonts</code>.","Read-write access to <code>Fonts</code>.","Current force of the touch (average of the forces of the …","","","Format the given shortcut in a human-readable way (e.g. …","Change the background color, margins, etc.","Change the background color, margins, etc.","Change the background color, margins, etc.","Turn off the frame","Default is <code>true</code>. If set to <code>false</code> there will be no frame …","Change the background color, margins, etc.","Turn off the frame","","","","","","","","Textures to free after painting.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Without label.","Label shown next to the combo box","","","","left-top corner plus a size (stretching right-down).","","","Bounding-box around the points.","","Create a <code>ColorImage</code> from flat RGB data.","Create a <code>ColorImage</code> from flat un-multiplied RGBA data.","","Returns the bounding rectangle of the two points.","","Was the <code>CollapsingHeader</code> fully closed (and not being …","Was the <code>CollapsingHeader</code> fully open (and not being …","True if this widget has keyboard focus this frame, but didn…","","Paint text that has already been layed out in a <code>Galley</code>.","The text color in the <code>Galley</code> will be replaced with the …","Paint text that has already been layed out in a <code>Galley</code>.","","","","","","","","","","","","","","","","","","","","","Create a <code>Hyperlink</code> to the current <code>file!()</code> on github.","Create a <code>Hyperlink</code> to the current <code>file!()</code> on github.","Create a <code>Hyperlink</code> to the current <code>file!()</code> (and line) on …","Create a <code>Hyperlink</code> to the current <code>file!()</code> (and line) on …","Show larger buttons for switching between light and dark …","Show a small button to switch to/from dark/light mode …","Returned a “grayed out” version of the given color.","Put into a <code>Frame::group</code>, visually grouping the contents …","For when you want to group a few widgets together within a …","Extend each end of the separator line by this much.","","Helpers for zooming the whole GUI of an app (changing …","","Does this widget have keyboard focus?","This widget has the keyboard focus (i.e. is receiving key …","The window has the keyboard focus (i.e. is receiving key …","Is the keyboard focus locked on this widget? If so the …","","Do we have a pointer?","","","","","","","","","","","","","","","","","","","Response of the actual clickable header.","Show large text.","Use <code>TextStyle::Heading</code>.","Prefer using <code>RichText</code> directly!","","","","","The allowable height range for the panel.","","Set <code>custom_formatter</code> and <code>custom_parser</code> to display and …","Set <code>custom_formatter</code> and <code>custom_parser</code> to display and …","Highlight this widget, to make it look like it is hovered, …","Highlight this widget, to make it look like it is hovered, …","Show a faint hint text when the text field is empty.","","A horizontal line.","Paints a horizontal line.","Start a ui with horizontal layout. After you have called …","Explicitly ask for a horizontal line.","Create a horizontal scroll area.","Set the horizontal align of the inner text.","e.g. for when aligning text within a button.","Like <code>Self::horizontal</code>, but allocates the full vertical …","","e.g. for adjusting the placement of something.","Set the horizontal scroll offset position.","Like <code>Self::horizontal</code>, but aligns content with top.","Start a ui with horizontal layout that wraps to a new row …","Senses no clicks or drags. Only senses mouse hover.","If it is a good idea to show a tooltip, where is pointer?","If it is a good idea to show a tooltip, where is pointer? …","The pointer is hovering above this widget or the widget …","Dragged files hovering over egui.","Enable/disable horizontal scrolling. <code>false</code> by default.","Turn on/off scrolling on the horizontal axis.","Link to a web page.","The color used for <code>Hyperlink</code>,","Shortcut for <code>add(Hyperlink::new(url).text(label))</code>.","Use the provided function to render a different …","Use the provided function to render a different <code>ComboBox</code> …","","","Assign a unique id to the Window. Required if the title …","","A unique identity of this <code>Ui</code>.","Use if you want to set an explicit <code>Id</code> for this widget.","","Assign an explicit and globally unique id.","","","","","","","","","The <code>Id</code> of the widget/area this response pertains.","Explicitly set the source of the <code>Id</code> of this widget, …","A source for the unique <code>Id</code>, e.g. …","A source for the unique <code>Id</code>, e.g. …","A source for the unique <code>Id</code>, e.g. …","","","","","","","An image at the given position.","Show an image here with the given size.","An image at the given position.","","","Creates a button with an image to the left of the text. …","Create a child ui which is indented to the right.","Draw a vertical lien left of indented region, in e.g. …","","","","","","Which font face in the file to use. When in doubt, use <code>0</code>.","","","","","","Draw as triangles (i.e. the length is always multiple of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","What the user closure returned.","Margin within the painted frame.","Margin within the painted frame.","Read-only access to the shared <code>InputState</code>.","Read-only access to <code>InputState</code>.","Read-write access to the shared <code>InputState</code>.","Read-write access to <code>InputState</code>.","Inserts text <code>text</code> into this buffer at character index …","","Helper: equivalent to …","Check for clicks, drags and/or hover on a specific region …","Check for more interactions (e.g. sense clicks on a …","Use this style for interactive things. Note that you must …","Where the pointer (mouse/touch) were when when this widget …","If you detect a click or drag and wants to know where it …","","","Check for clicks, and drags on a specific region that is …","If <code>false</code> the window will be non-interactive.","If false, clicks goes straight through to what is behind …","","","How and when interaction happens.","Default is <code>true</code>. If set to <code>false</code> then you cannot interact …","Returns true if we sense either clicks or drags.","","Register this widget as being interested in getting …","The intersection of two <code>Rect</code>, i.e. the area covered by …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Layout with wrap mode based on the containing <code>Ui</code>.","","Showing UI:s for egui/epaint types.","","","","True if width is zero or color is transparent","","","","","If <code>false</code>, the <code>Ui</code> does not allow any interaction and the …","","True if all members are also finite.","True if all members are also finite.","True if all members are also finite.","","","","","Is the pointer currently moving? This is smoothed so a few …","Can this text be edited?","<code>width &lt; 0 || height &lt; 0</code>","","Is the pointer button currently down on this widget? This …","Is the pointer (mouse/touch) over any egui area?","","<code>width &gt; 0 &amp;&amp; height &gt; 0</code>","Can be used for culling: if <code>false</code>, then no part of <code>rect</code> …","","Do all corners have the same rounding?","","","Is the pointer currently still? This is smoothed so a few …","Was the tooltip open last frame?","Is egui currently using the pointer position (e.g. …","Are all indices within the bounds of the contained …","","","","","","If <code>false</code>, any widgets added to the <code>Ui</code> will be invisible …","Tilt the characters to the right.","Prefer using <code>RichText</code> directly!","","","The job that this galley is the result of. Contains the …","","Is the given key currently held down?","Was the given key pressed this frame?","Was the given key released this frame?","","Show some text.","","The text on labels, buttons, checkboxes etc.","","Associate a label with a control for accessibility.","For logarithmic sliders, the largest positive value we are …","","","Set by the <code>eframe</code> web backend.","","","Use this to paint stuff within this <code>Ui</code>.","Where we paint","","Which layer the widget is part of.","Top-most layer at the given position.","Top-most layer at the given position.","An iterator over all layers. Back-to-front. Top is last.","Get a full-screen painter for a new or existing layer","Handles paint layers, i.e. how things are sometimes …","","Will wrap text at the given width and line break at <code>\\\\n</code>.","Do layout and position the galley in the ui, without …","Will line break at <code>\\\\n</code>.","Override how text is being shown inside the <code>TextEdit</code>.","","The id should be globally unique, e.g. …","<code>min.x</code>","","","","<code>min.x</code>","Place elements horizontally, left to right.","","","","","Linear interpolation.","Linearly interpolate so that <code>[0, 0]</code> is <code>Self::min</code> and <code>[1, 1]</code>…","Default light theme.","Show radio-buttons to switch between light and dark mode.","Show small toggle-button for light and dark mode.","A line through many points.","A line between two points. More efficient than calling …","Paints a line from the first point to the second.","Looks like a hyperlink.","","Allocate a texture.","When <code>false</code> (default), pressing TAB will move focus to the …","Prevent keyboard focus from moving away from this widget …","","Make this a logarithmic slider. This is great for when the …he widget had keyboard focus and lost it, either because …","The Mac ⌘ Command key. Should always be set to <code>false</code> on …","","How to filter when magnifying (when texels are larger than …","How to align things on the main axis.","","Main axis direction","Justify the main axis?","","If true, wrap around when reading the end of the main …","Use this to generate widget ids for widgets that have …","Set margin of text. Default is [4.0,2.0]","","","Report the data shown by this widget changed.","Check for equality but with proper handling of …","","","The other corner, opposing <code>Self::min</code>. Usually the right …","","Set soft maximum width (wrapping width) of each column.","Set a maximum number of decimals to display. Values will …","Set a maximum number of decimals to display.","","","","Returns the maximum of <code>self.x</code> and <code>self.y</code>.","Maximum height of the panel.","The maximum height of the outer frame of the scroll area.","New widgets will <em>try</em> to fit within this rectangle.","Won’t expand to larger than this","","","Maximum size of one side of the font texture.","Maximum size of one side of a texture.","Maximum width of the panel.","The maximum width of the outer frame of the scroll area.","Read-only access to the shared <code>Memory</code>.","Read-only access to <code>Memory</code>.","Read-write access to the shared <code>Memory</code>.","Read-write access to <code>Memory</code>.","","Menu bar functionality (very basic so far).","","Create a menu button that when clicked will show the given …","Create a menu button with an image that when clicked will …","","","","Tight bounding box around all the meshes in all the rows. …","Returns true if this widget was clicked this frame by the …","Is the middle button currently down?","With the <code>eframe</code> web backend, this is set to the mime-type …","","","One of the corners of the rectangle, usually the left top …","Set minimum width of each column. Default: …","","Set a minimum number of decimals to display. Normally you …","Set a minimum number of decimals to display.","","","Returns the minimum of <code>self.x</code> and <code>self.y</code>.","Minimum height of the panel.","Set minimum height of the window.","Won’t shrink to smaller than this","Where and how large the <code>Ui</code> is already. All widgets that …","Set minimum height of each row. Default: …","","The minimum height of a vertical scroll area which …","","The minimum width of a horizontal scroll area which …","Size of content; same as <code>min_rect().size()</code>","Set the minimum size of the button.","Set the minimum size of the <code>TextEdit</code>.","Won’t shrink to smaller than this","","","","Minimum width of the panel.","Set minimum width of the window.","Won’t shrink to smaller than this","How to filter when minifying (when texels are smaller than …","Which modifier keys are down at the start of the frame?","","Which modifier keys are down at the start of the frame?","Show monospace (fixed width) text.","","Use <code>TextStyle::Monospace</code>.","Prefer using <code>RichText</code> directly!","If <code>false</code> the window will be immovable.","moveable by dragging the area?","","Moves the given area to the top in its <code>Order</code>.","","","","Calls <code>InputState::multi_touch</code>.","Returns details about the currently ongoing multi-touch …","A <code>TextEdit</code> for multiple lines. Pressing enter key will …","","","Is there a mutable <code>TextEdit</code> under the cursor? Use by <code>eframe</code>…","Usage: …","Debug-name.","Human-readable English name.","Name of the file. Set by the <code>eframe</code> web backend.","Radius of the rounding of the North-East (right top) …","","Create a scroll area where both direction of scrolling is …","The <code>CollapsingHeader</code> starts out collapsed unless you call …","Create new <code>ComboBox</code> with id and label","The id should be globally unique, e.g. <code>Id::new(&quot;my_panel&quot;)</code>.","The id should be globally unique, e.g. <code>Id::new(&quot;my_panel&quot;)</code>.","The window title is used as a unique <code>Id</code> and must be …","","If you are using egui, use <code>egui::Context::load_texture</code> …","","Create a new <code>Grid</code> with a locally unique identifier.","Create an image filled with the given color.","","Create a new <code>Ui</code>.","","","","","","","","","","Progress in the <code>[0, 1]</code> range, where <code>1</code> means “completed”…","","Creates a new horizontal slider.","","Create a scroll area where you decide which axis has …","","","Generate a new <code>Id</code> by hashing some source (e.g. a string or …","","Create a painter to a specific layer within a certain clip …","","","","","Create a new spinner that uses the style’s <code>interact_size</code> …","","","","This is the <code>Id</code> that will be assigned to the next widget …","","Where do we expect a zero-sized widget to be placed?","","","","Style to use for non-interactive widgets.","","Safe normalize: returns zero if input is zero.","A special <code>Id</code>, in particular as a key to <code>crate::Memory::data</code>","Setting this will allow the last column to expand to take …","","Total number of indices in all the row meshes.","How many times was the given key pressed this frame?","Number of touches (fingers) on the surface. Value is ≥ 2 …","Total number of vertices in all the row meshes.","Radius of the rounding of the North-West (left top) corner.","Set <code>custom_formatter</code> and <code>custom_parser</code> to display and …","Set <code>custom_formatter</code> and <code>custom_parser</code> to display and …","","","Show this text when hovering if the widget is disabled.","Show this UI when hovering if the widget is disabled.","When hovered or dragged, use this icon for the mouse …","When hovered, use this icon for the mouse cursor.","Show this text if the widget was hovered (i.e. a tooltip).","Like <code>on_hover_text</code>, but show the text next to cursor.","Show this UI if the widget was hovered (i.e. a tooltip).","Like <code>on_hover_ui</code>, but show the ui next to cursor.","Calling <code>.open(Some(true))</code> will make the collapsing header …","Call this to add a close-button to the window title bar.","","","","Open the given url in a web browser. If egui is running in …","If set, open this url.","0.0 if fully closed, 1.0 if fully open, and something …","Read-only access to <code>Options</code>.","","Read-write access to <code>Options</code>.","<code>order(Order::Foreground)</code> for an Area that should always be …","","","Vertical or horizontal slider? The default is horizontal.","","","What operating system are we running on?","Margin outside the painted frame.","Margin outside the painted frame.","All the data egui returns to the backend at the end of …","Read-only access to the shared <code>PlatformOutput</code>.","Read-only access to <code>PlatformOutput</code>.","","Read-write access to the shared <code>PlatformOutput</code>.","Read-write access to <code>PlatformOutput</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If set this will change the font family and size for all …","Override default text color for all text.","If set this will change the default <code>TextStyle</code> for all …","","","Use this to paint stuff within this <code>Ui</code>.","","Create a painter for a sub-region of this Ui.","Panel background color","","","","","","","","If true, hide the letters from view and prevent copying …","","Set by the <code>egui-winit</code> backend.","Set by the <code>egui-winit</code> backend.","Size of a physical pixel in logical gui coordinates …","Where the “root” of the window is.","Where the “root” of the area is.","","The pixels, row by row, from top to bottom.","The coverage value.","The number of physical pixels for each logical point.","Also known as device pixel ratio, &gt; 1 for high resolution …","Pixels per point.","The number of physical pixels for each logical point. …","Also known as device pixel ratio, &gt; 1 for high resolution …","Also known as device pixel ratio, &gt; 1 for high resolution …","","Non-rendering related output.","","State of the mouse or simple touch gestures which can be …","","If it is a good idea to show a tooltip, where is pointer?","If you detect a click or drag and wants to know where it …","Latest reported pointer position.","","","Shows a popup above or below another widget.","Helper for <code>popup_above_or_below_widget</code>.","","<code>pos2(x, y) == Pos2::new(x, y)</code>","Returns a 0-width Rect.","Returns a 0-width Rect.","","Returns the point on the rect’s frame or in the center …","Should be set to the expected time between frames when …","Estimated time until next frame (provided we repaint right …","","Show a prefix before the number, e.g. “x: “","Show a prefix before the number, e.g. “x: “","","","If true, the most common glyphs (ASCII) are pre-rendered …","Where did the current click/drag originate? <code>None</code> if no …","","When did the current click/drag originate? <code>None</code> if no …","","The previous text value.","Was the primary button clicked this frame?","Is the primary button currently down?","Was the primary button pressed this frame?","Was the primary button released this frame?","What to paint - either a <code>Mesh</code> or a <code>PaintCallback</code>.","","","Create a child Ui with an explicit <code>Id</code>.","Add a <code>Widget</code> to this <code>Ui</code> at a specific location (manual …","Show a <code>RadioButton</code>. Often you want to use <code>Self::radio_value</code>…","Show a <code>RadioButton</code>. It is selected if …","Align text to top. Only applicable together with …","Prefer using <code>RichText</code> directly!","","","The raw input we got this frame from the backend.","","Where to paint.","Bounding rect.","The area of the screen we are talking about.","Is the pointer (mouse/touch) above this rectangle in this …","","","","","Clone a sub-region as a new image.","Linearly remap a value from one range to another, so that …","Like <code>remap</code>, but also clamps the value so that the returned …","If <code>Duration::is_zero()</code>, egui is requesting immediate …","Replaces all contents of this string with <code>text</code>","Give keyboard focus to a specific widget. See also …","Request that this widget get keyboard focus.","Call this if there is need to repaint the UI, i.e. if you …","Request repaint after the specified duration elapses in …","Make room for this many additional triangles (will reserve …","Make room for this many additional vertices. See also …","Forget window positions, sizes etc. Can be used to …","Show a button to reset a value to its default. The button …","Show a button to reset a value to its default. The button …","Reset to the default style set in <code>Context</code>.","Can panel be resized by dragging the edge of it?","Can panel be resized by dragging the edge of it?","Can the user resize the window by dragging its edges? Note …","Can you resize it with the mouse? Note that a window can …","","","","Usage: …","","","","Look up this <code>TextStyle</code> in <code>Style::text_styles</code>.","The response of the area.","The id should be globally unique, e.g. …","<code>max.x</code>","","","","","<code>max.x</code>","Place elements horizontally, right to left.","","Rotates the vector by 90°, i.e positive X to positive Y …","Rotate by some angle about an origin, in-place.","Rotate the image about an origin by some angle","Rotate the bounds (will expand the <code>Rect</code>)","","Rotation in radians. Moving fingers around each other will …","","","Useful for pixel-perfect rendering.","Useful for pixel-perfect rendering.","Useful for pixel-perfect rendering.","Set the rounding of the button.","","","","Rows of text, from top to bottom. The number of characters …","Run the ui code for one framecale the font by this much.","Create a scoped child ui.","This is a signal to any backend that we want the …","Position and size of the egui area.","","Position and size of the area that egui should use, in …","Position and size of the egui area.","Full size of the screen, in pixels.","","Enable/disable horizontal/vertical scrolling. <code>false</code> by …","Turn on/off scrolling on the horizontal/vertical axes.","How many points the user scrolled.","Set the horizontal and vertical scroll offset position.","Adjust the scroll position of any parent <code>ScrollArea</code> so …","Adjust the scroll position until this UI becomes visible.","Adjust the scroll position of any parent <code>ScrollArea</code> so …","Scroll this many points in the given direction, in the …","","Radius of the rounding of the South-East (right bottom) …","Was the secondary button clicked this frame?","Returns true if this widget was clicked this frame by the …","Is the secondary button currently down?","Was the secondary button pressed this frame?","Was the secondary button released this frame?","Can the <code>CollapsingHeader</code> be selected by clicking it? …","","Show a label which can be selected or not.","Show selectable text. It is selected if …","If you set this to ‘true’, the <code>CollapsingHeader</code> will …","checkboxes, radio-buttons etc","If <code>true</code>, mark this button as “selected”.","","","The current value of checkboxes and radio buttons.","","What we show as the currently selected value","","","By default, buttons senses clicks. Change this to a …","Make the label respond to clicks and/or drags.","By default, buttons senses clicks. Change this to a …","Make the image respond to clicks and/or drags.","","","The senses (click and/or drag) that the widget was …","","","Shortcut for <code>add(Separator::default())</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Assign a new image to an existing texture.","Modify an existing <code>Shape</code>.","New or changed textures. Apply before painting.","<code>max.y</code>","Keep size","Screen-space rectangle for clipping what we paint in this …","Everything painted in this <code>Painter</code> will be clipped against …","Set the cursor icon.","Turn on/off whether or not to debug widget layout on hover.","","Calling <code>set_enabled(false)</code> will cause the <code>Ui</code> to deny all …","If true, all windows, menus, tooltips etc are to be …","Tell <code>egui</code> which fonts to use.","keep min","Set both the minimum and maximum height.","<code>ui.set_height_range(min..=max);</code> is equivalent to …","Redirect where you are painting.","<code>min.x</code>","Set the maximum height of the ui. You won’t be able to …","Set the maximum size of the ui. You won’t be able to …","Set the maximum width of the ui. You won’t be able to …","Set the minimum height of the ui. This can’t shrink the …","Set the minimum size of the ui. This can’t shrink the …","Set the minimum width of the ui. This can’t shrink the …","Set the operating system we are running on.","Assign a new image to a subregion of the whole texture.","Set the number of physical pixels for each logical point. …","For integrations: this callback will be called when an …","<code>max.x</code>","Set row height in horizontal wrapping layout.","Changes apply to this <code>Ui</code> and its subsequent children.","The <code>Style</code> used by all new windows, panels etc.","<code>min.y</code>","Calling <code>set_visible(false)</code> will cause all further widgets …","The <code>Visuals</code> used by all subsequent windows, panels etc.","keep min","Set both the minimum and maximum width.","<code>ui.set_width_range(min..=max);</code> is equivalent to …","","","","What to paint.","Either of the shift keys are down.","","Is shift the only pressed button?","Short and readable summary","Short and readable summary","Short and readable summary","Show some text on the right side of the button, in weak …","","","Show the panel at the top level.","Show the panel at the top level.","Returns <code>None</code> if the window is not open (if <code>Window::open</code> …","","Show the <code>TextEdit</code>, returning a rich <code>TextEditOutput</code>.","","","Show the panel at the top level.","","Show the <code>ScrollArea</code>, and add the contents to the viewport.","Show the panel if <code>is_expanded</code> is <code>true</code>, otherwise don’t …","Show the panel if <code>is_expanded</code> is <code>true</code>, otherwise don’t …","Show either a collapsed or a expanded panel, with a nice …","Show either a collapsed or a expanded panel, with a nice …","Show either a collapsed or a expanded panel, with a nice …","Show either a collapsed or a expanded panel, with a nice …","Show the panel if <code>is_expanded</code> is <code>true</code>, otherwise don’t …","Show the panel if <code>is_expanded</code> is <code>true</code>, otherwise don’t …","Should the <code>CollapsingHeader</code> show a background behind it? …","","Show a list of items with the given selected index.","Show the panel inside a <code>Ui</code>.","Show the panel inside a <code>Ui</code>.","Show the panel inside a <code>Ui</code>.","","Show the progress in percent on the progress bar.","Efficiently show only the visible part of a large number …","Show a separator line, even when not interacting with it?","Show a separator line, even when not interacting with it?","","","Show a tooltip at the current pointer position (if any).","Show a tooltip at the given position.","Show a tooltip at the current pointer position (if any).","Show a tooltip under the given area.","Show some text at the current pointer position (if any).","Show the combo box, with the given ui code for the menu …","","Control whether or not the slider shows the current value. …","","This can be used to only paint the visible part of the …","Shrink by this much in each direction, keeping the center","Contract each end of the separator line by this much.","Shrink by this much in each direction, keeping the center","Helper: shrinks the max height to the current height, so …","Helper: shrinks the max width to the current width, so …","","","","Signed distance to the edge of the box.","","No newlines (<code>\\\\n</code>) allowed. Pressing enter key will result …","","width x height","","","Select the font size (in points). This overrides the value …","","Sets the spinner’s size. The size sets both the height …","width, height.","width, height","Height in points.","","","","width x height","","","Show trailing color behind the circle of a <code>Slider</code>. Default …","Show small text.","Make this a small button, suitable for embedding into text.","Smaller text.","Prefer using <code>RichText</code> directly!","","A button as small as normal body text.","For e.g. exponents.","Prefer using <code>RichText</code> directly!","For logarithmic sliders that includes zero: what is the …","Turn smart aim on/off. Default is ON. There is almost no …","","Set spacing between columns/rows. Default: …","The current spacing options for this <code>Ui</code>. Short for …","How much space we take up. The line is painted in the …","","","Sizes and distances between widgets","Mutably borrow internal <code>Spacing</code>. Changes apply to this <code>Ui</code> …","","The default egui fonts supports around 1216 emojis in …","How much the value changes when dragged one point (logical …","","Shortcut for <code>add(Spinner::new())</code>","Set both <code>x</code> and <code>y</code> to the same value.","This is for platforms that only support 16-bit index …","<code>[2, 1]</code> for wide screen, and <code>[1, 2]</code> for portrait, etc. At …","Returns the textures as <code>sRGBA</code> premultiplied pixels, row by …","Time since last frame (in seconds), but gracefully handles …","Position of the pointer at the time the gesture started.","Change which row number the grid starts on. This can be …","","Point in time when the gesture started.","","Sets the minimal change of the value.","The scroll handle will stick to the bottom position even …","","The scroll handle will stick to the rightmost position …","Stop editing of active <code>TextEdit</code> (if any).","","Draw a line through the text, crossing it out.","Prefer using <code>RichText</code> directly!","","","If <code>true</code>, add a subtle background color to every other row.","","Wether or not Grids and Tables should be striped by default","Override button stroke. Note that this will override any …","","","","","Show text that stand out a bit (e.g. slightly brighter).","Extra strong text (stronger color).","Prefer using <code>RichText</code> directly!","","","egui theme (spacing, colors, etc).","Style options for this <code>Ui</code> and its children.","The <code>Style</code> used by all subsequent windows, panels etc.","","","Mutably borrow internal <code>Style</code>. Changes apply to this <code>Ui</code> …","","","","","","","","Add a suffix to the number, this can be e.g. a unit (“°…","Add a suffix to the number, this can be e.g. a unit (“°…","","","Total margins on both sides","Surrender keyboard focus for a specific widget. See also …","Surrender keyboard focus for this widget.","Radius of the rounding of the South-West (left bottom) …","Emoji or name representing the key","Margins with the same size on opposing sides","Clears all characters in this buffer and returns a string …","Helper: move volatile (deltas and events), clone the rest.","Take everything ephemeral (everything except <code>cursor_icon</code> …","Tessellate the given shapes into triangle meshes.","Read-only access to <code>TessellationOptions</code>.","Controls the tessellator.","Read-write access to <code>TessellationOptions</code>.","Low-level texture manager.","","","","","","A custom text to display on the progress bar.","Show a text next to the slider (e.g. explaining what the …","Lay out and paint some text.","","","","","","","","","","","","","","","","","","","","","Screen-space position of text edit cursor (used for IME).","show where the text cursor would be if you clicked","","","A <code>TextEdit</code> for multiple lines. Pressing enter key will …","No newlines (<code>\\\\n</code>) allowed. Pressing enter key will result …","Selected range of characters in <code>Self::current_text_value</code>.","","","Override the <code>TextStyle</code>.","Override the <code>TextStyle</code> if, and only if, this is a <code>RichText</code>.","","The height of text of this text style","All known text styles.","The <code>FontFamily</code> and size you want to use for a specific …","","The texture to use when drawing these triangles.","","Show stats about the allocated textures.","Texture changes since last frame (including the font …","Monotonically increasing time, in seconds. Relative to …","Time in seconds. Relative to whatever. Used for animation.","","Multiply image color with this. Default is WHITE (no tint).","Multiply image color with this. Default is WHITE (no tint).","","","Show title bar on top of the window? If <code>false</code>, the window …","Convert <code>Min =&gt; 0.0</code>, <code>Center =&gt; 0.5</code> or <code>Max =&gt; 1.0</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Treat this vector as a position. <code>v.to_pos2()</code> is equivalent …","Convert <code>Min =&gt; -1.0</code>, <code>Center =&gt; 0.0</code> or <code>Max =&gt; 1.0</code>.","-1, 0, or +1 for each axis","","","The vector from origin to this position. <code>p.to_vec2()</code> is …","","Acts like a checkbox, but looks like a <code>SelectableLabel</code>.","The id should be globally unique, e.g. …","<code>min.y</code>","","Place elements vertically, top to bottom.","Top-down layout justified so that buttons etc fill the …","<code>min.y</code>","inner margin plus outer margin.","","Show debug info on hover when <code>Context::set_debug_on_hover</code> …","Show debug info on hover when <code>Context::set_debug_on_hover</code> …","Shows the given text where the next widget is to be placed …","Display trailing color behind the slider’s circle. …","","","Translate location by this much, in-place","Move the shape by this many points, in-place.","Move all the graphics at the given layer.","Relative movement (comparing previous frame and current …","Returns true if this widget was triple-clicked this frame …","The thing was triple-clicked.","Returns true if this widget was triple-clicked this frame …xtra scale and vertical tweak to apply to all text of …","The type of widget this is.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Allocate space, interact, paint, and return a <code>Response</code>.","","","","","","","","","","","","","","","","","","","","","Is the pointer (mouse/touch) above this <code>Ui</code>? Equivalent to …","Draw a line under the text.","Prefer using <code>RichText</code> directly!","","","The union of two bounding rectangle, i.e. the minimum <code>Rect</code> …","A logical “or” operation. For instance …","The logical “or” of two <code>Sense</code>s.","Time since last frame, in secondsow much space is used by panels and windows.","How much space is used by panels and windows.","Miscellaneous tools used by the rest of egui.","Select UV range. Default is (0,0) in top-left, (1,1) …","Select UV range. Default is (0,0) in top-left, (1,1) …","","If you use a small font and <code>Align::TOP</code> you can get the …","The current value of sliders etc.","<code>vec2(x, y) == Vec2::new(x, y)</code>","Current velocity of pointer.","","Start a ui with vertical layout. Widgets will be …","Explicitly ask for a vertical line.","Make this a vertical slider.","Create a vertical scroll area.","Set the vertical align of the inner text.","e.g. for when aligning text within a button.","Start a ui with vertical layout. Widgets will be …","Start a ui with vertical layout. Widgets will be …","","Set the vertical scroll offset position.","The vertex data indexed by <code>indices</code>.","Viewport in points.","The viewport rectangle. This is what you would use in e.g. …","","The visual bounding rectangle (includes stroke widths)","The current visuals settings of this <code>Ui</code>. Short for …","Colors etc.","Mutably borrow internal <code>visuals</code>. Changes apply to this <code>Ui</code> …","A vertical line.","Paints a vertical line.","Enable/disable vertical scrolling. <code>false</code> by default.","Turn on/off scrolling on the vertical axis.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If <code>true</code>, egui is currently listening on text input (e.g. …","True if egui is currently interested in the pointer (mouse …","","A good color for warning text (e.g. orange).","Helper function that adds a label when compiling with …","Was this popup visible last frame?","Show text that is weaker (fainter color).","Extra weak text (fainter color).","Prefer using <code>RichText</code> directly!","","","For accessibility.","","Widgets are pieces of GUI such as <code>Label</code>, <code>Button</code>, <code>Slider</code> …","Visual styles of widgets","Set the outer width of the button and menu.","","","","","","","The allowable width range for the panel.","","","Window background color.","","","","","","","Generate a new <code>Id</code> by hashing the parent <code>Id</code> and the given …","Call the provided function with the given ID pushed on the …","Create a painter for a sub-region of this <code>Painter</code>.","The alignment to use on the cross axis.","Justify widgets along the cross axis?","Redirect shapes to another paint layer.","Redirect where you are painting.","The new layout will take up all available space.","The alignment to use on the main axis.","Justify widgets on the main axis?","Wrap widgets when we overflow the main axis?","Returns a response with a modified <code>Self::rect</code>.","","","","","","Controls whether text wrap is used for the selected text","If <code>true</code>, the text will wrap to stay within the max width …","If <code>true</code>, the text will wrap to stay within the max width …","","","If set, labels buttons wtc will use this to determine …","","Should text wrap in this <code>Ui</codeeturns an alignment by the X (horizontal) axis","How far to the right.","Rightwards. Width.","","Returns an alignment by the Y (vertical) axis","How far down.","Downwards. Height.","Shift font downwards by this amount of logical points.","Shift font downwards by this fraction of the font size (in …","","Zoom scale factor this frame (e.g. from ctrl-scroll or …","Proportional zoom factor (pinch gesture).","2D non-proportional zoom scale factor this frame (e.g. …","2D non-proportional zoom factor (pinch gesture).","","What mouse button? For touches, use <code>PointerButton::Primary</code>.","Hashed device identifier (if available; may be zero). Can …","Describes how hard the touch device was pressed. May …","Unique identifier of a finger/pen. Value is stable from …","","The state of the modifier keys at the time of the event.","The state of the modifier keys at the time of the event.","One of: start move end cancel.","Where is the pointer?","Position of the touch (or where the touch was last …","Was it pressed or released?","Was it the button/touch pressed this frame, or released?","If this is a <code>pressed</code> event, is it a key-repeat?","","","","Indicate wether or not a popup will be shown above or …","An area on the screen that can be moved by dragging.","","A panel that covers the remainder of the screen, i.e. …","A header which can be collapsed/expanded, revealing a …","The response from showing a <code>CollapsingHeader</code>.","A drop-down selection menu with a descriptive label.","Add a background, frame and/or margin to a rectangular …","A function that paints the <code>ComboBox</code> icon","A region that can be resized by dragging the bottom right …","Add vertical and/or horizontal scrolling to a contained <code>Ui</code>.","A panel that covers the entire left or right side of a <code>Ui</code> …","A panel that covers the entire top or bottom of a <code>Ui</code> or …","Builder for a floating window which can be dragged, …","","","","","None iff collapsed.","None iff collapsed.","","","","","","","","","","","","","","","","","","","","Response of the actual clickable header.","","","","","","","","","","","","Margin within the painted frame.","","","","","","","","","","","","","0.0 if fully closed, 1.0 if fully open, and something …","","Margin outside the painted frame.","Panels are <code>Ui</code> regions taking up e.g. the left side of a <code>Ui</code> …","","Show popup windows, tooltips, context menus etc.","Shows a popup above or below another widget.","Helper for <code>popup_above_or_below_widget</code>.","","","","","","","Coordinate system names:","","","","","","","","","Show a tooltip at the current pointer position (if any).","Show a tooltip at the given position.","Show a tooltip at the current pointer position (if any).","Show a tooltip under the given area.","Show some text at the current pointer position (if any).","","","","","","","Was this popup visible last frame?","","","","","","A header which can be collapsed/expanded, revealing a …","The response from showing a <code>CollapsingHeader</code>.","This is a a building block for building collapsing regions.","From <code>CollapsingState::show_header</code>.","A function that paints an icon indicating if the region is …","","","","Returns the response of the collapsing button, the custom …","None iff collapsed.","None iff collapsed.","Returns the response of the collapsing button, the custom …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Response of the actual clickable header.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","0 for closed, 1 for open, with tweening","0.0 if fully closed, 1.0 if fully open, and something …","","","","","Paint the arrow icon that indicated if the region is open …","","","","","","","","","Show body if we are open, with a nice animation between …","Show body if we are open, with a nice animation between …","Shows header and body (if expanded).","Paint this CollapsingState’s toggle button. Takes an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","A panel that covers the remainder of the screen, i.e. …","","State regarding panels.","","<code>Left</code> or <code>Right</code>","A panel that covers the entire left or right side of a <code>Ui</code> …","","A panel that covers the entire top or bottom of a <code>Ui</code> or …","<code>Top</code> or <code>Bottom</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","The size of the panel (from previous frame).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shows a popup above or below another widget.","Helper for <code>popup_above_or_below_widget</code>.","Show a tooltip at the current pointer position (if any).","Show a tooltip at the given position.","Show a tooltip at the current pointer position (if any).","Show a tooltip under the given area.","Show some text at the current pointer position (if any).","Was this popup visible last frame?","Add vertical and/or horizontal scrolling to a contained <code>Ui</code>.","","","","","","","","","","","","","","","","","","","","","The size of the content. If this is larger than …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","<code>Id</code> of the <code>ScrollArea</code>.","","","","What the user closure returned.","Where on the screen the content is (excludes scroll bars).","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Positive offset means scrolling down/right","","","","","","","","","","","","","","","","The current state of the scroll area.","","","","","","","","","","","","","","","","","","","","","","","Backend-specific painting.","","Circle with optional outline and fill.","How to paint a circle.","A <code>Mesh</code> or <code>PaintCallback</code> within a clip rectangle.","A <code>Shape</code> within a clip rectangle.","RGBA image.","This format is used for space-efficient color …","A 2D RGBA color image in RAM.","A cubic Bézier Curve.","A cubic Bézier Curve.","Used for the font texture.","Font of unknown size.","How to select a sized font.","A single-channel image designed for the font texture.","The collection of fonts used by <code>epaint</code>.","Text that has been laid out, ready for painting.","Hue, saturation, value, alpha. All in the range [0, 1]. No …","Like Hsva but with the <code>v</code> value (brightness) being gamma …","An image stored in RAM.","A change to an image.","A line between two points.","Textures allocated using <code>TextureManager</code>.","Textured triangles in two dimensions.","A general triangle mesh.","","A version of <code>Mesh</code> that uses 16-bit indices.","A font where each character is the same width (<code>w</code> is the …","","One of the names in <code>FontDefinitions::families</code>.","Paint nothing. This can be useful as a placeholder.","If you want to paint some 3D shapes inside an egui region, …","Information passed along with <code>PaintCallback</code> (…","Collected allocation statistics for shapes and meshes.","A series of lines between points. The path can have a …","A path which can be stroked and/or filled (if closed).","A position on screen.","A rendering primitive - either a <code>Mesh</code> or a <code>PaintCallback</code>.","A font where some characters are wider than other (e.g. ‘…","A quadratic Bézier Curve.","A quadratic Bézier Curve.","A rectangular region of space.","Rectangle with optional outline and fill.","How to paint a rectangle.","0-1 linear space <code>RGBA</code> color with premultiplied alpha.","How rounded the corners of things should be","The color and fuzziness of a fuzzy shape. Can be used for …","A paint primitive such as a circle or a piece of text. …","Describes the width and color of a line.","Tessellation quality options","Converts <code>Shape</code>s into triangles (<code>Mesh</code>).","Text.","How to paint some text on screen.","Contains font data in an atlas, where each character …","Used to paint images.","What texture to use in a <code>Mesh</code> mesh.","Low-level manager for allocating textures.","Your own texture, defined in any which way you want. The …","Recursively nest more shapes - sometimes a convenience to …","A vector has a direction and length. A <code>Vec2</code> is often used …","The 2D vertex type.","The UV coordinate of a white region of the texture mesh. …","","","","","","","","","","","","","","","alpha 0-1. A negative value signifies an additive color …","alpha 0-1. A negative value signifies an additive color …","Allocate a new texture.","Returns the coordinates of where the rect ended up, and …","Get meta-data about all allocated textures in some …","Rotate text by this many radians clockwise. The pivot is …","","","","","","","","","","","","","","","","","","","Call at the start of each frame with the latest known …","The maximum distance between the original curve and the …","Used for egui windows in dark mode.","Used for egui windows in light mode.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Paint something custom (e.g. 3D stuff).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clip rectangle in points.","","Clip / scissor rectangle. Only show the part of the <code>Mesh</code> …","Number of separate clip rectangles","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If true, connect the first and last of the points together.","A line that closes back to the start point again.","If <code>true</code> (default) cull certain primitives before …","sRGBA with premultiplied alpha","Color of the opaque center of the shadow.","","A convex polygon with a fill and optional stroke.","","If true, no clipping will be done.","Output the clip rectangles to be painted.","Output the text-containing rectangles.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An assert that is only active when <code>epaint</code> is compiled with …","An assert that is only active when <code>epaint</code> is compiled with …","The default value will be 1.0e-5, it will be used during …","","","","","","","","","","","","","","The shadow extends this much outside the rect. The size of …","List of all known font families.","What font family to use.","","Use “feathering” to smooth out the edges of shapes as …","The size of the the feathering, in physical pixels.","","","","Fill is only supported for convex polygons.","How to fill the rectangle.","When this get high, it might be time to clear and start …","","","Find out the t value for the point where the curve is …","find a set of points that approximate the cubic Bézier …","find a set of points that approximate the quadratic …","find a set of points that approximate the cubic Bézier …","","","","","","","","","","","","How full is the font atlas?","Call at the end of each frame (before painting) to get the …","Current size of the font image. Pass this to …","","Iterates through the curve invoking a callback at each …","Compute a flattened approximation of the curve, invoking a …","Free an existing texture.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a cubic Bézier curve based on 4 points and stroke.","Create a new quadratic Bézier shape based on the 3 points …","","Update the whole texture.","The layed out text, from <code>Fonts::layout_job</code>.","Width of this character in points.","hue 0-1","hue 0-1","Can we display this glyph?","Can we display all the glyphs in this text?","","","What to set the texture to.","","Draw as triangles (i.e. the length is always multiple of …","Draw as triangles (i.e. the length is always multiple of …","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Are all indices within the bounds of the contained …","","Is this affecting the whole texture? If <code>false</code>, this is a …","The job that this galley is the result of. Contains the …","Will wrap text at the given width and line break at <code>\\\\n</code>.","Like <code>Self::layout</code>, made for when you want to pick a color …","Layout some text.","Will line break at <code>\\\\n</code>.","A line through many points.","Logical bounding rectangle (ignoring stroke width)","Logical bounding rectangle (ignoring stroke width)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The other corner, opposing <code>Self::min</code>. Usually the right …","","Tight bounding box around all the meshes in all the rows. …","Get meta-data about a specific texture.","","One of the corners of the rectangle, usually the left top …","Helper module that wraps some Mutex types with different …","Radius of the rounding of the North-East (right top) …","Create a new <code>Tessellator</code>.","Create a new <code>Fonts</code> for text layout. This call is …","","","","Total number of allocated textures.","","","Total number of indices in all the row meshes.","","Total number of vertices in all the row meshes.","Radius of the rounding of the North-West (left top) corner.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If set, the text color in the galley will be ignored and …","Update a sub-region of an existing texture.","The pixels, row by row, from top to bottom.","The coverage value.","","Pixels per point.","","The number of physical pixels for each logical point. …","The first point is the starting point and the last one is …","The first point is the starting point and the last one is …","Filled paths should prefer clockwise order.","If <code>None</code>, set the whole texture to <code>Self::image</code>.","Logical pixel coordinates (points). (0,0) is the top left …","Top left corner of the first character.","<code>pos2(x, y) == Pos2::new(x, y)</code>","Returns the locations and sizes of pre-rasterized discs …","","If <code>true</code>, small filled circled will be optimized by using …","What to paint - either a <code>Mesh</code> or a <code>PaintCallback</code>.","","","Where to paint.","Bounding rect.","Increase the retain-count of the given texture.","If <code>true</code> (default) align text to mesh grid. This makes the …","","How rounded the corners are. Use <code>Rounding::none()</code> for no …","Height of one row of text in points","","Rows of text, from top to bottom. The number of characters …","saturation 0-1","saturation 0-1","Calculate the point (x,y) at t based on the cubic Bézier …","Calculate the point (x,y) at t based on the quadratic …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Full size of the screen, in pixels.","Radius of the rounding of the South-East (right bottom) …","","","","","","","","","","","Assign a new image to an existing texture, or update a …","Set the <code>Rect</code> to use for culling.","","","","","","","","width, height.","width, height","Height in points.","Tooltips, menus, …, for dark mode.","Tooltips, menus, …, for light mode.","split the original cubic curve into a new one within a …","Collect statistics about what is being painted.","","","","","","Color and thickness of the line.","The thickness and color of the outline.","Radius of the rounding of the South-West (left bottom) …","Call to get the change to the image since last call.","Take and reset changes since last frame.","","Tessellate a single <code>CircleShape</code> into a <code>Mesh</code>.","Tessellate a clipped shape into a list of primitives.","Tessellate a single <code>CubicBezierShape</code> into a <code>Mesh</code>.","Tessellate a line segment between the two points with the …","Tessellate a single <code>Mesh</code> into a <code>Mesh</code>.","Tessellate a single <code>PathShape</code> into a <code>Mesh</code>.","Tessellate a single <code>QuadraticBezierShape</code> into a <code>Mesh</code>.","Tessellate a single <code>Rect</code> into a <code>Mesh</code>.","Tessellate a single <code>Shape</code> into a <code>Mesh</code>.","Turns <code>Shape</code>:s into sets of triangles.","Tessellate a single <code>TextShape</code> into a <code>Mesh</code>.","Converts graphics primitives into textured triangles.","","Everything related to text, fonts, text layout, cursors …","","","The font atlas. Pass this to <code>crate::Tessellator</code>.","The texture to use when drawing these triangles.","The texture to use when drawing these triangles.","","","","","","","","","","","","","","","","Convert the quadratic Bézier curve to one <code>PathShape</code>. The …","Convert the cubic Bézier curve to one or two <code>PathShape</code>’…","Transform the curve with the given transform.","Transform the curve with the given transform.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add this underline to the whole text. You can also set an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Normalized texture coordinates. (0, 0) is the top left …","value 0-1, in gamma-space (~perceptually even)","value 0-1","<code>vec2(x, y) == Vec2::new(x, y)</code>","The vertex data indexed by <code>indices</code>.","The vertex data indexed by <code>indices</code>.","","Viewport in points.","The visual bounding rectangle (includes stroke width)","The visual bounding rectangle (includes stroke width)","The visual bounding rectangle (includes stroke width)","The visual bounding rectangle (includes stroke width)","The visual bounding rectangle (includes stroke width)","The visual bounding rectangle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","How far to the right.","Rightwards. Width.","How far down.","Downwards. Height.","","","A <code>HashMap</code> using <code>RandomState</code> to hash the items. (Requires …","A <code>HashSet</code> using <code>RandomState</code> to hash the items. (Requires …","A <code>Hasher</code> for hashing an arbitrary stream of bytes.","Type alias for HashMap&lt;K, V, ahash::RandomState&gt;","A convenience trait that can be used together with the …","Type alias for HashSet&lt;K, ahash::RandomState&gt;","A convenience trait that can be used together with the …","Provides a Hasher factory. This is typically used (e.g. by …","","","","","","","","","Returns the intersection of <code>self</code> and <code>rhs</code> as a new …","Returns the union of <code>self</code> and <code>rhs</code> as a new <code>AHashSet&lt;T, S&gt;</code>.","Returns the symmetric difference of <code>self</code> and <code>rhs</code> as a new …","","","","","","","","","","Constructs a new AHasher with keys based on this …","","","","","","","","","","","","","","","","","","","","","Constructs a new AHasher with fixed keys. If <code>std</code> is …","","Creates an empty <code>AHashSet&lt;T, S&gt;</code> with the <code>Default</code> value for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Examples","","Returns the argument unchanged.","Returns the argument unchanged.","Examples","","Returns the argument unchanged.","This crates a hashmap from the provided iterator using …","This crates a hashset from the provided iterator using …","Create a new <code>RandomState</code> <code>BuildHasher</code> based on the provided …","Returns a reference to the value corresponding to the key.","Returns the key-value pair corresponding to the supplied …","Returns a mutable reference to the value corresponding to …","Calculates the hash of a single value. This provides a …","Returns a reference to the value corresponding to the …","","","","","Inserts a key-value pair into the map.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","","","","Creates a consuming iterator visiting all the keys in …","Creates a consuming iterator visiting all the values in …","","","","","","","","","","","","","","Constructs a new HashMap","Constructs a new HashSet","This crates a hashmap using RandomState::new which obtains …","This crates a hashset using RandomState::new. See the …","Create a new <code>RandomState</code> <code>BuildHasher</code> using random keys.","","","","","","","","","","","Removes a key from the map, returning the value at the key …","","","","","","","","","","","Returns the difference of <code>self</code> and <code>rhs</code> as a new …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs a new HashMap with a given initial capacity","Constructs a new HashSet with a given initial capacity","This crates a hashmap with the specified capacity using …","This crates a hashset with the specified capacity using …","","","","","Build a <code>RandomState</code> from a single key. The provided key …","Allows for explicitly setting the seeds to used. All …","","","","","","","","","","","","","","","","A supplier of Randomness used for different hashers. See …","Provides a Hasher factory. This is typically used (e.g. by …","","","","","","Provides an optional way to manually supply a source of …","This format is used for space-efficient color …","Hue, saturation, value, alpha. All in the range [0, 1]. No …","Like Hsva but with the <code>v</code> value (brightness) being gamma …","0-1 linear space <code>RGBA</code> color with premultiplied alpha.","","","alpha 0-1. A negative value signifies an additive color …","alpha 0-1. A negative value signifies an additive color …","","","","","","","","","","","","","","","","","","","","","","","","","","","An assert that is only active when <code>epaint</code> is compiled with …","An assert that is only active when <code>epaint</code> is compiled with …","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","From linear RGBA with premultiplied alpha","From linear RGBA without premultiplied alpha","","From <code>sRGBA</code> with premultiplied alpha","From <code>sRGBA</code> without premultiplied alpha","linear [0, 1] -&gt; gamma [0, 1] (not clamped). Works for …","linear [0, 1] -&gt; gamma [0, 255] (clamped). Values outside …","hue 0-1","hue 0-1","All ranges in 0-1, rgb is linear.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","gamma [0, 255] -&gt; linear [0, 1].","linear [0, 255] -&gt; linear [0, 1]. Useful for alpha-channel.","gamma [0, 1] -&gt; linear [0, 1] (not clamped). Works for …","linear [0, 1] -&gt; linear [0, 255] (clamped). Useful for …","","","","","","","","","","All ranges in 0-1, rgb is linear.","saturation 0-1","saturation 0-1","","","","","Cheap and ugly. Made for graying out disabled <code>Ui</code>s.","","","","","","Represents additive colors using a negative alpha.","","","","","","","","","","","","","","","","value 0-1, in gamma-space (~perceptually even)","value 0-1","","","","","","","left/center/right or top/center/bottom alignment for e.g. …","Two-dimension alignment, e.g. <code>Align2::LEFT_TOP</code>.","Horizontal or vertical center.","This struct tracks recent values of some time series.","The identity rotation: nothing rotates","Is this an integer type?","Largest finite value","Smallest finite value","Right or bottom.","Left or top.","Extends <code>f32</code>, <code>Vec2</code> etc with <code>at_least</code> and <code>at_most</code> as aliases …","Implemented for all builtin numeric types","Helper trait to implement <code>lerp</code> and <code>remap</code>.","A position on screen.","Helper trait to implement <code>lerp</code> and <code>remap</code>.","A rectangular region of space.","Linearly transforms positions from one <code>Rect</code> to another.","Represents a rotation in the 2D plane. A rotation of …","A vector has a direction and length. A <code>Vec2</code> is often used …","","","","Values must be added with a monotonically increasing time, …","One- and two-dimensional alignment (<code>Align::Center</code>, …","Return true when arguments are the same within some …","","More readable version of <code>self.max(lower_limit)</code>","More readable version of <code>self.min(upper_limit)</code>","","","","","Average times rate. If you are keeping track of individual …","","","","","","","","","","","","","","","","","","","","","","","","Identity rotation","","","","","","","","","","","","","","","","Amount of time contained from start to end in this <code>History</code>.","An assert that is only active when <code>emath</code> is compiled with …","An assert that is only active when <code>emath</code> is compiled with …","","","","","Calculate a lerp-factor for exponential smoothing using a …","Remove samples that are too old.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Angle is clockwise in radians. A 𝞃/4 = 90° rotation …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Where in the range is this value? Returns 0-1 if within …","","","","","<code>(time, value)</code> pairs Time difference between values can be …","","","Current number of values kept in history","The factor by which vectors will be scaled.","","Linear interpolation.","","","","","","","The other corner, opposing <code>Self::min</code>. Usually the right …","","","","","Mean time difference between values in this <code>History</code>.","One of the corners of the rectangle, usually the left top …","","","","","","","Example:","","Wrap angle to <code>[-PI, PI]</code> range.","","","","","","","","<code>pos2(x, y) == Pos2::new(x, y)</code>","","Linearly remap a value from one range to another, so that …","Like <code>remap</code>, but also clamps the value so that the returned …","Round a value to the given number of decimal places.","","","","","","","","The scale factors.","","","Find “simple” numbers is some range. Used by sliders.","","","","","","","","Total number of values seen. Includes those that have been …","","Transforms the given coordinate in the <code>from</code> space to the <code>to</code>…","Transforms the given coordinate in the <code>from</code> space to the <code>to</code>…","Transforms the given rectangle in the <code>in</code>-space to a …","","","","","","","","","","","","","","","","","","","","","<code>vec2(x, y) == Vec2::new(x, y)</code>","Calculate a smooth velocity (per second) over the entire …","","","","","","","","","","How far to the right.","Rightwards. Width.","How far down.","Downwards. Height.","left/center/right or top/center/bottom alignment for e.g. …","Two-dimension alignment, e.g. <code>Align2::LEFT_TOP</code>.","Horizontal or vertical center.","Right or bottom.","Left or top.","Allocates a rectangle of the specified <code>size</code> inside the …","Find the “simplest” number in a closed range [min, max]…","RGBA image.","A 2D RGBA color image in RAM.","Used for the font texture.","A single-channel image designed for the font texture.","An image stored in RAM.","A change to an image.","What to set the texture to.","","The pixels, row by row, from top to bottom.","The coverage value.","If <code>None</code>, set the whole texture to <code>Self::image</code>.","width, height.","width, height","Provides interior mutability.","The lock you get from <code>Mutex</code>.","Provides interior mutability.","An RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …","An RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Aggregate information about a bunch of allocations.","Collected allocation statistics for shapes and meshes.","","","","","","","","","","Number of separate clip rectangles","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A connected line (without thickness or gaps) which can be …","","Tessellation quality options","Converts <code>Shape</code>s into triangles (<code>Mesh</code>).","","","","","","","","","","The maximum distance between the original curve and the …","","","","","","","","","","","","","","","","","If <code>true</code> (default) cull certain primitives before …","If true, no clipping will be done.","Output the clip rectangles to be painted.","Output the text-containing rectangles.","","","","","","","","","","The default value will be 1.0e-5, it will be used during …","","","","","Use “feathering” to smooth out the edges of shapes as …","The size of the the feathering, in physical pixels.","The path is taken to be closed (i.e. returning to the …","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Helpers for constructing paths","","","If <code>true</code>, small filled circled will be optimized by using …","","If <code>true</code> (default) align text to mesh grid. This makes the …","","","","","","","","A closed path (returning to the first point).","Open-ended.","Turns <code>Shape</code>:s into sets of triangles.","","","","","","","","","","","","","","","","","","","","","Add one quadrant of a circle","overwrites existing points","A <code>.ttf</code> or <code>.otf</code> file and a font face index.","Describes the font data and the sizes to use.","Font of unknown size.","How to select a sized font.","Extra scale and vertical tweak to apply to all text of a …","The collection of fonts used by <code>epaint</code>.","The collection of fonts used by <code>epaint</code>.","Text that has been laid out, ready for painting.","","Describes the task of laying out text.","","A font where each character is the same width (<code>w</code> is the …","One of the names in <code>FontDefinitions::families</code>.","Suggested character to use to replace those in password …","A font where some characters are wider than other (e.g. ‘…","","The tessellated output of a row.","One <code>\\\\t</code> character is this many spaces wide.","","","","","","","","","Helper for adding a new section when building a <code>LayoutJob</code>.","","","","","","","","","","","","","","","","","","","","","","","","Don’t try to break text at an appropriate place.","If <code>false</code>, all newlines characters will be ignored and show …","Range into the galley text","","","","","","","","Closest char at the desired x coordinate. Returns …","Excludes the implicit <code>\\\\n</code> after the <code>Row</code>, if any.","Includes the implicit <code>\\\\n</code> after the <code>Row</code>, if any.","","","","","","","","","","","","","","","The character this glyph represents.","","","","","","","","","","","","","Text color","Different types of text cursors, i.e. ways to point into a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If true, this <code>Row</code> came from a paragraph ending with a <code>\\\\n</code>. …","","","","","","","","","","","","","Which fonts (names) to use for each <code>FontFamily</code>.","What font family to use.","The first row must be at least this high. This is in case …","","","","","","","Get the right font implementation from size and <code>FontFamily</code>.","The content of a <code>.ttf</code> or <code>.otf</code> file.","List of font names and their definitions.","The height of the tallest used font in the job.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","The range of vertices in the mesh the contain glyphs. …","One for each <code>char</code>.","How to horizontally align the text (<code>Align::LEFT</code>, …","Can we display this glyph?","Can we display all the glyphs in this text?","","","","","Which font face in the file to use. When in doubt, use <code>0</code>.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","The job that this galley is the result of. Contains the …","Justify text so that word-wrapped rows fill the whole …","Layout text into a <code>Galley</code>.","Can be used for first row indentation.","Same y range for all characters with the same <code>TextFormat</code>.","","","","","","","","","","","","","","","Maximum amount of rows the text should have. Set to <code>0</code> to …","","Try to break text so that no row is wider than this. Set …","","","The tessellated text, using non-normalized (texel) UV …","Tight bounding box around all the meshes in all the rows. …","Bounds of the mesh, and can be used for culling. Does NOT …","","Create a new <code>FontsImpl</code> for text layout. This call is …","Total number of indices in all the row meshes.","Total number of vertices in all the row meshes.","Character to use to represent clipped text, <code>…</code> for …","","","","","","","","","","","","","","","","","The number of physical pixels for each logical point. …","Relative to the galley position. Logical position: pos.y …","Bounding rect.","Logical bounding rectangle based on font heights etc. Use …","Rows of text, from top to bottom. The number of characters …","","","","","","","","","","","","","","","Scale the font by this much.","Index into <code>LayoutJob::sections</code>. Decides color etc.","The different section, which can have different fonts, …","","","","","","","Break on <code>\\\\n</code> and at the given wrap width.","Does not break on <code>\\\\n</code>, but shows the replacement character …","","Height in points.","Advance width and font row height.","","","The complete text of this job, referenced by <code>LayoutSection</code>.","","","","","","","","","","","","","","","","","","","","","Extra scale and vertical tweak to apply to all text of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Position of the glyph in the font texture, in texels.","If you use a small font and <code>Align::TOP</code> you can get the …","The mesh, ready to be rendered.","","","","","","","","","","","","","","","","","","","","","","","","Shift font downwards by this amount of logical points.","Shift font downwards by this fraction of the font size (in …","Character cursor","All different types of cursors together. They all point to …","Paragraph Cursor","Row Cursor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Character based (NOT bytes). It is fine if this points to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Character offset (NOT byte offset!).","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Character based (NOT bytes). It is fine if this points to …","","","","","","","","","0 is first paragraph, and so on. Note that a single …","","If this cursors sits right at the border of a wrapped row …","If this cursors sits right at the border of a wrapped row …","","0 is first row, and so on. Note that a single paragraph …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Linearly interpolate the nearest neighbors, creating a …","Show the nearest pixel value.","How the texture texels are filtered.","Low-level manager for allocating textures.","Meta-data about an allocated texture.","How the texture texels are filtered.","What has been allocated and freed during the last period.","","","","","4 or 1","Size in bytes. width x height x <code>Self::bytes_per_pixel</code>.","","","","","","","","","","","","","","","Textures to free after painting.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","How to filter when magnifying (when texels are larger than …","","How to filter when minifying (when texels are smaller than …","A human-readable name useful for debugging.","","The texture filtering mode to use when rendering.","","","Free when this reaches zero.","","","New or changed textures. Apply before painting.","width x height","","","","","","","","","","","Extension trait to provide <code>ord()</code> method.","Wraps a floating-point value to add total order and hash. …","","","","","","","","","","","","","","","Returns the argument unchanged.","","Hash the given value with a predictable hasher.","","Hash the given value with the given hasher.","","Calls <code>U::from(self)</code>.","","","Type to provide total order, useful as key in sorted …","","","","","","","","","","","","","","","The suggested keyboard shortcuts for global gui zooming.","Make everything larger.","Show buttons for zooming the ui.","Make everything smaller.","Let the user scale the GUI (change …","","","","","","Painted behind all floating windows","Debug layer, always painted last / on top","Popups, menus etc that should always be painted on top of …","An identifier for a paint layer. Also acts as an …","Normal moveable windows that you reorder by click","Different layer categories","A list of <code>Shape</code>s paired with a clip rectangle.","Special layer between panels and windows","A unique identifier of a specific <code>Shape</code> in a <code>PaintList</code>.","Things floating on top of everything else, like tooltips. …","","","Returns the index of the new <code>Shape</code> that can be used with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Modify an existing <code>Shape</code>.","","","Translate each <code>Shape</code> and clip rectangle by this much, …","","","","","","","","","","","","","","","","","","","","","","","The menu bar goes well in a <code>TopBottomPanel::top</code>, but can …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Construct a top level menu in a menu bar. This would be …","Construct a top level menu with an image in a menu bar. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Android OS.","Apple iPhone OS.","MacOS.","Linux or Unix other than Android.","","Unknown OS - could be wasm","Windows.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Helper: try to guess from the user-agent of a browser.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Indicated an alias, e.g. a shortcut","Something can be scrolled in any direction (panned).","Hover a cell in a table","A widget was clicked.","A context menu is available","Indicate that a copy will be made","For precision work","A mouse cursor icon.","Normal cursor icon, whatever that is.","A widget was double-clicked.","A widget gained keyboard focus (by tab key).","What egui emits each frame from <code>crate::Context::run</code>.","The thing you are hovering can be grabbed","You are grabbing the thing you are hovering","Question mark","Omnidirectional move icon (e.g. arrows in all cardinal …","Can’t drop here","Show no cursor","Forbidden","What URL to open, and how.","Things that happened during this frame that the …","The non-rendering part of what egui emits each frame.","Pointing hand, used for e.g. web links","Shows that processing is being done, but that the program …","Resize a column","Resize something rightwards (e.g. when dragging the …","Horizontal resize <code>-</code> to make something wider or more narrow …","Diagonal resize <code>/</code> (right-up to/from left-down)","Resize something up (e.g. when dragging the top edge of …","Resize something up and right (e.g. when dragging the …","Resize something up and left (e.g. when dragging the …","Diagonal resize <code>\\\\</code> (left-up to/from right-down)","Resize a row","Resize something downwards (e.g. when dragging the bottom …","Resize something down and right (e.g. when dragging the …","Resize something down and left (e.g. when dragging the …","Vertical resize <code>|</code> (up-down or down-up)","Resize something leftwards (e.g. when dragging the left …","Text caret, e.g. “Click here to edit text”","Text selection was updated.","A widget was triple-clicked.","A widget’s value changed.","Vertical text caret, e.g. “Click here to edit vertical …","Not yet ready, try later.","Describes a widget such as a <code>crate::Button</code> or a …","Enhance!","Let’s get a better overview","","","","","","","","","","","","","","","","","","","If set, put this text in the system clipboard. Ignore if …","The contents of some editable text (for <code>TextEdit</code> fields).","Set the cursor to this icon.","","","","","","","","","","","Whether the widget is enabled.","","","","","Events that may be useful to e.g. a screen reader.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The text on labels, buttons, checkboxes etc.","","","","","Is there a mutable <code>TextEdit</code> under the cursor? Use by <code>eframe</code>…","","If <code>true</code>, open the url in a new tab. If <code>false</code> open it in …","If set, open this url.","","","","","Non-rendering related output.","The previous text value.","If <code>Duration::is_zero()</code>, egui is requesting immediate …","","","","","","The current value of checkboxes and radio buttons.","","","What to paint.","Screen-space position of text edit cursor (used for IME).","Selected range of characters in <code>Self::current_text_value</code>.","Texture changes since last frame (including the font …","","","","","","","The type of widget this is.","","","","","","","","","","The current value of sliders etc.","","","","","","","","The word <code>git</code>.","The Github logo.","The Android logo.","The Apple logo.","Tux, the Linux penguin.","The Windows logo.","The Twitter bird.","Normal labels. Easily readable, doesn’t take up too much …","Buttons. Maybe slightly bigger than <code>Self::Body</code>.","Options for help debug egui by adding extra visualization","Default text style - will use <code>TextStyle::Body</code>, unless …","Directly select size and font family","A way to select <code>FontId</code>, either by picking one directly or …","Heading. Probably larger than <code>Self::Body</code>.","How and when interaction happens.","","Same size as <code>Self::Body</code>, but used when monospace is …","A user-chosen style, found in <code>Style::text_styles</code>.","Selected text, selected elements etc","Used when small text is needed.","Controls the sizes and distances between widgets.","Specifies the look and feel of egui.","Use a <code>TextStyle</code> to look up the <code>FontId</code> in <code>Style::text_styles</code>…","Alias for a <code>FontId</code> (font of a certain size).","Controls the visual style (colors etc) of egui.","bg = background, fg = foreground.","The visuals of widgets for different states of interaction.","","","","","","","The style of an interactive widget as you are clicking or …","How many seconds a typical animation should last.","","","","","","","","Background color of widgets that must have a background …","For surrounding rectangle of things that need it, like …","","","","","","","","","","","","","","Show a background behind buttons.","Button size is text size plus this on each side","","","","","","","","","","","","","","","","","","","Allow child widgets to be just on the border and still …","","","","","","","","","","","","","Background color behind code-styled monospaced labels.","Show a background behind collapsing headers.","Height of a combo-box before showing scroll bars.","Default (minimum) width of a <code>ComboBox</code>.","","If true, the visuals are overall dark with light text. If …","Options to help debug why egui behaves strangely.","However over widgets to see their rectangles","","","","","","The default text styles of the default egui theme.","","","","","","","","","","","","","","","","","","","","","","","","","The style to use for <code>DragValue</code> text.","","","","","","","","","","","","","","","A good color for error text (e.g. red).","Make the frame this much larger.","Show tooltips explaining <code>DragValue</code>:s etc when hovered.","Very dark or light color (for corresponding theme). Used …","Something just barely different from the background color. …","Stroke and text color of the interactive part of a …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The style of an interactive widget while you hover it, or …","The color used for <code>Hyperlink</code>,","Returns small icon rectangle and big icon rectangle","Checkboxes, radio button and collapsing headers have an …","Checkboxes, radio button and collapsing headers have an …","Checkboxes, radio button and collapsing headers have an …","The style of an interactive widget, such as a button, at …","Indent collapsing regions etc by this much.","End indented regions with a horizontal line","Draw a vertical lien left of indented region, in e.g. …","","","","","","","Minimum size of a <code>DragValue</code>, color picker button, and …","How and when interaction happens.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Horizontal and vertical spacing between widgets.","","","","","","","","","","","","","","","Horizontal and vertical margins within a menu frame.","","The style of a widget that you cannot interact with.","The style of a button that has an open menu beneath it …","","","","","","","","","","","","","If set this will change the font family and size for all …","Override default text color for all text.","If set this will change the default <code>TextStyle</code> for all …","Panel background color","","","Mouse must be this close to the corner of a window to …","Mouse must be this close to the side of a window to resize","","Button frames etc.","","","","","","","","","","","","","Margin between contents and scroll bar.","Margin between scroll bar and the outer container (e.g. …","","Make sure the scroll handle is at least this big","","","","","","","","Show what widget blocks the interaction of another widget.","Show which widgets make their parent higher","Show which widgets make their parent wider","Show an overlay on all interactive widgets.","","If <code>false</code>, tooltips will show up anytime you hover …","Show trailing color behind the circle of a <code>Slider</code>. Default …","Default width of a <code>Slider</code>.","Sizes and distances between widgets","Wether or not Grids and Tables should be striped by default","","","","show where the text cursor would be if you clicked","","Default width of a <code>TextEdit</code>.","The <code>FontFamily</code> and size you want to use for a specific …","","","","","","","Width of a tooltip (<code>on_hover_ui</code>, <code>on_hover_text</code> etc).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Colors etc.","","","","","","","A good color for warning text (e.g. orange).","Background color of widgets that can <em>optionally</em> have a …","Visual styles of widgets","","Horizontal and vertical margins within a window frame.","","","","If set, labels buttons wtc will use this to determine …","","","","","","","","","","","","","Character cursor","A selected text range (could be a range of length zero).","A <code>.ttf</code> or <code>.otf</code> file and a font face index.","Describes the font data and the sizes to use.","Font of unknown size.","The collection of fonts used by <code>epaint</code>.","Text that has been laid out, ready for painting.","Describes the task of laying out text.","","A font where each character is the same width (<code>w</code> is the …","One of the names in <code>FontDefinitions::families</code>.","A font where some characters are wider than other (e.g. ‘…","One <code>\\\\t</code> character is this many spaces wide.","","","","","","","If <code>false</code>, all newlines characters will be ignored and show …","Range into the galley text","","","","","","Text color","","","","","","","","Which fonts (names) to use for each <code>FontFamily</code>.","The first row must be at least this high. This is in case …","","The content of a <code>.ttf</code> or <code>.otf</code> file.","List of font names and their definitions.","","","Returns the argument unchanged.","How to horizontally align the text (<code>Align::LEFT</code>, …","Character offset (NOT byte offset!).","Which font face in the file to use. When in doubt, use <code>0</code>.","","Calls <code>U::from(self)</code>.","","","The job that this galley is the result of. Contains the …","Justify text so that word-wrapped rows fill the whole …","Can be used for first row indentation.","","","Tight bounding box around all the meshes in all the rows. …","Total number of indices in all the row meshes.","Total number of vertices in all the row meshes.","The empty range.","","","The number of physical pixels for each logical point. …","If this cursors sits right at the border of a wrapped row …","When selecting with a mouse, this is where the mouse was …","Bounding rect.","Rows of text, from top to bottom. The number of characters …","","","When selecting with a mouse, this is where the mouse was …","The different section, which can have different fonts, …","","returns the two ends ordered","","The complete text of this job, referenced by <code>LayoutSection</code>.","","","","Extra scale and vertical tweak to apply to all text of …","","","","","","","If you use a small font and <code>Align::TOP</code> you can get the …","","","","","This struct tracks recent values of some time series.","Stores values identified by an <code>Id</code> AND a the …","","","","","Computing the same thing each frame can be expensive, so …","","","","","","","Count the number of values are stored with the given type.","Count how many values are stored but not yet deserialized.","","","","","","","","Returns the argument unchanged.","Read a value, optionally deserializing it if available.","","","","Read a value without trying to deserialize a persisted …","","","","Hash the given value with a predictable hasher.","Hash the given value with the given hasher.","","","Insert a value that will be persisted next time you start …","Insert a value that will not be persisted.","Calls <code>U::from(self)</code>.","","","","","","","","","","Remove the state of this type an id.","Note all state of the given type.","","","","","","","","","","","","","","","","","","","Something that does an expensive computation that we want …","Caches the results of a computation for one frame. If it …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Must be called once per frame to clear the cache.","","Returns the argument unchanged.","Returns the argument unchanged.","","Get from cache (if the same key was used last frame) or …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Number of values currently in the cache.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Call once per frame to evict cache.","","Call once per frame to evict cache.","","","","","","","Stores values identified by an <code>Id</code> AND a the …","","Like <code>std::any::TypeId</code>, but can be serialized and …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Automatic undo system.","","","Add an undo point if, and only if, there has been a change …","If the state is changing so often that we never get to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Call this as often as you want (e.g. every frame) and …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Do we have an undo point different from the given state?","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return true if the state is currently changing","","","","","Maximum number of undos. If your state is resource …","","","","","","","","","","","","When that state hasn’t changed for this many seconds, …","","","","","","","","","","","","","","","","","","","","","","","Use exactly this galley when painting the text.","Use this <code>LayoutJob</code> when laying out the text.","Text and optional style choices for it.","","This is how you specify text for a widget.","Text that has been layed out and ready to be painted.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Paint with this specific color.","Use the colors in the original <code>WidgetText</code> if any, else …","Use the colors in the original <code>WidgetText</code> if any, else …","","","","","","Size of the layed out text.","","","","Size of the layed out text.","","","","","","","","","","","","","","","","","","","","","","","","","","Clickable button with text.","Boolean on/off control with text label.","A numeric value that you can change by dragging the …","","A clickable hyperlink, e.g. to …","An widget to show an image of a given size.","A clickable image within a frame.","Static text.","Clickable text, that looks like a hyperlink.","A simple progress bar.","One out of several alternatives, either selected or not.","One out of several alternatives, either selected or not. …","A visual separator. A horizontal or vertical line …","Control a number with a slider.","Specifies the orientation of a <code>Slider</code>.","A spinner widget used to indicate loading.","","Trait constraining what types <code>crate::TextEdit</code> may use as …","A text region that the user can edit the contents of.","","Anything implementing Widget can be added to a <code>Ui</code> with …","Helper so that you can do <code>TextEdit::State::read…</code>","","","Returns this buffer as a <code>str</code>.","","","Reads the given character range.","","","","","Clears all characters in this buffer","","","Color picker widgets.","","","","","","Deletes a range of text <code>char_range</code> from this buffer.","","","","","","","","","","","","","Show larger buttons for switching between light and dark …","Show a small button to switch to/from dark/light mode …","","","","","","","Inserts text <code>text</code> into this buffer at character index …","","","Can this text be edited?","","","","","","","","","","","","","Simple plotting library.","","","","","Replaces all contents of this string with <code>text</code>","Show a button to reset a value to its default. The button …","Show a button to reset a value to its default. The button …","","","","","","","","","","","","","","","","","","","","","","","Clears all characters in this buffer and returns a string …","","","","","","","","","","","","","","","","Allocate space, interact, paint, and return a <code>Response</code>.","","","","","What options to show for alpha","","","","","","","","","","","","","","Shows a button with the given color. If the user clicks …","Shows a button with the given color. If the user clicks …","Shows a button with the given color. If the user clicks …","Shows a button with the given color. If the user clicks …","Shows a color picker where the user can change the given …","Returns <code>true</code> on change.","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","Show a color with background checkers to demonstrate …","Show a color with background checkers to demonstrate …","","","","","","","","","","","A set of arrows.","","One bar in a <code>BarChart</code>. Potentially floating, allowing …","A bar chart.","A box in a <code>BoxPlot</code> diagram. This is a low level graphical …","A diagram containing a series of <code>BoxElem</code> elements.","Contains the values of a single box in a box plot.","","Specifies the coordinates formatting when passed to …","Where to place the plot legend.","","","","","","","Input for “grid spacer” functions.","One mark (horizontal or vertical line) in the background …","A horizontal line in a plot, filling the full width","","","","","The configuration for a plot legend.","A series of values forming a path.","","Defines how multiple plots share the same range for one or …","Defines how multiple plots share the same cursor for one …","","","Determines whether a plot element is vertically or …","","A 2D plot, e.g. a graph of a function.","2D bounding box of f64 precision. The range of data values …","An image in the plot.","A point coordinate in the plot.","Represents many <code>PlotPoint</code>s.","Provides methods to interact with a plot while building …","","A set of points.","A convex polygon.","","","","","","Text inside the plot.","","A vertical line in a plot, filling the full width","","","","","","","","","","","","","","","","","","Get a vector containing all marker shapes.","","Whether to allow zooming in the plot by dragging out a box …","","Whether to allow double clicking to reset the view. …","","Whether to allow dragging in the plot to move the bounds. …","","Whether to allow scrolling in the plot. Default: <code>true</code>.","","Whether to allow zooming in the plot. Default: <code>true</code>.","","Anchor position of the text. Default is …","","Position on the argument (input) axis – X if vertical, Y …","Position on the argument (input) axis – X if vertical, Y …","Add arrows.","","Expand bounds to fit all items across the x axis, …","Expand bounds to fit all items across the y axis, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The alpha of the legend background. Default: <code>0.75</code>.","","Add a bar chart.","Thickness of the bar","","Offset the base of the bar. This offset is on the Y axis …","For stacked bars, this denotes where the bar starts. None …","Recommended (but not required) lower-bound on the step …","A solid color to put behind the image. Useful for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Link the cursors for both axes.","Link both axes. Note that this still respects the aspect …","Min/max of the visible data range (the values at the two …","","","Add a box plot diagram.","Set the box width.","Thickness of the box","Config the button pointer to use for boxed zooming. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Always keep the x-axis centered. Default: <code>false</code>.","","Always keep the y-axis centered. Default: <code>false</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clamp the grid to only be visible at the range of data …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Stroke color. Default is <code>Color32::TRANSPARENT</code> which means …","Stroke color. Default is <code>Color32::TRANSPARENT</code> which means …","Set the marker’s color.","Set the arrows’ color.","Set the default color. It is set on all elements that do …","Set the default color. It is set on all elements that do …","Stroke color. Default is <code>Color32::TRANSPARENT</code> which means …","Stroke color. Default is <code>Color32::TRANSPARENT</code> which means …","Text color.","","","","Show the pointer coordinates in the plot.","","","","","","width / height ratio of the data. For instance, it can be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add a custom way to format an element. Can be used to …","Add a custom way to format an element. Can be used to …","","","","","","","","","","","","","","","","","","","","","","","Fill the area between this line and a given horizontal …","Add a custom fill color.","Add a custom fill color.","","Fill color","Fill color","Alpha of the filled area.","","Whether to fill the marker.","","","","","","","","","","","","","Helper for formatting a number so that we always show at …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Draw a line based on a function <code>y=f(x)</code>, a range (which can …","","","Draw a line based on a function <code>(x,y)=f(t)</code>, a range for t …","From a series of y-values. The x-values will be the …","From a series of y-values. The x-values will be the …","","","Height of plot. By default a plot will fill the ui it is …","","","Highlight this line in the plot by scaling up the line.","Highlight this polygon in the plot by scaling up the …","Highlight these points in the plot by scaling up their …","Highlight these arrows in the plot.","Highlight all plot elements.","Highlight all plot elements.","Highlight this line in the plot by scaling up the line.","Highlight this line in the plot by scaling up the line.","Highlight this text in the plot by drawing a rectangle …","Highlight this image in the plot.","","","","","","","","","","","Add a horizontal line. Can be useful e.g. to show min/max …","Set all elements to be in a horizontal orientation. …","Set all elements to be in a horizontal orientation. …","Set orientation of the element as horizontal. Argument …","Set orientation of the element as horizontal. Argument …","","Add an image.","Expand bounds to include the given x value. For instance, …","Expand bounds to include the given y value. For instance, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Provide a function to customize the on-hover label for the …","","","Show a legend including all named items.","","Add a data line.","Add a <code>LinkedAxisGroup</code> so that this plot will share the …","Add a <code>LinkedCursorsGroup</code> so that this plot will share the …","","","","","","","Recursively splits the grid into <code>base</code> subdivisions (e.g. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Value of lower whisker (typically minimum).","","","","Value of middle line in box (typically median)","","","","Minimum size of the plot view.","","Name of this line.","Name of this polygon.","Name of this set of points.","Name of this set of arrows.","Name of this chart.","Name of this box plot diagram.","Name of this bar chart element.","Name of this box element.","Name of this horizontal line.","Name of this vertical line.","Name of this text.","Name of this image.","","","","","","","Name of plot element in the diagram (annotated by default …","Name of plot element in the diagram (annotated by default …","","","","","","","","","","Create a bar chart. It defaults to vertically oriented …","Create a plot containing multiple <code>boxes</code>. It defaults to …","Create a new formatter based on the pointer coordinate and …","Give a unique id for each plot within the same <code>Ui</code>.","Create a bar. Its <code>orientation</code> is set by its <code>BarChart</code> …","","Create a box element. Its <code>orientation</code> is set by its <code>BoxPlot</code>…","","","","","Create a new image with position and size in plot …","","","","Which direction the bar faces in the diagram","Which direction the box faces in the diagram.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The plot bounds as they were in the last frame. If called …","Returns <code>true</code> if the plot was clicked by the primary button.","Transform the screen coordinates to plot coordinates.","Returns <code>true</code> if the plot area is currently hovered.","Returns <code>true</code> if the plot was clicked by the secondary …","The pointer position in plot coordinates. Independent of …","The pointer drag delta in plot coordinates.","","Add data points.","Add a polygon. The polygon has to be convex.","In which corner to place the legend. Default: …","","","","Value of lower box threshold (typically 25% quartile)","Value of upper box threshold (typically 75% quartile)","Set the maximum extent of the marker around its position.","","Resets the plot.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Transform the plot coordinates to screen coordinates.","","","","","Change whether the cursor for the x-axis is linked for …","Change whether the x-axis is linked for this group. Using …","Change whether the cursor for the y-axis is linked for …","Change whether the y-axis is linked for this group. Using …","Set the side margin as a fraction of the plot size. Only …","Set the plot bounds. Can be useful for implementing …","Set the shape of the markers.","","Round grid positions to full pixels to avoid aliasing. …","","Interact with and add items to the plot and finally draw …","Show the axes. Can be useful to disable if the plot is …","","Whether or not to show the background <code>Rect</code>. Can be useful …","","Show the x-value (e.g. when hovering). Default: <code>true</code>.","","Show the y-value (e.g. when hovering). Default: <code>true</code>.","","","Values of the box","Stacks the bars on top of another chart. Positive values …","Whether to add stems between the markers and a horizontal …","","The (approximate) distance to the next value of same …","Add a stroke.","Add a custom stroke.","Add a custom stroke.","Add a custom stroke.","Add a stroke.","Add a stroke.","","","Line width and color","Line width and color","","","Set the line’s style. Default is <code>LineStyle::Solid</code>.","Set the outline’s style. Default is <code>LineStyle::Solid</code>.","Set the line’s style. Default is <code>LineStyle::Solid</code>.","Set the line’s style. Default is <code>LineStyle::Solid</code>.","","","","","Add a text.","","Which text style to use for the legend. Default: …","","","Multiply image color with this. Default is WHITE (no tint).","","","","","","","","","","","","","","","","","","","","","","Move the plot bounds. Can be useful for implementing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Splits the grid into uniform-sized spacings (e.g. 100, 25, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Value of upper whisker (typically maximum)","Select UV range. Default is (0,0) in top-left, (1,1) …","","X or Y value in the plot.","Position on the value (output) axis – Y if vertical, X …","Set all elements to be in a vertical orientation. Argument …","Set all elements to be in a vertical orientation. Argument …","Set orientation of the element as vertical. Argument axis …","Set orientation of the element as vertical. Argument axis …","width / height ratio of the plot region. By default no …","","Add a vertical line. Can be useful e.g. to show min/max …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the whisker width.","Width of the whisker at minimum/maximum","Stroke width. A high value means the plot thickens.","Set the stroke width.","Set the width (thickness) of all its elements.","Width of plot. By default a plot will fill the ui it is in.","Set the bar width.","Stroke width. A high value means the plot thickens.","Stroke width. A high value means the plot thickens.","","","Show a fixed number of decimal places.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Only link the cursor for the x-axis.","Only link the x-axis.","This is often something monotonically increasing, such as …","","Provide a function to customize the labels for the X axis …","Configure how the grid in the background is spaced apart …","Only link the cursor for the y-axis.","Only link the y-axis.","Goes from bottom to top (inverse of everything else in …","","Provide a function to customize the labels for the Y axis …","Default is a log-10 grid, i.e. every plot unit is divided …","","","A selected text range (could be a range of length zero).","A selected text range (could be a range of length zero).","","Trait constraining what types <code>crate::TextEdit</code> may use as …","A text region that the user can edit the contents of.","The output from a <code>TextEdit</code>.","The text edit state stored between frames.","","","","","","The range of selected character indices.","Returns this buffer as a <code>str</code>.","","","","","","","","","","","","","","","","","","The the currently selected range of characters.","","Reads the given character range.","","","","","","","","","Clears all characters in this buffer","","","","","","","","","","Where the text cursor is.","","","","","Deletes a range of text <code>char_range</code> from this buffer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","How the text was displayed.","","","","","","","","","Inserts text <code>text</code> into this buffer at character index …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","True if the selected range contains no characters.","Can this text be edited?","","","","","","","","","","","","","","","","The empty range.","","","","","","","","","","When selecting with a mouse, this is where the mouse was …","When selecting with a mouse, this is where the mouse was …","When selecting with a mouse, this is where the mouse was …","Replaces all contents of this string with <code>text</code>","The interaction response.","","","","","","","","","When selecting with a mouse, this is where the mouse was …","When selecting with a mouse, this is where the mouse was …","When selecting with a mouse, this is where the mouse was …","","","","Sets the currently selected range of characters.","","If there is a selection, None is returned. If the two ends …","","","returns the two ends ordered","The state we stored after the run.","","Clears all characters in this buffer and returns a string …","","The text was clipped to this rectangle when painted.","","Where the text in <code>Self::galley</code> ended up on the screen.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A callback function that can be used to compose an […","","Instructs egui to recreate the surface, then skip the …","Access to the render state for egui.","Renderer for a egui based GUI.","Do nothing and skip the current frame.","","Specifies which action should be taken as consequence of a …","Configuration for using wgpu with eframe or the egui-wgpu …","","","","","","","","","","Backends that should be supported (wgpu will pick one of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configuration passed on device request.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Creates a renderer for a egui UI.","","Callback for surface errors.","","","","","","","","","","","","","Set the paint callback","","Storage for use by [<code>epaint::PaintCallback</code>]’s that need …","","Power preference for the adapter.","Find the framebuffer format that egui prefers","Set the prepare callback.","","Present mode used for the primary surface.","","","Registers a <code>wgpu::Texture</code> with a <code>epaint::TextureId</code>.","Registers a <code>wgpu::Texture</code> with a <code>epaint::TextureId</code> while …","Executes the egui renderer onto an existing wgpu …","Low-level painting of <code>egui</code> on <code>wgpu</code>.","","","","","","","","","","","","","","","","","Get the WGPU texture and bind group associated to a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Uploads the uniform, vertex and index data used by the …","Registers a <code>wgpu::Texture</code> with an existing …","Registers a <code>wgpu::Texture</code> with an existing …","Should be called before <code>render()</code>.","","","","","","","","Module for painting <code>egui</code> with <code>wgpu</code> on <code>winit</code>.","","","","","","","","","","","","","A callback function that can be used to compose an […","Renderer for a egui based GUI.","Information about the screen used for rendering.","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","Storage for use by [<code>epaint::PaintCallback</code>]’s that need …","","HiDPI scale factor (pixels per point).","","","","","Size of the window in physical pixels.","","","","","","","","","","","","","","","Allows the use of <code>AddressMode::ClampToBorder</code> with a border …","Allows the use of <code>AddressMode::ClampToBorder</code> with a border …","Enable writes to all channels.","Enable alpha channel writes","Blend mode that does standard alpha blending with …","Supports samplers with anisotropic filtering. Note this isn…","Handle to a physical graphics and/or compute device.","Information about an adapter.","Src + Dst","How edges should be handled in texture addressing.","Depth, Stencil, and Color.","Function always passes","block compressed texture. 16 bytes per block.","ASTC block dimensions","ASTC RGBA channel","Chooses either <code>Opaque</code> or <code>Inherit</code> automatically，depending …","Chooses Immediate -&gt; Mailbox -&gt; Fifo (on web) based on …","Chooses FifoRelaxed -&gt; Fifo based on availability.","10x10 block compressed texture. 16 bytes per block (1.28 …","10x5 block compressed texture. 16 bytes per block (2.56 …","10x6 block compressed texture. 16 bytes per block (2.13 …","10x8 block compressed texture. 16 bytes per block (1.6 …","12x10 block compressed texture. 16 bytes per block (1.07 …","12x12 block compressed texture. 16 bytes per block (0.89 …","4x4 block compressed texture. 16 bytes per block (8 …","5x4 block compressed texture. 16 bytes per block (6.4 …","5x5 block compressed texture. 16 bytes per block (5.12 …","6x5 block compressed texture. 16 bytes per block (4.27 …","6x6 block compressed texture. 16 bytes per block (3.56 …","8x5 block compressed texture. 16 bytes per block (3.2 …","8x6 block compressed texture. 16 bytes per block (2.67 …","8x8 block compressed texture. 16 bytes per block (2 …","Supports non-zero <code>base_vertex</code> parameter to indexed draw …","","If not present, the texture can’t be blended into the …","Enable blue channel writes","","Supported when targeting the web through webassembly","Supports buffer bindings with sizes that aren’t a …","Allows the user to create arrays of buffers in shaders:","Back face","Backends supported by wgpu.","Represents the backends that wgpu will use.","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Blue, green, red, and alpha channels. 8 bit integer per …","Blue, green, red, and alpha channels. 8 bit integer per …","Handle to a binding group.","Describes a group of bindings and the resources to be …","An element of a <code>BindGroupDescriptor</code>, consisting of a …","Handle to a binding group layout.","Describes a <code>BindGroupLayout</code>.","Describes a single binding inside a bind group.","Resource that can be bound to a pipeline.","Specific type of a binding.","Describes a blend component of a <code>BlendState</code>.","Alpha blend factor.","Alpha blend operation.","Describe the blend state of a render pipeline, within …","WebGPU in the browser","Handle to a GPU-accessible buffer.","Binding is backed by a buffer.","A buffer binding.","Integral type used for buffer offsets.","Binding is backed by an array of buffers.","Error occurred when trying to async map a buffer.","Describes the segment of a buffer to bind.","Specific type of a buffer binding.","Describes a <code>Buffer</code>.","Integral type used for buffer slice sizes.","Slice into a <code>Buffer</code>.","Different ways that you can use a buffer.","Read only view into a mapped buffer.","Write only view into mapped buffer.","Enables clear to zero for textures.","Amount of times the clipper is invoked. This is also the …","Amount of primitives that are not culled by the clipper. …","Enable red, green, and blue channel writes","Supports comparison samplers.","Binding is visible from the compute shader of a compute …","The device supports compiling and using compute shaders.","Amount of times a compute shader is invoked. This will be …","Allows the user to set a …","Buffer to buffer copy as well as buffer clear offsets and …","Buffer-Texture copies must have <code>bytes_per_row</code> aligned to …","Allow a buffer to be the destination buffer for a […","Allows a texture to be the destination in a  […","Allow a buffer to be the source buffer for a […","Allows a texture to be the source in a […","Supports textures that are cube arrays.","Triangles with vertices in counter clockwise order are …","Clamp the value to the border of the texture Requires …","Clamp the value to the edge of the texture","Clear with a specified value.","RGBA double precision color.","Describes the color state of a render pipeline.","Color write mask. Disabled color channels will not be …","Handle to a command buffer on the GPU.","Describes a <code>CommandBuffer</code>.","Encodes a series of GPU operations.","Describes a <code>CommandEncoder</code>.","Comparison function used for depth and stencil operations.","Use as a comparison sampler instead of a normal sampler. …","Specifies how the alpha channel of the textures should be …","In-progress recording of a compute pass.","Describes the attachments of a compute pass.","Handle to a compute pipeline.","Describes a compute pipeline.","Constant","Cpu / Software Rendering.","<code>Instance::create_surface()</code> or a related function failed.","A cubemap texture. <code>texture_cube</code> in WGSL and <code>textureCube</code> in …","A cubemap array texture. <code>texture_cube_array</code> in WGSL and …","Triangles with vertices in clockwise order are considered …","A one dimensional texture. <code>texture_1d</code> in WGSL and <code>texture1D</code>…","1D texture","A two dimensional texture. <code>texture_2d</code> in WGSL and <code>texture2D</code>…","2D texture","A two dimensional array texture. <code>texture_2d_array</code> in WGSL …","A three dimensional texture. <code>texture_3d</code> in WGSL and …","3D texture","Allows for explicit creation of textures of format …","Supports depth bias clamping","By default, polygon depth is clipped to 0-1 range …","Supports copies between depth textures and buffers.","Supported on Windows 7+","Supported on Windows 10","Decrements stencil value by one, clamping on underflow.","Decrements stencil value by one, wrapping on underflow.","Sampling does the depth reference comparison.","Special depth format with 16 bit integer depth.","Special depth format with at least 24 bit integer depth.","Special depth/stencil format with at least 24 bit integer …","Special depth format with 32 bit floating point depth.","Special depth/stencil format with 32 bit floating point …","Describes the biasing setting for the depth target.","Depth.","Describes the depth/stencil state in a render pipeline.","Open connection to a graphics and/or compute device.","Describes a <code>Device</code>.","Supported physical device types.","Discrete GPU with separate CPU/GPU memory.","Display-P3 color space","Lists various ways the underlying platform does not …","Binary flags listing features that may or may not be …","D.component","D.alpha","Direct3D-11 (Windows)","Direct3D-12 (Windows)","Selects which DX12 shader compiler to use.","The Dxc compiler is new, fast and maintained.","Integral type used for dynamic bind group offsets.","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Dummy backend, used for testing.","Function passes if new value is equal to existing value. …","Error type","Filter for error scopes.","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Extent of a texture related operation.","If not present, the texture can’t be sampled with a …","Binding is visible from the fragment shader of a render …","Amount of times the fragment shader is ran. Accounts for …","Supports storage buffers in fragment shaders.","Supports binding storage buffers and textures to fragment …","Supports full 32-bit range indices (2^32-1 as opposed to …","Face of a vertex.","Features that are not guaranteed to be supported.","Presentation frames are kept in a First-In-First-Out queue …","Presentation frames are kept in a First-In-First-Out queue …","Polygons are filled","Texel mixing mode when sampling between texels.","The sampling result is produced based on more than a …","Sampling returns floats.","Two half-precision floats (no Rust equiv). <code>vec2</code> in shaders.","Four half-precision floats (no Rust equiv). <code>vec4</code> in …","One single-precision float (f32). <code>float</code> in shaders.","Two single-precision floats (f32). <code>vec2</code> in shaders.","Three single-precision floats (f32). <code>vec3</code> in shaders.","Four single-precision floats (f32). <code>vec4</code> in shaders.","One double-precision float (f64). <code>double</code> in shaders. …","Two double-precision floats (f64). <code>dvec2</code> in shaders. …","Three double-precision floats (f64). <code>dvec3</code> in shaders. …","Four double-precision floats (f64). <code>dvec4</code> in shaders. …","Describes the fragment processing in a render pipeline.","Front face","Vertex winding order which classifies the “front” face …","The Fxc compiler (default) is old, slow and unmaintained.","Currently unsupported","Enable green channel writes","","OpenGL ES-3 (Linux, Android)","No issues.","Function passes if new value is greater than existing value","Function passes if new value is greater than or equal to …","floating-point RGBA, linear-color float can be outside of …","Adapter that has the highest performance. This is often a …","Ignore the stencil state for the face.","Supports different blend operations per color attachment.","Allow a buffer to be the index buffer in a draw operation.","Allow a buffer to be the indirect buffer in an indirect …","Supports indirect drawing and dispatching.","Allows non-zero value for the “first instance” in …","A timestamp that is invalid due to the platform not having …","View of a buffer which can be used to copy to/from a …","View of a buffer which can be used to copy to/from a …","View of a texture which can be used to copy to/from a …","View of a texture which can be used to copy to/from a …","View of a texture which can be used to copy to a texture, …","View of a texture which can be used to copy to a texture, …","Layout of a texture in a buffer’s memory.","Subresource range within an image","Presentation frames are not queued at all. The moment a …","Increments stencil value by one, clamping on overflow.","Increments stencil value by one, wrapping on overflow.","Format of indices used with pipeline.","The alpha channel, if it exists, of the textures is …","Context for all other wgpu objects. Instance of wgpu.","Vertex data is advanced every instance.","Options for creating an instance.","Integrated GPU with shared CPU/GPU memory.","Bitwise inverts stencil value.","Keep stencil value unchanged.","Object debugging label.","Function passes if new value less than existing value","Function passes if new value is less than or equal to …","Represents the sets of limits an adapter/device supports.","Polygons are drawn as line segments","Vertex data is a list of lines. Each pair of vertices …","Vertex data is a strip of lines. Each set of two adjacent …","Linear Interpolation","Load from memory.","Operation to perform to the output attachment at the start …","The swap chain has been lost and needs to be recreated.","The surface under the swap chain is lost.","Adapter that uses the least possible power. This is often …","Webgpu only allows the MAP_READ and MAP_WRITE buffer usage …","Size to align mappings.","Allow a buffer to be mapped for reading using […","Allow a buffer to be mapped for writing using […","Supported on macOS/iOS","Supports sample-rate shading.","Allows a texture of this format to back a view passed as …","Allows <code>TextureDescriptor::sample_count</code> to be <code>2</code>.","Allows <code>TextureDescriptor::sample_count</code> to be <code>4</code>.","Allows <code>TextureDescriptor::sample_count</code> to be <code>8</code>.","Enables multiview render passes and <code>builtin(view_index)</code> in …","Allows the user to call [<code>RenderPass::multi_draw_indirect</code>] …","Allows the user to call […","Presentation frames are kept in a single-frame queue. …","Passed to <code>Device::poll</code> to control how and if it should …","Passed to <code>Device::poll</code> to control how and if it should …","Type of buffer mapping.","max(Src, Dst)","Metal API (Apple platforms)","min(Src, Dst)","Repeat the texture, mirroring it every repeat","Describes the multi-sampling state of a render pipeline.","Binding is not visible from any shader stage.","Supports textures with mipmaps which have a non power of …","Nearest neighbor sampling.","Function never passes","The sampling result is produced based on a single color …","Function passes if new value is not equal to existing …","Blend state of (1 * src) + ((1 - src_alpha) * dst)","Query returns a single 64-bit number, serving as an …","1.0","1.0 - Constant","1.0 - D.component","1.0 - D.alpha","1.0 - S.component","1.0 - S.alpha","The alpha channel, if it exists, of the textures is …","[0, 0, 0, 1]","[1, 1, 1, 1]","Pair of load and store operations for an attachment aspect.","Origin of a copy from a 2D image.","Origin of a copy to/from a texture.","Other or Unknown.","Catch only out-of-memory errors.","There is no more memory left to allocate a new frame.","Out of memory error","The underlying surface has changed, and therefore the swap …","The surface under the swap chain has changed.","Allows the user to create bind groups continaing arrays …","Enables use of Pipeline Statistics Queries. These queries …","Allows the user to set <code>PolygonMode::Line</code> in …","Allows the user to set <code>PolygonMode::Point</code> in …","Blend mode that does standard alpha blending with …","All the apis that wgpu offers first tier of support for.","Allows the use of push constants: small, fast bits of …","Alignment all push constants need","Handle to a pipeline layout.","Describes a <code>PipelineLayout</code>.","Query returns up to 5 64-bit numbers based on the given …","Flags for which pipeline data should be recorded.","Polygons are drawn as points","Vertex data is a list of points. Each vertex is a new …","Check the device for a single time without blocking.","Type of drawing mode for polygons","The alpha channel, if it exists, of the textures is …","Power Preference when choosing a physical adapter.","The alpha channel, if it exists, of the textures is …","Color spaces supported on the web.","Behavior of the presentation engine based on frame rate.","Nanosecond timestamp used by the presentation engine.","Describes the state of primitive assembly and …","Primitive type the input mesh is composed of.","A range of push constant memory to pass to a shader stage.","An offset into the query resolve buffer has to be aligned …","Maximum queries in a query set","Size of a single piece of query data.","Handle to a query set.","Describes a <code>QuerySet</code>.","Type of query contained in a QuerySet.","Handle to a command queue on a device.","A read-only view into a staging buffer.","Red channel only. 16 bit float per channel. Float in …","Red channel only. 16 bit integer per channel. Signed in …","Red channel only. 16 bit integer per channel. [0, 65535] …","Red channel only. 16 bit integer per channel. Unsigned in …","Red channel only. 16 bit integer per channel. [0, 65535] …","Red channel only. 32 bit float per channel. Float in …","Red channel only. 32 bit integer per channel. Signed in …","Red channel only. 32 bit integer per channel. Unsigned in …","Red channel only. 8 bit integer per channel. Signed in …","Red channel only. 8 bit integer per channel. [-127, 127] …","Red channel only. 8 bit integer per channel. Unsigned in …","Red channel only. 8 bit integer per channel. [0, 255] …","Supports reading from a depth/stencil buffer while using …","Enable red channel writes","","Allows a texture to be an output attachment of a render …","Default blending state that replaces destination with the …","Blend mode that does no color blending, just overwrites …","Map only for reading","The texture can only be read in the shader and it must be …","The texture can be both read and written in the shader and …","Pre-prepared reusable bundle of GPU operations.","Describes the depth/stencil attachment for render bundles.","Describes a <code>RenderBundle</code>.","Encodes a series of GPU operations into a reusable “…","Describes a <code>RenderBundleEncoder</code>.","In-progress recording of a render pass.","Describes a color attachment to a <code>RenderPass</code>.","Describes a depth/stencil attachment to a <code>RenderPass</code>.","Describes the attachments of a render pass.","Handle to a rendering (graphics) pipeline.","Describes a render (graphics) pipeline.","Repeat the texture in a tiling fashion","Replace stencil value with value provided in most recent …","Additional information required when requesting an adapter.","Options for requesting adapter.","Requesting a device failed.","Dst - Src","Red, green, and blue channels. 11 bit float with no sign …","Red and green channels. 16 bit float per channel. Float in …","Red and green channels. 16 bit integer per channel. Signed …","Red and green channels. 16 bit integer per channel. [0, …","Red and green channels. 16 bit integer per channel. …","Red and green channels. 16 bit integer per channel. [0, …","Red and green channels. 32 bit float per channel. Float in …","Red and green channels. 32 bit integer per channel. Signed …","Red and green channels. 32 bit integer per channel. …","Red and green channels. 8 bit integer per channel. Signed …","Red and green channels. 8 bit integer per channel. [-127, …","Red and green channels. 8 bit integer per channel. …","Red and green channels. 8 bit integer per channel. [0, 255]…","Red, green, blue, and alpha channels. 10 bit integer for …","Packed unsigned float with 9 bits mantisa for each RGB …","Red, green, blue, and alpha channels. 16 bit float per …","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha. 16 bit integer per channel. […","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha channels. 32 bit float per …","Red, green, blue, and alpha channels. 32 bit integer per …","Red, green, blue, and alpha channels. 32 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Allows shaders to index sampled texture and storage buffer …","All the apis that wgpu offers second tier of support for. …","Allows shaders to acquire the FP16 ability","Enables 64-bit floating point types in SPIR-V shaders.","Enables <code>builtin(primitive_index)</code> in fragment shaders.","Enables creating shader modules from SPIR-V binary data …","Allow a buffer to be a <code>BufferBindingType::Storage</code> inside a …","When used as a STORAGE texture, then a texture with this …","Allows a texture to be a <code>BindingType::StorageTexture</code> in a …","When used as a STORAGE texture, then a texture with this …","Allows the user to create uniform arrays of storage …","Supports specifying which view formats are allowed when …","Handle to a sampler.","Binding is a sampler.","A sampler that can be used to sample a texture.","Binding is backed by an array of samplers.","Specific type of a sampler binding.","Color variation to use when sampler addressing mode is …","Describes a <code>Sampler</code>.","Integral type used for binding locations in shaders.","Collections of shader features a device supports if they …","Handle to a compiled shader module.","Descriptor for use with <code>Device::create_shader_module</code>.","Descriptor for a shader module given by SPIR-V binary, for …","Source of a shader module.","Describes the shader stages that a binding will be visible …","Sampling returns signed integers.","Two signed shorts (i16). <code>ivec2</code> in shaders.","Four signed shorts (i16). <code>ivec4</code> in shaders.","One signed int (i32). <code>int</code> in shaders.","Two signed ints (i32). <code>ivec2</code> in shaders.","Three signed ints (i32). <code>ivec3</code> in shaders.","Four signed ints (i32). <code>ivec4</code> in shaders.","Two signed bytes (i8). <code>ivec2</code> in shaders.","Four signed bytes (i8). <code>ivec4</code> in shaders.","Extremely limited shaders, including a total instruction …","Missing minor features and storage images.","WebGPU supports shader module 5.","Two signed shorts (i16). [-32767, 32767] converted to …","Four signed shorts (i16). [-32767, 32767] converted to …","Two signed bytes (i8). [-127, 127] converted to float [-1, …","Four signed bytes (i8). [-127, 127] converted to float […","S.component","S.alpha","min(S.alpha, 1.0 - D.alpha)","sRGB color space","Stencil format with 8 bit integer stencil.","Describes stencil state in a render pipeline.","Stencil.","Operation to perform on the stencil value.","State of the stencil operation (fixed-pipeline stage).","A storage buffer.","A storage texture.","Specific type of a sample in a texture binding.","Identifier for a particular call to <code>Queue::submit</code>. Can be …","The swap chain is operational, but it does no longer …","Src - Dst","Handle to a presentable surface.","Defines the capabilities of a given surface and adapter.","Describes a <code>Surface</code>.","Result of an unsuccessful call to …","Status of the recieved surface image.","Surface texture that can be rendered to. Result of a …","Enables device specific texture format features.","Allows a texture to be a <code>BindingType::Texture</code> in a bind …","Allows the user to create uniform arrays of textures in …","Enables ASTC HDR family of compressed textures.","Enables ASTC family of compressed textures. ASTC textures …","Enables BCn family of compressed textures. All BCn …","Enables ETC family of compressed textures. All ETC …","Enables normalized <code>16-bit</code> texture formats.","Enables use of Timestamp Queries. These queries tell the …","","Handle to a texture on the GPU.","A texture binding.","Kind of data the texture holds.","Describes a <code>Texture</code>.","Dimensionality of a texture.","Underlying texture data format.","Feature flags for a texture format.","Features supported by a given texture format","Specific type of a sample in a texture binding.","Different ways that you can use a texture.","Handle to a texture view.","Binding is backed by a texture.","Binding is backed by an array of textures.","Describes a <code>TextureView</code>.","Dimensions of a particular texture view.","A timeout was encountered while trying to acquire the next …","Unable to get the next frame, timed out.","Query returns a 64-bit number indicating the GPU-timestamp …","[0, 0, 0, 0]","Vertex data is a list of triangles. Each set of 3 vertices …","Vertex data is a triangle strip. Each set of three …","Allow a buffer to be a <code>BufferBindingType::Uniform</code> inside a …","Allows shaders to index uniform buffer and storage texture …","With this feature not present, there are the following …","Supports buffers to combine <code>BufferUsages::INDEX</code> with …","Sampling returns unsigned integers.","Indices are 16 bit unsigned integers.","Two unsigned shorts (u16). <code>uvec2</code> in shaders.","Four unsigned shorts (u16). <code>uvec4</code> in shaders.","Indices are 32 bit unsigned integers.","One unsigned int (u32). <code>uint</code> in shaders.","Two unsigned ints (u32). <code>uvec2</code> in shaders.","Three unsigned ints (u32). <code>uvec3</code> in shaders.","Four unsigned ints (u32). <code>uvec4</code> in shaders.","Two unsigned bytes (u8). <code>uvec2</code> in shaders.","Four unsigned bytes (u8). <code>uvec4</code> in shaders.","Type for the callback of uncaptured error handler","A buffer for uniform values.","8 bit integer RGBA, [0, 255] converted to/from …","Two unsigned shorts (u16). [0, 65535] converted to float […","Four unsigned shorts (u16). [0, 65535] converted to float […","Two unsigned bytes (u8). [0, 255] converted to float [0, 1]…","Four unsigned bytes (u8). [0, 255] converted to float [0, 1…","8 bit integer RGBA, Srgb-color [0, 255] converted to/from …","Binding is visible from the vertex shader of a render …","Allow a buffer to be the vertex buffer in a draw operation.","Enables using 64-bit types for vertex attributes.","Binding is visible from the vertex and fragment shaders of …","Amount of times the vertex shader is ran. Accounts for the …","Supports storage buffers in vertex shaders.","Vertex buffer strides have to be aligned to this number.","Enables bindings of writable storage buffers and textures …","Supports specifying which view format values are allowed …","Supported on Windows, Linux/Android, and macOS/iOS via …","Catch only validation errors.","Validation error, signifying a bug in code or data","Vertex data is advanced every vertex.","Vertex inputs (attributes) to shaders.","Describes how the vertex buffer is interpreted.","Vertex Format for a <code>VertexAttribute</code> (input).","Describes the vertex processing in a render pipeline.","Whether a vertex buffer is indexed by vertex or by …","Virtual / Hosted.","Vulkan API","Supports all the texture usages described in WebGPU. If …","","Allows for timestamp queries inside render passes. Metal …","Same as WaitForSubmissionIndex but waits for the most …","On native backends, block until the given submission has …","WGSL module as a string slice.","Map only for writing","The texture can only be written in the shader and it:","Zero origin.","Zero origin.","0.0","Set stencil value to zero.","On the Metal backend, this is equivalent to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Alpha component of the color","Adds an <code>Srgb</code> suffix to the given texture format, if the …","How to deal with out of bounds accesses in the u (i.e. x) …","How to deal with out of bounds accesses in the v (i.e. y) …","How to deal with out of bounds accesses in the w (i.e. z) …","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Mask of all features that are only available when …","Mask of all features which are part of the upstream WebGPU …","Valid bits for <code>TextureDescriptor::Usage</code> provided for …","Alpha equation.","List of supported alpha modes to use with the given …","When enabled, produces another sample mask per pixel based …","Valid values: 1, 2, 4, 8, and 16.","Layer count. If <code>Some(count)</code>, <code>base_array_layer + count</code> must …","Layer count. If <code>Some(count)</code>, <code>base_array_layer + count</code> must …","The stride, in bytes, between elements of this buffer.","Return the binding view of the entire buffer.","Return the binding view of the entire buffer.","Return a reference to a specific backend instance, if …","Apply a callback to this <code>Adapter</code>’s underlying backend …","Apply a callback to this <code>Device</code>’s underlying backend …","Returns the inner hal Texture using a callback. The hal …","Returns the inner hal Surface using a callback. The hal …","Make an <code>ImageCopyTexture</code> representing the whole texture.","","","","Aspect of the texture. Color textures must be …","The copy aspect.","The copy aspect.","Aspect of the texture. Color textures must be …","The list of attributes which comprise a single vertex.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Blue component of the color","Back face mode.","Backend used for device","Which <code>Backends</code> to enable.","Base array layer.","Base array layer.","Base mip level.","Base mip level.","Begins recording of a compute pass.","Start a pipeline statistics query on this render pass. It …","Start a pipeline statistics query on this render pass. It …","Begins recording of a render pass.","Depth bias state.","Bind groups that this pipeline uses. The first entry will …","Slot for which binding provides resource. Corresponds to …","Binding index. Must match shader index and be unique …","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","","","","","","","","","","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","The blending that is used for this pipeline.","Border color to use when address_mode is …he buffer to bind.","The buffer to be copied to/from.","The format of any vertex buffers used with this pipeline.","Bytes per “row” in an image.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compares every limits within self is within the limits …","Compares every limits within self is within the limits …epth bias clamp value (absolute).","Clears buffer to zero.","Clears texture to zeroolor equation.","The color attachments of the render pass.","The formats of the color attachments that this render …","The color space of this texture.","Comparison function that determines if the fail_op or …","If this is enabled, this is a comparison sampler using the …","Surface that is required to be presentable with the …","Get the texture dimension required of this texture view …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","All flags that indicate if the backend is WebGPU compliant","","Initializes <code>Surface</code> for presentation.","If set to true, the primitives are rendered with …","Constant depth biasing factor, in basic units of the depth …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","","","","","","","","","","","","","","","","","","","","","Copy data from one buffer to another.","Copy data from a buffer to a texture.","Copy data from a texture to a buffer.","Copy data from one texture to another.","The number of samples calculated per pixel (for MSAA). For …","If this value is Some, indicates this entry is an array. …","Converts a wgpu-hal <code>ExposedAdapter</code> to a wgpu <code>Adapter</code>.","Creates a new <code>BindGroup</code>.","Creates a <code>BindGroupLayout</code>.","Creates a <code>Buffer</code>.","","Creates an empty <code>CommandEncoder</code>.","Creates a <code>ComputePipeline</code>.","Create a wgpu <code>Device</code> and <code>Queue</code> from a wgpu-hal <code>OpenDevice</code>","Creates a <code>PipelineLayout</code>.","Creates a new <code>QuerySet</code>.","Creates an empty <code>RenderBundleEncoder</code>.","Creates a <code>RenderPipeline</code>.","Creates a new <code>Sampler</code>.","Creates a shader module from either SPIR-V or WGSL source …","Creates a shader module from SPIR-V binary directly.","Creates a shader module from either SPIR-V or WGSL source …","Creates a surface from a raw window handle.","Creates a new <code>Texture</code>.","Creates a <code>Texture</code> from a wgpu-hal Texture.","","Creates a view of this texture.","The face culling mode.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new instance of wgpu with default options.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Comparison function used to compare depth values in the …","Operation that is performed when depth test fails but …","What operations will be performed on the depth part of the …","Returns the depth or layer count of this <code>Texture</code>.","The depth of the extent or the number of array layers","True if the depth aspect is used but not modified.","The effect of draw calls on the depth and stencil aspects …","Information about the depth attachment that this render …","The depth and stencil attachment of the render pass, if …","If disabled, depth will not be written toet useful information about the texture format.","","Destroy the associated native resources as soon as …","Destroy the associated native resources as soon as …","","PCI id of the adapter","Type of device","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the dimension of this <code>Texture</code>.","The dimension of the texture view. For 1D textures, this …","Dispatches compute work operations.","Dispatches compute work operations, based on the contents …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","These default limits are guaranteed to be compatible with …","These default limits are guaranteed to be compatible with …","","Draws primitives from the active vertex buffer(s).","Draws primitives from the active vertex buffer(s).","","Draws indexed primitives using the active index buffer and …","","Draws indexed primitives using the active index buffer and …","","Draws indexed primitives using the active index buffer and …","","Draws indexed primitives using the active index buffer and …","","","Draws primitives from the active vertex buffer(s) based on …","Draws primitives from the active vertex buffer(s) based on …","","Driver name","Driver info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Multiplier for the destination, which is stored in the …","Which DX12 shader compiler to use.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","End the pipeline statistics query on this render pass. It …","End the pipeline statistics query on this render pass. It …","The resources to bind to this bind group.","Array of entries in this BindGroupLayout","The name of the entry point in the compiled shader. There …","The name of the entry point in the compiled shader. There …","The name of the entry point in the compiled shader. There …","Retrieves all available <code>Adapter</code>s that match the given …xecute a render bundle, which is a set of pre-recorded …","","","","","","","","","","Operation that is preformed when stencil test fails.","List all features that are supported with this adapter.","List all features that may be used with this device.","Finishes recording and returns a <code>CommandBuffer</code> that can be …","Finishes recording and returns a <code>RenderBundle</code> that can be …","Combined boolean flags.","Additional property flags for the formatndicates that only a fallback adapter can be returned. …","Returns the format of this <code>Texture</code>.","The <code>TextureFormat</code> of the image that this pipeline will …","Format of the depth/stencil buffer, must be special depth …","Format of the input","Format of the texture view. At this time, it must be the …","Format of the attachment.","List of supported formats to use with the given adapter. …","The compiled fragment stage, its entry point, and the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Create an new instance of wgpu from a wgpu-core instance.","Create an new instance of wgpu from a wgpu-hal instance.","","","","","","","","","","Front face mode.","The face to consider the front for the purpose of culling …","Green component of the color","Generates memory report.","Get an object representing the bind group layout at a …","Get an object representing the bind group layout at a …","Returns the capabilities of the surface when used with the …","Returns the next texture to be presented by the swapchain …","Return a default <code>SurfaceConfiguration</code> from width and …","Get info about the adapter itself.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get info about the adapter itself.","Synchronously and immediately map a buffer for reading. If …","Synchronously and immediately map a buffer for writing. If …","Generates a timestamp using the clock used by the …","Returns the features supported for a given texture format …","Gets the amount of nanoseconds each tick of a timestamp …","Returns true for buffer bindings with dynamic offset …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the height of this <code>Texture</code>.","Height of the extent","","","","","","","","","","","","","","","","","","","","","","Macro to load raw SPIR-V data statically, for use with …","Macro to load a WGSL module statically.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts debug marker.","Inserts debug marker.","Inserts debug marker.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns true if the depth testing is enabled.","Returns true if the state doesn’t mutate the depth …","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns true if the stencil test is enabled.","Returns true if the depth biasing is enabled.","Returns if the given range represents a full resource, …","Returns true if this timestamp is the invalid timestamp.","Returns true if the state doesn’t mutate the target …","Returns true if the state doesn’t mutate either depth or …","Returns true if the state doesn’t mutate the stencil.","Returns true for strip topologies.","Returns whether this adapter may present to the passed …","This maintain represents a wait of some kind.","Returns true if the underlying platform offers complete …","Debug label of the shader module. This will show up in …","Debug label of the shader module. This will show up in …","Debug label of the texture view. This will show up in …","Debug label of the pipeline layout. This will show up in …","Debug label of the sampler. This will show up in graphics …","Debug label of the bind group. This will show up in …","Debug label of the render pass. This will show up in …","Debug label of the pipeline. This will show up in graphics …","Debug label of the compute pass. This will show up in …","Debug label of the pipeline. This will show up in graphics …","Debug label of the bind group layout. This will show up in …","Debug label of the render bundle encoder. This will show …","Debug label of this command buffer.","Returns the layer range of a subresource range describes …","The <code>BindGroupLayout</code> that corresponds to this bind group.","The layout of bind groups for this pipeline.","The layout of bind groups for this pipeline.","The layout of the texture data in this buffer.","List the “best” limits that are supported by this …","List all limits that were requested of this device.","Additional limits","How data should be read through this attachment.","Maximum level of detail (i.e. mip level) to use","Minimum level of detail (i.e. mip level) to useow to filter the texture when it needs to be magnified …","Map the buffer. Buffer is ready to map once the callback …","","Map on the wait index type.","Takes a closure and maps the label of the command buffer …","Bitmask that restricts the samples of a pixel modified by …","Amount of bind groups that can be attached to a pipeline …","Maximum binding index allowed in <code>create_bind_group_layout</code>. …","A limit above which buffer allocations are guaranteed to …","Maximum value of the product of the <code>workgroup_size</code> …","The maximum value of the workgroup_size X dimension for a …","The maximum value of the workgroup_size Y dimension for a …","The maximum value of the workgroup_size Z dimension for a …","Maximum number of bytes used for workgroup memory in a …","The maximum value for each dimension of a …","Amount of storage buffer bindings that can be dynamic in a …","Amount of uniform buffer bindings that can be dynamic in a …","Maximum allowed number of components (scalars) of input or …","Calculates the maximum possible count of mipmaps.","Amount of storage available for push constants in bytes. …","Amount of sampled textures visible in a single shader …","Amount of samplers visible in a single shader stage. …","Maximum size in bytes of a binding to a storage buffer. …","Amount of storage buffers visible in a single shader …","Amount of storage textures visible in a single shader …","Maximum allowed value for the <code>size.depth_or_array_layers</code> …","Maximum allowed value for the <code>size.width</code> of a texture …","Maximum allowed value for the <code>size.width</code> and <code>size.height</code> …","Maximum allowed value for the <code>size.width</code>, <code>size.height</code>, and …","Maximum size in bytes of a binding to a uniform buffer. …","Amount of uniform buffers visible in a single shader …","Maximum length of <code>VertexBufferLayout::attributes</code>, summed …","Maximum value for <code>VertexBufferLayout::array_stride</code> when …","Maximum length of <code>VertexState::buffers</code> when creating a …","How to filter the texture when it needs to be minified …","Required <code>BufferBindingType::Storage</code> alignment for …","Required <code>BufferBindingType::Uniform</code> alignment for …","The target mip level of the texture.","The target mip level of the texture.","Returns the mip_level_count of this <code>Texture</code>.","Mip level count. If <code>Some(count)</code>, <code>base_mip_level + count</code> …","Mip level count. If <code>Some(count)</code>, <code>base_mip_level + count</code> …","Calculates the extent at a given mip level. Does <em>not</em> …","Returns the mip level range of a subresource range …","How to filter between mip map levels","The compiled shader module for this stage.","The compiled shader module for this stage.","The compiled shader module for this stage.","Dispatches multiple draw calls from the active index …","Dispatches multiple draw calls from the active index …","Dispatches multiple draw calls from the active vertex …","Dispatches multiple draw calls from the active vertex …","The multi-sampling properties of the pipeline.","If the pipeline will be used with a multiview render pass, …","If this render bundle will rendering to multiple array …","Adapter name","Returns true if the stencil state uses the reference value …","Returns true if the face state uses the reference value …","Returns true if the comparison depends on the reference …","Create an new instance of wgpu.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","Base offset of the buffer. For bindings with …","Byte offset of the start of the input","Offset into the buffer that is the start of the texture. …","Registers a callback when the previous call to submit …","Set a callback for errors that are not handled in error …","The binary operation applied to the source and destination,","What operations will be performed on this color attachment.","The base texel of the texture in the selected <code>mip_level</code>. …","The base texel of the texture in the selected <code>mip_level</codeperation that is performed when stencil test success.","Calculates the physical size backing a texture of the given","Check for resource cleanups and mapping callbacks.","Polls all devices.","Controls the way each polygon is rasterized. Can be either …","Stops command recording and creates debug group.","Stops command recording and creates debug group.","Stops command recording and creates debug group.","Pop an error scope.","Power preference for the adapter.","The premultiplication of this texture","Schedule this texture to be presented on the owning …","List of supported presentation modes to use with the given …","","The properties of the pipeline at the primitive assembly …","","","","","","Set of push constant ranges this pipeline uses. Each …","Start record commands and group it into debug marker group.","Start record commands and group it into debug marker group.","Start record commands and group it into debug marker group.","Push an error scope.","","Red component of the color","Range in push constant memory to use for the stage. Must …","Stencil values are AND’d with this mask when reading and …","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Strips the <code>Srgb</code> suffix from the given texture format.","Retrieves an <code>Adapter</code> which matches the given …","Requests a connection to a physical device, creating a …","Resolve a query set, writing the results into the supplied …","The view that will receive the resolved output if …","Resource to attach to the binding","“Rows” that make up a single “image”.","Returns the sample_count of this <code>Texture</code>.","Sample count this render bundle is capable of rendering …","Sample count supported by a given texture formatnserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","Sets the active bind group for a given bind group index. …","Sets the active bind group for a given bind group index. …","","Sets the active bind group for a given bind group index. …","Sets the blend color as used by some of the blending modes.","","Sets the active index buffer.","Sets the active index buffer.","","Sets the active render pipeline.","","Sets the active compute pipeline.","Sets the active render pipeline.","","","Set push constant data for subsequent draw calls.","Set push constant data for subsequent dispatch calls.","Set push constant data.","","Sets the scissor region.","Sets the stencil reference.","","Assign a vertex buffer to a slot.","","Assign a vertex buffer to a slot.","Sets the viewport region.","Location for this input. Must match the location in the …","Which collections of features shaders support. Defined in …","Returns the length of the buffer allocation in bytes.","Returns the size of this <code>Texture</code>.","Returns the byte size of the format.","","","Size of the binding, or <code>None</code> for using the rest of the …","Use only a portion of this Buffer for a given operation. …","","","Slope depth biasing factor.","","Binary SPIR-V data, in 4-byte words.","Source code for the shader.","Multiplier for the source, which is produced by the …","Stage push constant range is visible from. Each stage can …","Starts frame capture.","Stencil state.","What operations will be performed on the stencil part of …","True if the stencil aspect is used but not modified.","How often this vertex buffer is “stepped” forward.","Stops frame capture.","Whether data will be written to through this attachment.","When drawing strip topologies with indices, this is the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Submits a series of finished command buffers for execution.","<code>true</code> if the acquired buffer can still be used for …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","The color state of the render targets.","Accessible view of the frame.","The texture to be copied to/from.","The texture to be copied to/from.","Removes the third dimension from this origin","Adds the third dimension to this origin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds color space and premultiplied alpha information to …","Removes the colorspace information from the type.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","The primitive topology used to interpret verticeshe type of the binding","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If set to true, the polygon depth is not clipped to 0-1 …","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Flushes any pending write operations and unmaps the buffer …eturns the allowed usages for this <code>Buffer</code>.","Returns the allowed usages of this <code>Texture</code>.","","Returns true if the state relies on the constant color, …","Modify the current limits to use the buffer alignment …","Modify the current limits to use the resolution limits of …","Utility structures and functions that are built on top of …","Vendor PCI id of the adapter","The compiled vertex stage, its entry point, and the input …","Macro to produce an array of <code>VertexAttribute</code>.","The view to use as an attachment.","The view to use as an attachment.","Which shader stages can see this binding.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the width of this <code>Texture</code>.","Width of the extentchedule a data write into <code>buffer</code> starting at <code>offset</code>.","Schedule a data write into <code>buffer</code> starting at <code>offset</code> via …","Mask which enables/disables writes to different …","Stencil values are AND’d with this mask when writing to …","Schedule a write of some data into a texture.","Issue a timestamp command at this point in the queue. The …","Issue a timestamp command at this point in the queue. The …","Issue a timestamp command at this point in the queue. The …","","X position of the origin","","Y position of the origin","Z position of the origin","Allowed access to this texture.","Format of the texture.","Indicates that the binding has a dynamic offset.","Minimum size of the corresponding <code>BufferBinding</code> required …","True if the texture has a sample count greater than 1. If …","Sample type of the texture binding.","Sub-type of the buffer binding.","Dimension of the texture view that is going to be sampled.","Dimension of the texture view that is going to be sampled.","If <code>true</code>, the buffer can only be read in the shader, and it:","Path to the <code>dxil.dll</code> file. Passing <code>None</code> will use standard …","Path to the <code>dxcompiler.dll</code> file. Passing <code>None</code> will use …","Description of the validation error.","Lower level source of the error.","Lower level source of the error.","compressed block dimensions","ASTC RGBA channel","If <code>filterable</code> is false, the texture can’t be sampled with","Describes a Buffer when allocating.","Utility methods not meant to be in the main API.","The structure expected in <code>indirect_buffer</code> for …","CPU accessible buffer used to download data back from the …","The structure expected in <code>indirect_buffer</code> for …","The structure expected in <code>indirect_buffer</code> for …","Methods shared by <code>RenderPass</code> and <code>RenderBundleEncoder</code>.","Efficiently performs many buffer writes by sharing and …","","","","","","Aligns a <code>value</code> to an <code>alignment</code>.","Returns the bytes representation of the struct, ready to …","Returns the bytes representation of the struct, ready to …","Returns the bytes representation of the struct, ready to …","","","","","","","Get a set of backend bits from the environment variable …","The base index within the index buffer.","The instance ID of the first instance to draw. Has to be …","The instance ID of the first instance to draw. Has to be …","The Index of the first vertex to draw.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contents of a buffer on creation.","Creates a Buffer with data to initialize it.","Upload an entire texture and its mipmaps from a source …","","","","","","","","","","","","","","","","","","","","","","","Draws primitives from the active vertex buffer(s).","Draws indexed primitives using the active index buffer and …","Draws indexed primitives using the active index buffer and …","Draws primitives from the active vertex buffer(s) based on …","","","","","","","Choose which DX12 shader compiler to use from the …","","","","Prepare currently mapped buffers for use in a submission.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Initialize the adapter obeying the WGPU_ADAPTER_NAME …","Initialize the adapter obeying the WGPU_ADAPTER_NAME …","The number of instances to draw.","The number of instances to draw.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Debug label of a buffer. This will show up in graphics …","","","","","","","","","","","","","Version of make_spirv intended for use with …","Create a new staging belt.","","","","","","","","","","","","","Generates a set of backends from a comma separated list of …","Get a power preference from the environment variable …","Asynchronously read the contents of a buffer.","Recall all of the closed buffers back to be reused.","","","","","","","","","","","","","","","Sets the active bind group for a given bind group index. …","Sets the active index buffer.","Sets the active render pipeline.","[<code>wgt::Features::PUSH_CONSTANTS</code>] must be enabled on the …","Assign a vertex buffer to a slot.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Usages of a buffer. If the buffer is used in any way that …","The number of vertices to draw.","The number of vertices to draw.","The value added to the vertex index before indexing into …","","","","","","","","","","","","","","","","","","","Allocate the staging belt slice of <code>size</code> to be uploaded …","The number of work groups in X dimension.","The number of work groups in Y dimension.","The number of work groups in Z dimension.","Everything you need to paint egui with [<code>wgpu</code>] on [<code>winit</code>].","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","Returns the maximum texture dimension supported if known","","Manages [<code>wgpu</code>] state, including surface state, required to …","","","","","Get the <code>RenderState</code>.","","","","Updates (or clears) the [<code>winit::window::Window</code>] associated …","","","","","","","","","","","","Automatically sized, based on a view builder setting.","Like <code>Size::AUTO</code>, but larger by some small factor (~2).","How <code>Size::AUTO</code> is interpreted.","","","","","","","This format is used for space-efficient color …","","","","","","","","","","","","Label for resources. Optimized out in release builds.","Depth offset used to resolve z-fighting between 2d …","The <code>FileResolver</code> handles both resolving import clauses and …","A file server capable of watching filesystem events in the …","A very limited filesystem, just enough for our internal …","","","","","","A pre-parsed import clause, as in <code>#import &lt;something&gt;</code>.","","","","","","","","Builder for a vector of line strips, making it easy to …","","","Builder for point clouds, making it easy to create …","","","The recommended <code>FileResolver</code> type for the current …","Any resource involving wgpu rendering which can be re-used …","0-1 linear space <code>RGBA</code> color with premultiplied alpha.","Specifies where to look for imports when both absolute and …","A size of something in either world-units, screen-units, …","An ugly color that is planned to be replaced before making …","","","","","","","","","","","","","","","","","","","","Adds a single 2D point. Uses an autogenerated depth value.","Add several 3D points","Adds several 2D points. Uses an autogenerated depth value, …","Returns an additive version of self","Return an additive version of this color (alpha = 0)","","","","","","","","","","","","","","","","","","","Start of a new batch.","Start of a new batch.","","","Call this at the end of a frame but before submitting …","Call this at the beginning of a new frame.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Coalesces all filesystem events since the last call to …","","","Returns sRGB polynomial approximation from Inferno color …","Returns sRGB polynomial approximation from Magma color …","Returns sRGB polynomial approximation from Plasma color …","","Returns sRGB polynomial approximation from Turbo color …","Returns sRGB polynomial approximation from Viridis color …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set flags for this batch.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Transparent black","","","","","","","","From <code>sRGBA</code> with premultiplied alpha.","","From <code>sRGBA</code> WITHOUT premultiplied alpha.","","","","","","","Transparent white","","","","Multiply with 0.5 to make color half as opaque, …","Returns a reference to the global <code>FileServer</code>.","","Returns the recommended filesystem handle for the current …","","","","Returns a mutable reference to the global <code>FileServer</code>.","","Returns an sRGB gray value, assuming <code>t</code> is normalized.","","","","","A macro to read the contents of a file on disk, and …","","","","","","","","","","","","","","","","","","","","","","Insert a path into search path.","How perceptually intense (bright) is the color?","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the size is an automatically determined …","","","","","","Returns an iterator over the directories in the search …","Iterates over all line strips batches together with their …","","","","","Determines the line radius for <code>crate::Size::AUTO</code> for lines.","Multiply with 0.5 to make color half as opaque in linear …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Multiply with e.g. 0.5 to make us half transparent","","","","Creates a new size in ui point units.","Returns the recommended <code>FileResolver</code> for the current …","Creates a new size in scene units.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Determines the point radius when <code>crate::Size::AUTO</code>.","Get the point size of this, if stored as a point size.","","Push a path to search path.","","","","","","","","","","Resource managers are concerned with mapping (typically) …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the scene-size of this, if stored as a scene size.","","","","","","","","","","","Premultiplied RGBA","Premultiplied RGBA","Finalizes the builder and returns a point cloud draw data …","Finalizes the builder and returns a line draw data with …","Converts to floating point values in the range 0-1 without …","Returns an opaque version of self","Returns an opaque version of self","","","","","","","","","unmultiply the alpha","","unmultiply the alpha","","","Premultiplied RGBA","Premultiplied RGBA","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Stops watching for file events at the given <code>path</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds user data for every strip this builder adds.","","","","","","","","","","","","","","","","","","","","","","Starts watching for file events at the given <code>path</code>.","","","Sets the <code>world_from_obj</code> matrix for the <em>entire</em> batch.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Hardware tiers <code>re_renderer</code> distinguishes.","Startup configuration for a <code>crate::RenderContext</code>","Maintains strict WebGL capability.","","","","","","","","","","Checks if passed downlevel capabilities support the given …","","","","","","","","","","","Device descriptor compatible with the given hardware tier.","","","","","Required features for the given hardware tier.","","Returns the argument unchanged.","Returns the argument unchanged.","The targeted hardware tier.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Wgpu limits required by the given hardware tier.","","","","","The color format used by the eframe output buffer.","","","","","Downlevel features required by the given tier.","","","","","Backends that are officially supported by <code>re_renderer</code>.","","","","","","","","","","","","","","","","","","","","","","","","Loads both gltf and glb into the mesh &amp; texture manager.","Load a Wavefront .obj file into the mesh &amp; texture manager.","","","","","Base color texture, also known as albedo. (not optional, …","Factor applied to the decoded albedo color.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Index range within the owning <code>Mesh</code> that should be rendered …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Defines how mesh vertices are built.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mesh vertex as used in gpu residing vertex buffers.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Next vertex attribute index that can be used for another …","","","","","","","","","","","","","","Vertex buffer layouts describing how vertex data should be …","","","","Background, rendering where depth wasn’t written.","Adds a round cap at the end of a line strip (excludes …","Puts a equilateral triangle at the end of the line strip …","Adds a round cap at the start of a line strip (excludes …","Puts a equilateral triangle at the start of the line strip …","Drawn when compositing with the main target.","","The raw data from a depth texture.","","","GPU sided data used by a <code>Renderer</code> to draw things to the …","Determines a (very rough) order of rendering and describes …","If true, we shade all points in the batch like spheres.","","","Data that is valid for a batch of line strips.","A line drawing operation. Encompasses several lines, each …","Property flags for a line strip","Style information for a line strip.","","","","Maximum number of vertices per <code>PointCloudDrawData</code>.","Total maximum number of line strips per <code>LineDrawData</code>.","Total maximum number of line vertices per <code>LineDrawData</code>.","","","Disable color gradient which is on by default","","","","Opaque objects, performing reads/writes to the depth …","Property flags for a point batch","Data that is valid for a batch of point cloud points.","A point cloud drawing operation. Expected to be recrated …","","Description of a point cloud.","","A Renderer encapsulate the knowledge of how to render a …","","","","Texture filter setting for magnification (a texel covers …","Texture filter setting for minification (several texels …","","","","","","","","","","","","","","","","Per-instance (as opposed to per-material/mesh!) tint color …","Returns the set containing all flags.","Returns the set containing all flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","","","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","srgb color. Alpha unused right now","Configures color mapping mode.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","","","","The extrinsics of the camera used for the projection.","The intrinsics of the camera used for the projection.","The actual data from the depth texture.","The dimensions of the depth texture in pixels.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","Called once per phase given by …","","","","","","","","","","","","","","","","","","","","","","","","","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","Vector that spans up the rectangle from its top left …","Vector that spans up the rectangle from its top left …","Additional properties of this point cloud batch.","Additional properties for the linestrip.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","Gpu mesh this instance refers to.","","","","","","","","","","","","","","","","","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","","","","","Number of vertices covered by this batch.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Optional cpu representation of the mesh, not needed for …","Tint that is multiplied to the rect, supports …","","Transforms and uploads line strip data to be consumed by …","Transforms and uploads point cloud data to be consumed by …","","","","Transforms and uploads mesh instance data to be consumed …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Combination of flags indicating in which phases …","Number of points covered by this batch.","Connected points. Must be at least 2.","","","Radius of the point in world space","Radius of the line strip in world space","The scale to apply to the radii of the backprojected …","Removes the specified flags in-place.","Removes the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Texture that fills the rectangle","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Top left corner position in world space.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Where this instance is placed in world space and how its …","Transformation applies to line positions","Transformation applies to point positions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Handle that is valid for a single frame","","Handle to a 2D resource.","Resource handle that keeps the resource alive as long as …","A resource that lives until its last handle was dropped.","","","Handle to a resource that is stored in a resource manager.","","","","","A resources that lives only for a single frame.","Data required to create a texture 2d resource.","Texture manager for 2D textures.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Takes ownership of a mesh.","Creates a new 2D texture resource and schedules data …","Data for the highest mipmap level. Must be padded …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a single pixel white pixel.","","","","","","","","","","","","","","","","","This handle is only valid for this frame. Querying it …","","","How <code>Size::AUTO</code> is interpreted.","Color format used for the main target of the view builder.","Default depth state for enabled depth write &amp; read.","Default multisample state that any [<code>wgpu::RenderPipeline</code>] …","Depth format used for the main target of the view builder.","Enable MSAA always. This makes our pipeline less variable …","Puts the view space origin into the middle of the screen.","Orthographic projection with the camera position at the …","Configures the camera placement in the orthographic …","Perspective camera looking along the negative z view space …","How we project from 3D to 2D.","<code>ViewBuilder</code> that can be shared between threads.","Basic configuration for a target view.","Puts the view space origin at the top-left corner of the …","The highest level rendering block in <code>re_renderer</code>. Used to …","","","","How <code>Size::AUTO</code> is interpreted.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Composites the final result of a <code>ViewBuilder</code> to a given …","","","","","","","","","","","","","","","Draws the frame as instructed to a temporary HDR target.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Determines the line radius for <code>crate::Size::AUTO</code> for lines.","","","","","","","","","","","","","","","","","","How many pixels are there per point. I.e. the ui scaling …","Determines the point radius when <code>crate::Size::AUTO</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Distance of the far plane to the camera.","Distance of the near plane.","Viewing angle in view space y direction (which is the …","Size of the orthographic camera view space y direction …","A 3-dimensional axis-aligned bounding box","A rectangular region of space.","A <code>BoundingBox</code> that only contains <code>Vec3::ZERO</code>.","","","","","The minimum radius of a sphere, centered at the origin, …","","Returns the center point of the bounding box.","The minimum radius of a sphere, centered at the bounding …","","","","","Returns <code>true</code> if the point is within (or on the edge of) …","The eight corners of this bounding box.","","","","","","","","The twelve edges of this bounding box.","","A <code>BoundingBox</code> that contains every point.","Expand with this much padding on each side.","Enlarge the box to include this point.","","Returns the argument unchanged.","Create a bounding box from a center position and a size.","Create a bounding box from a minimum and maximum position.","","Create a bounding box from an iterator of points that the …","Returns half the size (similar to a radius).","","Returns the smallest volume that is covered by both <code>self</code> …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if any elements are <code>NaN</code>.","True if and only if there is no point for which …","True if this box contains exactly one point.","True if and only if there is at least one point for which …","","","","","","Bounding box maximum (inclusive).","The other corner, opposing <code>Self::min</code>. Usually the right …","Bounding box minimum (inclusive).","One of the corners of the rectangle, usually the left top …","A <code>BoundingBox</code> that contains no points.","","","Returns the distance the ray traveled of the first …","Compute the distance between a ray and a line segment.","Linearly remap a value from one range to another, so that …","Like <code>remap</code>, but also clamps the value so that the returned …","Return a bounding box that contains this box after it has …","","","","Returns the 3D axis size of the bounding box.","","Return a bounding box that contains this box after it has …","Return a bounding box that contains this box after it has …","Return a bounding box that contains this box after it has …","Translate (move) the box by this much.","","","","","","","","Only correct for positively sized boxes.","","","","Log an entity using an <code>ArrowMsg</code>.","A new recording has begun.","Clear all the components stored at an <code>EntityPath</code>","Clear all the components of an <code>[EntityPath]</code> and any …","A <code>ComponentBundle</code> holds an Arrow component column, and its …","Server-backed operation on an <code>EntityPath</code>.","Sent when the client shuts down the connection.","The most general log message sent from the SDK to the …","A <code>MsgBundle</code> holds data necessary for composing a single …","A unique id per <code>crate::LogMsg</code>.","Operation to perform on an <code>EntityPath</code>, e.g. clearing all …","","","A unique id per <code>crate::LogMsg</code>.","","","","Configure the behavior of our analytics.","","The Rerun Viewer and Server","Where are we calling <code>run</code> from?","Deletes everything related to analytics.","Called from a command-line-input (the terminal).","","Prints the current configuration.","Prints extra information about analytics.","Disable analytics.","Associate an email address with the current user.","Enable analytics.","Called from the Rerun Python SDK.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set a maximum input latency, e.g. “200ms” or “10s”.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","An upper limit on how much memory the Rerun Viewer should …","","","","","","","","","","","What TCP port do we listen to (for SDK:s to connect to)?","Start with the puffin profiler running.","","Run the Rerun application and return an exit code.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Either a path to a <code>.rrd</code> file to load, or a websocket url …","Print version and quit","","","","","Start the viewer in the browser (instead of locally). …","","","","","","","","","","Used e.g. for frames in a film.","A date-time represented as nanoseconds since unix epoch","Normal wall time.","A 64-bit number describing either nanoseconds OR sequence …","A point in time on any number of <code>Timeline</code>s.","The type of a <code>TimeInt</code> or <code>Timeline</code>.","A time frame/space, e.g. <code>log_time</code> or <code>frame_nr</code>, coupled …","",""],"i":[0,0,36,0,0,0,18,18,18,0,0,18,36,0,0,0,18,6,2,4,6,7,9,2,4,2,33,9,18,2,4,6,7,33,9,18,2,2,4,6,7,33,9,18,2,4,6,7,33,9,18,2,4,6,7,33,9,18,2,4,6,7,33,9,18,2,4,6,7,0,2,4,6,7,2,4,6,7,2,4,6,7,0,9,0,0,9,6,0,0,33,9,18,2,2,4,6,7,33,9,18,2,4,6,7,2,4,6,7,9,33,9,18,2,4,6,7,9,33,9,18,2,4,6,7,9,9,33,2,2,4,6,7,2,2,4,4,6,6,7,7,0,928,9,18,18,2,2,4,4,6,6,7,7,33,9,18,18,2,2,2,4,4,4,4,4,4,6,7,7,7,4,6,6,2,2,4,6,7,0,0,9,2,2,4,4,6,7,4,4,33,9,9,18,2,4,6,7,33,33,9,18,2,4,6,7,4,4,4,9,9,4,9,4,4,4,4,0,33,9,18,2,4,6,7,33,9,18,2,4,6,7,928,33,2,4,33,33,9,18,2,4,6,7,33,9,18,2,4,6,7,4,2,4,6,7,4,18,6,9,9,9,4,0,0,33,9,18,2,4,6,7,33,9,18,2,4,6,7,9,33,9,9,9,2,4,6,7,9,9,9,9,9,2,9,18,9,33,0,33,33,2,4,6,7,18,2,4,6,7,9,33,9,18,2,4,6,7,33,9,18,2,4,6,7,33,9,18,2,4,6,7,7,33,9,18,2,4,6,7,33,9,18,2,4,6,7,33,9,18,2,4,6,7,33,9,18,2,4,6,7,33,33,33,33,33,33,33,9,18,2,4,6,7,33,9,18,2,4,6,7,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,0,0,0,0,0,60,0,60,72,0,131,131,71,71,131,131,131,131,0,131,0,0,0,0,0,0,0,0,71,0,76,0,0,0,0,72,0,0,0,76,0,0,0,0,0,0,0,0,0,0,0,131,131,131,131,60,76,0,0,0,0,127,127,127,127,127,127,70,134,80,78,120,133,929,80,929,929,120,75,70,142,929,929,142,142,120,134,929,133,70,80,133,132,70,929,69,70,75,74,129,929,133,132,133,80,74,69,141,137,124,125,141,130,137,124,125,141,130,137,125,141,130,0,0,107,173,173,107,0,0,172,172,172,104,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,50,102,0,0,13,0,42,42,0,0,930,102,0,102,72,0,0,0,0,0,13,0,57,58,57,58,57,58,91,71,71,13,57,58,57,58,57,58,57,58,74,0,24,0,90,102,102,0,73,68,50,50,0,0,0,102,0,92,29,24,71,43,0,0,0,76,90,43,0,0,72,0,0,0,0,0,76,43,90,94,91,90,0,0,0,0,94,0,0,0,0,0,0,0,0,0,57,58,57,58,57,58,57,58,76,43,102,90,0,73,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,24,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,50,66,67,50,50,66,66,67,50,66,70,98,69,78,79,87,70,80,71,72,73,74,75,76,41,0,69,78,79,87,70,80,71,72,73,74,75,76,41,50,66,58,50,66,50,68,83,68,68,23,83,73,75,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,102,24,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,102,24,67,68,50,83,83,49,41,94,95,96,66,13,97,98,99,43,100,42,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,102,24,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,80,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,102,24,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,66,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,102,24,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,102,24,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,74,86,78,42,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,24,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,24,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,87,73,90,91,23,24,67,68,50,83,49,41,94,66,93,93,0,95,96,69,78,79,87,70,80,71,72,73,74,75,76,41,0,78,74,83,49,41,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,102,24,67,68,50,83,83,49,41,94,95,96,66,13,97,98,99,43,100,42,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,102,24,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,79,79,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,93,23,24,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,102,24,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,102,24,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,0,93,42,93,0,0,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,102,24,67,68,50,50,83,83,49,41,94,95,96,66,66,97,98,99,43,100,42,78,78,79,79,87,87,71,71,73,73,57,57,90,90,91,91,92,92,93,93,29,29,23,23,102,102,24,24,67,67,68,68,50,50,83,83,49,49,41,41,94,94,95,95,96,96,66,66,97,97,98,98,99,99,43,43,100,100,42,42,68,0,92,66,86,69,78,79,87,70,80,71,71,72,73,73,74,75,76,88,89,57,57,58,90,90,91,92,93,29,23,23,102,102,24,24,67,68,50,83,83,49,41,94,95,96,66,13,97,98,99,99,43,43,100,42,75,75,67,94,80,94,49,79,75,86,69,78,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,90,90,91,92,93,29,23,23,102,24,24,24,24,67,67,67,68,68,68,50,50,50,50,83,83,83,49,41,41,94,95,96,96,66,66,66,66,66,66,66,13,13,13,13,97,98,99,43,100,42,94,41,68,68,50,67,79,50,67,68,50,79,94,79,67,41,87,71,73,90,91,92,93,29,23,24,67,68,50,83,49,41,94,66,89,79,0,87,71,73,90,90,91,92,92,93,29,23,24,67,68,50,83,83,49,41,94,66,4,92,29,13,75,0,0,70,97,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,102,24,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,41,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,102,24,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,41,41,96,67,91,41,96,67,92,29,98,23,92,29,50,41,23,41,23,91,23,95,96,67,96,49,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,102,24,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,102,24,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,99,88,95,96,72,70,80,88,95,96,99,0,86,97,100,66,69,78,79,72,73,76,49,49,67,68,50,66,93,23,83,49,95,96,69,78,79,87,70,80,71,72,73,74,75,76,41,74,74,49,49,70,67,70,69,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,102,24,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,102,24,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,23,74,0,87,73,90,91,23,24,67,68,50,50,83,49,41,94,66,66,23,99,0,4,100,95,96,70,75,102,23,87,73,98,98,41,75,75,79,23,74,89,66,79,70,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,102,24,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,102,24,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,86,92,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,93,23,24,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,73,57,98,67,67,50,50,66,66,50,66,99,50,66,0,86,100,41,41,41,67,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,24,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,79,71,73,57,90,23,102,24,68,83,99,43,80,74,89,58,86,86,69,78,79,87,70,80,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,102,24,67,67,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,102,24,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,49,49,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,102,24,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,102,24,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,102,24,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,79,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,102,24,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,69,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,102,24,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,102,24,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,86,69,78,79,87,70,80,71,72,73,74,75,76,88,89,57,58,90,91,92,93,29,23,102,24,67,68,50,83,49,41,94,95,96,66,13,97,98,99,43,100,42,931,932,0,86,86,86,0,0,0,116,143,116,0,0,0,60,0,60,72,0,143,131,131,0,0,0,0,71,71,131,131,131,131,141,0,131,0,0,0,0,0,0,0,0,0,143,71,0,76,0,0,0,0,72,0,0,0,0,76,121,0,0,0,0,0,0,0,0,0,0,0,0,143,131,131,131,131,60,76,0,0,0,0,127,127,127,127,127,127,124,125,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,59,131,132,60,133,134,103,135,136,70,151,933,137,118,119,120,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,134,103,135,136,933,137,118,119,120,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,134,103,135,136,933,151,150,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,143,134,103,135,136,116,134,933,151,150,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,143,134,103,135,136,116,933,151,150,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,143,134,103,135,136,116,80,933,151,150,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,143,134,103,135,136,116,933,151,150,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,143,134,103,135,136,116,933,151,150,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,143,134,103,135,136,116,78,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,59,131,132,60,133,134,103,135,136,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,59,131,132,60,133,134,103,135,136,118,121,122,59,120,0,0,133,933,137,118,119,120,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,134,103,135,136,118,120,142,122,141,103,135,136,132,933,151,150,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,143,134,103,135,136,116,933,151,150,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,143,134,103,135,136,116,137,118,119,120,142,121,122,123,138,139,140,141,59,132,60,103,135,136,933,151,150,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,143,134,103,135,136,116,933,151,150,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,143,134,103,135,136,116,929,133,151,137,118,119,120,142,121,122,123,138,139,140,124,125,141,127,59,131,132,60,133,143,134,103,135,136,118,118,119,119,120,120,142,142,121,121,122,122,123,123,59,59,132,132,60,60,134,134,137,118,119,120,142,121,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,132,60,133,143,143,134,103,103,135,135,136,136,116,116,80,933,151,150,137,137,118,119,119,120,142,142,121,122,123,123,138,138,139,139,140,140,140,124,124,124,125,125,125,141,141,126,127,128,128,129,130,59,131,132,60,133,143,143,134,103,103,103,135,135,135,136,116,116,134,133,133,119,119,127,929,133,118,121,122,59,118,121,122,59,127,132,929,133,120,75,140,103,135,70,142,933,151,150,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,143,134,103,135,136,116,933,151,150,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,143,134,103,135,136,116,151,150,123,929,133,121,121,929,133,0,142,142,120,134,933,151,150,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,143,134,103,135,136,116,933,151,150,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,143,134,103,135,136,116,929,133,133,70,80,133,137,118,119,121,122,123,138,139,124,125,141,126,127,128,129,130,133,134,103,135,132,132,137,124,125,141,133,134,135,933,137,118,119,120,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,134,103,135,136,151,70,929,133,151,69,933,151,150,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,143,134,103,135,136,116,933,151,150,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,143,134,103,135,136,116,118,121,122,59,70,143,116,59,75,74,933,151,150,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,143,134,103,135,136,116,933,151,150,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,143,134,103,135,136,116,129,137,118,119,120,142,121,122,123,138,139,140,141,59,132,60,103,135,136,929,133,133,132,143,116,121,133,133,133,119,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,59,131,132,60,133,134,103,135,136,121,132,143,103,135,136,116,127,80,74,933,151,150,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,143,134,103,135,136,116,933,151,150,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,143,134,103,135,136,116,933,151,150,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,143,134,103,135,136,116,132,933,151,150,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,143,134,103,135,136,116,933,151,150,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,143,134,103,135,136,116,933,151,150,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,143,134,103,135,136,116,151,69,933,151,150,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,143,134,103,135,136,116,136,141,127,132,933,151,150,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,143,134,103,135,136,116,933,151,150,137,118,119,120,142,121,122,123,138,139,140,124,125,141,126,127,128,129,130,59,131,132,60,133,143,134,103,135,136,116,103,135,136,137,124,125,141,130,103,135,136,137,124,125,141,130,135,136,137,125,141,130,934,0,0,0,0,0,0,0,0,0,0,105,105,160,162,160,162,160,162,160,162,160,166,168,105,162,167,169,160,166,168,105,162,167,169,160,166,168,105,162,167,169,160,166,168,105,162,167,169,160,166,168,105,162,167,169,160,166,168,105,162,167,169,105,105,78,120,160,105,162,160,162,160,162,160,166,168,105,162,167,169,160,166,168,105,162,167,169,160,166,168,105,162,167,169,160,166,168,105,162,167,169,162,169,162,169,160,168,160,168,160,168,160,162,160,166,168,105,162,167,169,168,169,120,142,160,166,168,105,162,167,169,160,166,168,105,162,167,169,166,168,167,169,142,142,120,160,162,160,166,168,105,162,167,169,160,166,168,105,162,167,169,160,162,105,168,169,160,166,168,105,162,167,169,160,166,168,105,162,167,169,160,162,160,162,160,166,168,105,162,167,169,160,166,168,105,162,167,169,160,162,160,162,160,166,168,105,162,167,169,160,166,168,105,162,167,169,160,162,160,166,168,105,162,167,169,160,166,168,105,162,167,169,160,166,168,105,162,167,169,160,166,168,105,162,167,169,160,162,160,162,168,169,160,166,168,105,162,167,169,160,166,168,105,162,167,169,160,166,168,105,162,167,169,0,171,171,171,0,171,107,104,104,104,173,104,104,104,173,171,107,0,0,171,0,0,172,172,172,171,172,173,104,107,104,104,171,172,173,104,107,171,172,173,104,107,171,172,173,104,107,171,172,173,104,107,171,172,173,104,107,171,172,173,104,107,171,172,173,104,107,171,172,173,104,107,171,172,173,104,107,171,172,173,104,107,107,171,172,173,104,107,171,172,173,104,107,171,172,173,104,107,171,172,173,104,107,171,171,172,172,173,173,104,104,107,107,171,172,172,173,104,104,107,171,172,173,104,107,172,107,104,171,172,173,104,107,171,172,173,104,107,171,171,172,173,104,107,171,172,173,104,107,104,171,172,173,104,107,171,172,173,104,107,171,172,173,104,107,171,172,173,104,107,171,172,173,104,107,171,104,171,172,173,104,107,172,104,171,171,172,173,104,107,171,172,173,104,107,171,172,173,104,107,171,172,173,104,107,171,172,173,104,107,171,172,173,104,107,171,172,173,104,107,171,172,173,104,107,171,172,173,104,107,0,0,0,0,0,0,0,0,0,0,0,174,174,177,174,177,174,177,174,177,174,177,174,177,174,177,174,177,174,177,174,177,174,177,0,174,174,177,174,177,174,177,177,174,177,174,177,174,177,177,174,177,174,177,174,177,174,177,174,177,174,177,174,177,174,177,174,177,174,177,174,177,174,177,174,177,177,174,0,0,178,178,178,178,178,0,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,0,178,178,0,178,178,178,178,0,178,178,178,178,178,178,0,178,178,0,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,0,178,178,178,178,178,178,178,178,0,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,0,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,0,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,0,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,0,178,178,178,178,0,178,178,0,178,178,178,178,178,178,178,178,178,178,178,178,0,178,178,178,178,178,0,178,178,178,178,178,178,178,178,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,935,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,206,207,197,208,196,198,210,199,211,200,212,201,202,203,195,192,204,205,214,215,194,219,192,192,192,935,192,194,195,196,197,196,198,199,200,201,202,203,192,204,205,194,219,163,250,206,207,197,208,196,209,198,210,199,211,200,212,201,202,203,195,192,213,204,205,214,215,194,163,197,196,198,199,200,201,202,203,192,204,205,194,250,206,207,208,209,210,211,212,195,213,214,215,250,206,207,208,209,210,211,212,195,213,214,215,250,206,207,208,209,210,211,212,195,213,214,215,163,935,206,207,197,208,196,209,198,210,199,211,200,212,201,202,203,195,192,213,204,205,214,215,194,219,206,207,197,208,196,209,198,210,199,211,200,212,201,202,203,195,192,213,204,205,214,215,194,219,206,207,197,208,196,209,198,210,199,211,200,212,201,202,203,195,192,213,204,205,214,215,194,219,197,196,198,199,200,201,202,203,192,204,205,194,219,219,206,210,195,214,215,206,207,197,208,196,209,198,210,199,211,200,212,201,202,203,195,192,213,204,205,214,215,194,219,219,219,192,192,192,206,207,197,208,196,209,198,210,199,211,200,212,201,202,203,195,192,213,204,205,214,215,194,219,206,207,197,208,196,209,198,210,199,211,200,212,201,202,203,195,192,213,204,205,214,215,194,219,192,192,192,192,192,192,192,192,192,192,192,219,163,0,206,207,197,208,196,198,210,199,211,200,212,201,202,203,195,192,204,205,214,215,194,219,206,207,197,208,196,198,210,199,211,200,212,201,202,203,195,192,204,205,214,215,194,219,163,250,206,207,197,197,208,196,196,209,198,198,210,199,211,200,212,201,202,203,195,192,192,213,204,205,214,215,194,194,206,197,208,196,209,198,210,199,211,200,212,201,202,203,195,192,213,204,205,215,194,206,207,208,209,212,195,192,214,215,194,206,197,215,194,200,201,206,207,197,208,196,209,198,210,199,211,200,212,201,202,203,195,192,213,204,205,214,215,194,219,206,207,197,208,196,209,198,210,199,211,200,212,201,202,203,195,192,213,204,205,214,215,194,219,192,192,192,206,207,197,208,196,209,198,210,199,211,200,212,201,202,203,195,192,213,204,205,214,215,194,219,206,207,197,208,196,209,198,210,199,211,200,212,201,202,203,195,192,213,204,205,214,215,194,219,219,163,163,163,163,207,197,197,208,196,196,198,198,210,199,199,200,200,201,201,202,202,203,203,195,192,192,204,204,205,205,214,194,194,0,206,207,208,195,214,215,195,195,206,207,208,195,214,215,206,207,208,195,214,215,207,208,195,214,207,208,195,214,207,214,202,202,204,205,205,163,206,207,197,208,196,209,198,210,199,211,200,212,201,202,203,195,192,213,204,205,214,215,194,219,206,207,207,207,197,197,197,197,197,208,208,196,196,196,196,209,209,209,198,198,198,210,210,199,199,199,199,211,200,200,200,212,201,201,201,202,203,203,195,195,195,192,192,192,192,213,204,204,204,205,205,214,214,214,215,194,194,194,194,194,219,196,192,197,194,209,209,209,209,206,207,197,208,196,199,195,192,214,215,194,196,196,192,192,207,197,214,194,197,208,196,199,195,192,194,209,206,207,197,208,196,195,192,214,215,194,206,207,197,208,196,195,192,214,215,194,207,197,208,196,195,192,214,194,207,208,196,195,192,214,192,195,192,197,196,201,192,194,201,163,201,0,204,205,192,197,196,201,192,194,0,197,201,194,0,205,219,205,206,207,197,208,196,209,198,210,199,211,200,212,201,202,203,195,192,213,204,205,214,215,194,219,206,207,197,208,196,209,198,210,199,211,200,212,201,202,203,195,192,213,204,205,214,215,194,219,207,208,209,212,195,213,214,209,212,204,214,206,196,195,192,213,215,206,197,208,196,196,198,210,199,200,201,202,192,192,204,205,214,215,194,219,197,196,192,194,219,163,163,250,163,197,196,201,192,194,198,163,205,163,250,197,196,201,192,194,206,207,197,208,196,198,210,199,200,201,202,195,192,204,205,214,215,194,198,210,198,209,198,209,198,198,198,163,250,206,206,207,197,197,208,196,196,209,198,198,210,210,199,199,211,211,200,200,212,212,201,201,202,202,203,195,192,192,213,204,205,205,214,214,215,215,194,194,203,206,207,197,208,196,209,198,210,199,211,200,212,201,202,203,195,192,213,204,205,214,215,194,219,206,207,197,208,196,209,198,210,199,211,200,212,201,202,203,195,192,213,204,205,214,215,194,219,209,209,205,192,192,192,219,219,219,219,219,219,219,219,219,219,219,219,219,211,212,213,206,207,197,208,196,209,210,199,211,200,212,201,202,203,195,192,213,204,205,214,215,194,219,197,196,198,199,200,201,202,203,192,204,205,194,0,211,212,197,196,198,199,200,201,202,203,192,204,205,194,0,214,215,194,212,211,212,219,219,219,219,219,219,219,163,205,936,206,207,197,197,212,201,202,205,214,215,194,194,206,197,212,201,202,205,215,194,0,192,192,206,207,197,208,196,209,198,210,199,211,200,212,201,202,203,195,192,213,204,205,214,215,194,219,206,207,197,208,196,209,198,210,199,211,200,212,201,202,203,195,192,213,204,205,214,215,194,219,192,192,192,192,206,207,208,210,195,214,215,206,207,208,210,195,213,214,215,250,206,207,208,209,209,210,211,212,195,213,214,215,192,192,250,206,206,207,207,208,208,209,209,210,210,211,211,212,212,195,195,213,213,214,214,215,215,192,192,192,206,207,197,208,196,209,198,210,199,211,200,212,201,202,203,195,192,213,204,205,214,215,194,219,206,207,197,208,196,209,198,210,199,211,200,212,201,202,203,195,192,213,204,205,214,215,194,219,192,192,192,192,192,192,208,195,195,197,196,198,199,200,201,202,195,192,204,194,196,195,192,250,206,206,207,207,208,208,209,209,210,210,211,211,212,212,195,195,213,213,214,214,215,215,210,199,211,200,210,199,211,200,219,163,197,197,196,196,198,198,199,199,200,200,201,201,202,202,203,203,192,192,204,204,205,205,194,194,163,197,197,196,196,198,198,199,199,200,200,201,201,202,202,203,192,192,204,204,205,205,194,194,219,192,192,192,199,195,192,163,197,196,198,199,200,201,202,203,192,204,205,194,206,207,197,208,196,198,210,199,211,200,212,201,202,203,195,192,204,205,214,215,194,219,937,206,207,208,209,211,212,195,214,215,938,206,207,208,210,211,212,195,214,215,206,207,197,208,196,209,198,210,199,211,200,212,201,202,203,195,192,213,204,205,214,215,194,219,206,210,199,215,198,207,197,208,196,195,214,194,207,197,208,196,195,214,194,201,206,207,197,208,196,209,198,210,199,211,200,212,201,202,203,195,192,213,204,205,214,215,194,219,219,219,219,219,219,219,219,219,206,207,197,208,196,198,210,199,200,201,202,203,195,192,213,204,205,214,215,194,198,194,939,206,207,208,209,210,211,212,195,214,215,211,212,206,207,197,208,196,209,198,210,199,211,200,212,201,202,203,195,192,213,204,205,214,215,194,219,205,205,206,207,197,208,196,209,198,210,199,211,200,212,201,202,203,195,192,213,204,205,214,215,194,219,206,207,197,208,196,209,198,210,199,211,200,212,201,202,203,195,192,213,204,205,214,215,194,219,206,207,197,208,196,209,198,210,199,211,200,212,201,202,203,195,192,213,204,205,214,215,194,219,163,250,206,207,197,197,208,196,196,209,198,198,210,199,199,211,200,200,212,201,201,202,203,195,192,192,213,204,204,205,214,215,194,194,207,197,208,196,210,199,211,200,212,201,202,195,192,213,204,214,194,206,197,196,198,210,199,200,201,202,192,213,205,214,215,194,206,197,196,210,199,200,201,202,192,205,214,215,194,936,206,207,197,197,208,196,209,198,210,199,211,200,212,201,195,192,213,204,214,215,194,194,206,207,197,208,196,209,198,210,199,211,200,212,201,195,192,213,204,214,215,194,207,197,208,196,198,199,200,201,202,195,192,204,214,194,198,210,195,206,207,197,208,196,209,198,210,199,211,200,212,201,202,203,195,192,213,204,205,214,215,194,219,206,207,214,215,206,207,208,210,212,195,214,215,195,163,197,197,196,196,198,198,199,199,200,200,201,201,202,202,203,192,192,204,204,205,194,194,196,192,192,206,207,197,208,196,209,198,210,199,211,200,212,201,202,203,195,192,213,204,205,214,215,194,219,206,207,197,208,196,209,198,210,199,211,200,212,201,202,203,195,192,213,204,205,214,215,194,219,192,192,0,0,0,0,0,0,0,0,0,0,0,0,220,230,221,224,228,226,229,225,231,220,230,221,224,227,228,226,229,225,231,223,252,252,220,230,221,224,227,228,226,229,225,231,223,220,230,221,224,227,228,226,229,225,231,223,220,230,221,224,227,228,226,229,225,231,223,220,230,221,224,227,228,226,229,225,231,223,220,230,221,224,227,228,226,229,225,231,223,220,230,221,224,227,228,226,229,225,231,223,220,230,221,224,227,228,226,229,225,231,223,220,221,227,228,223,227,220,230,221,224,227,228,226,229,225,231,223,220,230,221,224,227,228,226,229,225,231,223,220,230,221,224,227,228,226,229,225,231,223,220,230,221,224,227,228,226,229,225,231,223,252,220,230,221,224,227,228,226,229,225,231,223,220,221,224,228,226,229,225,231,223,252,220,230,221,224,227,228,226,229,225,231,223,230,220,230,221,224,227,228,226,229,225,231,223,220,230,221,224,227,228,226,229,225,231,223,220,230,221,224,227,228,226,229,225,231,223,223,223,223,252,220,230,221,224,227,228,226,229,225,231,223,227,220,230,221,224,227,228,226,229,225,231,223,220,230,221,224,227,228,226,229,225,231,223,0,220,230,221,224,227,228,226,229,225,231,223,220,230,226,231,223,220,230,221,224,227,228,226,229,225,231,223,220,230,221,224,227,228,226,229,225,231,223,220,230,221,224,227,228,226,229,225,231,223,220,230,221,224,227,228,226,229,225,231,223,224,225,220,230,221,224,227,228,226,229,225,231,223,220,230,221,224,227,228,226,229,225,231,223,220,230,221,224,227,228,226,229,225,231,223,230,220,230,221,224,227,228,226,229,225,231,223,220,230,221,224,227,228,226,229,225,231,223,220,230,221,224,227,228,226,229,225,231,223,220,221,224,228,226,229,225,231,220,221,224,228,226,229,225,231,223,220,230,221,224,227,228,226,229,225,231,223,220,230,221,224,227,228,226,229,225,231,223,220,230,221,224,227,228,226,229,225,231,223,0,0,0,0,0,0,0,0,232,254,170,0,232,170,170,232,254,170,0,0,232,170,170,232,170,170,232,170,170,232,254,170,232,254,170,170,232,170,232,254,170,232,254,170,232,254,170,0,232,170,232,254,170,232,254,170,232,170,232,254,170,232,254,170,232,254,170,232,254,170,254,232,170,170,170,170,170,170,232,254,170,232,232,232,254,170,170,0,232,170,170,170,232,170,232,170,232,232,170,232,170,232,232,254,232,254,170,232,254,170,232,232,254,170,232,232,170,232,170,232,170,232,170,232,254,170,232,254,170,232,232,254,170,232,254,254,232,170,254,232,170,232,232,0,232,254,170,232,254,170,170,170,170,0,170,232,254,170,232,254,170,170,170,170,170,254,232,232,0,232,254,170,232,254,170,232,170,232,170,232,254,170,232,170,232,254,170,0,0,232,170,232,232,254,170,232,254,170,232,254,170,0,254,232,254,170,170,232,254,170,232,254,170,0,0,0,0,0,0,0,237,237,0,0,0,236,255,256,237,257,253,258,236,255,256,237,253,257,253,258,236,255,256,237,257,253,258,236,255,256,237,256,237,236,0,257,253,258,236,255,256,237,256,237,257,253,258,236,255,256,237,257,253,258,236,255,256,237,253,258,257,253,236,255,256,237,236,255,256,237,255,0,253,255,257,253,258,236,255,256,237,257,253,258,236,255,256,237,257,253,258,236,255,256,237,257,253,258,236,255,256,237,236,0,257,253,258,236,255,256,237,257,253,258,236,255,256,237,940,0,0,236,257,253,258,236,255,256,237,257,253,258,236,255,256,237,257,253,258,236,255,256,237,257,253,257,0,257,253,257,253,253,255,257,253,258,236,255,256,237,257,253,258,236,255,256,237,258,255,255,257,257,257,257,257,257,257,257,257,257,257,257,257,253,253,253,253,253,253,253,253,253,253,253,253,253,255,257,253,258,236,255,256,237,237,257,253,258,236,255,256,237,236,256,237,257,253,257,253,257,253,257,253,236,256,237,255,257,253,258,236,255,256,237,257,253,258,236,255,256,237,257,253,941,257,257,253,253,258,257,258,253,941,941,257,253,253,258,257,258,253,257,253,258,236,255,256,237,257,253,258,236,255,256,237,0,0,0,257,253,258,236,256,237,255,255,255,257,253,940,236,255,256,237,257,253,258,236,255,256,237,257,253,258,236,255,256,237,257,257,257,257,253,253,253,253,257,257,257,257,253,253,253,253,257,253,258,236,255,256,237,237,237,257,253,258,236,255,256,237,257,253,258,236,255,256,237,257,253,258,236,255,256,237,256,255,256,257,253,258,236,255,256,237,257,253,258,236,255,256,237,257,253,258,236,255,256,237,0,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,0,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,0,0,0,0,0,0,0,0,0,0,0,0,942,942,0,0,0,0,0,0,0,0,0,942,942,0,0,0,0,0,942,942,0,0,942,942,943,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,944,0,0,0,0,0,0,0,0,945,946,947,948,949,0,0,950,0,0,951,0,0,952,953,954,0,955,956,957,958,0,959,0,0,960,961,962,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,262,262,0,0,0,0,0,0,0,0,0,262,262,0,0,262,262,262,262,262,0,0,0,0,0,0,262,262,262,0,0,0,262,262,0,0,262,262,262,0,262,262,262,0,0,262,262,262,0,0,0,0,0,0,0,0,0,262,262,0,0,0,0,0,0,0,0,0,0,262,262,262,262,262,262,262,0,0,0,0,0,0,0,0,0,262,262,262,262,0,0,963,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,964,0,0,0,0,0,965,965,0,966,0,966,0,0,0,966,0,966,0,0,0,964,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,266,101,266,101,0,101,101,270,265,101,101,269,266,101,101,101,0,266,101,266,101,265,101,265,101,265,101,265,265,267,101,265,265,267,101,265,267,101,265,267,101,0,101,0,266,101,266,101,266,101,266,101,266,101,0,264,264,265,270,264,266,101,0,266,0,0,0,264,269,266,101,101,101,0,101,265,267,101,265,267,101,265,267,101,265,267,101,266,101,0,266,101,270,265,17,266,267,268,101,269,264,270,265,17,266,267,268,101,269,264,270,265,17,266,267,268,101,269,264,270,265,17,266,267,268,101,269,264,270,265,17,266,267,268,101,269,264,270,265,17,266,267,268,101,269,264,270,265,17,266,267,268,101,269,264,270,265,17,266,267,268,101,269,264,270,265,17,266,267,268,101,269,264,270,17,17,268,265,17,266,267,268,101,269,264,270,265,17,266,267,268,101,269,264,270,265,17,266,267,268,101,269,264,270,265,17,266,267,268,101,269,264,270,265,17,266,267,268,101,269,264,270,266,265,265,17,17,266,266,267,267,268,268,101,101,269,269,264,264,270,270,268,268,265,17,266,267,268,101,269,264,270,265,17,266,267,268,268,101,101,101,269,264,270,0,265,17,266,267,101,269,264,270,265,17,266,267,101,269,264,270,268,265,17,266,267,268,101,269,264,270,265,17,266,267,268,101,269,264,270,269,17,269,265,17,266,267,268,101,269,264,270,265,17,266,267,268,101,269,264,270,17,268,17,17,265,17,266,267,268,101,269,264,270,265,17,266,267,268,101,269,264,270,265,17,266,267,268,101,269,264,270,265,17,266,267,268,101,269,264,270,269,101,265,17,266,267,268,101,269,264,270,101,265,17,266,267,268,101,269,264,270,265,17,266,267,268,101,269,264,270,265,17,266,267,268,101,269,264,270,265,17,266,267,268,101,269,264,270,265,17,266,267,268,101,269,264,270,265,17,266,267,268,101,269,264,270,265,17,266,267,268,101,269,264,270,17,268,265,17,266,267,268,101,269,264,270,265,17,266,267,268,101,269,264,270,0,77,77,77,77,77,77,77,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,0,0,0,283,280,281,282,283,280,281,282,283,280,281,282,281,283,280,281,282,283,280,281,282,283,280,281,282,280,281,283,280,281,282,283,280,281,282,280,281,283,280,281,282,283,280,280,281,281,282,282,280,281,282,0,0,0,283,283,280,280,281,282,280,283,280,281,282,282,282,282,0,0,283,280,281,282,283,280,281,282,283,281,283,280,281,282,283,280,281,282,280,0,281,280,281,280,283,281,281,283,280,281,282,283,280,281,282,280,281,282,280,281,282,283,280,281,282,283,280,281,282,283,280,281,282,283,280,281,282,283,283,280,281,282,283,280,281,282,283,280,281,282,283,280,281,282,283,280,281,282,283,280,281,282,283,280,281,282,0,0,0,0,0,284,285,0,284,285,284,285,284,285,284,285,284,285,284,285,284,285,284,285,284,284,285,284,285,284,284,285,284,285,284,285,284,285,284,285,284,285,284,285,284,285,285,284,285,284,285,284,285,284,285,0,284,285,284,285,284,285,284,285,284,285,284,285,284,285,284,285,284,285,284,285,284,285,284,285,0,0,273,0,0,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,0,292,0,0,0,273,273,292,286,287,288,292,289,273,286,287,286,288,292,289,273,286,287,288,292,289,273,286,287,288,292,289,273,286,287,288,292,289,273,286,287,288,292,289,273,286,287,286,287,286,287,288,289,288,288,292,289,273,286,287,288,292,289,273,286,287,0,288,289,286,288,292,289,273,286,287,288,292,289,273,286,287,289,273,286,287,288,292,289,273,286,287,288,288,292,289,273,286,287,288,292,289,273,286,287,288,288,289,286,287,289,288,292,289,273,286,287,288,292,289,273,286,287,289,288,288,289,288,289,288,289,288,289,288,292,289,273,286,287,288,292,289,273,286,287,288,289,0,0,0,0,288,289,288,288,292,289,273,286,287,288,292,289,273,286,287,288,289,286,287,289,288,286,286,287,288,292,289,273,286,287,288,292,289,273,286,287,288,292,289,273,286,287,292,288,292,289,273,286,287,288,292,289,273,286,287,288,292,289,273,286,287,287,288,292,289,273,286,287,288,292,289,273,286,287,288,292,289,273,286,287,967,968,968,967,969,969,970,971,967,967,0,0,293,0,0,0,293,293,294,295,296,297,293,294,295,297,296,297,293,294,295,296,297,293,294,295,296,297,293,294,295,296,297,293,294,295,296,297,293,294,295,293,294,295,293,294,295,295,295,294,294,0,296,297,293,294,295,296,297,293,294,295,297,296,297,296,297,293,294,295,296,297,293,294,295,297,293,294,295,293,293,294,294,295,295,296,297,296,293,294,295,296,297,293,294,295,295,295,295,293,294,297,293,294,296,297,293,294,295,296,297,293,294,295,296,297,296,297,296,297,293,294,295,296,297,293,294,295,296,297,297,296,297,293,294,295,296,297,293,294,295,297,296,297,293,294,295,296,297,293,294,295,297,0,297,296,297,297,293,294,295,296,297,293,294,295,297,296,297,293,294,295,297,296,297,293,294,295,296,297,293,294,295,296,297,293,294,295,296,297,293,294,295,296,297,293,294,295,296,297,293,294,295,296,297,293,294,295,0,296,297,296,296,297,0,0,0,972,0,0,0,251,249,251,249,251,249,251,249,251,249,249,251,251,249,251,249,251,249,251,249,251,249,251,249,251,249,251,249,251,249,251,249,251,249,251,251,251,251,249,251,251,249,249,249,249,251,249,251,249,251,249,251,249,251,249,251,249,251,249,251,249,251,249,251,249,251,251,249,251,249,251,251,251,249,251,249,251,249,251,249,251,249,251,249,251,251,251,251,251,251,249,249,249,249,251,251,251,249,251,251,251,249,251,249,251,249,251,249,251,249,251,251,249,251,249,0,0,0,0,0,0,0,0,0,0,0,0,299,260,300,301,261,302,303,304,305,306,307,238,299,260,300,301,261,302,303,304,305,306,307,299,260,300,301,261,302,303,304,305,306,307,299,260,300,301,261,302,303,304,305,306,307,299,260,300,301,261,302,303,304,305,306,307,299,260,300,301,261,302,303,304,305,306,307,299,260,300,301,261,302,303,304,305,306,307,299,260,300,301,261,302,303,304,305,306,307,299,260,300,301,261,302,303,304,305,306,307,299,260,300,301,261,302,303,304,305,306,307,238,299,260,300,301,261,302,303,304,305,306,307,299,260,302,304,305,306,307,303,299,260,300,301,261,302,303,304,305,306,307,299,260,300,301,261,302,303,304,305,306,307,299,260,300,301,261,302,303,304,305,306,307,299,260,300,301,261,302,303,304,305,306,307,238,299,260,300,301,261,302,303,304,305,306,307,260,260,300,300,301,301,261,261,303,303,306,306,299,260,300,301,261,302,303,304,305,306,307,299,260,260,300,300,301,301,261,261,302,303,304,305,306,307,299,260,300,301,261,302,303,304,305,306,307,299,260,300,301,261,302,303,304,305,306,307,238,299,260,300,301,261,302,303,304,305,306,307,302,304,299,260,300,301,261,302,303,304,305,306,307,299,260,300,301,261,302,303,304,305,306,307,299,260,300,301,261,302,303,304,305,306,307,0,299,260,300,301,261,302,303,304,305,306,307,299,260,300,301,261,302,303,304,305,306,307,299,300,301,302,299,260,300,301,261,302,303,304,305,306,307,299,260,300,301,261,302,303,304,305,306,307,260,299,260,300,301,261,302,303,304,305,306,307,299,260,300,301,261,302,303,304,305,306,307,299,260,300,301,261,302,303,304,305,306,307,307,307,299,260,300,301,261,302,303,304,305,306,307,299,260,300,301,261,302,303,304,305,306,307,299,260,300,301,261,302,303,304,305,306,307,299,260,300,301,261,302,303,304,305,306,307,299,260,300,301,261,306,307,299,260,300,301,261,306,307,302,304,305,302,304,305,299,260,300,301,261,302,303,304,305,306,307,299,260,300,301,261,302,303,304,305,306,307,299,260,300,301,261,302,303,304,305,306,307,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,973,265,314,265,265,265,972,0,0,265,265,265,265,265,265,265,0,0,973,0,265,265,265,265,313,263,314,315,259,316,317,313,263,314,315,259,316,317,313,263,314,315,259,316,317,313,263,314,315,259,316,317,313,263,314,315,259,316,317,313,263,314,315,259,316,317,313,263,314,315,317,313,263,314,315,313,263,314,315,313,263,0,313,263,314,315,259,316,317,313,263,314,315,259,316,317,313,263,314,315,259,316,317,313,263,314,315,259,316,317,313,263,314,315,317,313,263,314,315,313,313,263,263,315,315,0,313,313,263,263,314,314,315,315,259,316,317,313,263,314,315,974,973,313,263,314,315,314,314,973,313,263,314,315,940,974,315,313,263,315,313,263,315,0,259,316,317,313,263,314,315,259,316,317,313,263,314,315,259,316,317,317,313,263,314,315,259,316,317,313,263,314,315,259,316,317,313,263,314,315,259,313,263,0,317,317,317,317,317,317,317,317,317,317,317,317,317,313,263,315,259,316,317,313,263,259,316,317,317,317,317,317,263,259,316,317,313,263,314,315,259,316,317,313,263,314,315,315,974,259,316,259,316,317,313,263,314,315,259,316,317,313,263,314,315,0,259,316,317,317,317,973,313,263,314,315,314,314,973,313,263,314,315,940,313,263,314,315,313,263,314,315,974,259,316,317,313,263,314,315,259,316,317,313,263,314,315,317,317,317,317,317,317,317,317,259,316,317,313,263,314,315,259,316,317,313,263,314,315,259,316,317,313,263,314,315,259,316,317,313,263,314,315,259,316,259,316,317,313,263,314,315,259,316,317,313,263,314,315,259,316,317,313,263,314,315,975,0,975,975,975,0,0,976,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,328,318,319,320,321,322,323,324,325,326,327,328,975,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,0,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,0,0,0,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,977,975,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,975,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,0,0,0,0,0,0,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,328,318,319,320,321,322,323,324,325,326,327,328,318,319,320,321,322,323,324,325,326,327,328,318,319,320,321,322,323,324,325,326,327,328,0,318,319,320,321,322,323,324,325,326,327,328,318,319,320,321,322,323,324,325,326,327,328,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,975,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,328,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,0,0,0,0,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,318,319,320,321,322,323,324,325,326,327,329,330,331,328,332,0,0,0,0,0,0,0,0,0,0,978,0,0,0,0,978,979,979,0,0,0,0,0,0,0,980,981,982,983,984,985,986,0,981,982,983,984,985,986,981,982,983,984,985,986,981,982,983,984,985,986,981,982,983,984,985,986,981,982,983,984,985,986,981,982,983,984,985,986,981,982,983,984,985,986,985,986,980,981,982,983,984,985,986,981,982,983,984,985,986,981,982,983,984,985,986,981,982,983,984,985,986,981,982,983,984,985,986,981,982,983,984,985,986,981,982,983,984,985,986,981,982,983,984,985,986,981,982,983,984,985,986,981,982,983,984,985,986,981,982,983,984,985,986,981,982,983,984,985,986,981,982,983,984,985,986,981,982,983,984,985,986,981,982,983,984,985,986,981,982,983,984,985,986,981,982,983,984,985,986,981,982,983,984,985,986,981,982,983,984,985,986,981,982,983,984,985,986,981,982,983,984,985,986,981,982,983,984,985,986,981,982,983,984,985,986,981,982,983,984,985,986,0,0,987,0,987,0,988,987,989,989,110,65,333,334,335,336,337,338,339,340,352,353,354,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,355,356,357,358,359,341,342,106,343,344,345,145,346,347,348,349,350,351,0,0,0,0,0,0,0,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,110,65,333,334,335,336,337,338,339,340,334,337,340,110,65,333,334,335,336,337,338,339,340,110,65,333,334,335,336,337,338,339,340,65,333,334,336,337,339,340,110,65,333,334,335,336,337,338,339,340,352,353,354,0,355,356,357,358,359,0,0,0,0,990,991,0,0,992,991,0,0,0,992,990,0,334,337,340,354,110,65,333,334,335,336,337,338,339,340,352,353,354,360,360,110,65,333,334,335,336,337,338,339,340,352,353,354,360,360,65,333,334,336,337,339,340,353,354,341,342,106,110,65,343,344,345,333,334,346,347,348,349,350,335,336,337,338,339,340,352,353,354,360,360,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,110,65,333,334,335,336,337,338,339,340,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,106,110,110,65,65,343,344,345,145,333,333,334,334,348,349,350,351,335,335,336,336,337,337,338,338,339,339,340,340,352,352,353,353,354,354,106,110,110,65,65,343,344,345,333,333,334,334,348,349,350,335,335,336,336,337,337,338,338,339,339,340,340,352,352,353,353,354,354,343,348,106,344,349,345,350,355,356,357,358,359,110,110,65,145,333,351,335,336,355,356,357,358,359,65,333,336,65,333,336,65,333,336,343,106,344,345,110,338,352,65,333,339,353,334,340,354,351,145,110,335,352,65,333,336,353,334,337,354,348,349,350,106,110,65,343,345,333,334,348,349,350,335,336,337,338,339,340,352,353,354,106,110,65,343,345,145,333,334,348,349,350,351,335,336,337,338,339,340,352,353,354,110,335,338,65,333,336,339,334,337,340,335,338,352,336,339,353,336,339,353,337,340,354,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,65,355,356,357,358,359,338,338,339,339,340,340,352,352,353,353,354,354,355,356,357,358,359,355,356,357,358,359,355,356,357,358,359,338,338,339,339,340,340,352,352,353,353,354,354,355,356,357,358,359,355,356,357,358,359,338,338,339,339,340,340,352,352,353,353,354,354,355,356,357,358,359,0,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,110,65,333,334,335,336,337,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,110,65,333,334,335,336,337,338,339,340,352,353,354,110,65,333,334,335,336,337,110,65,333,334,335,336,337,110,65,333,334,335,336,337,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,110,65,333,334,335,336,337,338,339,340,352,353,354,110,65,333,334,335,336,337,338,339,340,352,353,354,110,65,333,334,335,336,337,338,339,340,352,353,354,110,65,333,334,335,336,337,338,339,340,352,353,354,110,65,333,334,335,336,337,338,339,340,352,353,354,110,65,333,334,335,336,337,338,339,340,352,353,354,106,343,344,345,348,349,350,106,343,344,345,348,349,350,145,351,65,333,336,339,353,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,360,355,356,357,358,359,341,341,342,342,106,110,65,343,343,344,345,145,145,333,333,334,334,346,346,347,347,348,349,350,351,335,336,337,338,339,340,352,353,354,360,355,356,357,358,359,341,341,342,342,106,110,65,343,343,344,345,145,145,333,333,334,334,346,346,347,347,348,349,350,351,335,336,337,338,339,340,352,353,354,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,106,343,344,345,348,349,350,110,65,333,334,335,336,337,110,65,333,334,335,336,337,110,110,65,65,145,333,333,334,334,351,335,335,336,336,337,337,338,338,339,339,340,340,352,352,353,353,354,354,110,110,65,65,333,333,334,334,335,335,336,336,337,337,338,338,339,339,340,340,352,352,353,353,354,354,0,0,0,110,65,145,333,334,351,335,336,337,338,339,340,352,353,354,110,65,333,334,335,336,337,338,339,340,352,353,354,65,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,0,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,0,0,0,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,360,360,355,355,356,356,357,357,358,358,359,359,338,338,339,339,340,340,352,352,353,353,354,354,110,65,333,334,335,336,337,110,65,333,335,336,338,339,352,353,0,0,110,65,333,334,335,336,337,360,355,355,356,356,357,357,358,358,359,359,341,341,342,342,106,106,110,110,65,65,343,343,344,344,345,345,145,145,333,333,334,334,346,346,347,347,348,348,349,349,350,350,351,351,335,335,336,336,337,337,338,338,339,339,340,340,352,352,353,353,354,354,65,110,110,65,65,333,334,334,335,336,337,360,355,356,357,358,359,341,342,342,342,106,106,106,106,106,106,110,110,110,110,110,110,110,65,65,65,65,65,65,65,65,65,65,65,343,343,343,344,344,344,344,344,345,345,345,345,345,345,145,145,145,333,333,333,333,333,333,333,333,333,334,334,334,334,334,334,334,334,334,334,334,334,334,346,347,348,348,348,349,349,349,349,350,350,350,350,351,351,335,335,335,335,335,336,336,336,336,336,336,337,337,337,337,337,337,337,337,337,338,338,338,338,338,339,339,339,339,339,339,340,340,340,340,340,340,340,340,352,352,352,352,352,353,353,353,353,353,353,354,354,354,354,354,354,354,354,145,351,341,106,110,110,343,344,346,348,349,335,341,346,110,65,145,333,334,351,335,336,337,338,339,340,352,353,354,342,106,344,345,145,347,349,350,351,341,342,106,343,344,345,346,347,348,349,350,341,342,106,343,344,345,346,347,348,349,350,341,342,106,343,344,345,346,347,348,349,350,341,342,106,343,344,345,346,347,348,349,350,106,343,344,345,348,349,350,106,344,345,145,349,350,351,341,106,344,346,349,341,346,341,342,343,345,145,346,347,348,350,351,342,347,341,343,345,145,342,106,344,145,347,349,351,342,106,344,345,347,349,350,145,351,145,351,145,351,342,345,347,350,342,106,344,345,145,347,349,350,351,342,106,344,345,145,347,349,350,351,342,106,344,345,145,347,349,350,351,341,342,106,344,345,346,347,349,350,343,348,341,106,344,346,349,342,345,347,350,145,351,110,65,145,333,334,351,335,336,337,338,339,340,352,353,354,341,342,106,344,345,346,347,349,350,145,351,145,351,360,355,356,357,358,359,338,339,340,352,353,354,110,65,334,360,355,356,357,358,359,338,339,340,352,353,354,0,110,65,333,334,335,336,337,338,339,340,352,353,354,110,65,333,334,335,336,337,338,339,340,352,353,354,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,341,342,106,343,344,345,145,346,347,348,349,350,351,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,110,65,333,334,335,336,337,145,351,110,65,333,334,335,336,337,338,339,340,110,65,145,333,334,351,335,336,337,106,110,65,343,345,145,334,348,349,350,351,335,336,337,338,339,340,352,353,354,0,0,0,65,110,65,145,333,334,351,335,336,337,110,65,145,333,334,351,335,336,337,110,65,145,333,334,351,335,336,337,110,65,145,333,334,351,335,336,337,65,342,345,347,350,342,345,347,350,342,345,347,350,342,345,347,350,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,0,0,0,0,341,346,342,347,110,65,333,334,335,336,337,338,339,340,352,353,354,110,65,333,334,335,336,337,338,339,340,352,353,354,110,65,334,110,65,333,334,335,336,337,338,339,340,352,353,354,110,65,333,334,335,336,337,338,339,340,352,353,354,341,341,341,342,342,342,342,106,106,106,106,106,110,110,65,65,343,343,343,344,344,344,344,344,345,345,345,345,345,345,145,145,145,145,333,333,334,334,346,346,347,347,348,348,348,349,349,349,349,350,350,350,350,351,351,351,335,335,336,336,337,337,338,338,339,339,340,340,352,352,353,353,354,354,110,65,333,334,335,336,337,106,106,110,110,65,65,343,343,344,344,345,345,145,333,333,334,334,348,348,349,349,350,350,351,335,335,336,336,337,337,338,338,339,339,340,340,352,352,353,353,354,354,343,348,106,344,349,345,350,145,351,106,343,344,345,348,349,350,343,348,106,344,145,349,351,106,344,145,345,350,106,110,65,343,344,345,145,333,334,348,349,350,351,335,336,337,338,339,340,355,356,357,358,359,110,65,333,334,335,336,337,338,339,340,352,353,354,110,65,145,333,334,351,335,336,337,110,65,333,334,335,336,337,355,356,357,358,359,338,339,340,352,353,354,345,350,345,350,345,350,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,110,335,338,110,335,338,345,350,345,350,345,350,345,350,345,350,345,350,345,350,110,65,333,334,335,336,337,341,342,106,106,110,110,65,65,343,343,344,344,345,345,145,145,333,333,334,334,346,347,348,348,349,349,350,350,351,351,335,335,336,336,337,337,338,338,339,339,340,340,352,352,353,353,354,354,110,65,333,334,335,336,337,110,65,333,334,335,336,337,345,350,0,110,65,333,334,335,336,337,65,110,65,333,334,335,336,337,110,65,333,334,335,336,337,110,110,65,65,333,333,334,334,335,335,336,336,337,337,338,338,339,339,340,340,352,352,353,353,354,354,110,110,65,65,333,333,334,334,335,335,336,336,337,337,338,338,339,339,340,340,352,352,353,353,354,354,65,110,335,338,145,145,110,65,333,334,335,336,337,106,343,344,345,348,349,350,110,65,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,110,65,333,334,335,336,337,338,339,340,352,353,354,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,338,338,338,338,338,338,338,338,339,339,339,339,339,339,339,339,340,340,340,340,340,340,340,340,352,352,352,352,352,352,352,352,353,353,353,353,353,353,353,353,354,354,354,354,354,354,354,354,338,338,338,338,338,338,338,338,339,339,339,339,339,339,339,339,340,340,340,340,340,340,340,340,352,352,352,352,352,352,352,352,353,353,353,353,353,353,353,353,354,354,354,354,354,354,354,354,110,65,333,334,335,336,337,338,339,340,145,351,355,356,357,358,359,110,65,333,334,335,336,337,338,339,340,352,353,354,65,334,110,65,334,110,65,334,106,110,110,65,65,343,344,345,145,333,333,334,334,348,349,350,351,335,335,336,336,337,337,338,338,339,339,340,340,352,352,353,353,354,354,106,110,110,65,65,343,344,345,333,333,334,334,348,349,350,335,335,336,336,337,337,338,338,339,339,340,340,352,352,353,353,354,354,343,348,106,344,349,345,350,106,106,110,110,65,65,343,343,344,344,345,345,145,145,333,333,334,334,348,348,349,349,350,350,351,351,335,335,336,336,337,337,338,338,339,339,340,340,352,352,353,353,354,354,0,110,65,145,333,334,351,335,336,337,338,339,340,352,353,354,145,351,334,341,342,106,343,344,345,346,347,348,349,350,341,342,106,343,344,345,346,347,348,349,350,145,351,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,342,345,347,350,145,351,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,341,106,344,346,349,342,345,347,350,342,345,341,106,344,346,349,342,345,347,350,342,345,341,342,346,347,106,343,344,345,348,349,350,110,65,334,65,333,334,336,337,339,340,353,354,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,110,65,333,334,335,336,337,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,0,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,65,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,0,0,0,0,0,0,0,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,357,351,337,340,354,345,350,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,360,355,356,357,358,359,341,342,106,110,65,343,344,345,145,333,334,346,347,348,349,350,351,335,336,337,338,339,340,352,353,354,341,342,106,343,344,345,346,347,348,349,350,110,65,145,333,334,351,335,336,337,338,339,340,352,353,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,355,356,357,110,65,351,335,336,337,338,339,340,352,353,354,106,344,345,348,349,350,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,992,990,991,110,65,333,334,335,336,337,338,339,340,352,353,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,992,990,991,110,65,333,334,335,336,337,338,339,340,352,353,354,991,334,337,340,354,992,990,991,110,65,333,334,335,336,337,338,339,340,352,353,354,992,990,991,110,65,333,334,335,336,337,338,339,340,352,353,354,990,991,65,333,334,336,337,339,340,353,354,992,990,991,110,65,333,334,335,336,337,338,339,340,352,353,354,991,334,337,340,354,992,990,991,110,65,333,334,335,336,337,338,339,340,352,353,354,992,990,991,110,65,333,334,335,336,337,338,339,340,352,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,991,334,337,340,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,992,110,65,333,334,335,336,337,338,339,340,352,353,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,992,990,991,110,65,333,334,335,336,337,338,339,340,352,353,354,991,334,337,340,354,992,990,991,110,65,333,334,335,336,337,338,339,340,352,353,354,992,990,991,110,65,333,334,335,336,337,338,339,340,352,353,354,990,991,65,333,334,336,337,339,340,353,354,992,990,991,110,65,333,334,335,336,337,338,339,340,352,353,354,991,334,337,340,354,992,990,991,110,65,333,334,335,336,337,338,339,340,352,353,354,992,990,991,110,65,333,334,335,336,337,338,339,340,352,353,354,990,991,65,333,334,336,337,339,340,353,354,991,990,65,145,333,334,351,336,337,339,340,353,354,991,334,337,340,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,990,991,65,333,334,336,337,339,340,353,354,991,334,337,340,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,991,334,337,340,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,991,334,337,340,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,355,356,357,110,65,351,335,336,337,338,339,340,352,353,354,106,344,345,348,349,350,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,992,990,991,110,65,333,334,335,336,337,338,339,340,352,353,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,992,990,991,110,65,333,334,335,336,337,338,339,340,352,353,354,991,334,337,340,354,992,990,991,110,65,333,334,335,336,337,338,339,340,352,353,354,992,990,991,110,65,333,334,335,336,337,338,339,340,352,353,354,990,991,65,333,334,336,337,339,340,353,354,992,990,991,110,65,333,334,335,336,337,338,339,340,352,353,354,991,334,337,340,354,992,990,991,110,65,333,334,335,336,337,338,339,340,352,353,354,992,990,991,110,65,333,334,335,336,337,338,339,340,352,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,991,334,337,340,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,992,990,991,110,65,333,334,335,336,337,338,339,340,352,353,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,992,990,991,110,65,333,334,335,336,337,338,339,340,352,353,354,991,334,337,340,354,992,990,991,110,65,333,334,335,336,337,338,339,340,352,353,354,992,990,991,110,65,333,334,335,336,337,338,339,340,352,353,354,990,991,65,333,334,336,337,339,340,353,354,992,990,991,110,65,333,334,335,336,337,338,339,340,352,353,354,991,334,337,340,354,992,990,991,110,65,333,334,335,336,337,338,339,340,352,353,354,992,990,991,110,65,333,334,335,336,337,338,339,340,352,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,991,334,337,340,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,990,991,65,333,334,336,337,339,340,353,354,991,334,337,340,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,991,334,337,340,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,991,334,337,340,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,356,357,65,351,336,337,339,340,353,354,106,344,345,349,350,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,990,991,65,333,334,336,337,339,340,353,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,990,991,65,333,334,336,337,339,340,353,354,991,334,337,340,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,991,334,337,340,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,991,334,337,340,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,990,991,65,333,334,336,337,339,340,353,354,991,334,337,340,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,991,334,337,340,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,991,334,337,340,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,991,334,337,340,354,990,991,65,333,334,336,337,339,340,353,354,991,334,337,340,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,991,334,337,340,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,991,334,337,340,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,990,991,65,333,334,336,337,339,340,353,354,0,0,0,0,0,357,355,356,357,355,356,357,356,357,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,341,342,0,341,342,0,0,0,0,345,110,65,106,344,345,110,65,106,344,345,65,106,344,345,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,346,347,346,347,351,337,350,351,335,336,337,348,349,350,351,335,336,337,348,349,350,351,336,337,349,350,0,0,0,0,0,0,340,338,339,340,338,339,340,339,340,990,991,0,992,991,0,992,990,0,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,992,990,991,991,991,991,991,991,992,990,991,991,992,990,991,992,990,991,990,991,992,990,991,991,992,990,991,992,990,991,990,991,990,991,991,990,991,990,991,990,991,990,991,992,991,991,991,991,991,992,990,991,991,992,990,991,992,990,991,990,991,992,990,991,991,992,990,991,992,990,991,990,991,991,990,991,990,991,990,991,990,991,990,991,991,991,991,991,991,990,991,991,990,991,990,991,990,991,990,991,991,990,991,990,991,990,991,990,991,991,990,991,990,991,990,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,992,990,991,991,991,991,991,991,992,990,991,991,992,990,991,992,990,991,990,991,992,990,991,991,992,990,991,992,990,991,990,991,990,991,991,990,991,990,991,990,991,992,990,991,991,991,991,991,991,992,990,991,991,992,990,991,992,990,991,990,991,992,990,991,991,992,990,991,992,990,991,990,991,990,991,991,990,991,990,991,990,991,990,991,991,991,991,991,991,990,991,991,990,991,990,991,990,991,990,991,991,990,991,990,991,990,991,990,991,991,990,991,990,991,990,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,991,990,991,991,991,991,991,991,990,991,991,990,991,990,991,990,991,990,991,991,990,991,990,991,990,991,990,991,991,990,991,990,991,990,991,990,991,991,991,991,991,991,990,991,991,990,991,990,991,990,991,990,991,991,990,991,990,991,990,991,990,991,991,990,991,990,991,990,991,990,991,991,991,991,991,991,990,991,991,990,991,990,991,990,991,990,991,991,990,991,990,991,990,991,990,991,991,990,991,990,991,990,991,0,0,0,0,0,0,354,352,353,354,352,353,354,353,354,390,0,388,390,390,388,993,993,994,0,995,995,388,396,0,0,0,396,0,388,0,0,0,0,0,388,0,0,388,388,0,0,0,0,0,0,148,148,148,148,0,0,148,148,148,148,148,148,396,388,392,390,386,390,390,390,386,390,390,386,390,390,390,386,390,396,0,0,388,396,0,996,0,0,388,392,388,0,0,402,0,390,386,390,390,386,390,0,390,386,390,0,0,390,386,390,390,386,390,0,390,386,390,0,0,993,388,388,390,396,392,388,382,387,391,381,386,390,377,378,379,380,148,388,392,393,394,389,381,148,993,377,378,379,380,993,377,378,379,380,993,377,378,379,380,993,997,148,381,148,381,148,148,148,148,148,148,382,148,148,148,148,148,148,148,148,148,148,382,381,382,148,148,148,148,148,148,382,382,382,382,395,396,382,387,391,381,386,390,377,378,379,380,148,388,392,393,394,389,386,993,377,378,379,380,998,381,148,148,395,396,382,387,391,381,386,390,377,378,379,380,148,388,392,393,394,389,395,396,382,387,391,381,386,390,377,378,379,380,148,388,392,393,394,389,996,382,381,148,148,0,387,387,387,386,388,388,395,396,382,387,391,381,386,390,377,378,379,380,148,388,392,393,394,389,389,386,390,993,377,378,379,380,993,377,378,379,380,993,377,378,379,380,395,396,382,387,391,381,386,390,377,378,379,380,148,388,392,393,394,389,395,396,382,387,391,381,386,390,377,378,379,380,148,388,392,393,394,389,382,387,391,381,386,390,377,378,379,380,148,388,392,393,394,389,382,387,391,381,386,390,377,378,379,380,148,388,392,393,394,389,0,395,148,382,402,381,998,998,381,148,148,393,393,381,381,148,387,387,395,396,382,387,391,381,381,386,390,377,378,379,380,148,388,392,393,394,389,389,395,396,382,387,391,381,381,386,390,377,378,379,380,148,388,392,393,394,389,389,402,996,381,381,148,395,396,382,387,391,381,386,390,377,378,379,380,148,388,392,393,394,389,395,396,382,387,391,381,386,390,377,378,379,380,148,388,392,393,394,389,381,381,381,381,391,381,386,390,377,378,379,380,148,388,392,393,391,391,381,381,386,386,390,390,377,377,378,378,379,379,380,380,388,388,392,392,393,393,0,381,388,382,148,382,0,148,148,396,396,382,391,381,386,390,377,378,379,380,148,388,392,393,394,395,396,396,396,382,387,391,381,386,390,390,377,377,378,378,379,379,380,380,148,148,148,148,148,148,148,148,148,148,148,148,148,388,392,392,393,394,389,993,377,378,379,380,148,388,381,388,391,387,388,381,381,391,993,377,378,379,380,993,377,378,379,380,381,381,386,390,377,378,379,380,388,382,996,381,381,148,381,998,381,381,148,381,382,148,0,382,386,386,381,386,390,377,378,379,380,388,996,381,148,381,394,148,394,0,382,382,0,996,382,382,382,382,381,377,378,379,380,382,382,381,377,378,379,380,395,396,382,387,391,381,386,390,377,378,379,380,148,388,392,393,394,389,389,389,389,395,396,382,387,391,381,386,390,377,378,379,380,148,388,392,393,394,389,387,148,381,999,395,394,148,148,148,148,381,402,148,148,148,148,148,148,381,993,377,378,379,380,148,0,382,395,382,387,387,0,0,0,395,396,382,387,391,381,386,390,377,378,379,380,148,388,392,393,394,389,395,396,382,387,391,381,386,390,377,378,379,380,148,388,392,393,394,389,993,377,378,379,380,993,377,378,379,380,993,377,378,379,380,993,0,382,394,395,387,381,389,148,148,148,148,148,148,148,148,148,148,395,394,391,0,402,395,396,382,387,391,381,386,390,377,378,379,380,148,388,392,393,394,389,395,396,382,387,391,381,386,390,377,378,379,380,148,388,392,393,394,389,391,996,381,381,396,998,381,381,148,391,402,402,1000,1000,393,148,148,148,148,148,148,381,381,381,382,395,396,382,387,391,381,386,390,377,378,379,380,148,388,392,393,394,389,395,396,382,387,391,381,386,390,377,378,379,380,148,388,392,393,394,389,381,148,0,0,381,148,402,402,382,396,382,998,389,148,148,148,389,993,377,378,379,380,148,148,148,993,377,378,379,380,148,148,148,382,387,391,381,386,390,377,378,379,380,148,388,392,393,394,389,993,377,378,379,380,148,148,148,993,377,378,379,380,148,148,148,396,382,387,387,393,393,402,395,396,382,387,391,381,386,390,377,378,379,380,148,388,392,393,394,389,395,396,382,387,391,381,386,390,377,378,379,380,148,388,392,393,394,389,382,395,396,382,387,391,381,386,390,377,378,379,380,148,388,392,393,394,389,996,381,998,381,148,395,396,382,387,391,381,386,390,377,378,379,380,148,388,392,393,394,389,395,396,382,387,391,381,386,390,377,378,379,380,148,388,392,393,394,389,395,396,382,387,391,381,386,390,377,378,379,380,148,388,392,393,394,389,996,389,395,396,382,387,391,381,386,390,377,378,379,380,148,388,392,393,394,389,996,381,148,381,394,382,395,396,382,387,391,381,386,390,377,378,379,380,148,388,392,393,394,389,395,396,382,387,391,381,386,390,377,378,379,380,148,388,392,393,394,389,0,1001,381,148,394,394,0,0,0,0,0,0,0,0,0,405,408,398,400,405,406,408,409,398,400,399,401,405,406,408,409,398,400,399,401,405,406,408,409,398,400,399,401,405,406,408,409,398,400,399,401,405,406,408,409,398,400,399,401,405,406,408,409,398,400,399,401,405,406,405,408,398,400,405,408,398,400,1002,405,406,408,409,398,400,399,401,405,406,408,409,398,400,399,401,405,406,408,409,398,400,399,401,405,406,408,409,398,400,399,401,405,406,408,409,398,400,399,401,405,406,408,409,398,400,399,401,405,406,408,409,398,400,399,401,405,406,408,409,398,400,399,401,405,406,408,409,398,400,399,401,405,406,405,406,408,409,398,400,399,401,405,406,408,409,398,400,399,401,405,406,408,409,398,400,399,401,398,400,399,401,405,406,408,409,398,400,399,401,405,406,408,409,405,406,408,409,398,400,399,401,405,406,408,409,398,400,399,401,408,409,398,399,400,401,405,406,408,409,398,400,399,401,405,406,408,409,398,400,399,401,405,406,408,409,398,400,399,401,405,408,398,400,405,406,408,409,398,400,399,401,405,406,408,409,398,400,399,401,405,405,405,405,405,405,405,405,405,406,408,409,398,400,399,401,405,406,408,409,398,400,399,401,405,406,408,409,398,400,399,401,405,406,408,409,398,400,399,401,405,406,408,409,398,400,399,401,398,400,399,401,405,406,408,409,398,400,399,401,405,406,408,409,398,400,399,401,398,399,398,400,399,401,0,0,412,412,0,0,412,0,0,412,413,414,415,412,413,414,415,412,413,414,415,412,413,414,415,412,413,414,415,412,413,414,415,412,413,415,415,412,413,412,413,414,415,414,413,413,414,415,412,413,414,415,412,413,414,414,415,412,413,413,414,415,412,413,415,415,412,413,412,412,413,413,412,413,414,415,412,413,414,415,412,413,414,415,412,413,414,414,415,412,413,414,415,412,413,415,415,414,414,415,415,414,415,412,413,414,415,412,413,415,414,414,415,412,413,414,415,412,413,414,415,415,412,413,414,415,412,413,414,415,412,413,414,415,412,413,413,414,415,412,413,414,415,412,413,414,415,412,413,414,415,412,413,414,415,412,413,414,415,412,413,415,415,419,0,419,418,0,418,418,0,418,419,419,0,0,0,418,419,419,418,419,416,421,416,417,420,418,419,421,416,417,420,418,419,421,416,417,420,418,419,421,421,416,417,420,418,419,421,416,417,420,418,419,421,416,417,420,418,419,418,419,418,419,416,416,420,417,418,419,421,416,417,420,418,419,421,416,417,420,418,419,416,417,421,416,417,420,418,419,421,416,417,420,418,419,420,418,419,418,418,419,419,420,418,419,421,416,417,420,418,419,417,421,421,416,417,420,418,419,417,421,416,417,420,418,419,417,416,416,421,416,417,420,418,419,421,416,417,420,418,419,416,420,420,421,416,417,420,418,419,421,416,417,420,418,419,417,421,421,416,421,421,416,417,421,416,417,420,418,419,421,416,417,420,418,419,416,418,419,421,416,417,420,418,419,421,416,417,420,418,419,421,416,417,420,418,419,421,416,417,420,418,419,421,416,417,420,418,419,421,416,417,420,418,419,421,416,417,420,418,419,420,416,421,416,417,420,418,419,421,416,417,420,418,419,420,422,396,0,424,423,396,0,425,423,422,423,422,0,0,0,424,396,0,0,396,425,423,396,0,0,425,425,396,424,0,0,422,423,424,425,426,422,427,428,423,429,430,424,425,426,422,427,428,423,429,430,424,425,426,422,427,428,423,429,430,424,425,426,422,427,428,423,429,430,424,425,426,422,427,428,423,429,430,424,425,426,422,427,428,423,429,430,424,425,422,423,424,425,422,423,424,425,426,422,427,428,423,429,430,424,425,426,422,427,428,423,429,430,424,425,426,422,427,428,423,429,430,424,425,426,422,427,428,423,429,430,424,425,422,423,424,425,424,424,426,426,422,427,427,428,428,423,429,429,430,430,424,425,425,426,427,429,426,427,429,426,426,422,427,428,423,429,430,424,425,425,425,426,427,429,428,430,422,423,424,425,422,423,424,425,426,422,427,428,423,429,430,424,425,426,422,427,428,423,429,430,424,425,426,428,430,426,428,430,426,422,427,428,423,429,430,424,425,426,422,427,428,423,429,430,424,425,427,429,426,422,427,428,423,429,430,424,425,426,422,427,428,423,429,430,424,425,426,427,428,429,430,426,422,427,428,423,429,430,424,425,426,422,427,428,423,429,430,424,425,427,428,429,422,423,424,425,426,427,428,429,430,425,426,422,427,428,423,429,430,424,425,426,422,427,428,423,429,430,424,425,426,422,427,428,423,429,430,424,425,427,428,429,426,422,427,428,423,429,430,424,425,426,422,427,428,423,429,430,424,425,426,422,427,428,423,429,430,424,425,426,422,427,428,423,429,430,424,425,426,422,427,428,423,429,430,424,425,426,422,427,428,423,429,430,424,425,1003,1003,404,0,0,404,0,384,404,404,0,384,404,0,0,384,410,383,385,384,404,410,383,385,384,404,385,410,383,385,384,404,410,383,385,384,404,410,383,385,410,383,385,384,404,410,410,410,383,385,384,404,410,383,385,384,404,410,383,385,384,404,410,383,385,384,404,382,410,410,383,385,384,404,410,383,385,384,404,383,385,410,383,385,384,404,410,383,385,384,404,410,384,404,410,410,384,384,404,404,410,410,383,385,410,383,385,384,384,404,410,383,385,384,404,410,384,404,383,385,383,385,385,383,385,410,410,384,404,410,410,383,385,383,385,410,383,385,410,410,410,410,383,385,384,404,383,385,410,383,385,384,404,383,385,410,382,410,383,385,384,404,410,383,385,384,404,410,383,385,410,383,385,384,404,410,383,385,384,404,404,383,385,384,385,410,383,385,382,410,383,385,384,404,410,383,385,384,404,410,383,385,410,410,383,385,384,404,384,410,383,385,384,404,410,383,385,384,404,383,410,383,385,384,404,410,383,385,384,404,410,383,385,384,404,410,383,385,384,404,410,383,385,384,404,410,410,410,383,385,384,404,410,383,385,384,404,0,407,1004,0,0,407,407,407,407,431,407,431,407,0,431,407,431,407,0,431,407,431,407,431,407,431,407,431,407,0,0,0,0,431,407,431,407,0,431,407,431,407,407,0,0,0,0,0,0,0,407,431,407,0,0,0,0,1004,431,0,0,0,1004,431,431,407,431,407,0,1004,431,431,407,431,407,1004,431,431,407,431,407,0,0,0,0,0,0,0,0,0,0,0,431,407,431,407,0,0,431,407,431,407,431,407,431,407,0,431,407,431,407,431,407,0,431,407,431,407,431,407,0,1004,0,0,0,0,0,0,0,0,0,0,1004,0,0,0,1004,0,1004,1004,0,0,0,432,411,432,411,433,432,411,433,432,411,433,432,411,433,432,411,411,411,433,432,411,433,432,411,433,432,411,432,411,433,432,411,433,432,411,433,432,411,433,432,411,433,432,411,432,411,432,432,411,411,432,411,433,433,411,411,433,432,411,432,411,432,411,433,432,411,433,433,432,411,433,433,433,433,433,432,411,433,432,411,411,411,411,433,433,411,433,433,432,411,433,432,411,411,411,433,432,411,433,432,411,433,432,411,433,432,411,433,432,411,433,432,411,433,432,411,433,432,411,433,432,411,433,432,411,433,433,433,432,411,433,432,411,0,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,0,0,0,436,435,436,435,436,435,436,435,436,435,436,435,436,435,436,435,436,435,436,435,436,435,436,435,436,435,436,435,436,435,435,436,436,436,435,436,435,436,435,436,435,435,436,436,435,436,435,436,435,436,435,436,435,436,435,436,435,436,435,436,435,436,436,435,436,435,436,435,436,435,436,435,436,435,436,435,436,435,436,435,436,435,436,21,21,0,0,0,21,21,21,0,0,21,21,21,0,0,21,439,114,21,439,114,21,439,114,21,439,114,21,439,114,21,439,114,21,439,114,439,114,439,114,114,439,21,439,114,21,439,114,21,439,114,21,439,114,114,0,928,114,21,21,439,114,114,21,21,21,21,439,114,21,439,114,21,439,114,21,439,114,21,439,114,114,928,439,439,439,114,439,439,114,439,114,439,114,21,439,114,21,439,114,21,21,439,114,21,439,114,21,114,439,114,21,114,114,0,0,0,21,439,439,439,439,114,114,21,439,114,21,439,114,21,439,114,21,439,114,21,439,114,439,439,439,21,439,114,0,21,439,114,21,439,114,102,0,0,102,102,0,0,0,0,24,102,102,102,24,0,102,93,93,0,0,4,0,23,4,931,94,94,0,0,0,0,0,49,49,0,0,0,0,0,441,446,445,441,0,441,442,442,442,444,442,446,445,441,444,442,446,445,441,444,442,446,445,441,444,445,444,442,446,445,441,444,442,446,445,441,444,442,446,445,441,446,445,441,446,445,441,441,444,445,444,444,442,444,442,446,441,444,442,446,445,441,444,442,446,445,441,444,442,446,445,441,444,442,446,445,441,446,445,441,446,446,445,445,441,441,446,445,441,444,442,446,445,441,441,441,444,442,446,445,441,444,442,446,445,441,444,446,446,444,442,446,445,441,444,442,446,445,441,442,444,442,446,445,441,444,442,446,445,441,446,442,444,445,444,442,446,445,441,444,442,446,445,441,441,445,441,446,445,441,444,442,446,445,441,444,442,446,445,441,444,442,446,445,441,444,442,446,445,441,444,442,446,445,441,444,442,446,445,441,0,444,442,446,445,441,444,442,446,445,441,444,442,446,445,441,0,0,442,447,447,447,447,447,447,447,447,447,447,447,447,0,447,447,0,447,447,447,447,447,447,447,0,447,447,447,0,447,447,0,447,447,447,447,447,447,447,447,0,0,0,0,0,0,448,449,448,449,448,449,448,449,448,449,448,449,448,448,448,0,449,448,0,449,448,449,448,449,448,449,449,448,449,449,449,449,0,449,448,449,449,448,449,448,449,448,449,448,449,448,449,448,448,449,449,449,448,449,448,448,449,448,449,448,449,449,449,0,449,448,449,448,449,448,449,448,449,448,449,448,449,448,449,448,449,448,449,448,0,0,0,455,0,455,455,0,455,454,455,451,453,453,451,453,454,456,455,451,453,454,456,455,451,453,454,456,455,451,453,451,453,454,456,455,451,453,454,456,455,451,453,454,456,455,451,453,454,455,454,455,451,451,451,454,456,451,453,454,456,455,451,453,454,456,455,451,453,454,456,455,451,453,454,456,455,0,455,455,455,0,455,451,451,453,454,456,455,451,451,451,453,454,456,455,451,453,454,456,455,451,451,451,451,453,454,456,455,451,453,454,456,455,0,454,451,451,453,451,453,454,456,455,451,453,454,456,455,451,451,451,451,451,453,0,0,451,451,453,454,456,455,451,453,454,456,455,451,453,456,451,453,451,456,451,453,451,454,455,451,451,453,454,456,455,451,453,454,456,455,451,453,454,456,455,451,453,454,456,455,451,453,454,456,455,451,453,454,456,455,451,453,453,451,453,454,456,455,0,451,453,454,456,455,451,453,454,456,455,1005,1006,0,0,0,0,467,467,0,466,0,0,0,0,0,0,0,466,0,465,465,0,472,465,0,0,0,0,467,467,0,468,44,0,44,464,465,466,467,468,469,470,471,462,464,1007,1008,464,461,465,466,467,468,469,470,471,472,44,462,1008,464,461,465,466,467,468,469,470,471,472,44,462,1008,464,461,465,466,467,468,469,470,471,472,44,462,462,1008,464,461,465,466,467,468,469,470,471,472,44,462,464,1008,464,461,465,466,467,468,469,470,471,472,44,462,1008,464,461,465,466,467,468,469,470,471,472,44,462,1007,464,465,466,467,468,469,470,471,464,465,466,467,468,469,470,471,461,471,464,464,468,462,464,464,1008,464,461,465,466,467,468,469,470,471,472,44,462,1008,464,461,465,466,467,468,469,470,471,472,44,462,466,467,468,1008,464,461,465,466,467,468,469,470,471,472,44,462,464,461,1008,464,461,465,466,467,468,469,470,471,472,44,462,1008,466,465,466,467,468,465,465,466,466,467,467,468,468,464,458,465,466,467,468,468,470,471,472,44,44,464,1008,464,461,465,466,467,468,469,470,471,472,44,44,44,462,468,464,470,465,466,467,458,0,464,465,466,467,469,464,461,461,1008,464,461,465,466,467,468,469,470,471,472,44,462,464,464,1008,1008,464,461,465,466,467,468,469,470,471,472,44,462,461,1008,464,461,465,466,467,468,469,470,471,472,44,462,1008,464,461,465,466,467,468,469,470,471,472,44,462,1007,464,464,470,464,470,470,464,464,471,462,1007,1007,461,1008,464,461,465,466,467,468,469,470,471,472,44,462,1008,464,461,465,466,467,468,469,470,471,472,44,462,1007,1007,462,470,1007,44,461,464,464,469,464,0,1008,464,461,465,466,467,468,469,470,471,472,44,462,1008,464,461,465,466,467,468,469,470,471,472,44,462,1007,466,467,468,461,461,461,461,461,461,458,0,461,461,461,461,470,44,464,461,1008,461,461,464,471,464,465,466,467,468,469,470,471,468,44,464,1008,464,461,465,466,467,468,469,470,471,472,44,462,1008,464,461,465,466,467,468,469,470,471,472,44,462,1008,464,461,465,466,467,468,469,470,471,472,44,462,1008,464,461,465,466,467,468,469,470,471,472,44,462,1008,464,461,465,466,467,468,469,470,471,472,44,462,1008,464,461,465,466,467,468,469,470,471,472,44,462,1007,464,1008,464,461,465,466,467,468,469,470,471,472,44,462,1007,464,461,1008,461,469,471,462,462,462,462,462,1008,464,461,465,466,467,468,469,470,471,472,44,462,1008,464,461,465,466,467,468,469,470,471,472,44,462,548,553,502,502,543,0,553,0,0,553,0,548,548,548,548,548,491,495,548,543,557,524,0,557,559,548,492,492,492,502,502,483,552,553,491,0,0,559,483,0,0,559,0,522,0,559,0,0,559,546,546,546,0,553,546,553,553,483,0,546,548,475,495,565,553,548,0,0,559,0,548,487,548,552,548,548,0,521,521,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,522,0,0,0,0,565,0,0,0,495,0,0,548,0,514,553,553,0,548,557,553,548,603,0,0,548,475,0,0,0,0,0,559,0,0,0,548,548,548,0,546,0,548,491,475,492,492,492,539,0,559,0,0,514,524,483,540,0,559,548,502,541,0,491,0,0,483,521,495,491,548,0,0,533,557,552,553,0,548,547,487,539,509,502,487,0,533,557,540,553,553,483,553,548,548,548,548,548,548,548,548,548,548,0,548,0,0,559,548,548,548,0,0,0,495,546,483,0,548,0,546,546,546,0,553,0,521,553,0,533,548,483,548,491,475,492,492,492,0,559,0,0,483,0,553,553,553,553,553,553,553,553,553,553,553,553,553,553,0,0,0,514,524,0,548,502,547,546,0,521,0,559,0,0,0,0,0,559,0,557,548,0,552,1009,0,0,565,548,491,495,548,483,546,553,0,0,559,0,0,0,0,0,0,0,495,0,524,546,0,0,0,548,475,0,541,548,483,0,603,553,0,548,553,0,0,0,0,0,0,548,475,548,475,548,476,475,546,553,553,491,492,476,487,510,475,522,529,530,486,483,511,531,509,532,533,534,535,536,537,538,539,540,505,541,542,499,543,515,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,494,557,523,485,452,513,514,558,517,559,0,0,475,476,475,479,482,485,476,475,486,479,479,486,479,479,486,479,479,490,528,491,492,493,479,479,479,479,479,479,479,479,479,495,496,502,547,497,497,498,499,499,492,475,475,500,500,460,460,460,523,502,503,503,476,487,475,504,503,503,490,486,505,506,507,508,486,487,498,504,482,594,487,510,1010,476,475,511,1010,476,475,511,479,497,497,498,512,479,460,479,479,479,479,568,560,585,569,526,520,491,492,498,476,487,510,475,593,522,529,530,486,483,565,511,531,479,509,572,532,599,600,533,518,534,601,586,535,591,536,537,538,539,540,500,602,505,566,603,519,541,542,528,499,543,515,567,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,489,494,557,523,485,452,513,514,558,517,561,559,496,537,513,514,513,515,460,490,517,517,518,519,502,481,481,560,560,568,560,585,569,526,520,491,492,498,476,487,510,475,593,522,529,530,486,483,565,511,531,479,509,572,532,599,600,533,518,534,601,586,535,591,536,537,538,539,540,500,602,505,566,603,519,541,542,528,499,543,515,567,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,489,494,557,523,485,452,513,514,558,517,561,559,568,560,585,569,526,520,491,492,498,476,487,510,475,593,522,529,530,486,483,565,511,531,479,509,572,532,599,600,533,518,534,601,586,535,591,536,537,538,539,540,500,602,505,566,603,519,541,542,528,499,543,515,567,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,489,494,557,523,485,452,513,514,558,517,561,559,497,520,487,485,487,493,487,479,503,503,503,452,503,503,503,594,545,522,486,504,486,531,515,568,560,585,569,526,520,491,492,498,476,487,510,475,593,522,529,530,486,483,565,511,531,479,509,572,532,599,600,533,518,534,601,586,535,591,536,537,538,539,540,500,602,505,566,603,519,541,542,528,499,543,515,567,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,489,494,557,523,485,452,513,514,558,517,561,559,476,475,487,487,487,479,479,493,515,481,594,460,479,599,600,568,560,585,569,526,520,491,492,498,476,487,510,475,593,522,529,530,486,483,565,511,531,479,509,572,532,599,600,533,518,534,601,586,535,591,536,537,538,539,540,500,602,505,566,603,519,541,542,528,499,543,515,567,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,489,494,557,523,485,452,513,514,558,517,561,559,568,560,585,569,526,520,491,492,498,476,487,510,475,593,522,529,530,486,483,565,511,531,479,509,572,532,599,600,533,518,534,601,586,535,591,536,537,538,539,540,500,602,505,566,603,519,541,542,528,499,543,515,567,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,489,494,557,523,485,452,513,514,558,517,561,559,479,479,482,483,482,483,482,476,487,475,518,518,519,519,486,505,594,460,494,494,494,481,481,481,479,482,526,542,482,526,452,528,528,491,492,476,487,510,475,522,529,530,486,483,511,531,509,532,533,534,535,536,537,538,539,540,505,541,542,499,543,515,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,494,557,523,485,452,513,514,558,517,559,491,492,476,487,510,475,522,529,530,486,483,511,531,509,532,533,534,535,536,537,538,539,540,505,541,542,499,543,515,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,494,557,523,485,452,513,514,558,517,559,479,504,483,533,541,548,550,551,495,557,479,513,514,513,452,479,528,498,498,479,452,513,514,561,509,537,561,479,479,479,479,479,479,479,479,479,486,479,502,502,547,498,499,499,490,490,0,487,487,481,483,508,490,493,493,493,493,502,547,479,482,482,481,498,499,554,479,528,528,538,538,538,538,508,538,538,538,518,519,518,519,518,519,518,519,452,515,452,483,483,479,460,504,479,460,496,523,460,479,460,482,482,491,476,475,529,530,486,565,511,509,532,533,535,536,537,539,505,566,541,515,567,512,460,506,544,545,502,507,508,553,490,503,493,504,556,523,485,452,513,514,561,520,498,512,520,568,498,568,498,498,499,499,498,498,512,512,569,498,512,569,594,503,503,568,560,585,569,526,520,491,492,498,476,487,510,475,593,522,529,530,486,483,565,511,531,479,509,572,532,599,600,533,518,534,601,586,535,591,536,537,538,539,540,500,602,505,566,603,519,541,542,528,499,543,515,567,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,489,494,557,523,485,452,513,514,558,517,561,559,568,560,585,569,526,520,491,492,498,476,487,510,475,593,522,529,530,486,483,565,511,531,479,509,572,532,599,600,533,518,534,601,586,535,591,536,537,538,539,540,500,602,505,566,603,519,541,542,528,499,543,515,567,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,489,494,557,523,485,452,513,514,558,517,561,559,554,491,492,476,487,475,522,529,530,486,511,509,532,533,534,535,536,537,538,539,540,505,541,506,544,545,546,521,502,548,550,551,552,508,553,554,501,495,496,524,504,556,557,523,485,452,559,528,528,500,528,500,528,476,476,487,487,475,475,475,483,481,481,503,568,560,585,569,526,520,491,492,498,476,487,510,475,593,522,529,530,486,483,565,511,531,479,509,572,532,599,600,533,518,534,601,586,535,591,536,537,538,539,540,500,602,505,566,603,519,541,542,528,499,543,515,567,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,489,494,557,523,485,452,513,514,558,517,561,559,494,494,479,479,498,499,499,481,481,481,481,481,497,497,554,504,519,519,523,481,481,568,560,585,569,526,520,491,492,498,476,487,510,510,475,593,522,529,530,486,483,565,511,531,479,509,572,532,599,600,533,518,534,601,586,535,591,536,537,538,539,540,500,602,505,566,603,519,541,542,528,499,543,515,567,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,489,494,557,523,485,452,513,514,558,517,561,559,506,0,0,536,497,568,498,499,481,568,479,499,554,538,460,538,479,491,492,476,487,510,475,522,529,530,486,483,511,531,509,532,533,534,535,536,537,538,539,540,505,541,543,515,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,495,496,524,493,494,557,523,485,452,513,559,491,491,492,492,476,476,487,487,510,510,475,475,529,529,486,486,533,533,539,539,540,540,541,541,543,543,544,544,545,545,521,521,502,502,547,547,548,548,549,549,550,550,551,551,552,552,553,553,501,501,495,495,496,496,524,524,493,493,494,494,557,557,559,559,482,452,506,508,490,508,487,487,504,504,487,487,520,569,529,487,487,479,479,479,523,482,487,487,487,452,452,482,452,513,514,536,513,532,513,572,500,515,572,500,515,518,519,498,499,498,498,512,476,475,491,492,476,487,475,486,483,511,531,509,532,533,533,534,535,536,537,538,539,540,505,541,542,499,543,515,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,553,554,501,555,490,503,495,496,524,493,504,556,481,489,494,557,557,523,485,452,558,517,559,504,494,494,528,513,534,536,513,537,528,479,460,482,460,555,547,549,460,569,520,498,572,528,567,558,569,520,498,572,528,567,558,505,568,560,585,569,526,520,491,492,498,476,476,476,476,476,487,487,510,475,475,475,475,475,593,522,522,522,529,530,486,483,483,483,483,483,483,483,483,483,483,565,565,565,511,511,531,479,509,509,572,532,599,600,533,518,534,601,586,535,591,536,537,538,539,540,500,602,505,566,603,519,541,541,541,542,528,499,543,515,567,512,497,460,506,544,545,546,521,502,547,548,549,550,551,551,551,551,552,507,508,553,554,501,501,501,555,490,503,495,496,524,493,504,556,482,481,489,494,557,523,485,485,485,452,513,513,513,513,513,513,514,514,514,514,514,514,514,514,514,514,558,517,561,559,538,487,518,519,585,585,586,493,487,487,534,538,487,538,529,529,534,487,487,560,560,481,483,482,483,482,491,492,510,509,532,533,537,539,540,541,543,502,548,549,501,495,496,557,518,519,0,0,0,0,0,0,452,479,515,566,566,0,497,504,481,506,504,503,503,491,492,510,509,532,533,537,539,540,541,543,502,548,549,501,495,496,557,560,479,513,514,487,522,529,530,520,520,518,519,481,460,528,528,483,482,479,566,497,528,493,479,493,493,497,479,479,494,503,481,481,506,498,497,479,452,479,568,585,568,585,498,510,479,528,499,512,569,520,510,479,528,499,512,496,481,568,528,512,497,568,585,593,528,512,497,483,479,482,572,558,572,479,452,492,476,475,529,530,534,492,476,475,529,530,486,568,560,585,569,526,520,491,492,498,476,487,510,475,593,522,529,530,486,483,565,511,531,479,509,572,532,599,600,533,518,534,601,586,535,591,536,537,538,539,540,500,602,505,566,603,519,541,542,528,499,543,515,567,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,489,494,557,523,485,452,513,514,558,517,561,559,489,515,515,479,460,479,460,594,460,519,479,481,523,481,503,503,523,479,498,499,499,504,523,528,494,528,504,487,487,568,560,585,569,526,520,491,492,498,476,487,510,475,593,522,529,530,486,483,565,511,531,479,509,572,532,599,600,533,518,534,601,586,535,591,536,537,538,539,540,500,602,505,566,603,519,541,542,528,499,543,515,567,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,489,494,557,523,485,452,513,514,558,517,561,559,514,514,0,504,504,486,509,538,505,513,514,479,499,476,487,475,524,493,566,499,503,594,487,502,481,460,504,487,479,512,511,485,547,503,481,460,486,476,487,475,524,493,479,513,514,537,513,538,549,490,490,490,490,479,585,554,554,481,519,503,503,545,503,499,479,482,482,481,460,504,504,460,0,479,482,591,482,528,528,569,487,485,487,487,487,493,487,485,475,475,0,487,452,452,452,483,483,482,479,528,460,528,504,528,519,568,560,585,569,526,520,491,492,498,476,487,510,475,593,522,529,530,486,483,565,511,531,479,509,572,532,599,600,533,518,534,601,586,535,591,536,537,538,539,540,500,602,505,566,603,519,541,542,528,499,543,515,567,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,489,494,557,523,485,452,513,514,558,517,561,559,568,560,585,569,526,520,491,492,498,476,487,510,475,593,522,529,530,486,483,565,511,531,479,509,572,532,599,600,533,518,534,601,586,535,591,536,537,538,539,540,500,602,505,566,603,519,541,542,528,499,543,515,567,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,489,494,557,523,485,452,513,514,558,517,561,559,481,502,547,539,493,493,493,493,493,493,479,528,515,528,481,502,476,475,487,593,593,518,519,518,519,518,475,520,497,479,512,512,497,506,490,569,497,479,460,479,460,460,0,515,479,479,452,479,483,538,481,503,544,476,475,487,593,593,518,519,518,519,475,520,498,512,479,593,593,497,497,497,479,572,528,512,572,528,512,569,498,512,539,506,549,490,479,532,513,514,498,499,499,460,475,475,475,460,490,528,528,515,508,498,510,548,545,511,475,497,568,585,569,520,498,476,510,475,593,529,530,479,509,572,532,599,600,518,601,586,591,500,602,519,499,497,549,554,501,496,482,489,513,558,517,561,504,504,499,479,479,479,511,509,515,523,452,475,501,593,593,538,490,555,538,511,518,519,497,497,481,481,481,481,481,481,481,481,568,498,568,498,504,508,508,560,460,504,460,499,499,496,519,519,0,460,515,515,0,479,460,481,479,460,568,560,585,569,526,520,491,492,498,476,487,510,475,593,522,529,530,486,483,565,511,531,479,509,572,532,599,600,533,518,534,601,586,535,591,536,537,538,539,540,500,602,505,566,603,519,541,542,528,499,543,515,567,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,489,494,557,523,485,452,513,514,558,517,561,559,568,560,585,569,526,520,491,492,498,476,487,510,475,593,522,529,530,486,483,565,511,531,479,509,572,532,599,600,533,518,534,601,586,535,591,536,537,538,539,540,500,602,505,566,603,519,541,542,528,499,543,515,567,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,489,494,557,523,485,452,513,514,558,517,561,559,523,452,523,515,517,479,479,479,452,533,541,548,550,551,495,557,528,528,544,545,490,498,499,499,529,530,460,490,526,538,506,490,479,507,502,490,503,460,460,460,515,504,0,0,452,0,538,538,503,492,506,490,493,518,519,518,519,556,503,503,503,503,554,503,503,503,503,542,500,532,479,479,479,479,513,514,513,519,490,482,531,538,481,479,483,482,483,482,530,0,0,507,594,504,481,460,460,486,486,504,0,0,479,569,520,498,512,569,520,512,498,498,452,565,557,489,569,487,485,487,485,487,487,493,487,475,486,517,487,517,555,476,475,482,482,482,572,515,572,515,538,460,511,485,568,560,585,569,526,520,491,492,498,476,487,510,475,593,522,529,530,486,483,565,511,531,479,509,572,532,599,600,533,518,534,601,586,535,591,536,537,538,539,540,500,602,505,566,603,519,541,542,528,499,543,515,567,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,489,494,557,523,485,452,513,514,558,517,561,559,568,560,585,569,526,520,491,492,498,476,487,510,475,593,522,529,530,486,483,565,511,531,479,509,572,532,599,600,533,518,534,601,586,535,591,536,537,538,539,540,500,602,505,566,603,519,541,542,528,499,543,515,567,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,489,494,557,523,485,452,513,514,558,517,561,559,535,479,556,460,490,506,490,526,498,498,497,490,497,479,481,479,479,497,511,503,481,503,503,503,568,568,479,479,568,554,558,568,602,554,558,585,585,452,572,591,558,517,572,591,481,558,517,479,491,492,476,487,475,522,529,530,486,511,509,532,533,534,535,536,537,538,539,540,505,541,506,544,545,546,521,502,548,550,551,552,508,553,554,501,495,496,524,504,556,557,523,485,452,559,510,482,505,487,487,479,482,460,460,504,479,504,460,487,479,479,482,487,479,479,479,479,479,479,460,510,460,460,487,479,479,460,487,479,460,487,479,479,460,515,515,507,502,547,502,501,495,496,572,572,568,569,520,498,593,528,499,515,567,512,497,569,520,569,520,569,520,569,520,568,568,585,569,520,567,499,500,497,569,520,569,520,0,0,0,0,0,585,568,519,519,497,487,566,487,479,479,569,520,515,487,537,528,487,510,522,538,513,517,561,529,530,532,513,517,561,510,479,554,452,479,572,513,514,572,479,513,514,519,519,519,593,479,566,593,566,523,479,519,0,518,518,479,475,486,487,530,490,555,593,593,555,519,519,497,497,497,504,528,513,514,537,513,593,593,452,572,515,572,515,0,479,513,514,513,452,0,479,460,479,556,479,460,476,476,475,476,475,482,518,519,518,519,485,504,481,511,548,485,594,506,508,460,460,556,460,460,510,0,483,591,538,500,519,482,513,514,568,572,599,600,601,586,591,500,602,519,528,513,519,528,452,528,513,528,508,452,452,554,479,479,554,554,528,513,514,513,479,523,523,483,486,517,460,507,506,490,503,558,517,517,498,498,491,491,492,476,487,510,475,522,529,530,486,483,511,531,509,532,533,534,535,536,537,538,539,540,505,541,542,499,543,515,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,494,557,523,485,452,513,514,558,517,559,475,491,492,533,557,476,504,479,520,487,485,493,493,487,515,490,0,0,479,519,519,487,486,483,460,555,481,481,481,568,560,585,569,526,520,491,492,498,476,487,510,475,593,522,529,530,486,483,565,511,531,479,509,572,532,599,600,533,518,534,601,586,535,591,536,537,538,539,540,500,602,505,566,603,519,541,542,528,499,543,515,567,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,489,494,557,523,485,452,513,514,558,517,561,559,568,560,585,569,526,520,491,492,498,476,487,510,475,593,522,529,530,486,483,565,511,531,479,509,572,532,599,600,533,518,534,601,586,535,591,536,537,538,539,540,500,602,505,566,603,519,541,542,528,499,543,515,567,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,489,494,557,523,485,452,513,514,558,517,561,559,534,534,554,568,560,585,569,526,520,491,492,498,476,487,510,475,593,522,529,530,486,483,565,511,531,479,509,572,532,599,600,533,518,534,601,586,535,591,536,537,538,539,540,500,602,505,566,603,519,541,542,528,499,543,515,567,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,489,494,557,523,485,452,513,514,558,517,561,559,480,572,599,600,518,601,586,591,500,602,566,519,528,506,490,503,523,452,558,517,561,479,513,514,537,513,487,481,494,490,568,560,585,569,526,520,491,492,498,476,487,510,475,593,522,529,530,486,483,565,511,531,479,509,572,532,599,600,533,518,534,601,586,535,591,536,537,538,539,540,500,602,505,566,603,519,541,542,528,499,543,515,567,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,489,494,557,523,485,452,513,514,558,517,561,559,568,560,585,569,526,520,491,492,498,476,487,510,475,593,522,529,530,486,483,565,511,531,479,509,572,532,599,600,533,518,534,601,586,535,591,536,537,538,539,540,500,602,505,566,603,519,541,542,528,499,543,515,567,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,489,494,557,523,485,452,513,514,558,517,561,559,568,560,585,569,526,520,491,492,498,476,487,510,475,593,522,529,530,486,483,565,511,531,479,509,572,532,599,600,533,518,534,601,586,535,591,536,537,538,539,540,500,602,505,566,603,519,541,542,528,499,543,515,567,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,489,494,557,523,485,452,513,514,558,517,561,559,586,460,460,0,558,517,517,537,554,0,503,503,479,566,519,497,528,493,479,479,493,497,486,526,526,479,483,479,523,479,483,482,498,497,568,560,585,569,526,520,491,492,498,476,487,510,475,593,522,529,530,486,483,565,511,531,479,509,572,532,599,600,533,518,534,601,586,535,591,536,537,538,539,540,500,602,505,566,603,519,541,542,528,499,543,515,567,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,489,494,557,523,485,452,513,514,558,517,561,559,460,460,490,452,0,0,479,513,514,513,452,481,0,0,452,585,487,522,529,530,585,509,569,569,515,452,452,504,452,452,452,452,501,460,482,493,493,479,482,479,493,493,493,481,512,512,486,498,599,585,572,591,572,591,523,585,479,568,560,585,569,526,520,491,492,498,476,487,510,475,593,522,529,530,486,483,565,511,531,479,509,572,532,599,600,533,518,534,601,586,535,591,536,537,538,539,540,500,602,505,566,603,519,541,542,528,499,543,515,567,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,489,494,557,523,485,452,513,514,558,517,561,559,568,560,585,569,526,520,491,492,498,476,487,510,475,593,522,529,530,486,483,565,511,531,479,509,572,532,599,600,533,518,534,601,586,535,591,536,537,538,539,540,500,602,505,566,603,519,541,542,528,499,543,515,567,512,497,460,506,544,545,546,521,502,547,548,549,550,551,552,507,508,553,554,501,555,490,503,495,496,524,493,504,556,482,481,489,494,557,523,485,452,513,514,558,517,561,559,492,476,475,487,492,476,475,535,535,487,490,555,490,555,490,1011,1012,1012,1012,1013,1013,1011,1012,1011,1012,1013,1011,1013,1014,1014,543,0,0,543,0,0,0,0,0,0,0,0,0,0,0,497,499,498,497,560,560,498,0,499,520,568,498,499,512,569,499,497,568,499,515,569,520,498,567,497,560,520,568,585,569,520,499,512,568,585,512,497,515,499,585,512,497,497,512,499,499,497,497,568,498,560,499,515,0,499,0,0,0,569,520,512,498,515,498,0,497,568,568,585,515,568,569,520,0,0,0,0,0,569,520,497,515,568,498,0,585,569,512,498,585,0,0,0,0,0,614,613,614,613,560,560,613,613,614,613,614,613,614,613,614,613,614,614,614,568,613,614,613,614,613,614,613,614,568,614,613,614,613,560,568,614,614,568,613,614,613,614,614,614,614,613,614,613,614,568,614,560,613,614,613,614,0,613,614,613,614,568,568,614,568,614,614,614,614,613,614,614,568,614,614,613,613,614,613,614,613,614,613,613,614,613,614,613,614,613,614,613,614,613,614,596,0,595,0,595,0,0,596,0,0,615,595,596,615,595,596,615,595,596,615,595,596,615,595,596,615,595,596,615,595,596,615,595,596,615,595,596,520,569,615,595,596,615,595,596,615,615,595,596,615,595,596,595,596,595,595,596,596,615,595,596,569,520,567,615,595,596,520,569,520,615,595,596,615,595,596,615,615,595,596,615,595,596,615,595,596,615,595,596,615,569,520,615,595,596,615,595,596,615,569,520,569,520,615,615,595,596,615,595,596,615,595,596,615,595,596,615,595,596,615,595,596,615,595,596,615,595,596,569,615,595,596,615,595,596,0,0,0,0,0,0,0,0,0,0,0,616,497,497,609,616,609,616,609,616,609,616,609,616,609,616,616,616,616,609,616,609,616,609,616,616,609,616,497,609,616,616,609,616,497,609,497,609,616,609,609,609,616,616,609,616,609,616,497,497,616,497,497,609,616,609,616,609,616,609,616,616,616,497,616,616,609,497,616,616,609,616,609,616,609,616,609,616,609,616,609,616,616,609,616,609,616,609,616,483,622,483,0,0,0,522,0,0,483,0,522,0,0,0,0,0,0,0,0,0,483,541,0,483,622,0,533,607,533,483,0,0,0,483,0,0,0,533,483,0,0,483,0,0,0,0,0,0,0,0,483,0,0,0,0,0,541,483,0,0,0,575,577,618,619,607,574,578,579,576,620,621,617,612,622,635,562,597,617,597,576,611,626,573,575,577,618,619,607,574,578,579,576,620,621,617,597,612,622,573,621,607,607,611,626,573,575,577,618,619,607,574,578,579,576,620,621,617,597,612,622,611,626,573,575,577,618,619,607,574,578,579,576,620,621,617,597,612,622,531,611,626,573,575,577,618,619,607,574,578,579,576,620,621,617,597,612,622,574,611,626,573,575,577,618,619,607,574,578,579,576,620,621,617,597,612,622,611,626,573,575,577,618,619,607,574,578,579,576,620,621,617,597,612,622,526,626,542,620,575,577,618,619,607,574,578,579,576,620,621,617,612,622,575,577,618,619,607,574,578,579,576,620,621,617,612,622,575,577,578,578,621,619,607,509,578,617,621,621,621,619,607,620,621,597,597,611,626,573,575,577,618,619,607,574,578,579,576,620,621,617,597,612,622,611,626,573,575,577,618,619,607,574,578,579,576,620,621,617,597,612,622,575,577,618,619,607,574,578,579,576,621,617,617,611,626,573,575,577,618,619,607,574,578,579,576,620,621,617,597,612,622,611,626,573,575,577,618,619,607,574,578,579,576,620,621,617,597,612,622,0,0,621,575,577,618,619,607,574,578,579,576,621,612,619,619,607,573,532,626,621,621,575,577,574,578,579,617,574,579,575,575,577,575,575,577,619,607,574,578,579,576,621,612,622,573,573,573,626,575,577,597,611,626,573,575,577,618,619,607,574,578,579,576,620,621,617,597,612,622,575,577,620,618,576,573,635,562,573,573,510,0,618,617,611,486,620,611,626,573,575,577,618,619,607,574,578,579,576,620,621,617,597,612,622,611,626,573,575,577,618,619,607,574,578,579,576,620,621,617,597,612,622,611,619,618,538,573,573,573,573,578,575,577,611,626,573,575,577,618,619,607,574,578,579,576,620,621,617,597,612,622,611,626,573,575,577,618,619,607,574,578,579,576,620,621,617,597,612,622,487,573,538,597,597,487,0,511,626,573,576,617,597,597,620,573,538,575,538,511,626,618,617,611,626,573,575,577,618,619,607,574,578,579,576,620,621,617,597,612,622,611,626,573,575,577,618,619,607,574,578,579,576,620,621,617,597,612,622,576,618,529,530,573,526,626,538,575,577,578,618,619,576,0,617,626,621,542,574,579,531,538,597,621,626,579,573,617,538,635,562,575,577,611,626,573,575,577,618,619,607,574,578,579,576,620,621,617,597,612,622,611,626,573,575,577,618,619,607,574,578,579,576,620,621,617,597,612,622,626,626,526,511,575,577,618,619,607,574,578,579,576,621,597,626,620,620,620,0,620,620,617,529,530,532,607,607,575,0,574,579,575,577,574,578,579,511,617,597,607,626,626,626,626,626,626,626,626,626,0,626,0,510,0,620,620,573,611,486,0,575,577,618,619,607,574,578,579,576,620,621,617,612,622,577,575,575,577,611,626,573,575,577,618,619,607,574,578,579,576,620,621,617,597,612,622,611,626,573,575,577,618,619,607,574,578,579,576,620,621,617,597,612,622,611,626,573,575,577,618,619,607,574,578,579,576,620,621,617,597,612,622,620,621,576,611,626,573,575,577,618,619,607,574,578,579,576,620,621,617,597,612,622,611,626,573,575,577,618,619,607,574,578,579,576,620,621,617,597,612,622,611,626,573,575,577,618,619,607,574,578,579,576,620,621,617,597,612,622,0,619,635,562,0,611,486,620,526,575,577,574,578,579,576,611,626,573,575,577,618,619,607,574,578,579,576,620,621,617,597,612,622,509,620,611,626,573,575,577,618,619,607,574,578,579,576,620,621,617,597,612,622,611,626,573,575,577,618,619,607,574,578,579,576,620,621,617,597,612,622,476,475,476,475,1014,1014,0,0,0,0,0,0,0,0,630,290,629,291,630,290,629,291,629,629,629,630,290,629,291,630,290,629,291,630,291,630,290,629,291,630,290,629,291,630,290,629,291,630,290,629,291,630,290,629,291,630,290,629,291,630,290,290,629,629,291,630,290,290,629,629,291,290,629,630,290,629,291,630,290,629,291,290,629,290,290,629,629,290,290,629,629,630,630,630,290,629,291,630,290,290,290,629,629,629,291,290,629,291,290,290,290,291,290,630,290,629,291,290,630,290,290,629,629,291,290,290,290,629,629,290,290,629,291,291,291,291,630,290,629,291,630,290,629,291,1015,1016,290,629,291,630,290,629,291,630,290,629,291,630,0,290,630,290,629,291,630,290,629,291,290,629,629,630,290,629,291,630,290,629,291,630,290,629,291,629,629,629,629,629,629,629,629,630,290,629,291,630,290,629,291,630,290,629,291,630,290,629,291,630,290,629,291,1015,1016,290,629,290,629,290,629,291,291,630,290,629,291,630,290,629,291,630,630,630,630,630,630,630,0,0,634,291,291,291,291,0,0,0,0,0,635,562,635,562,635,562,635,562,635,562,635,562,635,562,635,562,635,562,635,562,635,562,635,562,635,562,635,562,635,562,0,0,635,562,635,562,635,635,635,635,562,562,562,562,562,562,562,562,562,562,562,0,0,635,562,0,635,562,635,562,0,0,0,0,635,562,635,562,562,635,562,635,562,0,635,562,635,562,635,562,0,562,635,562,562,562,562,562,562,562,635,562,635,562,635,562,635,562,635,562,635,562,635,562,635,562,635,562,635,562,0,0,491,0,606,1017,1017,1017,491,491,0,0,0,0,0,0,0,0,0,637,628,606,637,0,0,606,1010,1010,637,637,628,606,637,637,628,606,637,628,606,606,637,628,606,637,628,606,637,628,606,637,637,628,606,637,628,606,606,637,628,606,637,628,606,628,606,606,637,628,606,637,628,606,637,0,0,628,606,628,628,0,637,637,628,606,0,0,637,628,628,606,628,606,1017,628,628,637,628,606,637,628,606,628,606,0,637,606,628,606,637,637,637,637,606,606,0,637,628,606,637,628,606,487,637,637,637,637,637,487,637,628,628,606,606,606,637,606,0,1018,637,628,606,637,628,606,0,637,0,0,0,606,637,628,606,637,628,606,628,628,606,0,637,628,628,1017,637,628,606,637,637,628,628,628,637,628,606,637,628,606,637,628,606,637,628,606,637,628,606,637,628,606,637,637,0,637,637,628,606,637,628,606,637,628,606,476,475,476,475,0,0,491,491,491,0,0,522,0,522,0,0,0,618,618,529,530,618,529,530,0,0,0,0,0,627,638,627,598,638,627,598,638,627,598,638,627,598,638,627,598,638,627,598,627,627,627,598,638,638,627,598,638,638,627,598,638,627,598,638,638,627,598,638,627,598,638,627,598,638,627,598,627,638,627,598,638,627,598,627,598,638,627,598,638,627,598,598,638,627,598,638,627,598,627,638,627,598,638,627,598,638,627,598,638,627,598,638,627,598,638,627,598,638,627,598,638,627,598,638,627,598,598,0,0,0,642,642,642,642,642,642,642,642,642,620,642,642,642,642,642,642,642,642,642,642,642,642,642,642,642,620,642,642,642,642,642,642,642,642,642,620,642,642,642,642,642,642,620,620,620,620,620,642,620,620,642,642,642,642,642,642,642,620,642,642,642,644,644,0,0,0,0,643,644,643,643,643,643,643,643,644,621,643,644,643,644,643,644,643,644,643,644,643,626,643,644,643,644,621,621,621,621,643,643,644,643,644,643,644,643,644,621,644,644,644,626,621,621,643,643,626,643,644,643,644,643,644,643,644,643,644,626,643,644,643,644,0,626,626,621,643,621,643,644,643,644,626,626,643,643,643,0,643,644,643,644,643,644,643,644,643,644,643,644,643,644,643,644,643,644,643,644,0,0,0,0,0,0,0,0,0,0,0,0,0,533,533,0,533,0,0,0,0,0,583,646,647,645,648,649,583,650,650,583,646,647,645,648,649,537,650,583,646,647,645,648,649,650,583,646,647,645,648,649,647,583,646,650,583,646,647,645,648,649,645,645,645,650,583,646,647,645,648,649,650,583,646,647,645,648,649,649,583,646,647,645,648,649,583,646,647,645,648,649,537,0,583,647,648,650,650,650,583,646,647,645,648,649,650,583,646,647,645,648,649,583,646,647,645,648,649,650,583,646,647,645,648,649,650,583,646,647,645,648,649,645,583,646,647,645,648,649,645,645,648,648,649,649,536,532,583,583,646,647,645,648,649,650,534,536,583,537,650,646,650,583,646,647,645,648,649,583,646,647,648,645,583,650,650,583,646,647,645,534,650,583,646,647,645,648,649,650,583,646,647,645,648,649,583,537,538,583,0,646,649,650,583,646,647,645,648,649,650,583,646,647,645,648,649,647,650,647,649,645,648,538,648,645,650,538,538,647,650,583,646,647,645,648,649,650,583,646,647,645,648,649,650,650,538,649,538,645,538,650,583,646,647,645,648,649,650,583,646,647,645,648,649,535,649,583,583,646,647,645,648,649,583,583,583,532,649,650,537,583,583,646,647,645,648,649,650,583,646,647,645,648,649,650,583,646,647,645,648,649,534,650,583,646,647,645,648,649,537,650,583,646,647,645,648,649,650,583,646,647,645,648,649,650,583,646,647,645,648,649,649,537,645,650,583,646,647,645,648,649,583,650,583,646,647,645,648,649,650,583,646,647,645,648,649,645,535,535,0,0,0,0,584,570,587,563,584,584,584,570,587,563,584,570,587,563,584,570,587,563,584,570,587,563,563,584,570,587,563,584,570,587,563,584,570,587,563,584,570,587,563,570,584,570,587,563,584,570,587,563,584,570,587,563,584,570,587,563,584,570,587,563,584,570,587,563,584,570,587,563,570,570,584,570,587,563,584,570,587,563,584,584,570,587,563,584,570,587,563,584,570,587,563,584,570,587,563,584,587,584,570,587,563,584,570,587,563,587,563,584,587,563,570,584,570,587,563,584,570,587,563,584,570,587,563,584,584,584,570,587,563,584,570,587,563,584,570,587,563,584,570,587,563,584,570,587,563,584,570,587,563,584,570,587,563,584,570,587,563,584,570,587,563,584,570,587,563,540,540,0,0,0,0,0,624,624,624,624,624,624,624,624,624,624,624,597,624,624,624,624,624,624,624,624,505,624,624,624,624,624,539,597,539,624,597,624,624,624,624,624,624,505,624,624,624,624,624,624,624,624,624,624,624,0,0,652,652,652,652,652,652,652,652,652,652,652,652,652,652,652,652,0,652,0,652,652,652,652,1019,652,652,652,652,652,652,652,652,652,652,652,652,652,652,0,0,0,0,0,0,0,0,0,0,495,495,495,0,495,0,0,495,0,495,484,654,654,484,654,484,654,484,654,484,654,484,654,484,654,484,654,484,654,654,484,654,484,654,484,654,484,654,484,484,484,654,484,654,496,484,654,484,654,654,484,654,484,654,496,484,654,484,654,484,654,484,654,654,484,654,654,484,654,484,654,484,654,484,654,484,654,484,654,484,654,484,654,484,654,0,0,655,656,0,655,656,655,656,656,655,656,655,656,655,656,655,656,655,656,655,656,655,656,655,656,655,655,655,655,656,655,656,655,656,655,656,0,0,655,656,655,656,656,655,656,655,656,656,655,655,656,655,656,655,656,655,656,655,656,655,656,655,656,655,656,655,656,604,604,604,604,0,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,553,553,553,605,553,553,553,0,553,605,605,0,553,553,553,553,553,553,553,0,0,0,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,605,605,605,553,553,0,553,553,657,605,657,605,657,605,657,605,657,605,657,605,657,605,657,605,657,605,508,554,508,657,605,657,605,657,605,657,605,657,605,554,657,605,657,657,508,605,657,605,657,605,657,605,554,657,605,657,605,508,657,657,508,657,605,657,605,507,554,507,657,657,605,657,605,554,657,605,507,508,554,507,657,605,657,605,657,605,554,657,605,657,605,657,605,657,605,657,554,657,605,605,657,605,657,605,0,0,0,0,0,0,0,557,557,0,565,565,0,557,0,0,557,557,0,557,0,0,565,0,0,0,0,610,658,659,660,588,661,660,523,610,658,659,660,588,661,659,588,588,610,658,659,660,588,661,610,658,659,660,588,661,485,452,610,610,658,659,660,588,661,610,658,659,660,588,661,610,658,659,660,588,661,452,610,658,659,660,588,661,610,658,659,660,588,661,452,452,610,610,660,452,523,661,610,658,659,660,661,0,610,658,659,660,588,661,610,658,659,660,588,661,610,658,659,660,588,661,610,658,659,660,588,661,523,610,658,659,660,588,661,610,658,659,660,588,661,661,661,452,588,523,452,452,588,610,658,659,660,588,661,610,658,659,660,588,661,660,452,610,610,610,610,660,610,610,452,610,658,659,660,588,661,610,523,610,658,659,660,588,661,610,485,660,610,658,659,660,588,661,610,658,659,660,588,661,610,452,660,660,610,658,659,660,588,661,610,658,659,660,588,661,523,452,523,452,452,452,658,658,485,588,610,658,659,660,588,661,610,658,659,660,588,661,610,610,610,610,452,610,658,659,660,588,661,661,661,661,661,661,658,452,610,523,452,659,660,588,452,452,610,523,610,658,659,660,588,661,610,485,610,658,659,660,588,661,610,658,659,660,588,661,610,658,659,660,588,661,610,658,659,660,588,661,610,658,659,660,588,661,610,658,659,660,588,661,610,658,659,660,588,661,523,610,658,659,660,588,661,452,588,452,452,610,452,452,452,523,610,658,659,660,588,661,610,658,659,660,588,661,0,0,0,0,0,0,0,0,0,533,533,533,0,0,662,662,537,662,662,583,646,662,662,662,662,662,537,662,662,662,662,662,662,662,536,583,662,534,536,537,646,662,583,584,534,662,662,662,537,538,583,646,662,662,538,538,538,662,662,662,538,584,662,538,538,662,662,662,583,662,662,537,583,662,662,662,534,662,662,537,662,662,662,537,662,583,662,662,0,0,663,663,663,663,0,663,663,663,663,663,663,663,663,663,663,663,663,663,663,663,663,663,663,663,663,663,663,663,663,0,0,0,663,663,663,663,663,663,663,663,637,637,637,663,663,663,663,663,663,663,663,637,663,663,663,0,663,663,663,637,663,663,663,0,0,0,0,665,1020,664,664,665,664,665,664,665,665,664,665,664,665,664,665,664,665,665,665,1021,664,664,665,664,665,664,665,664,665,664,665,664,665,664,665,664,664,664,665,664,665,1020,664,664,665,664,665,664,664,665,664,665,664,665,664,665,665,664,665,664,665,664,665,664,665,664,665,664,665,1020,664,665,664,665,664,665,664,665,0,0,0,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,0,0,668,667,667,668,668,667,668,667,668,667,668,667,668,667,668,667,668,667,668,667,668,667,668,667,668,667,668,667,668,667,668,667,668,667,667,668,667,668,667,667,668,667,668,667,667,668,667,668,667,668,668,667,668,667,668,667,668,667,668,667,667,668,668,667,668,667,668,667,668,667,667,667,668,667,668,667,668,667,668,667,668,667,668,667,514,514,0,514,0,0,0,590,589,590,589,513,590,589,590,589,590,589,590,589,590,589,590,589,590,589,513,590,589,590,589,590,589,590,589,590,589,513,590,589,589,589,589,590,589,590,589,590,513,590,590,590,589,590,589,590,589,590,589,589,589,589,513,590,589,590,589,589,513,513,513,589,513,513,513,590,589,590,589,590,589,590,589,513,590,589,590,589,590,589,590,589,513,590,589,590,589,0,0,0,603,0,0,0,0,0,0,0,0,0,0,0,0,1009,0,0,603,0,0,528,500,594,517,594,594,599,600,518,519,594,528,561,0,528,518,519,518,519,594,528,500,528,519,572,500,528,572,528,558,518,519,0,0,566,528,528,528,572,558,594,528,566,594,528,528,528,518,519,518,519,572,528,528,519,528,0,518,519,500,519,594,0,0,517,572,602,558,572,591,558,517,572,519,517,561,572,519,566,519,518,519,572,0,518,519,594,572,599,600,601,586,591,500,602,519,528,528,0,517,517,519,480,586,517,572,591,0,669,669,669,669,669,669,669,669,669,669,669,669,0,0,0,0,0,0,0,669,669,669,669,669,669,669,669,669,669,669,669,669,669,669,669,0,0,669,669,669,669,669,669,669,669,669,669,0,687,0,0,0,0,0,687,0,0,687,685,687,685,687,695,0,0,0,686,687,690,690,0,0,0,0,0,0,682,0,695,0,0,0,0,0,0,687,0,0,687,690,690,685,687,0,687,0,686,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,687,690,670,670,670,670,670,670,670,670,670,670,671,671,676,681,672,670,670,670,670,695,691,692,693,673,675,680,694,670,672,1022,1023,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,674,674,672,676,675,676,676,1022,677,677,695,691,692,693,673,675,680,694,670,672,1022,1023,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,695,691,692,693,673,675,680,694,670,672,1022,1023,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,678,679,1022,679,672,672,681,681,670,670,680,695,691,692,693,673,675,680,694,670,672,1022,1023,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,682,670,670,670,670,695,691,692,693,673,675,680,694,670,672,1022,1023,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,695,691,692,693,673,675,680,694,670,672,1022,1023,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,670,670,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,691,692,693,673,675,680,688,689,671,693,673,671,670,670,672,672,685,685,670,670,695,694,686,674,675,680,695,691,692,693,673,675,680,694,670,672,1022,1023,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,695,691,692,693,673,675,680,694,670,672,1022,1023,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,682,685,685,695,691,692,693,673,675,680,694,670,672,1022,1023,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,695,691,692,693,673,675,680,694,670,672,1022,1023,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,675,680,675,680,676,684,681,683,685,686,687,688,689,690,674,682,678,679,686,686,687,687,690,690,691,676,681,691,676,681,692,692,693,693,676,684,681,683,685,686,687,688,689,690,682,0,678,695,695,695,691,692,693,673,675,680,694,670,672,1022,1023,676,684,681,683,683,685,686,687,688,689,671,677,690,674,682,678,679,695,695,682,695,695,695,694,670,670,682,670,691,692,693,673,675,680,688,689,671,677,691,692,693,673,675,680,688,689,671,677,672,675,680,676,681,670,672,670,670,695,691,692,693,673,675,680,694,670,672,1022,1023,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,695,691,692,693,673,675,680,694,670,672,1022,1023,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,682,682,682,682,682,682,672,670,670,672,670,670,672,670,670,678,679,678,679,670,670,0,695,691,692,693,673,675,680,694,670,672,1022,1023,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,695,691,692,693,673,675,680,694,670,672,1022,1023,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,684,670,682,682,684,682,682,670,670,670,691,692,693,673,675,680,676,681,688,689,671,677,691,692,693,673,675,680,676,681,688,689,671,677,695,691,692,693,673,675,680,694,670,676,684,681,683,688,689,671,677,678,679,672,676,681,673,695,691,692,693,673,675,680,694,670,672,1022,1023,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,695,691,692,693,673,675,680,694,670,672,1022,1023,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,672,672,672,672,672,672,672,695,672,672,674,671,677,674,684,684,693,693,670,670,672,695,691,692,693,673,675,680,694,670,672,1022,1023,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,695,691,692,693,673,675,680,694,670,672,1022,1023,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,672,682,691,692,693,678,679,678,679,670,672,693,693,670,670,670,670,670,670,670,670,670,670,670,677,681,675,693,693,1023,691,692,676,681,688,689,691,692,676,681,688,689,691,692,688,689,691,692,688,689,672,671,674,674,677,677,677,673,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,683,685,683,672,695,691,692,693,673,675,680,694,670,672,1022,1023,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,695,691,692,693,673,675,680,694,670,672,1022,1023,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,695,691,692,693,673,675,680,694,670,672,1022,1023,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,0,695,691,692,693,673,675,680,694,670,672,1022,1023,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,695,691,692,693,673,675,680,694,670,672,1022,1023,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,695,691,692,693,673,675,680,694,670,672,1022,1023,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,684,677,677,1023,676,675,680,676,681,670,670,672,695,691,692,693,673,675,680,694,670,672,1022,1023,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,681,681,691,692,675,670,676,688,689,682,670,694,695,691,692,693,673,675,680,694,670,672,1022,1023,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,695,691,692,693,673,675,680,694,670,672,1022,1023,676,684,681,683,685,686,687,688,689,671,677,690,674,682,678,679,678,679,683,689,670,670,678,679,683,688,670,670,1024,1025,0,0,0,0,0,0,0,697,698,592,528,697,697,594,608,697,698,592,608,697,698,592,608,697,698,592,594,608,697,698,592,592,592,594,608,697,698,592,608,697,698,592,594,528,697,698,592,697,698,592,528,592,608,592,697,698,592,594,608,697,698,592,608,697,698,592,697,698,592,528,528,608,697,698,592,608,697,698,592,697,698,697,698,528,528,608,697,698,592,608,592,528,528,528,608,697,698,592,594,528,608,697,698,592,697,594,697,528,592,528,608,697,698,592,608,697,698,592,528,528,528,697,608,697,698,592,608,697,698,592,528,697,662,698,594,608,608,697,698,592,608,697,698,592,697,662,698,697,698,592,592,592,697,592,697,697,608,592,594,528,608,528,608,697,698,592,608,697,698,592,608,697,698,592,697,608,697,698,592,592,608,697,698,592,608,697,698,592,608,697,698,592,608,697,698,592,608,697,698,592,608,697,698,592,0,474,1026,0,0,1026,474,0,0,0,477,699,700,701,1026,477,699,474,699,700,701,1026,477,699,474,700,701,1026,477,699,474,700,701,1026,477,699,474,700,701,1026,477,699,474,700,701,1026,477,699,474,477,699,477,699,700,699,699,700,701,1026,477,699,474,700,701,1026,477,699,474,477,699,700,701,1026,477,699,474,700,701,1026,477,699,474,474,474,701,700,701,1026,477,699,474,474,474,701,700,701,1026,477,699,474,700,701,1026,477,699,474,700,701,1026,477,699,474,700,701,1026,477,699,474,700,701,701,699,700,701,1026,477,699,474,700,701,1026,477,699,474,700,700,701,701,699,0,700,700,699,474,477,701,701,701,0,477,701,700,701,1026,477,699,474,700,701,1026,477,699,474,474,477,701,701,701,477,699,474,700,701,1026,477,699,474,700,701,1026,477,699,474,700,701,1026,477,699,474,701,701,700,701,1026,477,699,474,700,701,1026,477,699,474,700,701,1026,477,699,474,701,701,701,701,701,700,701,1026,477,699,474,0,700,701,1026,477,699,474,700,701,1026,477,699,474,0,0,0,710,710,710,710,710,710,710,710,710,710,710,701,710,710,710,710,701,710,710,700,701,701,710,700,701,710,710,710,701,701,710,710,710,701,701,710,710,710,701,710,710,710,715,715,719,719,752,716,0,0,750,0,805,777,705,0,0,796,794,794,761,761,761,761,761,761,761,761,761,761,761,761,761,761,716,800,718,719,800,714,716,715,756,0,0,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,0,0,0,0,0,0,0,0,0,0,0,0,741,0,724,815,0,724,0,0,0,0,0,0,0,0,0,715,722,722,719,716,717,716,722,715,0,0,720,721,720,721,716,755,806,806,774,0,0,0,0,0,0,0,0,814,0,0,0,0,0,749,746,0,748,748,755,748,801,748,801,748,748,801,715,716,715,716,714,714,773,773,812,705,705,705,705,705,0,805,0,0,0,0,746,818,0,0,749,749,741,741,0,822,0,705,705,705,705,741,777,0,0,705,705,705,705,705,705,0,718,717,722,716,716,716,0,0,794,794,757,0,814,812,783,783,783,783,783,783,783,783,783,783,0,756,0,822,714,719,800,741,848,777,777,762,742,776,716,720,720,716,715,799,0,0,0,0,0,0,0,0,794,773,773,0,796,0,780,0,746,773,773,0,777,777,0,757,754,754,707,774,0,795,848,742,715,0,720,720,714,716,718,718,718,718,715,715,715,794,0,0,0,750,741,750,806,0,717,716,707,777,814,777,751,821,749,749,749,749,749,749,796,820,820,0,0,0,746,763,795,847,795,848,715,715,715,715,752,714,715,0,0,0,821,0,757,754,768,0,796,0,796,0,0,0,0,0,0,0,0,0,0,0,0,0,0,705,705,705,705,705,705,705,705,705,705,705,705,716,719,800,721,751,752,798,813,813,0,0,0,0,0,0,0,0,0,0,0,806,773,0,0,0,750,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,715,714,715,715,715,715,720,718,721,718,715,716,0,724,815,724,0,0,0,0,0,0,0,0,0,0,812,783,783,783,783,783,783,783,783,745,745,745,783,783,783,783,749,749,749,818,705,0,805,0,0,811,815,0,0,848,750,0,0,0,0,0,0,715,721,715,715,715,715,715,715,715,800,0,815,0,0,0,0,0,0,0,0,0,724,724,0,0,795,848,821,820,754,754,720,715,716,716,812,772,783,783,772,783,783,783,783,783,783,0,811,762,783,783,783,783,762,717,720,715,717,722,716,0,715,716,714,763,847,780,0,0,0,0,0,746,741,716,800,715,768,768,766,798,813,802,803,749,773,820,741,742,714,743,715,738,744,716,745,746,747,717,748,749,750,751,752,753,754,755,756,757,758,759,718,760,761,762,705,763,764,765,719,766,767,768,769,770,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,794,795,702,796,703,797,721,798,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,835,800,705,708,708,708,714,715,716,717,718,719,720,721,722,715,715,760,752,842,759,708,782,740,787,723,723,726,727,704,728,729,728,731,732,733,782,730,819,740,787,841,741,742,714,743,715,738,744,716,745,746,747,717,748,749,839,736,750,751,752,753,754,755,756,757,758,759,718,731,760,761,762,705,763,726,727,704,764,723,765,728,706,837,729,826,825,719,838,766,767,833,836,830,713,712,709,735,835,768,769,844,770,711,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,845,794,795,702,796,703,797,721,798,733,732,847,842,848,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,800,769,747,841,782,740,782,740,712,709,735,712,771,784,785,816,714,715,716,717,718,719,720,721,722,714,715,716,717,718,719,720,721,722,714,715,716,717,718,719,720,721,722,714,715,716,717,718,719,720,721,722,714,715,716,717,718,719,720,721,722,714,715,716,717,718,719,720,721,722,714,715,716,717,718,719,720,721,722,714,715,716,717,718,719,720,721,722,753,708,841,741,742,714,743,715,738,744,716,745,746,747,717,748,749,839,736,750,751,752,753,754,755,756,757,758,759,718,731,760,761,762,705,763,726,727,704,764,723,765,728,706,837,729,826,825,719,838,766,767,833,836,830,713,712,709,735,835,768,769,844,770,711,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,845,794,795,702,796,703,797,721,798,733,732,847,842,848,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,841,741,742,714,743,715,738,744,716,745,746,747,717,748,749,839,736,750,751,752,753,754,755,756,757,758,759,718,731,760,761,762,705,763,726,727,704,764,723,765,728,706,837,729,826,825,719,838,766,767,833,836,830,713,712,709,735,835,768,769,844,770,711,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,845,794,795,702,796,703,797,721,798,733,732,847,842,848,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,731,765,725,817,788,810,841,741,742,714,743,715,738,744,716,745,746,747,717,748,749,839,736,750,751,752,753,754,755,756,757,758,759,718,731,760,761,762,705,763,726,727,704,764,723,765,728,706,837,729,826,825,719,838,766,767,833,836,830,713,712,709,735,835,768,769,844,770,711,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,845,794,795,702,796,703,797,721,798,733,732,847,842,848,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,738,738,841,741,742,714,743,715,738,744,716,745,746,747,717,748,749,839,736,750,751,752,753,754,755,756,757,758,759,718,731,760,761,762,705,763,726,727,704,764,723,765,728,706,837,729,826,825,719,838,766,767,833,836,830,713,712,709,735,835,768,769,844,770,711,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,845,794,795,702,796,703,797,721,798,733,732,847,842,848,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,841,741,742,714,743,715,738,744,716,745,746,747,717,748,749,839,736,750,751,752,753,754,755,756,757,758,759,718,731,760,761,762,705,763,726,727,704,764,723,765,728,706,837,729,826,825,719,838,766,767,833,836,830,713,712,709,735,835,768,769,844,770,711,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,845,794,795,702,796,703,797,721,798,733,732,847,842,848,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,770,712,712,741,742,714,743,715,738,744,716,745,746,747,717,748,749,750,751,752,753,754,755,756,757,758,759,718,760,761,762,705,763,764,765,719,766,767,768,769,770,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,794,795,702,796,703,797,721,798,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,741,742,714,743,715,738,744,716,745,746,747,717,748,749,750,751,752,753,754,755,756,757,758,759,718,760,761,762,705,763,764,765,719,766,767,768,769,770,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,794,795,702,796,703,797,721,798,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,714,715,744,716,745,717,718,719,720,721,799,722,752,737,793,819,776,708,743,748,714,715,716,717,718,719,720,721,722,716,729,729,758,770,714,715,716,717,718,719,720,721,722,714,715,716,717,718,719,720,721,722,736,726,727,704,723,728,706,837,729,826,825,838,833,836,830,713,712,835,844,711,712,712,712,712,759,816,726,704,704,704,704,704,704,727,704,704,704,704,704,704,704,704,726,704,704,704,728,758,736,727,704,723,728,706,837,729,826,825,838,833,836,830,713,712,709,735,835,844,711,733,732,841,742,743,715,738,744,748,750,751,754,755,757,758,759,726,719,769,770,772,773,774,775,776,780,782,784,708,737,734,793,794,796,842,800,803,804,805,806,707,808,810,811,812,740,822,771,776,779,728,804,809,790,793,737,771,841,741,742,714,743,715,738,744,716,745,746,747,717,748,749,839,736,750,751,752,753,754,755,756,757,758,759,718,731,731,760,761,762,705,763,726,727,704,764,723,765,728,706,837,729,826,825,719,838,766,767,833,836,830,713,712,709,735,835,768,769,844,770,711,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,845,794,795,702,796,703,797,721,798,733,733,732,732,847,842,848,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,841,741,742,714,743,715,738,744,716,745,746,747,717,748,749,839,736,750,751,752,753,754,755,756,757,758,759,718,731,731,760,761,762,705,763,726,727,704,764,723,765,728,706,837,729,826,825,719,838,766,767,833,836,830,713,712,709,735,835,768,769,844,770,711,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,845,794,795,702,796,703,797,721,798,733,732,732,847,842,848,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,705,728,723,728,845,747,747,714,715,716,717,718,719,720,721,722,728,782,735,735,841,741,742,714,743,715,738,744,716,745,746,747,717,748,749,839,736,750,751,752,753,754,755,756,757,758,759,718,731,760,761,762,705,763,726,727,704,764,723,765,728,706,837,729,826,825,719,838,766,767,833,836,830,713,712,709,735,835,768,769,844,770,711,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,845,794,795,702,796,703,797,721,798,733,732,847,842,848,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,738,738,709,709,835,835,709,709,835,835,709,709,835,835,709,709,835,835,747,747,841,741,742,714,743,715,738,744,716,745,746,747,717,748,749,839,736,736,750,751,752,753,754,755,756,757,758,759,718,731,731,760,761,762,705,763,726,727,727,704,704,764,723,723,765,728,728,706,706,837,837,729,729,826,826,825,825,719,838,838,766,767,833,833,836,836,830,830,713,713,712,712,709,709,735,735,835,768,769,844,844,770,711,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,845,845,794,795,702,796,703,797,721,798,733,733,732,732,847,842,848,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,751,841,714,715,716,717,718,719,720,721,722,709,735,786,792,788,789,791,726,741,742,714,743,715,738,744,716,745,746,747,717,748,749,750,751,752,753,754,755,756,757,758,759,718,760,761,762,705,763,719,769,770,771,772,773,774,775,776,777,780,781,782,783,708,787,720,793,794,795,702,796,703,797,721,798,799,800,801,802,803,804,805,806,707,807,808,809,811,812,813,814,815,816,818,740,820,722,741,741,742,742,714,714,743,743,715,715,738,738,744,744,716,716,745,745,746,746,747,747,717,717,748,748,749,749,750,750,751,751,752,752,753,753,754,754,755,755,756,756,757,757,758,758,759,759,718,718,760,760,761,761,762,762,705,705,763,763,719,719,769,769,770,770,771,771,772,772,773,773,774,774,775,775,776,776,777,777,780,780,781,781,782,782,783,783,787,787,720,720,793,793,794,794,795,795,702,702,796,796,703,703,797,797,721,721,798,798,799,799,801,801,802,802,803,803,804,804,805,805,806,806,707,707,807,807,808,808,809,809,811,811,812,812,813,813,814,814,815,815,816,816,818,818,740,740,820,820,722,722,709,714,715,716,717,718,719,720,721,722,776,727,704,712,835,744,760,741,742,714,714,714,714,714,743,715,715,715,715,715,738,744,716,716,716,716,716,745,746,747,717,717,717,717,717,748,749,750,751,752,753,754,755,756,757,758,759,718,718,718,718,718,760,761,762,705,763,726,727,704,764,723,765,728,706,837,729,826,825,719,719,719,719,719,838,833,836,830,713,712,709,735,835,769,844,770,711,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,720,720,720,720,788,789,790,734,791,792,793,845,794,795,795,702,702,796,703,703,797,797,721,721,721,721,721,798,733,732,847,847,842,848,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,722,722,722,722,822,743,728,753,771,781,782,809,842,790,841,741,742,714,714,743,715,738,744,716,745,746,747,717,748,749,839,736,750,751,752,753,753,754,755,756,757,758,759,718,731,760,761,762,705,763,726,727,704,764,723,765,728,706,837,729,826,825,719,838,766,767,833,836,830,713,712,709,735,835,768,769,844,770,711,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,845,794,795,702,796,703,797,721,798,733,732,847,842,848,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,714,715,716,717,718,719,720,721,722,714,715,716,717,718,719,720,721,722,714,715,716,717,718,719,720,721,722,726,726,714,715,716,717,718,719,720,721,722,769,758,800,726,836,830,729,729,729,727,741,742,714,743,715,738,744,716,745,717,748,749,750,751,752,753,754,755,756,757,758,759,718,760,761,762,705,719,769,770,771,772,773,774,775,776,777,780,781,783,787,720,793,794,796,721,801,802,803,804,805,806,707,807,808,809,811,812,813,814,815,816,820,722,727,765,765,727,727,711,815,741,742,714,743,715,738,744,716,745,717,748,749,750,751,752,753,754,755,756,757,758,759,718,760,761,762,705,719,769,770,771,772,773,774,775,776,777,780,781,783,787,720,793,794,796,721,801,802,803,804,805,806,707,807,808,809,811,812,813,814,815,816,820,722,728,804,736,727,704,723,728,706,837,729,826,825,838,833,836,830,713,712,709,735,835,844,711,0,0,841,741,742,714,743,715,738,744,716,745,746,747,717,748,749,839,736,750,751,752,753,754,755,756,757,758,759,718,731,760,761,762,705,763,726,727,704,764,723,765,728,706,837,729,826,825,719,838,766,767,833,836,830,713,712,709,735,835,768,769,844,770,711,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,845,794,795,702,796,703,797,721,798,733,732,847,842,848,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,731,714,715,716,717,718,719,720,721,722,712,709,735,714,715,716,717,718,719,720,721,722,714,715,716,717,718,719,720,721,722,841,741,742,714,743,715,738,744,716,745,746,747,717,748,749,839,736,750,751,752,753,754,755,756,757,758,759,718,731,760,761,762,705,763,726,727,704,764,723,765,728,706,837,729,826,825,719,838,766,767,833,836,830,713,712,709,735,835,768,769,844,770,711,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,845,794,795,702,796,703,797,721,798,733,732,847,842,848,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,714,715,716,717,718,719,720,721,722,771,771,714,715,716,717,718,719,720,721,722,769,770,740,799,769,771,771,754,727,768,744,839,767,782,784,708,786,737,790,734,791,792,793,808,740,786,790,791,817,727,704,744,775,708,708,841,741,742,714,743,715,738,744,716,745,746,747,717,748,749,839,736,750,751,752,753,754,755,756,757,758,759,718,731,760,761,762,705,763,726,727,704,764,723,765,728,706,837,729,826,825,719,838,766,767,833,836,830,713,712,709,735,835,768,769,844,770,711,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,845,794,795,702,796,703,797,721,798,733,732,847,842,848,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,841,741,742,714,743,715,738,744,716,745,746,747,717,748,749,839,736,750,751,752,753,754,755,756,757,758,759,718,731,760,761,762,705,763,726,727,704,764,723,765,728,706,837,729,826,825,719,838,766,767,833,836,830,713,712,709,735,835,768,769,844,770,711,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,845,794,795,702,796,703,797,721,798,733,732,847,842,848,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,708,765,723,768,808,759,738,738,738,738,738,738,738,738,738,738,738,738,804,738,738,738,738,738,738,738,738,738,738,738,738,738,738,738,708,738,738,730,819,728,782,740,804,740,708,788,789,791,709,709,709,709,790,790,793,747,769,776,777,726,714,715,716,717,718,719,720,721,722,731,765,725,781,810,711,704,751,778,730,819,841,741,742,714,743,715,738,744,716,745,746,747,717,748,749,839,736,750,751,752,753,754,755,756,757,758,759,718,731,760,761,762,705,763,726,727,704,764,723,765,728,706,837,729,826,825,719,838,766,767,833,836,830,713,712,709,735,835,768,769,844,770,711,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,845,794,795,702,796,703,797,721,798,733,732,847,842,848,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,841,741,742,714,743,715,738,744,716,745,746,747,717,748,749,839,736,750,751,752,753,754,755,756,757,758,759,718,731,760,761,762,705,763,726,727,704,764,723,765,728,706,837,729,826,825,719,838,766,767,833,836,830,713,712,709,735,835,768,769,844,770,711,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,845,794,795,702,796,703,797,721,798,733,732,847,842,848,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,728,709,735,835,714,715,744,716,745,717,718,763,719,720,721,799,722,776,804,704,726,758,712,709,735,704,743,819,845,842,845,790,795,702,703,797,847,784,712,709,735,704,731,800,807,769,732,714,715,716,717,718,719,720,721,722,705,726,727,712,778,785,810,728,793,718,841,741,742,714,743,715,738,744,716,745,746,747,717,748,749,839,736,750,751,752,753,754,755,756,757,758,759,718,731,760,761,762,705,763,726,727,704,764,723,765,728,706,837,729,826,825,719,838,766,767,833,836,830,713,712,709,735,835,768,769,844,770,711,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,845,794,795,702,796,703,797,721,798,733,732,847,842,848,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,841,741,742,714,743,715,738,744,716,745,746,747,717,748,749,839,736,750,751,752,753,754,755,756,757,758,759,718,731,760,761,762,705,763,726,727,704,764,723,765,728,706,837,729,826,825,719,838,766,767,833,836,830,713,712,709,735,835,768,769,844,770,711,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,845,794,795,702,796,703,797,721,798,733,732,847,842,848,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,714,715,716,717,718,719,720,721,722,709,709,735,835,835,709,709,709,835,835,709,709,735,835,835,709,709,735,835,835,709,709,709,709,835,835,709,781,744,723,728,783,723,765,725,723,733,732,770,847,839,767,751,807,704,771,779,809,787,704,775,758,714,715,716,717,718,719,720,721,722,714,715,716,717,718,719,720,721,722,711,845,714,715,716,717,718,719,720,721,722,789,845,730,819,803,802,741,742,714,743,715,738,744,716,745,746,747,717,748,749,750,751,752,753,754,755,756,757,758,759,718,760,761,762,705,763,764,765,719,766,767,768,769,770,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,794,795,702,796,703,797,721,798,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,795,702,703,797,847,730,819,714,715,716,717,718,719,720,721,722,758,841,741,742,714,743,715,738,744,716,745,746,747,717,748,749,839,736,750,751,752,753,754,755,756,757,758,759,718,731,760,761,762,705,763,726,727,704,764,723,765,728,706,837,729,826,825,719,838,766,767,833,836,830,713,712,709,735,835,768,769,844,770,711,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,845,794,795,702,796,703,797,721,798,733,732,847,842,848,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,841,741,742,714,743,715,738,744,716,745,746,747,717,748,749,839,736,750,751,752,753,754,755,756,757,758,759,718,731,760,761,762,705,763,726,727,704,764,723,765,728,706,837,729,826,825,719,838,766,767,833,836,830,713,712,709,735,835,768,769,844,770,711,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,845,794,795,702,796,703,797,721,798,733,732,847,842,848,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,816,841,741,742,714,743,715,738,744,716,745,746,747,717,748,749,839,736,750,751,752,753,754,755,756,757,758,759,718,731,760,761,762,705,763,726,727,704,764,723,765,728,706,837,729,826,825,719,838,766,767,833,836,830,713,712,709,735,835,768,769,844,770,711,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,845,794,795,702,796,703,797,721,798,733,732,847,842,848,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,758,714,715,716,717,718,719,720,721,722,723,841,741,742,714,743,715,738,744,716,745,746,747,717,748,749,839,736,750,751,752,753,754,755,756,757,758,759,718,731,760,761,762,705,763,726,727,704,764,723,765,728,706,837,729,826,825,719,838,766,767,833,836,830,713,712,709,735,835,768,769,844,770,711,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,845,794,795,702,796,703,797,721,798,733,732,847,842,848,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,841,741,742,714,743,715,738,744,716,745,746,747,717,748,749,839,736,750,751,752,753,754,755,756,757,758,759,718,731,760,761,762,705,763,726,727,704,764,723,765,728,706,837,729,826,825,719,838,766,767,833,836,830,713,712,709,735,835,768,769,844,770,711,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,845,794,795,702,796,703,797,721,798,733,732,847,842,848,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,841,741,742,714,743,715,738,744,716,745,746,747,717,748,749,839,736,750,751,752,753,754,755,756,757,758,759,718,731,760,761,762,705,763,726,727,704,764,723,765,728,706,837,729,826,825,719,838,766,767,833,836,830,713,712,709,735,835,768,769,844,770,711,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,845,794,795,702,796,703,797,721,798,733,732,847,842,848,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,723,728,723,751,738,738,0,747,790,0,778,779,816,841,741,742,714,743,715,738,744,716,745,746,747,717,748,749,839,736,750,751,752,753,754,755,756,757,758,759,718,731,760,761,762,705,763,726,727,704,764,723,765,728,706,837,729,826,825,719,838,766,767,833,836,830,713,712,709,735,835,768,769,844,770,711,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,845,794,795,702,796,703,797,721,798,733,732,847,842,848,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,728,804,841,741,742,714,743,715,738,744,716,745,746,747,717,748,749,839,736,750,751,752,753,754,755,756,757,758,759,718,731,760,761,762,705,763,726,727,704,764,723,765,728,706,837,729,826,825,719,838,766,767,833,836,830,713,712,709,735,835,768,769,844,770,711,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,845,794,795,702,796,703,797,721,798,733,732,847,842,848,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,841,741,742,714,743,715,738,744,716,745,746,747,717,748,749,839,736,750,751,752,753,754,755,756,757,758,759,718,731,760,761,762,705,763,726,727,704,764,723,765,728,706,837,729,826,825,719,838,766,767,833,836,830,713,712,709,735,835,768,769,844,770,711,771,724,772,725,773,774,775,776,777,778,779,780,781,782,783,784,708,785,786,737,787,720,788,789,790,734,791,792,793,845,794,795,702,796,703,797,721,798,733,732,847,842,848,799,800,801,802,803,804,805,806,707,807,808,809,810,811,812,813,814,815,816,817,730,818,819,740,820,821,722,822,711,711,753,769,711,712,709,735,802,803,802,803,803,1027,1027,1028,1028,1029,1029,1028,1029,1027,1030,1031,1031,1032,1033,1032,1034,1034,1035,0,0,0,0,0,0,0,0,828,853,854,855,857,0,853,854,855,857,856,828,853,854,855,0,854,853,854,853,857,856,828,853,854,855,857,856,828,853,854,855,857,856,828,853,854,855,857,856,828,853,854,855,857,856,828,853,854,855,857,828,853,854,855,828,853,854,855,857,828,1036,1036,853,854,855,857,856,856,828,853,854,855,857,856,828,853,854,855,857,856,828,853,854,855,1037,1037,1037,1037,857,856,828,853,854,855,0,828,828,828,857,857,828,853,854,855,857,857,856,828,853,854,855,828,828,857,856,828,853,854,855,0,0,853,854,857,856,828,853,854,855,828,857,856,828,853,854,855,857,856,828,853,854,855,0,857,857,856,828,853,854,855,857,856,828,853,854,855,0,0,856,857,857,857,856,828,853,854,855,857,856,828,853,854,855,857,1037,1037,1037,1037,1037,828,853,854,855,857,856,828,853,854,855,857,856,828,853,854,855,857,856,828,853,854,855,857,856,828,853,854,855,857,856,828,853,854,855,857,856,828,853,854,855,828,853,854,854,857,856,828,853,854,855,857,856,828,853,854,855,857,856,828,853,854,855,857,855,855,855,0,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,870,870,0,488,636,488,636,488,0,0,0,869,869,869,869,869,488,488,488,488,488,0,0,0,0,0,488,488,488,636,869,0,488,488,488,488,488,488,0,0,872,0,0,488,636,0,0,0,0,0,488,488,636,488,636,0,488,488,636,868,869,864,870,871,872,488,636,867,636,860,860,860,860,488,636,488,636,867,875,863,860,873,868,869,864,865,870,876,871,872,874,488,636,863,865,863,865,867,867,488,636,867,875,863,860,873,868,869,864,865,870,876,871,872,874,488,636,867,875,863,860,873,868,869,864,865,870,876,871,872,874,1038,488,636,867,875,863,860,873,868,869,864,865,870,876,871,872,874,488,636,867,875,863,860,873,868,869,864,865,870,876,871,872,874,488,636,867,875,863,860,873,868,869,864,865,870,876,871,872,874,488,636,868,869,864,870,871,872,488,636,868,869,864,870,871,872,869,873,875,863,0,0,0,0,0,0,0,867,1038,1038,488,636,868,864,865,876,871,874,488,636,867,875,863,860,873,868,869,864,865,870,876,871,872,874,488,636,867,875,863,860,873,868,869,864,865,870,876,871,872,874,488,636,868,870,867,871,488,636,867,875,863,860,873,868,869,864,865,870,876,871,872,874,488,636,867,875,863,860,860,873,868,869,864,865,870,876,871,872,874,488,636,869,864,870,871,872,488,488,869,869,864,864,871,871,872,872,867,873,1038,873,875,860,488,636,868,869,864,870,871,871,872,872,488,488,488,488,488,636,636,636,636,867,875,863,860,873,868,869,864,864,864,864,865,870,876,871,872,872,874,488,488,636,871,488,636,636,488,636,488,488,636,488,636,636,636,871,872,488,636,874,488,636,488,873,864,0,488,636,864,873,867,0,488,636,864,0,0,488,636,488,636,867,488,636,867,875,863,860,873,868,869,864,865,870,876,871,872,874,871,636,488,636,867,875,863,860,873,868,869,864,865,870,876,871,872,874,870,865,488,488,636,870,871,865,863,863,865,864,868,488,488,636,867,875,863,860,873,868,869,864,865,870,876,871,872,874,488,636,867,875,863,860,873,868,869,864,865,870,876,871,872,874,0,867,636,636,870,870,636,867,863,874,870,0,870,876,876,876,876,876,876,876,876,488,636,867,875,863,860,873,868,869,864,865,870,876,871,872,874,488,636,867,875,863,860,873,868,869,864,865,870,876,871,872,874,869,872,868,870,874,871,864,867,488,636,875,1038,0,867,867,0,488,636,867,875,863,860,873,868,869,864,865,870,876,871,872,874,488,636,867,875,863,860,873,868,869,864,865,870,876,871,872,874,870,874,488,636,868,870,867,865,875,865,867,488,636,863,865,488,488,636,488,636,868,869,864,870,871,872,636,488,636,871,872,488,636,876,876,876,488,636,867,875,863,860,873,868,869,864,865,870,876,871,872,874,488,636,867,875,863,860,873,868,869,864,865,870,876,871,872,874,488,636,867,875,863,860,873,868,869,864,865,870,876,871,872,874,873,488,636,867,875,863,860,873,868,869,864,865,870,876,871,872,874,488,636,867,875,863,860,873,868,869,864,865,870,876,871,872,874,488,636,867,875,863,860,873,868,869,864,865,870,876,871,872,874,875,875,863,863,865,0,488,636,867,875,863,860,873,868,869,864,865,870,876,871,872,874,873,873,874,860,488,636,867,875,863,860,873,868,869,864,865,870,876,871,872,874,488,636,867,875,863,860,873,868,869,864,865,870,876,871,872,874,0,0,885,885,880,885,880,885,880,885,880,885,885,880,885,880,885,885,885,880,885,880,885,885,880,885,880,885,885,885,880,885,880,880,885,880,885,885,880,885,880,885,880,880,885,880,885,885,880,885,880,885,0,885,880,885,880,885,880,885,880,885,880,885,880,885,880,885,880,885,880,885,0,0,0,0,0,0,0,0,889,890,890,890,889,890,889,890,889,890,889,890,889,890,889,890,889,890,889,890,889,890,889,890,889,890,889,890,889,890,890,889,889,890,889,890,889,890,889,890,889,890,889,0,889,890,889,890,889,890,889,890,889,890,889,890,889,890,889,890,889,890,889,890,889,890,889,889,889,890,889,890,889,890,0,891,891,891,891,891,891,891,891,891,891,891,891,891,891,891,891,891,891,891,891,0,891,891,891,891,891,891,891,891,891,891,891,891,891,0,891,891,891,900,877,877,877,877,900,0,0,0,0,0,0,878,895,0,0,0,0,0,0,906,907,882,884,884,0,0,877,906,907,883,900,0,0,0,0,0,0,0,1039,1040,0,0,0,0,895,892,893,884,877,894,878,882,895,896,897,898,899,900,888,877,878,1041,1042,1043,904,903,905,888,892,893,884,877,894,878,882,883,895,896,897,906,907,898,899,900,884,882,899,884,882,903,896,898,877,878,877,878,877,878,877,878,877,878,877,878,877,878,877,878,1041,1042,1043,904,903,905,888,892,893,884,877,894,878,882,883,895,896,897,906,907,898,899,900,1041,1042,1043,904,903,905,888,892,893,884,877,894,878,882,883,895,896,897,906,907,898,899,900,1041,1042,1043,904,903,905,888,892,893,884,877,894,878,882,883,895,896,897,906,907,898,899,900,1041,1042,1043,904,903,905,888,892,893,884,877,894,878,882,883,895,896,897,906,907,898,899,900,1041,1042,1043,904,903,905,888,892,893,884,877,894,878,882,883,895,896,897,906,907,898,899,900,892,893,884,877,894,878,882,895,896,897,898,899,900,892,893,884,877,894,878,882,895,896,897,898,899,900,877,878,894,904,877,878,0,877,878,1040,903,904,905,877,894,878,895,904,904,904,904,905,1041,1042,1043,904,903,905,888,892,893,884,877,894,878,882,883,895,896,897,906,907,898,899,900,1041,1042,1043,904,903,905,888,892,893,884,877,894,878,882,883,895,896,897,906,907,898,899,900,877,878,1041,1042,1043,904,903,905,888,892,893,884,877,894,878,882,883,895,896,897,906,907,898,899,900,1040,903,1041,1042,1043,904,903,905,888,892,893,884,877,894,878,882,883,895,896,897,906,907,898,899,900,877,878,877,878,883,900,877,877,878,878,883,883,900,900,877,878,905,905,1042,894,877,877,877,877,877,878,878,878,878,878,883,883,895,906,907,900,1041,1042,1043,904,903,905,888,892,893,884,877,894,878,882,883,895,896,897,906,907,898,899,900,877,878,877,878,877,878,877,878,877,878,900,877,888,877,878,900,1041,1042,1043,904,903,905,888,892,893,884,877,894,878,882,883,895,896,897,906,907,898,899,900,877,878,899,877,878,877,878,1041,1042,1043,904,903,905,888,892,893,884,877,894,878,882,883,895,896,897,906,907,898,899,900,877,878,877,878,893,877,878,1041,1042,1041,1041,1042,1043,904,903,905,888,892,893,884,877,894,878,882,883,895,896,897,906,907,898,899,900,1041,1042,1043,904,903,905,888,892,893,884,877,894,878,882,883,895,896,897,906,907,898,899,900,888,905,892,884,882,896,897,898,899,877,878,1041,1042,1043,904,903,905,888,892,893,884,877,894,878,882,883,895,896,897,906,907,898,899,900,1041,1042,1043,904,903,905,888,892,893,884,877,894,878,882,883,895,896,897,906,907,898,899,900,877,878,1040,1042,1043,893,883,1043,894,904,877,878,903,1041,1042,1043,904,903,905,888,892,893,884,877,894,878,882,883,895,896,897,906,907,898,899,900,1041,1042,1043,904,903,905,888,892,893,884,877,894,878,882,883,895,896,897,906,907,898,899,900,877,878,893,877,878,877,878,877,878,905,905,905,892,893,884,877,894,878,882,895,896,897,898,899,900,883,877,878,905,1041,1042,1043,904,903,905,888,892,893,884,877,894,878,882,883,895,896,897,906,907,898,899,900,1041,1042,1043,904,903,905,888,892,893,884,877,894,878,882,883,895,896,897,906,907,898,899,900,1041,1042,1043,904,903,905,888,892,893,884,877,894,878,882,883,895,896,897,906,907,898,899,900,877,878,1041,1042,1043,904,903,905,888,892,893,884,877,894,878,882,883,895,896,897,906,907,898,899,900,1041,1042,1043,904,903,905,888,892,893,884,877,894,878,882,883,895,896,897,906,907,898,899,900,1041,1042,1043,904,903,905,888,892,893,884,877,894,878,882,883,895,896,897,906,907,898,899,900,1041,1042,1043,904,903,905,888,892,893,884,877,894,878,882,883,895,896,897,906,907,898,899,900,888,1041,1042,1041,1042,1043,904,903,905,888,892,893,884,877,894,878,882,883,895,896,897,906,907,898,899,900,1041,1042,1043,904,903,905,888,892,893,884,877,894,878,882,883,895,896,897,906,907,898,899,900,0,0,910,911,910,910,911,911,910,911,910,911,910,911,910,911,910,910,910,911,911,910,911,910,911,910,911,911,910,911,910,911,910,911,910,911,910,911,910,910,911,910,911,910,911,911,911,910,911,910,910,911,910,911,910,911,910,911,910,911,910,911,910,911,910,911,910,911,910,909,913,0,0,913,887,0,909,0,0,0,909,909,887,0,0,912,913,887,914,918,916,912,913,909,887,914,918,916,912,913,909,887,914,918,916,912,913,909,887,914,918,916,912,913,909,887,914,918,916,912,913,909,887,914,918,916,912,913,909,887,912,913,887,912,913,887,918,914,916,918,914,918,916,912,913,909,887,914,918,916,912,913,909,887,916,914,918,916,912,913,909,887,914,918,916,912,913,909,887,913,909,913,913,909,909,913,909,909,918,914,918,916,912,913,909,887,918,914,918,916,912,913,909,887,914,918,916,912,913,909,887,912,918,914,918,916,912,913,909,887,914,918,916,912,913,909,887,914,914,914,918,916,912,913,909,887,914,918,916,912,913,909,887,909,916,914,918,916,912,913,909,887,914,918,916,912,913,909,887,912,913,887,909,914,918,916,912,913,909,887,914,918,916,912,913,909,887,914,918,916,912,913,909,887,914,918,916,912,913,909,887,914,918,916,912,913,909,887,914,918,916,912,913,909,887,914,918,916,912,913,909,887,916,916,918,914,918,916,912,913,909,887,914,918,916,912,913,909,887,1044,1044,1045,1045,0,922,922,922,922,922,919,920,0,920,0,0,0,919,0,919,920,921,921,922,919,920,921,922,919,920,921,922,919,920,921,922,919,920,921,922,919,920,921,922,919,920,921,919,920,921,919,920,921,922,922,921,922,919,920,921,922,919,920,921,922,919,920,921,922,922,919,920,921,919,920,921,922,919,920,921,922,919,920,921,922,919,920,921,868,922,919,920,921,922,919,920,921,921,922,919,920,921,922,919,920,921,921,868,921,922,922,921,922,919,920,921,922,919,920,921,922,922,919,920,921,922,919,920,921,922,919,920,921,922,919,920,921,922,919,920,921,922,919,920,921,922,919,920,921,921,922,919,920,921,922,919,920,921,922,919,920,921,1046,1046,1047,1047,1046,0,0,886,886,886,886,886,886,886,886,886,886,886,886,886,886,886,886,886,886,886,886,886,0,886,886,886,886,886,886,886,886,886,886,886,886,886,886,886,886,886,886,886,886,0,0,0,886,886,886,487,886,487,886,886,886,0,0,0,0,886,886,886,886,886,886,886,886,886,886,886,886,886,886,886,886,886,886,886,886,886,13,13,42,42,0,13,13,0,0,0,0,114,114,114,439,114,439,923,0,0,0,924,36,0,924,924,924,924,924,36,923,924,36,36,925,925,923,924,923,924,925,923,924,36,925,923,924,36,925,923,924,36,925,923,924,36,925,923,924,36,925,923,924,36,923,924,36,923,924,36,925,925,925,925,923,924,36,925,923,924,36,925,923,924,36,925,923,924,36,925,36,36,36,925,923,924,36,925,923,924,36,925,923,924,925,923,924,925,923,924,0,925,923,924,36,925,923,924,36,36,0,925,923,924,36,925,923,924,36,925,0,925,923,924,36,925,923,924,36,0,925,925,0,0,0,0,925,923,924,36,925,923,924,36,923,924,36,925,923,924,36,925,923,924,36,925,923,924,36,925,923,924,36,925,923,924,36,925,923,924,36,925,923,924,925,923,924,925,925,925,923,924,36,925,925,923,924,36,925,923,924,36,1048,94,0,94,0,0,0,0,49,49],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],0,[2,3],[4],[2,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[2,2],[4,4],[6,6],[7,7],[[]],[[]],[[]],[[]],[[2,2],8],[[4,4],8],[[6,6],8],[[7,7],8],0,[[9,10]],0,0,[[],9],[[],6],[[],10],0,[11],[11],[11],[11],[2,3],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[],[[12,[2]]]],[[],[[12,[4]]]],[[],[[12,[6]]]],[[],[[12,[7]]]],[9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,[[15,[13,14]]]],[11],[11],[11],[11],[11],[11],[11],[9],0,0,[[2,2],16],[[2,3],16],[[4,4],16],[[6,6],16],[[7,7],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,[[],17],[9],[[18,19],[[12,[20]]]],[[18,19],[[12,[20]]]],[[2,19],[[12,[20]]]],[[2,19],[[12,[20]]]],[[4,19],[[12,[20]]]],[[4,19],[[12,[20]]]],[[6,19],[[12,[20]]]],[[6,19],[[12,[20]]]],[[7,19],[[12,[20]]]],[[7,19],[[12,[20]]]],[[]],[[]],[[]],[21,18],[22,2],[3,2],[[]],[[],4],[[]],[22,4],[23,4],[[[15,[24,14]]],4],[3,4],[[]],[[]],[3,7],[22,7],[[],4],[3,[[12,[6]]]],[25,6],[2,3],[[],26],[[],26],[[],26],[[],26],[[],[[28,[27,9]]]],[16,[[28,[27,9]]]],0,[2],[2,26],[4,29],[4],[6],[7],0,[4,26],[[],11],[[[30,[7]],16],9],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[31,[22]]]],[[4,4],16],[[4,4],16],[9,16],0,[4,16],[9,16],[4,32],[[4,4],4],[4,[[5,[24]]]],[4,11],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[[30,[4]]],33],[3,2],[[[15,[24,14]]],4],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,[[5,[4]]]],[[2,2],[[5,[8]]]],[[4,4],[[5,[8]]]],[[6,6],[[5,[8]]]],[[7,7],[[5,[8]]]],0,[34],[[],6],[9,[[5,[6]]]],0,0,[[],4],0,[[35,36],[[38,[37]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[9,[30,[39]]],[[12,[40]]]],[[33,9],[[12,[18]]]],[[9,13]],[[9,41,42]],0,[2,12],[4,12],[6,12],[7,12],[[9,16]],[[9,7,16]],[[9,16]],[[9,6]],[[9,43]],[2,3],[9,[[12,[44]]]],[18,[[5,[45]]]],[9,[[12,[44]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[33,47],[[12,[33,18]]]],[33,[[12,[33,18]]]],[[33,[5,[48]]],[[12,[33,18]]]],[[33,49,[30,[50]]],33],[[33,16],33],[[33,41],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1],[51,51],[51,51],[[]],[[]],[[]],[[]],[[],5],[[],5],[52,52],[[]],0,[11],[11],[[]],[11],[[52,19],[[12,[20]]]],[[]],[53,[[12,[52,[55,[54]]]]]],[53,[[12,[52,[55,[54]]]]]],[[],[[5,[56]]]],[[],11],[[]],[[],5],[[]],[[52,9],[[12,[16,40]]]],[52],[[]],[[]],[[]],[[]],0,0,0,[[]],[[],12],[[],12],[[],46],[[]],[[]],[[],5],[[52,53],[[12,[[55,[54]]]]]],[[52,53],[[12,[[55,[54]]]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],57],0,[[],[[5,[58]]]],[[],59],0,0,0,0,[[],16],[[],16],0,0,0,0,[[],60],0,0,0,0,0,0,[[],11],0,0,0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[61,22],[62,22],[3,22],[[62,19],63],[35],[35],[35],[64],[[11,64,64,64,64]],[[65,65,11],32],[64],[11,32],0,0,0,0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[50,50],[66,66],[[67,68]],[[50,66]],[[50,50]],[[66,50]],[[66,66]],[[67,68]],[[50,50]],[[66,66]],0,0,[[[5,[69]]],[[5,[69]]]],[[],5],[[],5],[[],5],[[[5,[70]]],[[5,[70]]]],[[],5],[[[5,[71]]],[[5,[71]]]],[[[5,[72]]],[[5,[72]]]],[[],[[5,[73]]]],[[[5,[74]]],[[5,[74]]]],[[[5,[75]]],[[5,[75]]]],[[[5,[76]]],[[5,[76]]]],[[],5],0,[69,[[12,[77]]]],[78,[[12,[77]]]],[79,[[12,[77]]]],[[],[[12,[77]]]],[70,[[12,[77]]]],[80,[[12,[77]]]],[71,[[12,[77]]]],[72,[[12,[77]]]],[73,[[12,[77]]]],[74,[[12,[77]]]],[75,[[12,[77]]]],[76,[[12,[77]]]],[[],[[12,[77]]]],[50,64],[66,64],[58,81],[50,81],[66,81],[50,82],[68,82],[83,3],[68,64],[68,81],[23],[83,3],[73,84],[75,[[5,[64]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[83,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[66,50],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[74,85],0,0,[[16,4],42],[86,86],[69,69],[78,78],[79,79],[87,87],[70,70],[80,80],[71,71],[72,72],[73,73],[74,74],[75,75],[76,76],[88,88],[89,89],[57,57],[58,58],[90,90],[91,91],[92,92],[93,93],[29,29],[23,23],[24,24],[67,67],[68,68],[50,50],[83,83],[49,49],[41,41],[94,94],[95,95],[96,96],[66,66],[13,13],[97,97],[98,98],[99,99],[43,43],[100,100],[42,42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[87,87],8],[[73,73],8],[[90,90],8],[[91,91],8],[[23,23],8],[[24,24],8],[[67,67],8],[[68,68],8],[[50,50],8],[[83,83],8],[[49,49],8],[[41,41],8],[[94,94],8],[[66,66],8],[93,2],0,0,[[95,50],16],[[96,66],16],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],0,[[],78],[[],74],[[],83],[[],49],[[],41],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[83,3],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[79,22],[79,22],[[],[[12,[86]]]],[[],[[12,[69]]]],[[],[[12,[78]]]],[[],[[12,[79]]]],[[],[[12,[87]]]],[[],[[12,[70]]]],[[],[[12,[80]]]],[[],[[12,[71]]]],[[],[[12,[72]]]],[[],[[12,[73]]]],[[],[[12,[74]]]],[[],[[12,[75]]]],[[],[[12,[76]]]],[[],[[12,[88]]]],[[],[[12,[89]]]],[[],[[12,[57]]]],[[],[[12,[58]]]],[[],[[12,[90]]]],[[],[[12,[91]]]],[[],[[12,[93]]]],[[],[[12,[23]]]],[[],[[12,[24]]]],[[],[[12,[67]]]],[[],[[12,[68]]]],[[],[[12,[50]]]],[[],[[12,[83]]]],[[],[[12,[49]]]],[[],[[12,[41]]]],[[],[[12,[94]]]],[[],[[12,[95]]]],[[],[[12,[96]]]],[[],[[12,[66]]]],[[],[[12,[13]]]],[[],[[12,[97]]]],[[],[[12,[98]]]],[[],[[12,[99]]]],[[],[[12,[43]]]],[[],[[12,[100]]]],[[],[[12,[42]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],0,[93,4],[42,4],0,0,0,[[86,86],16],[[69,69],16],[[78,78],16],[[79,79],16],[[87,87],16],[[70,70],16],[[80,80],16],[[71,71],16],[[72,72],16],[[73,73],16],[[74,74],16],[[75,75],16],[[76,76],16],[[88,88],16],[[89,89],16],[[57,57],16],[[58,58],16],[[90,90],16],[[91,91],16],[[92,92],16],[[93,93],16],[[29,29],16],[[23,23],16],[[102,102],16],[[24,24],16],[[67,67],16],[[68,68],16],[[50,50],16],[[50,66],16],[[83,83],16],[[83,3],16],[[49,49],16],[[41,41],16],[[94,94],16],[[95,95],16],[[96,96],16],[[66,66],16],[[66,50],16],[[97,97],16],[[98,98],16],[[99,99],16],[[43,43],16],[[100,100],16],[[42,42],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[68,19],[[12,[20]]]],0,[92,26],[66,50],[[86,19],[[12,[20]]]],[[69,19],[[12,[20]]]],[[78,19],[[12,[20]]]],[[79,19],[[12,[20]]]],[[87,19],[[12,[20]]]],[[70,19],[[12,[20]]]],[[80,19],[[12,[20]]]],[[71,19],[[12,[20]]]],[[71,19],[[12,[20]]]],[[72,19],[[12,[20]]]],[[73,19],[[12,[20]]]],[[73,19],[[12,[20]]]],[[74,19],[[12,[20]]]],[[75,19],[[12,[20]]]],[[76,19],[[12,[20]]]],[[88,19],[[12,[20]]]],[[89,19],[[12,[20]]]],[[57,19],[[12,[20]]]],[[57,19],[[12,[20]]]],[[58,19],[[12,[20]]]],[[90,19],[[12,[20]]]],[[90,19],[[12,[20]]]],[[91,19],[[12,[20]]]],[[92,19],[[12,[20]]]],[[93,19],[[12,[20]]]],[[29,19],[[12,[20]]]],[[23,19],[[12,[20]]]],[[23,19],[[12,[20]]]],[[102,19],[[12,[20]]]],[[102,19],[[12,[20]]]],[[24,19],[[12,[20]]]],[[24,19],[[12,[20]]]],[[67,19],[[12,[20]]]],[[68,19],[[12,[20]]]],[[50,19],[[12,[20]]]],[[83,19],[[12,[20]]]],[[83,19],[[12,[20]]]],[[49,19],[[12,[20]]]],[[41,19],[[12,[20]]]],[[94,19],[[12,[20]]]],[[95,19],[[12,[20]]]],[[96,19],[[12,[20]]]],[[66,19],[[12,[20]]]],[[13,19],[[12,[20]]]],[[97,19],[[12,[20]]]],[[98,19],[[12,[20]]]],[[99,19],[[12,[20]]]],[[99,19],[[12,[20]]]],[[43,19],[[12,[20]]]],[[43,19],[[12,[20]]]],[[100,19],[[12,[20]]]],[[42,19],[[12,[20]]]],[75,[[5,[64]]]],[75,103],[67,22],[[94,50],22],0,[[94,95],22],[[49,95],22],[79,[[5,[104]]]],[75,[[5,[64]]]],[[]],[[]],[[[15,[105,14]]],78],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[22,90],[[]],[3,90],[[]],[[]],[[]],[[]],[[]],[[],23],[[]],[3,24],[22,24],[90,24],[[]],[[]],[66,67],[50,67],[66,68],[50,68],[[]],[67,50],[82,50],[68,50],[[]],[3,83],[[]],[22,83],[[]],[[],41],[[]],[[]],[[]],[[]],[95,96],[64,66],[68,66],[[]],[67,66],[81,66],[50,66],[82,66],[97,13],[86,13],[[]],[100,13],[[]],[[]],[[]],[[]],[[]],[[]],[82,[[5,[94]]]],[[],41],[82,68],[82,68],[82,50],[82,67],[79,106],[82,50],[81,67],[64,68],[82,50],[3,[[12,[79]]]],[26,[[5,[94]]]],[[104,107],79],[82,67],[[41,49],[[5,[50]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,[79,[[5,[107]]]],0,[87],[71],[73],[90],[90,92],[91],[90,92],[92],[93],[29],[23],[24],[67],[68],[50],[83,26],[83],[49],[41],[94],[66],0,[92,26],[29,26],[13,73],0,0,0,0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[41,49,50],[[5,[50]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[41],[41],[[96,66],81],[67,16],[91,16],[41,16],[96,16],[67,16],[92,16],[29,16],0,[23,16],[92,16],[29,16],[50,16],[41,16],[23,32],[41,108],[23,[[5,[24]]]],[91,11],[23,11],[95,50],[96,66],[[[109,[67]],64],67],[[96,81],66],[[],49],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[72,87],0,0,0,0,0,0,0,0,0,0,[[66,81]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[49,83],0,[67,82],[68,68],[50],[66],[[4,2],93],[[[15,[24,14]]],23],[3,83],[[[30,[83]],94],49],[[50,50],95],[[[30,[66]],[30,[66]]],96],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[85,74],[85,74],[[[30,[83]]],49],[[[30,[83]]],49],0,[[],67],[70,11],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23,[[5,[23]]]],[74,85],[3,[[12,[[15,[24,14]],102]]]],[[87,87],[[5,[8]]]],[[73,73],[[5,[8]]]],[[90,90],[[5,[8]]]],[[91,91],[[5,[8]]]],[[23,23],[[5,[8]]]],[[24,24],[[5,[8]]]],[[67,67],[[5,[8]]]],[[68,68],[[5,[8]]]],[[50,66],[[5,[8]]]],[[50,50],[[5,[8]]]],[[83,83],[[5,[8]]]],[[49,49],[[5,[8]]]],[[41,41],[[5,[8]]]],[[94,94],[[5,[8]]]],[[66,66],[[5,[8]]]],[[66,50],[[5,[8]]]],0,0,0,0,0,[[[30,[50]]],95],[[[30,[66]]],96],0,[75,110],[34],[[23,24]],[[],87],[[],73],0,0,[[41,49],[[5,[50]]]],[75,[[5,[110]]]],0,[79,[[5,[104]]]],[[],23],0,0,[66,50],[79,[[12,[22]]]],[70,[[12,[111]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[92,26],[86,12],[69,12],[78,12],[79,12],[87,12],[70,12],[80,12],[71,12],[72,12],[73,12],[74,12],[75,12],[76,12],[88,12],[89,12],[57,12],[58,12],[90,12],[91,12],[93,12],[23,12],[24,12],[67,12],[68,12],[50,12],[83,12],[49,12],[41,12],[94,12],[95,12],[96,12],[66,12],[13,12],[97,12],[98,12],[99,12],[43,12],[100,12],[42,12],[73,22],[57,26],0,[[67,68]],[[67,67],68],[[50,66]],[[50,50]],[[66,50]],[[66,66]],[[50,50]],[[66,66]],0,[[],50],[[],66],0,[86,[[12,[41,21]]]],0,[[],41],[41,108],[41,108],[67,[[5,[112]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[79,106],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,0,[58,[[5,[113]]]],[[],12],[114,[[12,[86,21]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[115,[[12,[80,116]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[117,[[12,[67]]]],[112,[[12,[67]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[49,94],0,[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[79,[[5,[104]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],0,0,[[],5],[[],5],[[],[[5,[118]]]],[[],[[5,[119]]]],[[[5,[120]]],[[5,[120]]]],[[],[[5,[121]]]],[[],[[5,[122]]]],[[],[[5,[123]]]],[[],5],[[],5],[[],5],[[[5,[124]]],[[5,[124]]]],[[[5,[125]]],[[5,[125]]]],[[],5],[[],[[5,[126]]]],[[[5,[127]]],[[5,[127]]]],[[],[[5,[128]]]],[[[5,[129]]],[[5,[129]]]],[[[5,[130]]],[[5,[130]]]],[[],5],[[[5,[131]]],[[5,[131]]]],[[[5,[132]]],[[5,[132]]]],[[[5,[60]]],[[5,[60]]]],[[[5,[133]]],[[5,[133]]]],[[[5,[134]]],[[5,[134]]]],[[],[[5,[103]]]],[[],[[5,[135]]]],[[],[[5,[136]]]],[[],[[12,[77]]]],[137,[[12,[77]]]],[118,[[12,[77]]]],[119,[[12,[77]]]],[120,[[12,[77]]]],[121,[[12,[77]]]],[122,[[12,[77]]]],[123,[[12,[77]]]],[138,[[12,[77]]]],[139,[[12,[77]]]],[140,[[12,[77]]]],[124,[[12,[77]]]],[125,[[12,[77]]]],[141,[[12,[77]]]],[126,[[12,[77]]]],[127,[[12,[77]]]],[128,[[12,[77]]]],[129,[[12,[77]]]],[130,[[12,[77]]]],[[],[[12,[77]]]],[131,[[12,[77]]]],[132,[[12,[77]]]],[60,[[12,[77]]]],[133,[[12,[77]]]],[134,[[12,[77]]]],[103,[[12,[77]]]],[135,[[12,[77]]]],[136,[[12,[77]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[137,137],[118,118],[119,119],[120,120],[142,142],[121,121],[122,122],[123,123],[138,138],[139,139],[140,140],[124,124],[125,125],[141,141],[126,126],[127,127],[128,128],[129,129],[59,59],[131,131],[132,132],[60,60],[133,133],[134,134],[103,103],[135,135],[136,136],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[118,118],8],[[121,121],8],[[122,122],8],[[59,59],8],0,0,0,0,[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],118],[[],120],[[],142],[[],122],[[],141],[[],103],[[],135],[[],136],[26,132],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[],[[12,[137]]]],[[],[[12,[118]]]],[[],[[12,[119]]]],[[],[[12,[120]]]],[[],[[12,[142]]]],[[],[[12,[121]]]],[[],[[12,[122]]]],[[],[[12,[123]]]],[[],[[12,[138]]]],[[],[[12,[139]]]],[[],[[12,[140]]]],[[],[[12,[141]]]],[[],[[12,[59]]]],[[],[[12,[132]]]],[[],[[12,[60]]]],[[],[[12,[103]]]],[[],[[12,[135]]]],[[],[[12,[136]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[],57],[133,57],0,[[137,137],16],[[118,118],16],[[119,119],16],[[120,120],16],[[142,142],16],[[121,121],16],[[122,122],16],[[123,123],16],[[138,138],16],[[139,139],16],[[140,140],16],[[124,124],16],[[125,125],16],[[141,141],16],[[127,127],16],[[59,59],16],[[131,131],16],[[132,132],16],[[60,60],16],[[133,133],16],[[143,143],16],[[134,134],16],[[103,103],16],[[135,135],16],[[136,136],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[137,19],[[12,[20]]]],[[118,19],[[12,[20]]]],[[119,19],[[12,[20]]]],[[120,19],[[12,[20]]]],[[142,19],[[12,[20]]]],[[121,19],[[12,[20]]]],[[121,19],[[12,[20]]]],[[122,19],[[12,[20]]]],[[123,19],[[12,[20]]]],[[138,19],[[12,[20]]]],[[139,19],[[12,[20]]]],[[140,19],[[12,[20]]]],[[124,19],[[12,[20]]]],[[125,19],[[12,[20]]]],[[141,19],[[12,[20]]]],[[126,19],[[12,[20]]]],[[127,19],[[12,[20]]]],[[128,19],[[12,[20]]]],[[129,19],[[12,[20]]]],[[130,19],[[12,[20]]]],[[59,19],[[12,[20]]]],[[131,19],[[12,[20]]]],[[132,19],[[12,[20]]]],[[132,19],[[12,[20]]]],[[60,19],[[12,[20]]]],[[133,19],[[12,[20]]]],[[143,19],[[12,[20]]]],[[143,19],[[12,[20]]]],[[134,19],[[12,[20]]]],[[103,19],[[12,[20]]]],[[103,19],[[12,[20]]]],[[135,19],[[12,[20]]]],[[135,19],[[12,[20]]]],[[136,19],[[12,[20]]]],[[136,19],[[12,[20]]]],[[116,19],[[12,[20]]]],[[116,19],[[12,[20]]]],0,[[]],[[]],[[]],[[]],[65,137],[[]],[[],119],[[]],[[]],[[]],[144,142],[[]],[[]],[[]],[22,123],[[[15,[14]]],138],[[]],[[[15,[14]]],139],[[]],[[],140],[106,140],[[]],[[],124],[110,124],[[]],[[],125],[65,125],[[]],[145,141],[[]],[[]],[[]],[[]],[81,128],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[146,143],[[]],[[]],[[],103],[110,103],[65,135],[[],135],[[]],[[]],[147,116],[[]],[[[30,[22]]],134],[148,[[12,[133,149]]]],[[[30,[148]]],[[12,[133,149]]]],[[37,37,37],119],[[37,37,37,37],119],[[64,64,64,64],127],[[],[[5,[58]]]],[133,[[5,[58]]]],[[],26],[[],26],[[],26],[[],26],[118],[121],[122],[59],[127,64],[26,132],[[],59],[133,59],0,0,[140],[103],[135],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[150],[[],[[31,[22]]]],[[],16],[133,16],[121,16],[121,16],[[],16],[133,16],[[],32],0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],60],[133,60],0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,[[26,22],132],[[64,64,64],137],[[64,64],124],[[64,64,64],125],[[64,64,64,64],141],[[59,[15,[132,14]],131,60,[5,[64]]],133],[[[30,[22]],[5,[22]]],134],[[64,64,64],135],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[151,5],0,[[],11],[133,11],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[118,118],[[5,[8]]]],[[121,121],[[5,[8]]]],[[122,122],[[5,[8]]]],[[59,59],[[5,[8]]]],0,[34],[34],[[],59],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[137,12],[118,12],[119,12],[120,12],[142,12],[121,12],[122,12],[123,12],[138,12],[139,12],[140,12],[141,12],[59,12],[132,12],[60,12],[103,12],[135,12],[136,12],[[]],[133],0,0,[143,[[5,[45]]]],[116,[[5,[45]]]],[121,[[5,[121]]]],[[[15,[37,14]]],[[12,[133,149]]]],[[[152,[61]]],[[12,[133,149]]]],0,[119],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[127],0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[155,[[154,[153]]]]],[[12,[133]]]],[[[155,[[156,[82]]]]],[[12,[133]]]],[[[155,[[156,[26]]]]],[[12,[133]]]],[[[155,[[154,[26]]]]],[[12,[133]]]],[[[155,[[156,[153]]]]],[[12,[133]]]],[[[155,[[154,[37]]]]],[[12,[133]]]],[[[155,[[156,[37]]]]],[[12,[133]]]],[[[155,[[154,[113]]]]],[[12,[133]]]],[[[155,[[154,[81]]]]],[[12,[133]]]],[[[155,[[156,[81]]]]],[[12,[133]]]],[[[155,[[156,[113]]]]],[[12,[133]]]],[[],12],[[[155,[[154,[82]]]]],[[12,[133]]]],[[[155,[[154,[64]]]]],[[12,[133]]]],[[[155,[[154,[157]]]]],[[12,[133]]]],[[[155,[[156,[157]]]]],[[12,[133]]]],[[[155,[[156,[64]]]]],[[12,[133]]]],[[[155,[[154,[158]]]]],[[12,[133]]]],[[[155,[[154,[159]]]]],[[12,[133]]]],[[[155,[[156,[159]]]]],[[12,[133]]]],[[[155,[[156,[158]]]]],[[12,[133]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[26,132],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[136,64],0,[127,64],[26,132],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[103,64],[135,64],[136,64],0,0,0,0,0,[103,64],[135,64],[136,64],0,0,0,0,0,[135,64],[136,64],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[5,[105]]],[[5,[105]]]],[105,[[12,[77]]]],[160,161],[162,161],[160,[[164,[163]]]],[162,[[164,[163]]]],[160,[[165,[163,14]]]],[162,[[165,[163,14]]]],[160,161],[162,161],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,0,0,[160,101],[[],101],[162,101],0,0,[[],160],[[],162],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[11],0,0,0,0,0,0,0,0,0,0,[[160,19],[[12,[20]]]],[[162,19],[[12,[20]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[166],[[]],[167],[[]],0,0,0,[160,11],[162,11],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],160],[[],162],[[]],[168,5],[169,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[160],[162],[[160,11]],[[162,11]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[160],[162],[160,[[12,[77]]]],[162,[[12,[77]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[160,5],[[12,[77]]]],[[162,5],[[12,[77]]]],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[160,[[5,[170]]]],[162,[[5,[170]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[104],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[171,171],[172,172],[173,173],[104,104],[107,107],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[107,3],[[],[[12,[171]]]],[[],[[12,[172]]]],[[],[[12,[173]]]],[[],[[12,[104]]]],[[],[[12,[107]]]],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[[171,171],16],[[172,172],16],[[173,173],16],[[104,104],16],[[107,107],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[171,19],[[12,[20]]]],[[172,19],[[12,[20]]]],[[172,19],[[12,[20]]]],[[173,19],[[12,[20]]]],[[104,19],[[12,[20]]]],[[104,19],[[12,[20]]]],[[107,19],[[12,[20]]]],[[]],[[]],[[]],[[]],[[]],[11,172],[16,107],[3,[[12,[104]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[171,3],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[173,172],104],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[171,12],[172,12],[173,12],[104,12],[107,12],[171,3],0,[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],12],[37,[[12,[171,116]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[50],[67],[11,[[15,[119,14]]]],[11,[[15,[121,14]]]],[47,[[15,[121,14]]]],[11,[[15,[22,14]]]],[11,[[15,[124,14]]]],[11,[[15,[127,14]]]],[11,[[15,[135,14]]]],0,0,[[174,13],[[12,[40]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[],5],[[],5],[[],5],[[],5],[11],[11],[11],[11],[[]],[[]],[11],[11],[[32,175],[[12,[40]]]],[174,[[12,[40]]]],[[]],[[]],[[],11],[[],11],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]],[[],[[12,[174,40]]]],[[],[[12,[[177,[176]],40]]]],[177,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[1],[178,16],[178,16],0,[178,178],[178],[178,61],[178],[178,179],[178,3],[178,180],[[[181,[178]]],[[178,[181,181]]]],[[[181,[178]]],[[178,[181,181]]]],[178],[178],[178,179],[178,61],[178,3],[178,180],[178,178],[[]],0,[[]],[[]],0,[[]],[178,[[5,[45]]]],[[],5],[[],5],0,[[],182],[178,178],[[178,178]],[[]],[[178,178],8],[178],0,[[178,11]],[178,11],0,[178],[11],[11],[178],[178,3],[[]],[178],[178],[11],[178],[178],[178],[[178,178],16],[[],16],[[],16],0,[[178,3]],[[178,3]],[178],[[[178,[12,12]]],[[12,[178]]]],[178],[[[178,[5,5]]],[[5,[178]]]],[[[178,[12,12]]],[[12,[178]]]],[178],0,[178,[[12,[183]]]],[178,5],[178,5],[178,178],[178,[[12,[183]]]],[[178,19],[[12,[20]]]],[[178,19],[[12,[20]]]],[178],[178],[[]],[12,178],[[],26],[178],[[],11],[178,12],[[]],[[]],[178],[[]],[178,178],[[]],[[],[[15,[22,14]]]],0,[178,16],[178,16],[178,5],[178,5],[178,178],[178],[178],[178],[178,11],[178,11],[[],5],[[]],[178,178],[178,178],[178,178],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[178,5],[178,5],[[],184],[[],185],[[],184],[[],185],[[178,11],5],0,[178,[[5,[11]]]],[[]],[[]],[178],[[178,178],[[5,[8]]]],[178],[[[181,[178]],186],187],[178,[[5,[11]]]],[34],[178,[[12,[11,183]]]],[178,[[12,[183]]]],[[],12],[[178,22],[[12,[11,183]]]],[[178,15],[[12,[11,183]]]],[[178,22],[[12,[11,183]]]],[[178,37,15],[[12,[11,183]]]],[178,5],[178],[178,5],[178,178],[178],[178],[178],[[]],[[]],0,[[178,188],[[12,[26,183]]]],[178],[178,[[5,[45]]]],[[],189],0,[[]],[[],22],0,[[],12],[[],12],[[],[[12,[[164,[163]],77]]]],[[],[[12,[[190,[[165,[163,14]]]],77]]]],[[],[[12,[[190,[[164,[163]]]],77]]]],[[],[[12,[[165,[163,14]],77]]]],[[],[[12,[[190,[[165,[163,14]]]],77]]]],[[],[[12,[[164,[163]],77]]]],[[],[[12,[[190,[[164,[163]]]],77]]]],[[],[[12,[[165,[163,14]],77]]]],[[181,186],187],[[],46],0,[178],[178],[[]],[[]],[[],5],0,[[]],[178],[[]],[[]],[178,[[12,[11,183]]]],[178,[[12,[183]]]],[[],12],[[178,191],[[12,[183]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[192,192],[[192,192],192],[[[192,[193]],192],[[192,[193]]]],[[],16],[192],[194],[195],[196],[197,[[164,[163]]]],[196,[[164,[163]]]],[198,[[164,[163]]]],[199,[[164,[163]]]],[200,[[164,[163]]]],[201,[[164,[163]]]],[202,[[164,[163]]]],[203,[[164,[163]]]],[192,[[164,[163]]]],[204,[[164,[163]]]],[205,[[164,[163]]]],[194,[[164,[163]]]],0,[[],161],[[],161],[206,161],[207,161],[197,161],[208,161],[196,161],[209,161],[198,161],[210,161],[199,161],[211,161],[200,161],[212,161],[201,161],[202,161],[203,161],[195,161],[192,161],[213,161],[204,161],[205,161],[214,161],[215,161],[194,161],[[],161],[197,161],[196,161],[198,161],[199,161],[200,161],[201,161],[202,161],[203,161],[192,161],[204,161],[205,161],[194,161],[[],[[164,[163]]]],[206,[[164,[163]]]],[207,[[164,[163]]]],[208,[[164,[163]]]],[209,[[164,[163]]]],[210,[[164,[163]]]],[211,[[164,[163]]]],[212,[[164,[163]]]],[195,[[164,[163]]]],[213,[[164,[163]]]],[214,[[164,[163]]]],[215,[[164,[163]]]],[[],[[165,[163,14]]]],[206,[[165,[163,14]]]],[207,[[165,[163,14]]]],[208,[[165,[163,14]]]],[209,[[165,[163,14]]]],[210,[[165,[163,14]]]],[211,[[165,[163,14]]]],[212,[[165,[163,14]]]],[195,[[165,[163,14]]]],[213,[[165,[163,14]]]],[214,[[165,[163,14]]]],[215,[[165,[163,14]]]],[[],161],[206,161],[207,161],[208,161],[209,161],[210,161],[211,161],[212,161],[195,161],[213,161],[214,161],[215,161],[163,163],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[197,[[165,[163,14]]]],[196,[[165,[163,14]]]],[198,[[165,[163,14]]]],[199,[[165,[163,14]]]],[200,[[165,[163,14]]]],[201,[[165,[163,14]]]],[202,[[165,[163,14]]]],[203,[[165,[163,14]]]],[192,[[165,[163,14]]]],[204,[[165,[163,14]]]],[205,[[165,[163,14]]]],[194,[[165,[163,14]]]],[[],[[165,[216,14]]]],[[],[[165,[217,14]]]],[206,11],[210,11],[195,11],[214,11],[215,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11,[[12,[218]]]],[11,[[12,[218]]]],[[[192,[193]],192],[[192,[193]]]],[192,192],[[192,192],192],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[192,192],192],[[[192,[193]],192],[[192,[193]]]],[192,192],[[[192,[193]],192],[[192,[193]]]],[[192,192],192],[192,192],[192,192],[[192,192],192],[192,192],[[[192,[193]],192],[[192,[193]]]],[[192,192],192],[[],182],[163,[[165,[163,14]]]],[163,[[165,[163,14]]]],[206,206],[207,207],[197,197],[208,208],[196,196],[198,198],[210,210],[199,199],[211,211],[200,200],[212,212],[201,201],[202,202],[203,203],[195,195],[192,192],[204,204],[205,205],[214,214],[215,215],[194,194],[219,219],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],101],[[],101],[206,101],[207,101],[197,101],[197,101],[208,101],[196,101],[196,101],[209,101],[198,101],[198,101],[210,101],[199,101],[211,101],[200,101],[212,101],[201,101],[202,101],[203,101],[195,101],[192,101],[192,101],[213,101],[204,101],[205,101],[214,101],[215,101],[194,101],[194,101],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],206],[[],207],[[],208],[[],209],[[],212],[[],195],[[],192],[[],214],[[],215],[[],194],[[],101],[[],101],[[],101],[[],101],[[101,11],101],[101,101],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[[192,[193]],192],[[192,[193]]]],[[192,192],192],[192,192],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],0,[[163,194],16],[[163,192],16],[[163,197],16],[[163,163],16],[[207,207],16],[[197,163],16],[[197,197],16],[[208,208],16],[[196,163],16],[[196,196],16],[[198,163],16],[[198,198],16],[[210,210],16],[[199,199],16],[[199,163],16],[[200,200],16],[[200,163],16],[[201,201],16],[[201,163],16],[[202,202],16],[[202,163],16],[[203,163],16],[[203,203],16],[[195,195],16],[[192,192],16],[[192,163],16],[[204,163],16],[[204,204],16],[[205,163],16],[[205,205],16],[[214,214],16],[[194,163],16],[[194,194],16],[[163,163],16],[206],[207],[208],[195],[214],[215],[[195,11,5]],[195],[206],[207],[208],[195],[214],[215],[206],[207],[208],[195],[214],[215],[207],[208],[195],[214],[207],[208],[195],[214],[207],[214],[202,165],0,[204],[205,15],0,[[163,19],[[12,[20]]]],[[206,19],[[12,[20]]]],[[207,19],[[12,[20]]]],[[197,19],[[12,[20]]]],[[208,19],[[12,[20]]]],[[196,19],[[12,[20]]]],[[209,19],[[12,[20]]]],[[198,19],[[12,[20]]]],[[210,19],[[12,[20]]]],[[199,19],[[12,[20]]]],[[211,19],[[12,[20]]]],[[200,19],[[12,[20]]]],[[212,19],[[12,[20]]]],[[201,19],[[12,[20]]]],[[202,19],[[12,[20]]]],[[203,19],[[12,[20]]]],[[195,19],[[12,[20]]]],[[192,19],[[12,[20]]]],[[213,19],[[12,[20]]]],[[204,19],[[12,[20]]]],[[205,19],[[12,[20]]]],[[214,19],[[12,[20]]]],[[215,19],[[12,[20]]]],[[194,19],[[12,[20]]]],[[219,19],[[12,[20]]]],[[]],[[]],[206,207],[[],207],[220,197],[[]],[207,197],[[],197],[206,197],[[],208],[[]],[[],196],[[]],[208,196],[221,196],[[]],[[],209],[222],[[]],[223,198],[209,198],[[],210],[[]],[[],199],[210,199],[224,199],[[]],[[]],[225,200],[[]],[211,200],[[]],[212,201],[226,201],[[]],[[]],[227,203],[[]],[101,195],[[]],[[],195],[[]],[195,192],[228,192],[[],192],[[]],[229,204],[[]],[213,204],[[]],[230,205],[215,214],[[]],[[],214],[[]],[231,194],[215,194],[214,194],[[]],[[],194],[[]],[[232,[5,[232]]],196],[[233,[5,[232]]],192],[[[233,[82]],[233,[37]],[5,[232]]],[[197,[82]]]],[[[233,[82]],[233,[37]],[5,[232]]],[[194,[82]]]],[234],[234],[[]],[[]],[[],206],[[],207],[[],197],[[],208],[[],196],[11,199],[[],195],[[],192],[[],214],[[],215],[[],194],[[],196],[[],196],[[],192],[[],192],[[],207],[[],197],[[],214],[[],194],[[],197],[[],208],[[],196],[[],199],[[],195],[[],192],[[],194],[234],[[],206],[[],207],[[],197],[[],208],[[],196],[[],195],[[],192],[[],214],[[],215],[[],194],[[],206],[[],207],[[],197],[[],208],[[],196],[[],195],[[],192],[[],214],[[],215],[[],194],[[],207],[[],197],[[],208],[[],196],[[],195],[[],192],[[],214],[[],194],[[],207],[[],208],[[],196],[[],195],[[],192],[[],214],[[],192],[[[15,[14]]],195],[[[15,[14]]],192],[[197,11],5],[[196,11],5],[[[201,[82]],11],5],[[192,11],5],[[194,11],5],[101,17],[[163,11],11],[101,101],[[163,3],[[165,[235,14]]]],[101],[101],[192,5],[[197,11],5],[[196,11],5],[[[201,[82]],11],5],[[192,11],5],[[194,11],5],[[163,3],[[165,[235,14]]]],[[[197,[82]]],11],[[[201,[82]]],11],[[[194,[82]]],11],0,[[205,11]],0,[[205,11]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[207,[[164,[163]]]],[208,[[164,[163]]]],[209,[[164,[163]]]],[212,[[164,[163]]]],[195,[[164,[163]]]],[213,[[164,[163]]]],[214,[[164,[163]]]],[209,[[165,[163,14]]]],[212,[[165,[163,14]]]],[204],[214],[206],[196],[195],[192],[213],[215],[206],[197],[208],[196],[196],[198],[210],[199],[200],[201],[202],[192],[192],[204],[205],[214],[215],[194],[[]],[197,[[178,[197,207]]]],[196,[[178,[196,208]]]],[192,[[178,[192,195]]]],[194,[[178,[194,214]]]],[[],[[15,[22,14]]]],[163,16],[[],16],[[],16],[11,16],[11,16],[11,16],[11,16],[11,16],[11,16],[198,16],[163,[[12,[16,40]]]],[101,16],[11,16],[11,16],[11,16],[11,16],[11,16],[11,16],[11,16],[206,[[219,[206]]]],[207,[[237,[[219,[206]],236]]]],[197,[[237,[[219,[197]],236]]]],[208,[[237,[16,236,236]]]],[196,[[237,[16,236,236]]]],[198,[[237,[[165,[238,14]],239,236]]]],[210,[[237,[[240,[37]],236]]]],[199,[[237,[[240,[37]],236]]]],[200,[[237,[[165,[163,14]],[219,[200]],236]]]],[201,[[237,[[165,[163,14]],[219,[201]],236]]]],[202,[[237,[[165,[163,14]],241,236]]]],[195,[[237,[242,236]]]],[192,[[237,[242,236]]]],[204,[[237,[[15,[[165,[238,14]],14]],243,236]]]],[205,244],[214,[[237,[3,[219,[215]],236]]]],[215,[[219,[215]]]],[194,[[237,[3,[219,[194]],236]]]],[198,[[12,[[237,[245,236]],77]]]],[210,[[240,[37]]]],[[198,11],11],[209,195],[198,192],0,0,[198,[[0,[246,247]]]],[198,[[0,[246,247]]]],[[],11],[[],11],[206,11],[206,11],[207,11],[197,11],[197,11],[208,11],[196,11],[196,11],[209,11],[198,11],[198,11],[210,11],[210,11],[199,11],[199,11],[211,11],[211,11],[200,11],[200,11],[212,11],[212,11],[201,11],[201,11],[202,11],[202,11],[203,11],[195,11],[192,11],[192,11],[213,11],[204,11],[205,11],[205,11],[214,11],[214,11],[215,11],[215,11],[194,11],[194,11],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[209,248],0,0,[[[192,[193]],192],[[192,[193]]]],[192,192],[[192,192],192],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[211],[212],[213,15],[[],206],[[],207],[[101,249,[233,[37]],[5,[232]]],197],[[],208],[[101,232,[5,[232]]],196],[[],209],[11,210],[[101,[233,[37]],[5,[232]]],199],[11,211],[[101,[165,[163,14]],[5,[232]]],200],[[],212],[[101,249,[165,[163,14]],[5,[232]]],201],[[101,[249,[159]],[165,[163,14]],[5,[232]]],202],[[101,11],203],[[],195],[[101,233,[5,[232]]],192],[[101,[15,[[165,[250,14]],14]]],213],[[101,[15,[[165,[163,14]],14]],[5,[232]]],204],[[101,[233,[158]],[15,[[165,[163,14]],14]],[5,[[233,[159]]]]],205],[[],214],[[],215],[[101,249,[233,[37]],[5,[232]]],194],[[],219],[101,197],[101,196],[101,198],[101,199],[101,200],[101,201],[101,202],[101,203],[101,192],[101,204],[101,205],[101,194],[101,[[165,[163,14]]]],[[101,11],211],[[101,11],212],[[101,11],197],[[101,11],196],[[101,11],198],[[101,11],199],[[101,11],200],[[101,11],201],[[101,11],202],[[101,11],203],[[101,11],192],[[101,11],204],[[101,11],205],[[101,11],194],[[101,11],[[165,[163,14]]]],[[101,251,[15,[37,14]],[5,[170]]],214],[[101,251,[15,[37,14]]],215],[[101,249,[233,[37]],[5,[232]]],194],[11,212],[[3,16,11],211],[[3,16],212],[219,5],[219,5],[[],184],[[],185],[[],184],[[],185],[[219,11],5],[[],11],0,[[]],[206,251],[207,251],[197],[197,249],[212,251],[201,249],[202,249],[205,[[5,[233]]]],[214,251],[215,251],[194],[194,249],0,0,0,0,0,0,0,0,0,[[192,192]],[192],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[192,192]],[192],[192],[[192,192]],[206,[[5,[[15,[37,14]]]]]],[207,[[5,[[15,[37,14]]]]]],[208,[[5,[16]]]],[210,[[5,[[15,[37,14]]]]]],[195,5],[214,[[5,[22]]]],[215,[[5,[22]]]],[206],[[207,5]],[[208,[5,[16]]]],[[210,5]],[[195,5]],[[213,16]],[[214,5]],[215],[[]],[206],[207],[208],[209],[209],[210],[211],[212],[195],[213],[214],[215],[192,192],[[192,192],192],[11],[[206,11,11]],[[206,11]],[[207,11]],[[207,11,11]],[[208,11]],[[208,11]],[[209,11]],[[209,11]],[[210,11]],[[210,11]],[[211,11]],[[211,11]],[[212,11]],[[212,11]],[[195,11]],[[195,11]],[[213,11]],[[213,11]],[[214,11]],[[214,11,11]],[[215,11]],[[215,11,11]],[[[192,[193]],192],[[192,[193]]]],[[192,192],192],[192,192],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[192,192],[[[192,[193]],192],[[192,[193]]]],[[192,192],192],[[[192,[193]],192],[[192,[193]]]],[192,192],[[192,192],192],[[208,11,[5,[16]]]],[[195,11,5]],[[195,11,5]],[[197,[5,[232]]]],[[196,[5,[232]]]],[[198,[5,[232]]]],[[199,[5,[232]]]],[[200,[5,[232]]]],[[201,[5,[232]]]],[[202,[5,[232]]]],[[195,[5,[170]]]],[[192,[5,[232]]]],[[204,[5,[232]]]],[[194,[5,[232]]]],[[196,232]],[[195,[15,[14]]]],[[192,233]],[[]],[206],[206],[207],[207],[208],[208],[209],[209],[210],[210],[211],[211],[212],[212],[195],[195],[213],[213],[214],[214],[215],[215],[210,11],[199,11],[211,11],[200,11],0,0,0,0,[219],[[11,11],[[165,[163,14]]]],[[197,11,11],[[165,[163,14]]]],[[197,11,11],197],[[196,11,11],196],[[196,11,11],[[165,[163,14]]]],[[198,11,11],198],[[198,11,11],[[165,[163,14]]]],[[199,11,11],199],[[199,11,11],[[165,[163,14]]]],[[200,11,11],[[165,[163,14]]]],[[200,11,11],200],[[201,11,11],201],[[201,11,11],[[165,[163,14]]]],[[202,11,11],[[165,[163,14]]]],[[202,11,11],202],[[203,11,11],[[165,[163,14]]]],[[203,11,11],203],[[192,11,11],192],[[192,11,11],[[165,[163,14]]]],[[204,11,11],204],[[204,11,11],[[165,[163,14]]]],[[205,11,11],205],[[205,11,11],[[165,[163,14]]]],[[194,11,11],[[165,[163,14]]]],[[194,11,11],194],[[11,11],[[165,[163,14]]]],[[197,11,11],[[165,[163,14]]]],[[197,11,11],197],[[196,11,11],[[165,[163,14]]]],[[196,11,11],196],[[198,11,11],[[165,[163,14]]]],[[198,11,11],198],[[199,11,11],199],[[199,11,11],[[165,[163,14]]]],[[200,11,11],200],[[200,11,11],[[165,[163,14]]]],[[201,11,11],[[165,[163,14]]]],[[201,11,11],201],[[202,11,11],202],[[202,11,11],[[165,[163,14]]]],[[203,11,11],[[165,[163,14]]]],[[192,11,11],192],[[192,11,11],[[165,[163,14]]]],[[204,11,11],[[165,[163,14]]]],[[204,11,11],204],[[205,11,11],[[165,[163,14]]]],[[205,11,11],205],[[194,11,11],194],[[194,11,11],[[165,[163,14]]]],[[],189],[[192,192],192],[[[192,[193]],192],[[192,[193]]]],[192,192],[[199,101],199],[[195,101],195],[[192,101],192],[[],[[165,[163,14]]]],[197,[[165,[163,14]]]],[196,[[165,[163,14]]]],[198,[[165,[163,14]]]],[199,[[165,[163,14]]]],[200,[[165,[163,14]]]],[201,[[165,[163,14]]]],[202,[[165,[163,14]]]],[203,[[165,[163,14]]]],[192,[[165,[163,14]]]],[204,[[165,[163,14]]]],[205,[[165,[163,14]]]],[194,[[165,[163,14]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[12,[77]]]],[206,[[12,[77]]]],[207,[[12,[77]]]],[208,[[12,[77]]]],[209,[[12,[77]]]],[211,[[12,[77]]]],[212,[[12,[77]]]],[195,[[12,[77]]]],[214,[[12,[77]]]],[215,[[12,[77]]]],[[],[[12,[77]]]],[[206,206],[[12,[77]]]],[[207,207],[[12,[77]]]],[[208,208],[[12,[77]]]],[[210,210],[[12,[77]]]],[[211,211],[[12,[77]]]],[[212,212],[[12,[77]]]],[[195,195],[[12,[77]]]],[[214,214],[[12,[77]]]],[[215,215],[[12,[77]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],[[12,[206,77]]]],[11,[[12,[210,77]]]],[11,[[12,[199,77]]]],[[],[[12,[215,77]]]],[[192,[165,[163,14]]],[[12,[198,77]]]],[[],[[12,[207]]]],[[],[[12,[197]]]],[[],[[12,[208]]]],[[],[[12,[196]]]],[[],[[12,[195]]]],[[],[[12,[214]]]],[[],[[12,[194]]]],[[],[[12,[207]]]],[[],[[12,[197]]]],[[],[[12,[208]]]],[[],[[12,[196]]]],[[],[[12,[195]]]],[[],[[12,[214]]]],[[],[[12,[194]]]],[101,[[12,[17,77]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],[[12,[[164,[163]],77]]]],[[],[[12,[[190,[[164,[163]]]],77]]]],[[],[[12,[[165,[163,14]],77]]]],[[],[[12,[[190,[[165,[163,14]]]],77]]]],[[],[[12,[[164,[163]],77]]]],[[],[[12,[[190,[[164,[163]]]],77]]]],[[],[[12,[[165,[163,14]],77]]]],[[],[[12,[[190,[[165,[163,14]]]],77]]]],[[101,251,[15,[37,14]]],[[12,[206,77]]]],[[101,251,[15,[37,14]],[5,[170]]],[[12,[207,77]]]],[[101,249,[233,[37]],[5,[232]]],[[12,[197,77]]]],[[101,170,[5,[170]]],[[12,[208,77]]]],[[101,232,[5,[232]]],[[12,[196,77]]]],[[101,192,[165,[163,14]]],[[12,[198,77]]]],[[101,[15,[37,14]],[5,[170]]],[[12,[210,77]]]],[[101,[233,[37]],[5,[232]]],[[12,[199,77]]]],[[101,[165,[163,14]],[5,[232]]],[[12,[200,77]]]],[[101,249,[165,[163,14]],[5,[232]]],[[12,[201,77]]]],[[101,[249,[159]],[165,[163,14]],[5,[232]]],[[12,[202,77]]]],[[101,11],[[12,[203,77]]]],[[101,[15,[14]],[5,[170]]],[[12,[195,77]]]],[[101,233,[5,[232]]],[[12,[192,77]]]],[[101,[15,[[165,[250,14]],14]],[5,[170]]],[[12,[213,77]]]],[[101,[15,[[165,[163,14]],14]],[5,[232]]],[[12,[204,77]]]],[[101,[233,[158]],[15,[[165,[163,14]],14]],[5,[[233,[159]]]]],[[12,[205,77]]]],[[101,251,[15,[37,14]],[5,[170]]],[[12,[214,77]]]],[[101,251,[15,[37,14]]],[[12,[215,77]]]],[[101,249,[233,[37]],[5,[232]]],[[12,[194,77]]]],[[101,192,[165,[163,14]]],[[12,[198,77]]]],[[101,249,[233,[37]],[5,[232]]],[[12,[194,77]]]],[[],[[12,[77]]]],[206,[[12,[77]]]],[[207,5],[[12,[77]]]],[[208,[5,[16]]],[[12,[77]]]],[[209,5],[[12,[77]]]],[[210,5],[[12,[77]]]],[[211,5],[[12,[77]]]],[[212,5],[[12,[77]]]],[[195,5],[[12,[77]]]],[[214,5],[[12,[77]]]],[215,[[12,[77]]]],[211,[[12,[77]]]],[212,[[12,[77]]]],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[205,233],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],[[5,[232]]]],[[],[[5,[170]]]],[206,[[5,[170]]]],[207,[[5,[170]]]],[197,[[5,[232]]]],[197,[[5,[232]]]],[208,[[5,[170]]]],[196,[[5,[232]]]],[196,[[5,[232]]]],[209,[[5,[170]]]],[198,[[5,[232]]]],[198,[[5,[232]]]],[210,[[5,[170]]]],[199,[[5,[232]]]],[199,[[5,[232]]]],[211,[[5,[170]]]],[200,[[5,[232]]]],[200,[[5,[232]]]],[212,[[5,[170]]]],[201,[[5,[232]]]],[201,[[5,[232]]]],[202,[[5,[232]]]],[203,[[5,[232]]]],[195,[[5,[170]]]],[192,[[5,[232]]]],[192,[[5,[232]]]],[213,[[5,[170]]]],[204,[[5,[232]]]],[204,[[5,[232]]]],[205,[[5,[232]]]],[214,[[5,[170]]]],[215,[[5,[170]]]],[194,[[5,[232]]]],[194,[[5,[232]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[206,11]],[[197,11]],[[196,11],16],[[198,11],[[165,[238,14]]]],[[210,11]],[[199,11]],[[200,11],[[165,[163,14]]]],[[201,11],[[165,[163,14]]]],[[202,11],[[165,[163,14]]]],[[192,11]],[[213,11],5],[[205,11],[[165,[238,14]]]],[[214,11],3],[[215,11],3],[[194,11],3],[[206,11]],[[197,11]],[[196,11],16],[[210,11]],[[199,11]],[[200,11],[[165,[163,14]]]],[[201,11],[[165,[163,14]]]],[[202,11],[[165,[163,14]]]],[[192,11]],[[205,11],[[165,[238,14]]]],[[214,11],3],[[215,11],3],[[194,11],3],[[]],[206,15],[207,15],[197,233],[197],[208,170],[196,232],[209],[198,165],[210,15],[199,233],[211],[200,165],[212],[201,165],[195,15],[192,233],[213,15],[204],[214,15],[215,15],[194],[194,233],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[207,[[219,[206]]]],[197,[[219,[197]]]],[208,236],[196,236],[198,239],[199,[[240,[37]]]],[200,[[219,[200]]]],[201,[[219,[201]]]],[202,241],[195,242],[192,242],[204,243],[214,[[219,[215]]]],[194,[[219,[194]]]],[198,[[12,[245,77]]]],[210],[195],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[11,11],206],[[11,11],207],[[11,11],214],[[11,11],215],[11,206],[11,207],[11,208],[[11,11],210],[11,212],[11,195],[11,214],[11,215],[[11,101],195],[[[5,[232]]],[[165,[163,14]]]],[[197,[5,[232]]],197],[[197,[5,[232]]],[[165,[163,14]]]],[[196,[5,[232]]],196],[[196,[5,[232]]],[[165,[163,14]]]],[[198,[5,[232]]],[[165,[163,14]]]],[[198,[5,[232]]],198],[[199,[5,[232]]],[[165,[163,14]]]],[[199,[5,[232]]],199],[[200,[5,[232]]],200],[[200,[5,[232]]],[[165,[163,14]]]],[[201,[5,[232]]],[[165,[163,14]]]],[[201,[5,[232]]],201],[[202,[5,[232]]],[[165,[163,14]]]],[[202,[5,[232]]],202],[[203,[5,[232]]],[[165,[163,14]]]],[[192,[5,[232]]],[[165,[163,14]]]],[[192,[5,[232]]],192],[[204,[5,[232]]],204],[[204,[5,[232]]],[[165,[163,14]]]],[[205,[5,[232]]],[[165,[163,14]]]],[[194,[5,[232]]],[[165,[163,14]]]],[[194,[5,[232]]],194],[[196,232],196],[[192,233],192],[[192,192],192],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[192,192],192],[[192,192],192],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[220,[[164,[163]]]],[230,[[164,[163]]]],[221,[[164,[163]]]],[224,[[164,[163]]]],[227,[[164,[163]]]],[228,[[164,[163]]]],[226,[[164,[163]]]],[229,[[164,[163]]]],[225,[[164,[163]]]],[231,[[164,[163]]]],[223,[[164,[163]]]],[[],[[164,[163]]]],[[],[[165,[163,14]]]],[220,[[165,[163,14]]]],[230,[[165,[163,14]]]],[221,[[165,[163,14]]]],[224,[[165,[163,14]]]],[227,[[165,[163,14]]]],[228,[[165,[163,14]]]],[226,[[165,[163,14]]]],[229,[[165,[163,14]]]],[225,[[165,[163,14]]]],[231,[[165,[163,14]]]],[223,[[165,[163,14]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,[[],227],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[11,11,11]],[[220,11,11,11]],[[230,11,11,11]],[[221,11,11,11]],[[224,11,11,11]],[[227,11,11,11]],[[228,11,11,11]],[[226,11,11,11]],[[229,11,11,11]],[[225,11,11,11]],[[231,11,11,11]],[[223,11,11,11]],0,0,0,0,0,0,0,0,0,[11],[[220,11]],[[230,11]],[[221,11]],[[224,11]],[[227,11]],[[228,11]],[[226,11]],[[229,11]],[[225,11]],[[231,11]],[[223,11]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],11],[220,11],[230,11],[221,11],[224,11],[227,11],[228,11],[226,11],[229,11],[225,11],[231,11],[223,11],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[16,11],[[165,[252,14]]]],[[[15,[197,14]],16,11],220],[[[15,[205,14]],11],230],[[[15,[196,14]],16,11],221],[[[15,[199,14]],16,11],224],[101,227],[[[15,[192,14]],16,11],228],[[[15,[201,14]],16,11],226],[[[15,[204,14]],16,11],229],[[[15,[200,14]],16,11],225],[[[15,[194,14]],16,11],231],[[16,11],223],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[163,163],[[12,[[165,[235,14]],77]]]],[[],8],[[64,64],8],[[81,81],8],0,0,0,[1],[1],[1],[[232,232],232],[232],[170],[170],[[]],[[]],[[]],[[232,232],232],[[170,232]],[[232,232],232],[[170,232],170],[[170,232]],[[232,232],232],[[170,232],170],[[170,232]],[[232,232],232],[[170,232],170],[[170,232]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[170,11],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],[[15,[37,14]]]],[232,253],[170],[232,232],[254,254],[170,170],[[]],[[]],[[]],[[],232],[[],170],[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[11],[11],[11],0,[[232,232],16],[[170,170],16],[[170,11,16]],[[170,232]],[[170,11,11]],[170],[170],[[232,19],[[12,[20]]]],[[254,19],[[12,[20]]]],[[170,19],[[12,[20]]]],[[],232],[[]],[170,232],[[]],[[]],[[],170],[[],[[15,[37,14]]]],[[],232],[[],170],[11,170],[11,170],[[],232],[[],170],[[],232],[[],170],[11,232],[[[15,[37,14]],11],232],[[[15,[37,14]],11],170],[[232,11],[[5,[16]]]],[[170,11],16],[[232,11],16],[[232,11],16],0,[[],11],[[],11],[[],11],[[]],[[]],[[]],[232],[232],[[]],[170],[232,[[178,[232,170]]]],[232,16],[170,16],[232,236],[170,236],[232,11],[170,11],0,0,[[],5],[[],5],[[],5],[[]],[[]],[[]],[232,170],[[],232],[232,254],[[],170],[11,232],[254,5],[254,5],[232,232],[170,170],[[254,11],5],[232,11],[170,11],[[232,11,11],11],0,[[232,232],232],[[]],[[]],[[]],[[]],[[]],[[]],[170,[[5,[16]]]],[[170,16]],[[170,16]],[[232,232,232,232],232],[[170,11]],[[]],[[]],[[]],[[]],[[]],[[]],[[170,11,16]],[[170,11,16]],[[170,11,16]],[170],[254],[[232,11,11],232],[[232,11,11],232],[[232,232,232],232],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],[[12,[232]]]],[[],[[12,[170]]]],[[],[[12,[232]]]],[[],[[12,[170]]]],[[],12],[[],12],[[],12],[[[15,[37,14]],11],[[12,[232,77]]]],[[[15,[37,14]],11],[[12,[170,77]]]],[[],46],[[],46],[[],46],[232,232],[170],[232,11],[170,11],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],0,0,[[]],[[]],[[]],[11,170],[[]],[[]],[[]],[[]],[[]],[[]],[[232,232],232],0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[165,[217,14]]]],[[],[[165,[217,14]]]],0,[11,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11,[[12,[218]]]],[11,[[12,[218]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,[[],182],[[],182],[236,236],[255,255],[256,256],[237,237],[[]],[[]],[[]],[[]],0,[[11,11],11],0,0,[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[11],0,[[11,11,19],[[12,[20]]]],[[257,19],[[12,[20]]]],[[253,19],[[12,[20]]]],[[258,19],[[12,[20]]]],[[236,19],[[12,[20]]]],[[255,19],[[12,[20]]]],[[256,19],[[12,[20]]]],[[237,19],[[12,[20]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11,16],[11,16],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[15,[22,14]]]],[[],[[15,[22,14]]]],[257,16],[[37,11],16],0,0,[257,11],[253,11],0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11,257],[[11,11],253],[11,258],[[11,11],236],[232,255],[[],256],[5,237],[[[5,[232]]],[[237,[236]]]],[257,5],[253,5],[258,5],[236,5],[255,5],[256,5],[237,5],[236,[[5,[16]]]],[256,5],[237,5],[[],184],[[],184],[[],185],[[],185],[[],184],[[],184],[[],185],[[],185],[[236,11],5],[[256,11],5],[[237,11],5],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[257],[257],[253],[253],[258],0,0,0,[[],259],[[],11],[257,11],[253,11],[253,11],[258,11],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[37,11,16],37],[[11,16]],[[11,16]],[257],[253],[258],[236],[256],[237],[255,11],0,0,[[],189],[[],189],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],[[12,[[164,[163]],77]]]],[[],[[12,[[165,[163,14]],77]]]],[[],[[12,[[190,[[165,[163,14]]]],77]]]],[[],[[12,[[190,[[164,[163]]]],77]]]],[[],[[12,[[190,[[164,[163]]]],77]]]],[[],[[12,[[190,[[165,[163,14]]]],77]]]],[[],[[12,[[165,[163,14]],77]]]],[[],[[12,[[164,[163]],77]]]],[[],[[12,[[165,[163,14]],77]]]],[[],[[12,[[164,[163]],77]]]],[[],[[12,[[190,[[165,[163,14]]]],77]]]],[[],[[12,[[190,[[164,[163]]]],77]]]],[[],[[12,[[164,[163]],77]]]],[[],[[12,[[190,[[164,[163]]]],77]]]],[[],[[12,[[190,[[165,[163,14]]]],77]]]],[[],[[12,[[165,[163,14]],77]]]],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[237,256],[237],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1],[[],5],[[],[[12,[77]]]],[233,[[12,[77]]]],[233],[[]],[[]],[[]],[[]],[[],5],[[],5],[233,233],[[]],0,[[],101],[[],101],[[],233],[233],[11],[11],[[]],[11],[[233,233],16],[[233,19],[[12,[20]]]],[[[15,[14]]],233],[[]],[[],233],[233,[[5,[15]]]],[[],11],[[]],[233],[[],[[15,[22,14]]]],[233,16],[233,11],0,[[],5],[[]],[[],233],[[]],[[]],[233,11],0,[[]],[[]],[[]],[[]],[233,11],[233,11],[[233,11,11],233],[[233,11,11],233],[[]],[[],12],[[],12],[[],[[12,[[190,[[165,[163,14]]]],77]]]],[[],[[12,[[190,[[164,[163]]]],77]]]],[[],[[12,[[164,[163]],77]]]],[[],[[12,[[165,[163,14]],77]]]],[[],[[12,[[190,[[165,[163,14]]]],77]]]],[[],[[12,[[190,[[164,[163]]]],77]]]],[[],[[12,[[165,[163,14]],77]]]],[[],[[12,[[164,[163]],77]]]],[[],46],[[]],[[]],[[],5],[[]],[[]],[[]],0,[1],[190],0,[[]],[[]],[[]],[[]],[[],5],[[],5],[190,190],[[]],[190],[11],[190],[11],[[]],[11],[[190,190],16],[[],16],[[],16],[190,[[12,[[190,[[165,[163,14]]]],77]]]],[[190,19],[[12,[20]]]],[[]],[[],11],[[]],[190,[[15,[14]]]],[190,16],[190,11],[[],5],[[]],[[[15,[14]]],190],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[[15,[14]]],[[12,[190,77]]]],[[],46],[[]],[[]],[[],5],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[101,16],[101,16],[101,16],[163,11],[163,[[12,[[165,[238,14]],77]]]],[197,5],[196,[[5,[16]]]],[[]],[[]],[192,5],[194,[[5,[3]]]],[163,[[12,[[165,[238,14]],77]]]],[197,5],[196,[[5,[16]]]],[[]],[[]],[192,5],[194,[[5,[3]]]],[[]],[[]],[[]],[163,[[12,[[165,[238,14]],77]]]],[192,5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[163,163],[[165,[163,14]]]],[[]],[[163,238],[[165,[163,14]]]],0,[[101,101],16],[[101,101],16],[[101,101],16],[101,16],[[101,101],16],[[101,101],16],[[]],[[]],[[]],[[]],[[]],0,[[163,163],[[165,[163,14]]]],[[]],[[163,238],[[165,[163,14]]]],[[163,163],[[165,[163,14]]]],[[]],[[163,238],[[165,[163,14]]]],[163,[[165,[163,14]]]],[[]],[[]],[[]],[[163,163],[[165,[163,14]]]],[[]],[[]],[[]],[[]],[[163,163],[[165,[163,14]]]],[[]],[[163,238],[[165,[163,14]]]],0,[[]],[[]],[[]],0,[[192,192],192],[192,192],[[192,192],192],[192,192],[[192,192],192],[192,192],[[192,192],192],[192,192],[192,192],[[192,11],192],[[192,192],192],[192,192],[[192,192],192],[192,192],[[192,192],192],[192,192],[[192,192],192],[192,192],[192,192],[[192,192]],[192],[[192,192]],[192],[[192,192]],[192],[192,192],[[192,192],192],[192,192],[[192,192],192],[192,192],[[192,192],192],[192,192],[[192,192],192],[192,192],[[192,192],192],[192,192],[[192,192],192],[192,192],[[192,192],192],[192,192],[192,192],[[192,192],192],[192,192],[[192,192],[[12,[[192,[193]],77]]]],[[192,192],[[12,[[192,[193]],77]]]],[[192,192],[[12,[[192,[193]],77]]]],[[192,192],[[12,[[192,[193]],77]]]],[[192,192],[[192,[193]]]],[[192,192],[[192,[193]]]],[[192,192],[[192,[193]]]],[[192,192],[[192,[193]]]],[[192,192],[[192,[193]]]],[[192,192],[[192,[193]]]],[[192,260],[[192,[193]]]],[[192,192],[[192,[193]]]],[[192,260],[[192,[193]]]],[[192,192],[[192,[193]]]],[[192,192],[[192,[193]]]],[[192,192],[[192,[193]]]],[[192,192],[[192,[193]]]],[[192,192],[[192,[193]]]],[[192,192],192],[[192,260],192],[[192,192],[[12,[[192,[82]],77]]]],[[192,260],[[12,[[192,[82]],77]]]],[[192,260],192],[[192,260],[[12,[[192,[82]],77]]]],[[192,192],192],[[192,192],[[12,[[192,[82]],77]]]],[[192,192,101],192],[[192,192,101],192],[[192,192,101]],[[192,192,101],[[12,[192,77]]]],[[192,101],[[12,[192,77]]]],[[192,101],192],[[192,101],192],[[192,101]],[[192,192]],[192],[196,16],[[196,196],196],[[196,261],196],[196,16],[163,196],[163,196],[196,196],[[196,196],196],[[196,261],196],[196,16],[[196,196],196],[[196,261],196],[196,16],[[196,196],196],[[196,261],196],0,[1],[[]],[[197,101],[[12,[[197,[159]],77]]]],[197,[[12,[198,77]]]],[[197,101],[[197,[82]]]],[[197,101],[[12,[[194,[82]],77]]]],[[197,101],192],[[197,101],[[12,[194,77]]]],[196,197],[196,192],[196,194],[[]],[[]],[[101,101],16],[[163,101,262],[[12,[[165,[163,14]],77]]]],[[]],[[],5],[[],5],[262,262],[[]],[192,[[192,[82]]]],[192,[[192,[159]]]],[192,[[192,[263]]]],[[192,11,11],[[192,[193]]]],[192,192],[192,192],[[],262],[11],[11],[198,[[12,[198,77]]]],[[198,101],[[12,[198,77]]]],[198,[[165,[163,14]]]],[[]],[11],[192,[[192,[64]]]],[[192,11,11],[[192,[193]]]],[[262,19],[[12,[20]]]],[[]],[[],11],[[192,11,11],[[192,[193]]]],[[]],[[],5],[[]],[192,[[192,[263]]]],[[192,264],194],[[]],[[]],0,[[197,101],192],[[194,101],192],[[192,101],192],[192,197],[[192,101],196],[192,[[12,[198,77]]]],[[192,101],192],[[192,101],192],[192,194],[[]],[[]],[[192,264,264],[[192,[82]]]],[192,[[192,[159]]]],[192,[[192,[159]]]],[[192,264,264],[[192,[159]]]],[192,[[192,[82]]]],[192,[[192,[82]]]],[[192,264],[[192,[159]]]],[[192,264],[[192,[82]]]],[[192,264,264,5],[[192,[82]]]],[[192,264,3],[[12,[194,77]]]],[[]],[[],12],[[],12],[[],46],[[]],[[]],[[],5],[194,[[12,[[194,[159]],77]]]],[[194,101],197],[194,[[192,[159]]]],[194,[[192,[82]]]],[194,[[12,[198,77]]]],[194,[[194,[82]]]],[194,[[192,[82]]]],[[194,101],192],[[194,22],[[12,[[192,[82]],77]]]],[[]],0,[[]],[[]],[198,[[12,[198,77]]]],[[198,101],[[12,[198,77]]]],0,0,0,0,0,0,0,[101,16],[101,16],[101,16],[101,16],[101,16],[101,16],[101,16],[101,16],[101,16],[101,16],[101,16],[101,16],[[163,163],196],[[],37],[[163,163],196],[[163,238],196],[[163,238],196],[[196,[5,[232]],[5,[232]]],196],[[196,[5,[232]],[5,[232]]],196],[[]],[[]],[[163,163],196],[[],37],[[163,163],196],[[],37],[[163,238],196],[[163,238],196],[[163,163],196],[[],37],[[163,163],196],[[],37],[[163,238],196],[[163,238],196],[[163,163],196],[[],37],[[163,163],196],[[163,238],196],[[163,238],196],0,0,[[197,197],196],[[197,197],196],[197,196],[197,196],[[197,197],196],[[197,197],196],[197,196],[197,196],[[197,197],196],[[197,197],196],[197,196],[197,196],[[197,197],196],[[197,197],196],[197,196],[197,196],[[196,16],196],[[196,196],196],[[196,196],196],[[196,16],196],[[196,16],196],[[196,196],196],[[196,196],196],[[196,16],196],[[196,16],196],[[196,196],196],[[196,196],196],[[196,16],196],[[196,16],196],[[196,196],196],[[196,196],196],[[196,16],196],[[196,16],196],[192,196],[[192,192],196],[[192,192],196],[192,196],[192,196],[[192,192],196],[[192,192],196],[192,196],[192,196],[[192,192],196],[[192,192],196],[192,196],[192,196],[[192,192],196],[[192,192],196],[192,196],[192,196],[[194,194],196],[[194,194],196],[[194,3],196],[[194,3],196],[[194,194],196],[[194,194],196],[[194,3],196],[[194,3],196],[[194,194],196],[[194,194],196],[[194,3],196],[[194,3],196],[[194,194],196],[[194,194],196],[[194,3],196],[[194,3],196],[[],[[12,[[165,[163,14]],77]]]],0,[196,[[12,[[165,[235,14]],77]]]],[[163,196],[[12,[[165,[163,14]],77]]]],[[190,196],[[12,[[190,[[165,[163,14]]]],77]]]],[[196,163,163],[[12,[[165,[163,14]],77]]]],[101,16],[[163,192],[[12,[[165,[163,14]],77]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[265,265],[17,17],[266,266],[267,267],[268,268],[101,101],[269,269],[264,264],[270,270],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17,101],0,[[],268],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[265,265],16],[[17,17],16],[[266,266],16],[[267,267],16],[[268,268],16],[[101,101],16],[[269,269],16],[[264,264],16],[[270,270],16],[[266,265],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,[268,268],[[265,19],[[12,[20]]]],[[17,19],[[12,[20]]]],[[266,19],[[12,[20]]]],[[267,19],[[12,[20]]]],[[268,19],[[12,[20]]]],[[101,19],[[12,[20]]]],[[269,19],[[12,[20]]]],[[264,19],[[12,[20]]]],[[270,19],[[12,[20]]]],[[]],[[]],[[]],[[]],[[[15,[17,14]]],268],[[]],[[]],[265,101],[267,101],[[]],[[]],[[]],[271,5],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[265],[17],[266],[267],[101],[269],[264],[270],[[268,3],[[5,[11]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[269,16],0,[269,16],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[101,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,269],[101,101],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[101,266],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[17,[271,[22,22,14]]],17],[[268,[271,[22,22,14]]],268],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],5],[[],5],[11],[11],[[]],[11],[[77,19],[[12,[20]]]],[[77,19],[[12,[20]]]],[183,77],[[]],[272,77],[273,77],[274,77],[275,77],[276,77],[277,77],[[[0,[45,278,279]]],77],[[],11],[[]],[[],5],[[]],[[]],[[]],[34],[[]],[[]],[[],22],[[],12],[[],12],[[],46],[[]],[[]],[[],5],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,[11],[11],[11],[11],[11],[11],[11],[11],0,0,[[]],[[]],[[]],[[]],[11],[280],[11],[281],[11],[282],[11],[[],280],[[],281],[[],282],[[[165,[163,14]]],281],[17,280],[[[165,[32,14]],17],282],[283,17],0,0,[[280,19],[[12,[20]]]],[[281,19],[[12,[20]]]],[[282,19],[[12,[20]]]],0,[[]],[[]],[[]],[[]],0,0,0,[[281,101],[[12,[[165,[163,14]],77]]]],[280,[[12,[17,77]]]],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],0,0,[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[283,[[5,[[12,[[165,[163,14]],77]]]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[165,[282,14]]],[[12,[283,77]]]],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],192],0,0,0,0,[1],[1],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[284,284],[285,285],[[]],[[]],[[],284],[11],[11],[11],[11],0,[[]],[[]],[11],[11],[[284,284],16],[[285,285],16],0,0,[[284,19],[[12,[20]]]],[[285,19],[[12,[20]]]],[[]],[[]],[[],11],[[],11],[[]],[[]],0,[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[286,286],[287,287],[[]],[[]],0,0,0,[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[],[[12,[77]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],0,[[273,19],[[12,[20]]]],[[286,19],[[12,[20]]]],[[287,19],[[12,[20]]]],[[]],[[]],[[]],[[]],[[]],[[]],[288],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[288],[[]],[[]],0,0,[289,16],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[288,286],[289,287],0,0,[[286,[5,[[15,[11,14]]]],[5,[11]]],288],[[287,[5,[[15,[11,14]]]]],289],[288,5],[289,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[290,286,5,[5,[11]],11,15,15],[[12,[[190,[[165,[163,14]]]],77]]]],[[286,15],[[12,[[290,[82,[165,[163,14]],291]],77]]]],[[],[[12,[286,77]]]],[[],[[12,[287,77]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[288,268],[289,268],0,0,0,[288],0,[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[292,[[190,[[165,[163,14]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[293,293],[294,294],[295,295],[[]],[[]],[[]],[295,190],0,0,[[],294],[[],[[15,[284,14]]]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],0,0,0,[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],0,[[293,293],16],[[294,294],16],[[295,295],16],[[],16],[[],16],[[],16],[[],16],[295,5],0,[296,[[12,[77]]]],[297,[[12,[77]]]],0,[[293,19],[[12,[20]]]],[[294,19],[[12,[20]]]],[[295,19],[[12,[20]]]],[[]],[[]],[[]],[[]],[[]],[[],295],[[[190,[[165,[163,14]]]]],295],[[],295],[[],26],[[],26],[297,298],[293],[294],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[296],[297],0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[294,296],[[268,[5,[[15,[284,14]]]],294],297],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[268,[[15,[37,14]]]],[[297,298]],[[296,268,[5,[[15,[284,14]]]]],[[12,[77]]]],[297,[[12,[77]]]],0,[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[286,294],[[12,[297,77]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[268,[5,[[15,[284,14]]]],294],[[12,[297,77]]]],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[163,15,15,15,82,16,[5,[293]]]],[[296,190,5],[[12,[77]]]],[[297,190,5],[[12,[77]]]],0,0,0,[[],22],[[286,164],[[12,[[290,[82,[165,[163,14]],291]],77]]]],[[286,290,164,11],[[12,[[190,[[165,[163,14]]]],77]]]],0,0,0,0,[1],[1],[251],[249],[[]],[[]],[[]],[[]],[[]],[[]],[249,233],[251,11],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[251,251],[249,249],[[]],[[]],[[],251],[[],249],[11],[11],[11],[11],[[]],[[]],[11],[11],[[251,251],16],[[249,249],16],[[],16],[[],16],[[251,11]],[[251,19],[[12,[20]]]],[[249,19],[[12,[20]]]],[[[251,[159]]],[[251,[82]]]],[[]],[251,249],[249,[[249,[82]]]],[[]],[249,[[5,[251]]]],[[],11],[[],11],[[]],[[]],[251,[[15,[14]]]],[249,233],[251],[249],[251,11],[249,11],[251,11],[249,32],[[],5],[[],5],[[]],[[]],[[],251],[[],249],[[[15,[14]]],251],[233,249],[11,251],[[]],[[]],[[]],[[]],[251,5],[[251,11]],[[]],[[]],[[]],[[]],[251],[[249,11,11],249],[[251,11]],[[249,11]],[[251,11]],[[249,11]],[[]],[[]],[251,[[12,[77]]]],[[251,251],[[12,[77]]]],[[251,249,11,11],[[12,[77]]]],[[],12],[[[251,[82]]],[[12,[[251,[159]]]]]],[[[15,[14]]],[[12,[251]]]],[[],12],[249,[[12,[[249,[159]]]]]],[233,[[12,[249]]]],[[[15,[14]]],[[12,[249]]]],[[],[[12,[251,77]]]],[[],[[12,[251,77]]]],[[],12],[[],12],[251,[[12,[77]]]],[[251,11],[[12,[77]]]],[[],46],[[],46],[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]],[11,251],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[],161],[299,161],[260,161],[300,161],[301,161],[261,161],[302,161],[303,161],[304,161],[305,161],[306,161],[307,161],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[299,299],[260,260],[300,300],[301,301],[261,261],[302,302],[303,303],[304,304],[305,305],[306,306],[307,307],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],101],[299,101],[260,101],[300,101],[301,101],[261,101],[302,101],[303,101],[304,101],[305,101],[306,101],[307,101],0,0,0,0,0,0,0,[[],303],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[238,238],16],[[299,299],16],[[260,260],16],[[300,300],16],[[301,301],16],[[261,261],16],[[302,302],16],[[303,303],16],[[304,304],16],[[305,305],16],[[306,306],16],[[307,307],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[299,19],[[12,[20]]]],[[260,19],[[12,[20]]]],[[300,19],[[12,[20]]]],[[301,19],[[12,[20]]]],[[261,19],[[12,[20]]]],[[302,19],[[12,[20]]]],[[303,19],[[12,[20]]]],[[304,19],[[12,[20]]]],[[305,19],[[12,[20]]]],[[306,19],[[12,[20]]]],[[307,19],[[12,[20]]]],[[]],[[]],[5,260],[5,300],[[]],[5,301],[[]],[[]],[[[5,[16]]],261],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[299,16],[260,16],[300,16],[301,16],[261,16],[302,16],[303,16],[304,16],[305,16],[306,16],[307,16],0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[101,[5,[[165,[238,14]]]]],299],[[101,5],260],[5,300],[5,301],[[[5,[16]]],261],[[101,[5,[[165,[163,14]]]]],302],[[],303],[[101,[5,[[15,[[165,[238,14]],14]]]]],304],[[101,[5,[[165,[163,14]]]]],305],[[101,5],306],[[101,158,[165,[238,14]]],307],[[163,11],[[165,[238,14]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[260,101],260],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[307,158],0,[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[299,[[5,[165]]]],[260,5],[300,[[5,[3]]]],[301,5],[261,[[5,[16]]]],[306,5],[307,165],0,0,0,0,0,0,0,[302,165],[304],[305,[[5,[165]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[82,264,263],82],[[82,264,263],82],[159,308],[159,309],[82,308],[82,309],[3,[[12,[310,77]]]],[159,311],[159,311],[82,311],[82,311],[82,309],[82,309],[82,309],[[82,264],312],[[82,264],309],[82,309],[[264,264],81],[[194,3],[[192,[82]]]],[[3,3],[[5,[82]]]],[[194,3,22],[[12,[[192,[82]],77]]]],[[3,3],[[5,[82]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],182],[313,313],[263,263],[314,314],[315,315],[[]],[[]],[[]],[[]],[313,159],[263,159],0,[[],313],[[],263],[[],314],[[],315],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[11],0,[[313,313],16],[[263,263],16],[[314,314],16],[[315,315],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,[[313,19],[[12,[20]]]],[[313,19],[[12,[20]]]],[[263,19],[[12,[20]]]],[[263,19],[[12,[20]]]],[[314,19],[[12,[20]]]],[[314,19],[[12,[20]]]],[[315,19],[[12,[20]]]],[[315,19],[[12,[20]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11],[[]],[[],313],[[],263],[[],314],[[],315],[113,314],[64,314],[[]],[[],313],[[],263],[[],314],[[],315],[[]],[11,5],[[193,193],315],[[],26],[[],26],[[],26],[313],[263],[315],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[15,[22,14]]]],[[],16],[[],16],[[],16],[[],16],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[313,159],[263,159],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[313],[263],[315],[11,259],[[],316],[[],317],[[159,159],313],[[159,159,82],263],[259,5],[316,5],[317,5],[[],184],[[],185],[[],184],[[],185],[263,82],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[315,315],[[5,[8]]]],[[11,11],[[5,[317]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[259],[316],[317],0,[[],189],[[]],[313],[263],[314],[315],[314,113],[314,64],[[]],[313],[263],[314],[315],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],[[12,[[165,[163,14]],77]]]],[[],[[12,[[164,[163]],77]]]],[[],[[12,[[190,[[164,[163]]]],77]]]],[[],[[12,[[190,[[165,[163,14]]]],77]]]],[[],[[12,[[164,[163]],77]]]],[[],[[12,[[165,[163,14]],77]]]],[[],[[12,[[190,[[164,[163]]]],77]]]],[[],[[12,[[190,[[165,[163,14]]]],77]]]],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[318,318]],[[319,319]],[[320,320]],[[321,321]],[[322,322]],[[323,323]],[[324,324]],[[325,325]],[[326,326]],[[327,327]],[[328,328]],[[318,318]],[[319,319]],[[320,320]],[[321,321]],[[322,322]],[[323,323]],[[324,324]],[[325,325]],[[326,326]],[[327,327]],[[328,328]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[318,318],[319,319],[320,320],[321,321],[322,322],[323,323],[324,324],[325,325],[326,326],[327,327],[329,329],[330,330],[331,331],[328,328],[332,332],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],318],[[],319],[[],320],[[],321],[[],322],[[],323],[[],324],[[],325],[[],326],[[],327],[[],329],[[],330],[[],331],[[],328],[[],332],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],318],[[],319],[[],320],[[],321],[[],322],[[],323],[[],324],[[],325],[[],326],[[],327],[[],329],[[],330],[[],331],[[],328],[[],332],[[]],[37,318],[113,319],[157,320],[26,321],[158,322],[153,323],[159,324],[82,325],[64,326],[81,327],[314,329],[313,330],[263,331],[193,328],[315,332],0,0,0,0,0,0,[[318,11]],[[319,11]],[[320,11]],[[321,11]],[[322,11]],[[323,11]],[[324,11]],[[325,11]],[[326,11]],[[327,11]],[[329,11]],[[330,11]],[[331,11]],[[328,11]],[[332,11]],[[318,11]],[[319,11]],[[320,11]],[[321,11]],[[322,11]],[[323,11]],[[324,11]],[[325,11]],[[326,11]],[[327,11]],[[329,11]],[[330,11]],[[331,11]],[[328,11]],[[332,11]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[318,37],[319,113],[320,157],[321,26],[322,158],[323,153],[324,159],[325,82],[326,64],[327,81],[328,193],[[318,318],318],[[319,319],319],[[320,320],320],[[321,321],321],[[322,322],322],[[323,323],323],[[324,324],324],[[325,325],325],[[326,326],326],[[327,327],327],[[328,328],328],[318,37],[319,113],[320,157],[321,26],[322,158],[323,153],[324,159],[325,82],[326,64],[327,81],[328,193],[[318,318],318],[[319,319],319],[[320,320],320],[[321,321],321],[[322,322],322],[[323,323],323],[[324,324],324],[[325,325],325],[[326,326],326],[[327,327],327],[[328,328],328],0,[[],318],[[],319],[[],320],[[],321],[[],322],[[],323],[[],324],[[],325],[[],326],[[],327],[[],328],[[],318],[[],319],[[],320],[[],321],[[],322],[[],323],[[],324],[[],325],[[],326],[[],327],[[],328],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[318,26,318],318],[[319,157,319],319],[[320,113,320],320],[[321,37,321],321],[[322,26,322],322],[[323,157,323],323],[[324,113,324],324],[[325,37,325],325],[[326,113,326],326],[[327,37,327],327],[[329,157,329],329],[[330,37,330],330],[[331,37,331],331],[[328,37,328],328],[[332,37,332],332],[318,37],[319,113],[320,157],[321,26],[322,158],[323,153],[324,159],[325,82],[326,64],[327,81],[328,193],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[15,[37,14]]]],[15],[[],22],0,0,0,0,0,0,0,0,0,0,[163,[[12,[32,77]]]],[163,[[12,[32,77]]]],[[],5],[[],[[12,[77]]]],[[],[[12,[77]]]],0,0,0,0,0,0,0,0,[[[5,[193]]],[[5,[193]]]],[[[5,[3]]],[[5,[22]]]],[5,[[5,[[15,[37,14]]]]]],[5,[[5,[[15,[37,14]]]]]],[[[5,[[165,[163,14]]]]],5],[[[5,[[165,[163,14]]]]],5],0,[193,[[12,[77]]]],[22,[[12,[77]]]],[15,[[12,[77]]]],[15,[[12,[77]]]],[[],[[12,[77]]]],[[],[[12,[77]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],[[12,[77]]]],[[],[[12,[77]]]],[[],[[12,[[190,[[165,[163,14]]]],77]]]],[[]],[[],[[12,[77]]]],[[],[[12,[77]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[110,110],[65,65],[333,333],[334,334],[335,335],[336,336],[337,337],[338,338],[339,339],[340,340],[[341,341,64],16],[[342,342,64],16],[[106,106,64],16],[[110,110,64],16],[[65,65,64],16],[[343,343,64],16],[[344,344,64],16],[[345,345,64],16],[[145,145,64],16],[[333,333,64],16],[[334,334,64],16],[[346,346,81],16],[[347,347,81],16],[[348,348,81],16],[[349,349,81],16],[[350,350,81],16],[[351,351,81],16],[[335,335,81],16],[[336,336,81],16],[[337,337,81],16],[[106,106]],[[110,110],110],[[110,64],110],[[65,64],65],[[65,65],65],[[343,343]],[[344,344]],[[345,345]],[[145,145],145],[[333,333],333],[[333,64],333],[[334,334],334],[[334,64],334],[[348,348]],[[349,349]],[[350,350]],[[351,351],351],[[335,335],335],[[335,81],335],[[336,81],336],[[336,336],336],[[337,81],337],[[337,337],337],[[338,159],338],[[338,338],338],[[339,339],339],[[339,159],339],[[340,159],340],[[340,340],340],[[352,352],352],[[352,157],352],[[353,157],353],[[353,353],353],[[354,157],354],[[354,354],354],[[106,106]],[[110,64]],[[110,110]],[[65,64]],[[65,65]],[[343,343]],[[344,344]],[[345,345]],[[333,64]],[[333,333]],[[334,64]],[[334,334]],[[348,348]],[[349,349]],[[350,350]],[[335,335]],[[335,81]],[[336,81]],[[336,336]],[[337,81]],[[337,337]],[[338,338]],[[338,159]],[[339,339]],[[339,159]],[[340,159]],[[340,340]],[[352,157]],[[352,352]],[[353,353]],[[353,157]],[[354,354]],[[354,157]],[[343,343],343],[[348,348],348],[[106,106],106],[[344,344],344],[[349,349],349],[[345,345],345],[[350,350],350],[355,16],[356,16],[357,16],[358,16],[359,16],[110,64],[[110,110],64],[[65,65],64],[[145,145],64],[[333,333],64],[[351,351],81],[[335,335],81],[[336,336],81],[355,16],[356,16],[357,16],[358,16],[359,16],[65,65],[333,333],[336,336],[65],[333],[336],[65,65],[333,333],[336,336],[343,348],[106,349],[344,349],[345,350],[110,335],[338,335],[352,335],[65,336],[333,336],[339,336],[353,336],[334,337],[340,337],[354,337],[351,145],[145,351],[110,338],[335,338],[352,338],[65,339],[333,339],[336,339],[353,339],[334,340],[337,340],[354,340],[348,343],[349,106],[350,345],[106],[110],[65],[343],[345],[333],[334],[348],[349],[350],[335],[336],[337],[338],[339],[340],[352],[353],[354],[106],[110],[65],[343],[345],[145],[333],[334],[348],[349],[350],[351],[335],[336],[337],[338],[339],[340],[352],[353],[354],[110,352],[335,352],[338,352],[65,353],[333,353],[336,353],[339,353],[334,354],[337,354],[340,354],[335,110],[338,110],[352,110],[336,65],[339,65],[353,65],[336,333],[339,333],[353,333],[337,334],[340,334],[354,334],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],65],[[355,355],355],[[356,356],356],[[357,357],357],[[358,358],358],[[359,359],359],[[338,159]],[[338,338]],[[339,159]],[[339,339]],[[340,159]],[[340,340]],[[352,352]],[[352,157]],[[353,353]],[[353,157]],[[354,354]],[[354,157]],[[355,355]],[[356,356]],[[357,357]],[[358,358]],[[359,359]],[355,157],[356,157],[357,157],[358,157],[359,157],[[355,355],355],[[356,356],356],[[357,357],357],[[358,358],358],[[359,359],359],[[338,338]],[[338,159]],[[339,339]],[[339,159]],[[340,340]],[[340,159]],[[352,352]],[[352,157]],[[353,157]],[[353,353]],[[354,354]],[[354,157]],[[355,355]],[[356,356]],[[357,357]],[[358,358]],[[359,359]],[[355,355],355],[[356,356],356],[[357,357],357],[[358,358],358],[[359,359],359],[[338,338]],[[338,159]],[[339,159]],[[339,339]],[[340,159]],[[340,340]],[[352,352]],[[352,157]],[[353,353]],[[353,157]],[[354,157]],[[354,354]],[[355,355]],[[356,356]],[[357,357]],[[358,358]],[[359,359]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[110,110],[65,65],[333,333],[334,334],[335,335],[336,336],[337,337],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[110,110,110],110],[[65,65,65],65],[[333,333,333],333],[[334,334,334],334],[[335,335,335],335],[[336,336,336],336],[[337,337,337],337],[[338,338,338],338],[[339,339,339],339],[[340,340,340],340],[[352,352,352],352],[[353,353,353],353],[[354,354,354],354],[[110,64,64],110],[[65,64,64],65],[[333,64,64],333],[[334,64,64],334],[[335,81,81],335],[[336,81,81],336],[[337,81,81],337],[[110,64],110],[[65,64],65],[[333,64],333],[[334,64],334],[[335,81],335],[[336,81],336],[[337,81],337],[[110,64],110],[[65,64],65],[[333,64],333],[[334,64],334],[[335,81],335],[[336,81],336],[[337,81],337],[360,360],[355,355],[356,356],[357,357],[358,358],[359,359],[341,341],[342,342],[106,106],[110,110],[65,65],[343,343],[344,344],[345,345],[145,145],[333,333],[334,334],[346,346],[347,347],[348,348],[349,349],[350,350],[351,351],[335,335],[336,336],[337,337],[338,338],[339,339],[340,340],[352,352],[353,353],[354,354],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[110,110],355],[[65,65],356],[[333,333],358],[[334,334],359],[[335,335],355],[[336,336],356],[[337,337],357],[[338,338],355],[[339,339],356],[[340,340],357],[[352,352],355],[[353,353],356],[[354,354],357],[[110,110],355],[[65,65],356],[[333,333],358],[[334,334],359],[[335,335],355],[[336,336],356],[[337,337],357],[[338,338],355],[[339,339],356],[[340,340],357],[[352,352],355],[[353,353],356],[[354,354],357],[[110,110],355],[[65,65],356],[[333,333],358],[[334,334],359],[[335,335],355],[[336,336],356],[[337,337],357],[[338,338],355],[[339,339],356],[[340,340],357],[[352,352],355],[[353,353],356],[[354,354],357],[[110,110],355],[[65,65],356],[[333,333],358],[[334,334],359],[[335,335],355],[[336,336],356],[[337,337],357],[[338,338],355],[[339,339],356],[[340,340],357],[[352,352],355],[[353,353],356],[[354,354],357],[[110,110],355],[[65,65],356],[[333,333],358],[[334,334],359],[[335,335],355],[[336,336],356],[[337,337],357],[[338,338],355],[[339,339],356],[[340,340],357],[[352,352],355],[[353,353],356],[[354,354],357],[[110,110],355],[[65,65],356],[[333,333],358],[[334,334],359],[[335,335],355],[[336,336],356],[[337,337],357],[[338,338],355],[[339,339],356],[[340,340],357],[[352,352],355],[[353,353],356],[[354,354],357],[[106,11],65],[[343,11],110],[[344,11],333],[[345,11],334],[[348,11],335],[[349,11],336],[[350,11],337],[[106,11],65],[[343,11],110],[[344,11],333],[[345,11],334],[[348,11],335],[[349,11],336],[[350,11],337],[145,145],[351,351],[[65,65],65],[[333,333],333],[[336,336],336],[[339,339],339],[[353,353],353],[[],360],[[],355],[[],356],[[],357],[[],358],[[],359],[[],341],[[],342],[[],106],[[],110],[[],65],[[],343],[[],344],[[],345],[[],145],[[],333],[[],334],[[],346],[[],347],[[],348],[[],349],[[],350],[[],351],[[],335],[[],336],[[],337],[[],338],[[],339],[[],340],[[],352],[[],353],[[],354],[11],[11],[11],[11],[11],[11],[11],[341],[11],[342],[11],[11],[11],[11],[343],[11],[11],[145],[11],[11],[333],[11],[334],[11],[346],[347],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[341],[342],[11],[11],[11],[11],[11],[343],[11],[11],[11],[145],[11],[333],[11],[334],[346],[11],[11],[347],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[],[[12,[360]]]],[[],[[12,[355]]]],[[],[[12,[356]]]],[[],[[12,[357]]]],[[],[[12,[358]]]],[[],[[12,[359]]]],[[],[[12,[341]]]],[[],[[12,[342]]]],[[],[[12,[106]]]],[[],[[12,[110]]]],[[],[[12,[65]]]],[[],[[12,[343]]]],[[],[[12,[344]]]],[[],[[12,[345]]]],[[],[[12,[145]]]],[[],[[12,[333]]]],[[],[[12,[334]]]],[[],[[12,[346]]]],[[],[[12,[347]]]],[[],[[12,[348]]]],[[],[[12,[349]]]],[[],[[12,[350]]]],[[],[[12,[351]]]],[[],[[12,[335]]]],[[],[[12,[336]]]],[[],[[12,[337]]]],[[],[[12,[338]]]],[[],[[12,[339]]]],[[],[[12,[340]]]],[[],[[12,[352]]]],[[],[[12,[353]]]],[[],[[12,[354]]]],[106,64],[343,64],[344,64],[345,64],[348,81],[349,81],[350,81],[[110,110],64],[[65,65],64],[[333,333],64],[[334,334],64],[[335,335],81],[[336,336],81],[[337,337],81],[[110,110],64],[[65,65],64],[[333,333],64],[[334,334],64],[[335,335],81],[[336,336],81],[[337,337],81],[[110,64],110],[[110,110],110],[[65,65],65],[[65,64],65],[[145,64],145],[[333,64],333],[[333,333],333],[[334,334],334],[[334,64],334],[[351,81],351],[[335,335],335],[[335,81],335],[[336,81],336],[[336,336],336],[[337,81],337],[[337,337],337],[[338,338],338],[[338,159],338],[[339,339],339],[[339,159],339],[[340,340],340],[[340,159],340],[[352,157],352],[[352,352],352],[[353,157],353],[[353,353],353],[[354,354],354],[[354,157],354],[[110,110]],[[110,64]],[[65,65]],[[65,64]],[[333,64]],[[333,333]],[[334,64]],[[334,334]],[[335,81]],[[335,335]],[[336,336]],[[336,81]],[[337,337]],[[337,81]],[[338,159]],[[338,338]],[[339,159]],[[339,339]],[[340,340]],[[340,159]],[[352,157]],[[352,352]],[[353,353]],[[353,157]],[[354,157]],[[354,354]],[[335,335],348],[[336,336,336],349],[[337,337,337,337],350],[[110,110],64],[[65,65],64],[[145,145],64],[[333,333],64],[[334,334],64],[[351,351],81],[[335,335],81],[[336,336],81],[[337,337],81],[[338,338],159],[[339,339],159],[[340,340],159],[[352,352],157],[[353,353],157],[[354,354],157],[[110,110],110],[[65,65],65],[[333,333],333],[[334,334],334],[[335,335],335],[[336,336],336],[[337,337],337],[[338,338],338],[[339,339],339],[[340,340],340],[[352,352],352],[[353,353],353],[[354,354],354],[[],65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[81,81,81,81],351],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[81,81],335],[[81,81,81],336],[[81,81,81,81],337],[[360,360],16],[[355,355],16],[[356,356],16],[[357,357],16],[[358,358],16],[[359,359],16],[[341,341],16],[[342,342],16],[[106,106],16],[[110,110],16],[[65,65],16],[[343,343],16],[[344,344],16],[[345,345],16],[[145,145],16],[[333,333],16],[[334,334],16],[[346,346],16],[[347,347],16],[[348,348],16],[[349,349],16],[[350,350],16],[[351,351],16],[[335,335],16],[[336,336],16],[[337,337],16],[[338,338],16],[[339,339],16],[[340,340],16],[[352,352],16],[[353,353],16],[[354,354],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[110,110],[65,65],[333,333],[334,334],[335,335],[336,336],[337,337],[[110,64],65],[[65,64],334],[[333,64],334],[[335,81],336],[[336,81],337],[[338,159],339],[[339,159],340],[[352,157],353],[[353,157],354],0,0,[110,110],[65,65],[333,333],[334,334],[335,335],[336,336],[337,337],[[360,19],[[12,[20]]]],[[355,19],[[12,[20]]]],[[355,19],[[12,[20]]]],[[356,19],[[12,[20]]]],[[356,19],[[12,[20]]]],[[357,19],[[12,[20]]]],[[357,19],[[12,[20]]]],[[358,19],[[12,[20]]]],[[358,19],[[12,[20]]]],[[359,19],[[12,[20]]]],[[359,19],[[12,[20]]]],[[341,19],[[12,[20]]]],[[341,19],[[12,[20]]]],[[342,19],[[12,[20]]]],[[342,19],[[12,[20]]]],[[106,19],[[12,[20]]]],[[106,19],[[12,[20]]]],[[110,19],[[12,[20]]]],[[110,19],[[12,[20]]]],[[65,19],[[12,[20]]]],[[65,19],[[12,[20]]]],[[343,19],[[12,[20]]]],[[343,19],[[12,[20]]]],[[344,19],[[12,[20]]]],[[344,19],[[12,[20]]]],[[345,19],[[12,[20]]]],[[345,19],[[12,[20]]]],[[145,19],[[12,[20]]]],[[145,19],[[12,[20]]]],[[333,19],[[12,[20]]]],[[333,19],[[12,[20]]]],[[334,19],[[12,[20]]]],[[334,19],[[12,[20]]]],[[346,19],[[12,[20]]]],[[346,19],[[12,[20]]]],[[347,19],[[12,[20]]]],[[347,19],[[12,[20]]]],[[348,19],[[12,[20]]]],[[348,19],[[12,[20]]]],[[349,19],[[12,[20]]]],[[349,19],[[12,[20]]]],[[350,19],[[12,[20]]]],[[350,19],[[12,[20]]]],[[351,19],[[12,[20]]]],[[351,19],[[12,[20]]]],[[335,19],[[12,[20]]]],[[335,19],[[12,[20]]]],[[336,19],[[12,[20]]]],[[336,19],[[12,[20]]]],[[337,19],[[12,[20]]]],[[337,19],[[12,[20]]]],[[338,19],[[12,[20]]]],[[338,19],[[12,[20]]]],[[339,19],[[12,[20]]]],[[339,19],[[12,[20]]]],[[340,19],[[12,[20]]]],[[340,19],[[12,[20]]]],[[352,19],[[12,[20]]]],[[352,19],[[12,[20]]]],[[353,19],[[12,[20]]]],[[353,19],[[12,[20]]]],[[354,19],[[12,[20]]]],[[354,19],[[12,[20]]]],[[],65],[110,110],[110,110],[65,65],[65,65],[333,333],[334,334],[334,334],[335,335],[336,336],[337,337],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[85,342],[[]],[361,342],[344,106],[[]],[[[362,[64]]],106],[[[363,[64]]],106],[140,106],[341,106],[[],110],[[]],[[],110],[103,110],[124,110],[[[364,[64]]],110],[[[365,[64]]],110],[[[366,[64]]],65],[[],65],[135,65],[333,65],[[]],[[[367,[64]]],65],[[],65],[137,65],[125,65],[[],65],[130,65],[[]],[[[368,[64]]],343],[[[369,[64]]],343],[[]],[[[362,[64]]],344],[106,344],[[[363,[64]]],344],[341,344],[342,345],[361,345],[85,345],[[]],[[[370,[64]]],345],[[[371,[64]]],345],[141,145],[[]],[[[372,[64]]],145],[65,333],[334,333],[[[366,[64]]],333],[373,333],[[],333],[[],333],[[[367,[64]]],333],[[]],[[],333],[[],334],[[]],[[],334],[[],334],[[[374,[64]]],334],[373,334],[[],334],[375,334],[[],334],[145,334],[[],334],[[],334],[[],334],[[]],[[]],[[[369,[81]]],348],[[[368,[81]]],348],[[]],[[[363,[81]]],349],[346,349],[[[362,[81]]],349],[[]],[[[371,[81]]],350],[[]],[[[370,[81]]],350],[347,350],[[]],[[[372,[81]]],351],[[[365,[81]]],335],[[],335],[[[364,[81]]],335],[[],335],[[]],[[[366,[81]]],336],[[],336],[[[367,[81]]],336],[[],336],[[],336],[[]],[[],337],[[[374,[81]]],337],[351,337],[[],337],[[],337],[[],337],[[],337],[[],337],[[]],[[]],[[],338],[[[364,[159]]],338],[[[365,[159]]],338],[[],338],[[],339],[[[367,[159]]],339],[[[366,[159]]],339],[[],339],[[],339],[[]],[[]],[[],340],[[],340],[[],340],[[[374,[159]]],340],[[],340],[[],340],[[],340],[[[365,[157]]],352],[[],352],[[]],[[[364,[157]]],352],[[],352],[[],353],[[],353],[[[366,[157]]],353],[[]],[[],353],[[[367,[157]]],353],[[],354],[[],354],[[],354],[[]],[[],354],[[],354],[[],354],[[[374,[157]]],354],[342,145],[347,351],[64,341],[64,106],[64,110],[64,110],[64,343],[64,344],[81,346],[81,348],[81,349],[81,335],[[64,110],341],[[81,335],346],[[],110],[[],65],[[],145],[[],333],[[],334],[[],351],[[],335],[[],336],[[],337],[[],338],[[],339],[[],340],[[],352],[[],353],[[],354],[[65,64],342],[[65,64],106],[[65,64],344],[[65,64],345],[[65,64],145],[[336,81],347],[[336,81],349],[[336,81],350],[[336,81],351],[[110,110,110],341],[[333,333,333,333],342],[[65,65,65],106],[[110,110],343],[[333,333,333],344],[[334,334,334,334],345],[[335,335,335],346],[[336,336,336,336],347],[[335,335],348],[[336,336,336],349],[[337,337,337,337],350],[[],341],[[],342],[[],106],[[],343],[[],344],[[],345],[[],346],[[],347],[[],348],[[],349],[[],350],[[],341],[[],342],[[],106],[[],343],[[],344],[[],345],[[],346],[[],347],[[],348],[[],349],[[],350],[[],341],[[],342],[[],106],[[],343],[[],344],[[],345],[[],346],[[],347],[[],348],[[],349],[[],350],[65,106],[110,343],[65,344],[334,345],[335,348],[336,349],[337,350],[[360,64,64,64],106],[[360,64,64,64],344],[[360,64,64,64],345],[[360,64,64,64],145],[[360,81,81,81],349],[[360,81,81,81],350],[[360,81,81,81],351],[343,341],[343,106],[343,344],[348,346],[348,349],[[343,110],341],[[348,335],346],[106,341],[106,342],[106,343],[106,345],[106,145],[349,346],[349,347],[349,348],[349,350],[349,351],[[106,65],342],[[349,336],347],[344,341],[344,343],[344,345],[344,145],[345,342],[345,106],[345,344],[345,145],[350,347],[350,349],[350,351],[145,342],[145,106],[145,344],[145,345],[351,347],[351,349],[351,350],[[65,65],145],[[336,336],351],[[110,110],145],[[335,335],351],[[65,65],145],[[336,336],351],[[145,65],342],[[145,65],345],[[351,336],347],[[351,336],350],[64,342],[64,106],[64,344],[64,345],[64,145],[81,347],[81,349],[81,350],[81,351],[64,342],[64,106],[64,344],[64,345],[64,145],[81,347],[81,349],[81,350],[81,351],[64,342],[64,106],[64,344],[64,345],[64,145],[81,347],[81,349],[81,350],[81,351],[110,341],[65,342],[110,106],[110,344],[65,345],[335,346],[336,347],[335,349],[336,350],[[110,64],343],[[335,81],348],[[110,64,110],341],[[110,64,110],106],[[110,64,110],344],[[335,81,335],346],[[335,81,335],349],[[65,145,65],342],[[65,145,65],345],[[336,351,336],347],[[336,351,336],350],[65,145],[336,351],[[],110],[[],65],[[],145],[[],333],[[],334],[[],351],[[],335],[[],336],[[],337],[[],338],[[],339],[[],340],[[],352],[[],353],[[],354],[110,341],[65,342],[110,106],[110,344],[65,345],[335,346],[336,347],[335,349],[336,350],[334,145],[337,351],[[64,64,64,64],145],[[81,81,81,81],351],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[110,64],16],[[65,64],16],[[334,64],16],[360],[355],[356],[357],[358],[359],[338],[339],[340],[352],[353],[354],0,[[110,11]],[[65,11]],[[333,11]],[[334,11]],[[335,11]],[[336,11]],[[337,11]],[[338,11]],[[339,11]],[[340,11]],[[352,11]],[[353,11]],[[354,11]],[[110,11]],[[65,11]],[[333,11]],[[334,11]],[[335,11]],[[336,11]],[[337,11]],[[338,11]],[[339,11]],[[340,11]],[[352,11]],[[353,11]],[[354,11]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[341,341],[342,342],[106,106],[343,343],[344,344],[345,345],[145,145],[346,346],[347,347],[348,348],[349,349],[350,350],[351,351],[341,16],[342,16],[106,16],[110,16],[65,16],[343,16],[344,16],[345,16],[145,16],[333,16],[334,16],[346,16],[347,16],[348,16],[349,16],[350,16],[351,16],[335,16],[336,16],[337,16],[341,16],[342,16],[106,16],[110,16],[65,16],[343,16],[344,16],[345,16],[145,16],[333,16],[334,16],[346,16],[347,16],[348,16],[349,16],[350,16],[351,16],[335,16],[336,16],[337,16],[110,355],[65,356],[333,358],[334,359],[335,355],[336,356],[337,357],[145,16],[351,16],[110,157],[65,157],[333,157],[334,157],[335,157],[336,157],[337,157],[338,157],[339,157],[340,157],[110,16],[65,16],[145,16],[333,16],[334,16],[351,16],[335,16],[336,16],[337,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[159,159],338],[[159,159,159],339],[[159,159,159,159],340],[[],65],[110,64],[65,64],[145,64],[333,64],[334,64],[351,81],[335,81],[336,81],[337,81],[110,64],[65,64],[145,64],[333,64],[334,64],[351,81],[335,81],[336,81],[337,81],[110,64],[65,64],[145,64],[333,64],[334,64],[351,81],[335,81],[336,81],[337,81],[[110,110,64],110],[[65,65,64],65],[[145,145,64],145],[[333,333,64],333],[[334,334,64],334],[[351,351,81],351],[[335,335,81],335],[[336,336,81],336],[[337,337,81],337],[65,65],[[65,65,65],342],[[65,65,65],345],[[336,336,336],347],[[336,336,336],350],[[65,65,65],342],[[65,65,65],345],[[336,336,336],347],[[336,336,336],350],[[65,65,65],342],[[65,65,65],345],[[336,336,336],347],[[336,336,336],350],[[65,65,65],342],[[65,65,65],345],[[336,336,336],347],[[336,336,336],350],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[110,110],343],[[65,65,65],106],[[333,333,333],344],[[334,334,334,334],345],0,0,0,0,[[110,110],110],[[65,65],65],[[333,333],333],[[334,334],334],[[335,335],335],[[336,336],336],[[337,337],337],[[338,338],338],[[339,339],339],[[340,340],340],[[352,352],352],[[353,353],353],[[354,354],354],[110,64],[65,64],[333,64],[334,64],[335,81],[336,81],[337,81],[338,159],[339,159],[340,159],[352,157],[353,157],[354,157],[110,64],[65,64],[334,64],[[110,110],110],[[65,65],65],[[333,333],333],[[334,334],334],[[335,335],335],[[336,336],336],[[337,337],337],[[338,338],338],[[339,339],339],[[340,340],340],[[352,352],352],[[353,353],353],[[354,354],354],[110,64],[65,64],[333,64],[334,64],[335,81],[336,81],[337,81],[338,159],[339,159],[340,159],[352,157],[353,157],[354,157],[[341,341]],[[341,344]],[[341,106]],[[342,376],376],[[342,345]],[[342,342]],[[342,85],342],[[106,64]],[[106,333],333],[[106,65]],[[106,106]],[[106,341]],[[110,110],110],[[110,64],110],[[65,64],65],[[65,65],65],[[343,64]],[[343,110]],[[343,343]],[[344,341]],[[344,65],65],[[344,344]],[[344,333]],[[344,64]],[[345,342]],[[345,85],345],[[345,376],376],[[345,334]],[[345,64]],[[345,345]],[[145,145],145],[[145,333]],[[145,65]],[[145,64],145],[[333,333],333],[[333,64],333],[[334,64],334],[[334,334],334],[[346,346]],[[346,349]],[[347,347]],[[347,350]],[[348,335]],[[348,348]],[[348,81]],[[349,336]],[[349,346]],[[349,81]],[[349,349]],[[350,337]],[[350,350]],[[350,81]],[[350,347]],[[351,81],351],[[351,351],351],[[351,336]],[[335,335],335],[[335,81],335],[[336,81],336],[[336,336],336],[[337,81],337],[[337,337],337],[[338,338],338],[[338,159],338],[[339,159],339],[[339,339],339],[[340,340],340],[[340,159],340],[[352,352],352],[[352,157],352],[[353,157],353],[[353,353],353],[[354,157],354],[[354,354],354],[[110,110,110],110],[[65,65,65],65],[[333,333,333],333],[[334,334,334],334],[[335,335,335],335],[[336,336,336],336],[[337,337,337],337],[[106,106]],[[106,64]],[[110,110]],[[110,64]],[[65,65]],[[65,64]],[[343,343]],[[343,64]],[[344,64]],[[344,344]],[[345,64]],[[345,345]],[[145,145]],[[333,333]],[[333,64]],[[334,334]],[[334,64]],[[348,348]],[[348,81]],[[349,349]],[[349,81]],[[350,81]],[[350,350]],[[351,351]],[[335,81]],[[335,335]],[[336,336]],[[336,81]],[[337,81]],[[337,337]],[[338,338]],[[338,159]],[[339,159]],[[339,339]],[[340,159]],[[340,340]],[[352,352]],[[352,157]],[[353,157]],[[353,353]],[[354,354]],[[354,157]],[[343,343],343],[[348,348],348],[[106,106],106],[[344,344],344],[[349,349],349],[[345,345],345],[[350,350],350],[[145,145],145],[[351,351],351],[[106,64],106],[[343,64],343],[[344,64],344],[[345,64],345],[[348,81],348],[[349,81],349],[[350,81],350],[[343,110],110],[[348,335],335],[[106,65],65],[[344,65],65],[[145,65],65],[[349,336],336],[[351,336],336],[[106,333],333],[[344,333],333],[[145,333],333],[[345,334],334],[[350,337],337],[106],[110,110],[65,65],[343],[344],[345],[145,145],[333,333],[334,334],[348],[349],[350],[351,351],[335,335],[336,336],[337,337],[338,338],[339,339],[340,340],[[16,16],355],[[16,16,16],356],[[16,16,16,16],357],[[16,16,16],358],[[16,16,16,16],359],[[64,64],110],[[64,64,64],65],[[64,64,64],333],[[64,64,64,64],334],[[81,81],335],[[81,81,81],336],[[81,81,81,81],337],[[159,159],338],[[159,159,159],339],[[159,159,159,159],340],[[157,157],352],[[157,157,157],353],[[157,157,157,157],354],[110,110],[65,65],[145,145],[333,333],[334,334],[351,351],[335,335],[336,336],[337,337],[110,110],[65,65],[333,333],[334,334],[335,335],[336,336],[337,337],[355,355],[356,356],[357,357],[358,358],[359,359],[338],[339],[340],[352],[353],[354],[[64,64,64,64,64,64],345],[[81,81,81,81,81,81],350],[[64,64,64,64,64,64],345],[[81,81,81,81,81,81],350],[[64,64,64,64,64,64],345],[[81,81,81,81,81,81],350],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[110,110],[335,335],[338,338],[[110,110],64],[[335,335],81],[[338,338],159],[[64,64,64],345],[[81,81,81],350],[[64,64,64],345],[[81,81,81],350],[[64,64,64],345],[[81,81,81],350],[[64,64,64],345],[[81,81,81],350],[[64,64,64,64],345],[[81,81,81,81],350],[[64,64,64,64],345],[[81,81,81,81],350],[[64,64,64,64],345],[[81,81,81,81],350],[[110,64],110],[[65,64],65],[[333,64],333],[[334,64],334],[[335,81],335],[[336,81],336],[[337,81],337],[[],341],[[],342],[[],106],[[],106],[[],110],[[],110],[[],65],[[],65],[[],343],[[],343],[[],344],[[],344],[[],345],[[],345],[[],145],[[],145],[[],333],[[],333],[[],334],[[],334],[[],346],[[],347],[[],348],[[],348],[[],349],[[],349],[[],350],[[],350],[[],351],[[],351],[[],335],[[],335],[[],336],[[],336],[[],337],[[],337],[[],338],[[],338],[[],339],[[],339],[[],340],[[],340],[[],352],[[],352],[[],353],[[],353],[[],354],[[],354],[[110,110],110],[[65,65],65],[[333,333],333],[[334,334],334],[[335,335],335],[[336,336],336],[[337,337],337],[[110,110],110],[[65,65],65],[[333,333],333],[[334,334],334],[[335,335],335],[[336,336],336],[[337,337],337],[[345,65],65],[[350,336],336],[[64,64,64,64],145],[110,110],[65,65],[333,333],[334,334],[335,335],[336,336],[337,337],[[65,65],65],[[110,110],110],[[65,65],65],[[333,333],333],[[334,334],334],[[335,335],335],[[336,336],336],[[337,337],337],[[110,110],110],[[65,65],65],[[333,333],333],[[334,334],334],[[335,335],335],[[336,336],336],[[337,337],337],[[110,64],110],[[110,110],110],[[65,65],65],[[65,64],65],[[333,64],333],[[333,333],333],[[334,64],334],[[334,334],334],[[335,335],335],[[335,81],335],[[336,81],336],[[336,336],336],[[337,337],337],[[337,81],337],[[338,338],338],[[338,159],338],[[339,159],339],[[339,339],339],[[340,340],340],[[340,159],340],[[352,157],352],[[352,352],352],[[353,157],353],[[353,353],353],[[354,354],354],[[354,157],354],[[110,64]],[[110,110]],[[65,65]],[[65,64]],[[333,333]],[[333,64]],[[334,64]],[[334,334]],[[335,81]],[[335,335]],[[336,81]],[[336,336]],[[337,337]],[[337,81]],[[338,159]],[[338,338]],[[339,159]],[[339,339]],[[340,159]],[[340,340]],[[352,352]],[[352,157]],[[353,157]],[[353,353]],[[354,157]],[[354,354]],[[],65],[[110,110],110],[[335,335],335],[[338,338],338],[[65,65],[[5,[145]]]],[[65,65],[[5,[145]]]],[110,110],[65,65],[333,333],[334,334],[335,335],[336,336],[337,337],[[106,11],65],[[343,11],110],[[344,11],333],[[345,11],334],[[348,11],335],[[349,11],336],[[350,11],337],[110,110],[65,65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[355,110,110],110],[[356,65,65],65],[[358,333,333],333],[[359,334,334],334],[[355,335,335],335],[[356,336,336],336],[[357,337,337],337],[[355,338,338],338],[[356,339,339],339],[[357,340,340],340],[[355,352,352],352],[[356,353,353],353],[[357,354,354],354],[360,12],[355,12],[356,12],[357,12],[358,12],[359,12],[341,12],[342,12],[106,12],[110,12],[65,12],[343,12],[344,12],[345,12],[145,12],[333,12],[334,12],[346,12],[347,12],[348,12],[349,12],[350,12],[351,12],[335,12],[336,12],[337,12],[338,12],[339,12],[340,12],[352,12],[353,12],[354,12],[[338,352]],[[338,113]],[[338,338]],[[338,37]],[[338,158]],[[338,157]],[[338,159]],[[338,153]],[[339,353]],[[339,157]],[[339,37]],[[339,339]],[[339,153]],[[339,113]],[[339,159]],[[339,158]],[[340,113]],[[340,159]],[[340,37]],[[340,340]],[[340,153]],[[340,157]],[[340,158]],[[340,354]],[[352,37]],[[352,352]],[[352,338]],[[352,113]],[[352,157]],[[352,153]],[[352,159]],[[352,158]],[[353,353]],[[353,37]],[[353,113]],[[353,339]],[[353,159]],[[353,158]],[[353,157]],[[353,153]],[[354,159]],[[354,113]],[[354,153]],[[354,354]],[[354,157]],[[354,37]],[[354,340]],[[354,158]],[[338,37]],[[338,338]],[[338,153]],[[338,352]],[[338,157]],[[338,113]],[[338,159]],[[338,158]],[[339,113]],[[339,158]],[[339,339]],[[339,37]],[[339,157]],[[339,153]],[[339,353]],[[339,159]],[[340,159]],[[340,37]],[[340,354]],[[340,113]],[[340,153]],[[340,157]],[[340,158]],[[340,340]],[[352,338]],[[352,159]],[[352,153]],[[352,352]],[[352,113]],[[352,37]],[[352,157]],[[352,158]],[[353,158]],[[353,157]],[[353,153]],[[353,37]],[[353,159]],[[353,353]],[[353,113]],[[353,339]],[[354,158]],[[354,153]],[[354,159]],[[354,157]],[[354,113]],[[354,37]],[[354,340]],[[354,354]],[110,110],[65,65],[333,333],[334,334],[335,335],[336,336],[337,337],[338,338],[339,339],[340,340],[[145,145,64],145],[[351,351,81],351],[16,355],[16,356],[16,357],[16,358],[16,359],[64,110],[64,65],[64,333],[64,334],[81,335],[81,336],[81,337],[159,338],[159,339],[159,340],[157,352],[157,353],[157,354],[65,65],[334,334],[[110,110],110],[[65,65],65],[[334,334],334],[[110,110,110,110],110],[[65,65,65,65],65],[[334,334,334,334],334],[[106,106]],[[110,110],110],[[110,64],110],[[65,64],65],[[65,65],65],[[343,343]],[[344,344]],[[345,345]],[[145,145],145],[[333,64],333],[[333,333],333],[[334,64],334],[[334,334],334],[[348,348]],[[349,349]],[[350,350]],[[351,351],351],[[335,81],335],[[335,335],335],[[336,336],336],[[336,81],336],[[337,81],337],[[337,337],337],[[338,338],338],[[338,159],338],[[339,159],339],[[339,339],339],[[340,340],340],[[340,159],340],[[352,352],352],[[352,157],352],[[353,157],353],[[353,353],353],[[354,157],354],[[354,354],354],[[106,106]],[[110,110]],[[110,64]],[[65,65]],[[65,64]],[[343,343]],[[344,344]],[[345,345]],[[333,64]],[[333,333]],[[334,64]],[[334,334]],[[348,348]],[[349,349]],[[350,350]],[[335,81]],[[335,335]],[[336,336]],[[336,81]],[[337,337]],[[337,81]],[[338,159]],[[338,338]],[[339,159]],[[339,339]],[[340,159]],[[340,340]],[[352,352]],[[352,157]],[[353,353]],[[353,157]],[[354,157]],[[354,354]],[[343,343],343],[[348,348],348],[[106,106],106],[[344,344],344],[[349,349],349],[[345,345],345],[[350,350],350],[[],106],[[],106],[[],110],[[],110],[[],65],[[],65],[[],343],[[],343],[[],344],[[],344],[[],345],[[],345],[[],145],[[],145],[[],333],[[],333],[[],334],[[],334],[[],348],[[],348],[[],349],[[],349],[[],350],[[],350],[[],351],[[],351],[[],335],[[],335],[[],336],[[],336],[[],337],[[],337],[[],338],[[],338],[[],339],[[],339],[[],340],[[],340],[[],352],[[],352],[[],353],[[],353],[[],354],[[],354],0,[110],[65],[145],[333],[334],[351],[335],[336],[337],[338],[339],[340],[352],[353],[354],[145],[351],[334,354],[341],[342],[106],[343],[344],[345],[346],[347],[348],[349],[350],[341],[342],[106],[343],[344],[345],[346],[347],[348],[349],[350],[[145,360]],[[351,360]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[342],[345],[347],[350],[145,65],[351,336],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[341,110],110],[[106,110],110],[[344,110],110],[[346,335],335],[[349,335],335],[[342,65],65],[[345,65],65],[[347,336],336],[[350,336],336],[[342,333],333],[[345,333],333],[[341,110],110],[[106,110],110],[[344,110],110],[[346,335],335],[[349,335],335],[[342,65],65],[[345,65],65],[[347,336],336],[[350,336],336],[[342,333],333],[[345,333],333],0,0,0,0,[106,106],[343,343],[344,344],[345,345],[348,348],[349,349],[350,350],[110,110],[65,65],[334,334],[65,110],[333,110],[334,65],[336,335],[337,336],[339,338],[340,339],[353,352],[354,353],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[110,[[5,[110]]]],[65,[[5,[65]]]],[333,[[5,[333]]]],[334,[[5,[334]]]],[335,[[5,[335]]]],[336,[[5,[336]]]],[337,[[5,[337]]]],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],65],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[157,157],352],[[157,157,157],353],[[157,157,157,157],354],[[64,64],110],[[64,64,64],65],[[64,64,64],333],[[64,64,64,64],334],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[341],[342],[106],[343],[344],[345],[346],[347],[348],[349],[350],[110],[65],[145],[333],[334],[351],[335],[336],[337],[338],[339],[340],[352],[353],[354],[[]],[334,110],[337,335],[340,338],[354,352],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,110],[337,335],[340,338],[354,352],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,110],[337,335],[340,338],[354,352],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,110],[337,335],[340,338],[354,352],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[334,110],[337,335],[340,338],[354,352],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[[]],[110,110],[65,110],[333,110],[334,110],[335,335],[336,335],[337,335],[338,338],[339,338],[340,338],[352,352],[353,352],[354,352],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[[]],[110,65],[65,65],[333,333],[334,65],[335,336],[336,336],[337,336],[338,339],[339,339],[340,339],[352,353],[353,353],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[[]],[110,334],[65,334],[333,334],[334,334],[335,337],[336,337],[337,337],[338,340],[339,340],[340,340],[352,354],[353,354],[354,354],[[]],[[]],[[]],[110,334],[65,334],[333,334],[334,334],[335,337],[336,337],[337,337],[338,340],[339,340],[340,340],[352,354],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[[]],[110,65],[65,65],[333,333],[334,65],[335,336],[336,336],[337,336],[338,339],[339,339],[340,339],[352,353],[353,353],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[[]],[110,334],[65,334],[333,334],[334,334],[335,337],[336,337],[337,337],[338,340],[339,340],[340,340],[352,354],[353,354],[354,354],[[]],[[]],[[]],[110,334],[65,334],[333,334],[334,334],[335,337],[336,337],[337,337],[338,340],[339,340],[340,340],[352,354],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,65],[333,333],[334,65],[336,336],[337,336],[339,339],[340,339],[353,353],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[[]],[110,110],[65,110],[333,110],[334,110],[335,335],[336,335],[337,335],[338,338],[339,338],[340,338],[352,352],[353,352],[354,352],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[[]],[110,65],[65,65],[333,333],[334,65],[335,336],[336,336],[337,336],[338,339],[339,339],[340,339],[352,353],[353,353],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[[]],[110,334],[65,334],[333,334],[334,334],[335,337],[336,337],[337,337],[338,340],[339,340],[340,340],[352,354],[353,354],[354,354],[[]],[[]],[[]],[110,334],[65,334],[333,334],[334,334],[335,337],[336,337],[337,337],[338,340],[339,340],[340,340],[352,354],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[[]],[110,65],[65,65],[333,333],[334,65],[335,336],[336,336],[337,336],[338,339],[339,339],[340,339],[352,353],[353,353],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[[]],[110,334],[65,334],[333,334],[334,334],[335,337],[336,337],[337,337],[338,340],[339,340],[340,340],[352,354],[353,354],[354,354],[[]],[[]],[[]],[110,334],[65,334],[333,334],[334,334],[335,337],[336,337],[337,337],[338,340],[339,340],[340,340],[352,354],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,65],[145,65],[333,333],[334,65],[351,336],[336,336],[337,336],[339,339],[340,339],[353,353],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,110],[333,110],[334,110],[336,335],[337,335],[339,338],[340,338],[353,352],[354,352],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[65,65],[333,333],[334,65],[336,336],[337,336],[339,339],[340,339],[353,353],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,65],[333,333],[334,65],[336,336],[337,336],[339,339],[340,339],[353,353],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,65],[333,333],[334,65],[336,336],[337,336],[339,339],[340,339],[353,353],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[334,110],[337,335],[340,338],[354,352],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[[]],[110,110],[65,110],[333,110],[334,110],[335,335],[336,335],[337,335],[338,338],[339,338],[340,338],[352,352],[353,352],[354,352],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[[]],[110,65],[65,65],[333,333],[334,65],[335,336],[336,336],[337,336],[338,339],[339,339],[340,339],[352,353],[353,353],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[[]],[110,334],[65,334],[333,334],[334,334],[335,337],[336,337],[337,337],[338,340],[339,340],[340,340],[352,354],[353,354],[354,354],[[]],[[]],[[]],[110,334],[65,334],[333,334],[334,334],[335,337],[336,337],[337,337],[338,340],[339,340],[340,340],[352,354],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[[]],[110,65],[65,65],[333,333],[334,65],[335,336],[336,336],[337,336],[338,339],[339,339],[340,339],[352,353],[353,353],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[[]],[110,334],[65,334],[333,334],[334,334],[335,337],[336,337],[337,337],[338,340],[339,340],[340,340],[352,354],[353,354],[354,354],[[]],[[]],[[]],[110,334],[65,334],[333,334],[334,334],[335,337],[336,337],[337,337],[338,340],[339,340],[340,340],[352,354],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,65],[333,333],[334,65],[336,336],[337,336],[339,339],[340,339],[353,353],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[[]],[110,110],[65,110],[333,110],[334,110],[335,335],[336,335],[337,335],[338,338],[339,338],[340,338],[352,352],[353,352],[354,352],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[[]],[110,65],[65,65],[333,333],[334,65],[335,336],[336,336],[337,336],[338,339],[339,339],[340,339],[352,353],[353,353],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[[]],[110,334],[65,334],[333,334],[334,334],[335,337],[336,337],[337,337],[338,340],[339,340],[340,340],[352,354],[353,354],[354,354],[[]],[[]],[[]],[110,334],[65,334],[333,334],[334,334],[335,337],[336,337],[337,337],[338,340],[339,340],[340,340],[352,354],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[[]],[110,65],[65,65],[333,333],[334,65],[335,336],[336,336],[337,336],[338,339],[339,339],[340,339],[352,353],[353,353],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[[]],[110,334],[65,334],[333,334],[334,334],[335,337],[336,337],[337,337],[338,340],[339,340],[340,340],[352,354],[353,354],[354,354],[[]],[[]],[[]],[110,334],[65,334],[333,334],[334,334],[335,337],[336,337],[337,337],[338,340],[339,340],[340,340],[352,354],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,65],[333,333],[334,65],[336,336],[337,336],[339,339],[340,339],[353,353],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,110],[333,110],[334,110],[336,335],[337,335],[339,338],[340,338],[353,352],[354,352],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[65,65],[333,333],[334,65],[336,336],[337,336],[339,339],[340,339],[353,353],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,65],[333,333],[334,65],[336,336],[337,336],[339,339],[340,339],[353,353],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,65],[333,333],[334,65],[336,336],[337,336],[339,339],[340,339],[353,353],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[334,110],[337,335],[340,338],[354,352],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[65,110],[333,110],[334,110],[336,335],[337,335],[339,338],[340,338],[353,352],[354,352],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[65,65],[333,333],[334,65],[336,336],[337,336],[339,339],[340,339],[353,353],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,65],[333,333],[334,65],[336,336],[337,336],[339,339],[340,339],[353,353],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,65],[333,333],[334,65],[336,336],[337,336],[339,339],[340,339],[353,353],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,110],[333,110],[334,110],[336,335],[337,335],[339,338],[340,338],[353,352],[354,352],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[65,65],[333,333],[334,65],[336,336],[337,336],[339,339],[340,339],[353,353],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,65],[333,333],[334,65],[336,336],[337,336],[339,339],[340,339],[353,353],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,65],[333,333],[334,65],[336,336],[337,336],[339,339],[340,339],[353,353],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,110],[333,110],[334,110],[336,335],[337,335],[339,338],[340,338],[353,352],[354,352],[[]],[334,65],[337,336],[340,339],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[65,65],[333,333],[334,65],[336,336],[337,336],[339,339],[340,339],[353,353],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,65],[333,333],[334,65],[336,336],[337,336],[339,339],[340,339],[353,353],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,65],[333,333],[334,65],[336,336],[337,336],[339,339],[340,339],[353,353],[354,353],[[]],[334,334],[337,337],[340,340],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],[[]],[[]],[65,334],[333,334],[334,334],[336,337],[337,337],[339,340],[340,340],[353,354],[354,354],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[110,110],343],[[65,65,65],106],[[333,333,333],344],[[334,334,334,334],345],0,0,[[64,64,64,64],145],0,0,[[64,64],110],[[64,64,64],65],[[64,64,64],333],[[64,64,64,64],334],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[335,335],348],[[336,336,336],349],[[337,337,337,337],350],[[81,81,81,81],351],[[81,81],335],[[81,81,81],336],[[81,81,81,81],337],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[159,159],338],[[159,159,159],339],[[159,159,159,159],340],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[157,157],352],[[157,157,157],353],[[157,157,157,157],354],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],0,[[148,64],148],[[]],[377],[378],[379],[380],[[]],[[377,377]],[[378,378]],[[379,379]],[[380,380]],[[]],[377],[378],[379],[380],[[]],[[]],[148],[381,382],[148,[[5,[382]]]],[381,382],[148,[[5,[382]]]],[148,[[5,[382]]]],[148,[[5,[381]]]],[148,[[5,[381]]]],[148,[[5,[381]]]],[148,[[5,[381]]]],[382,382],[148,[[5,[381]]]],[148,[[5,[381]]]],[148,[[5,[381]]]],[148,[[5,[381]]]],[148,[[5,[381]]]],[148,[[5,[381]]]],[148,[[5,[381]]]],[148,[[5,[381]]]],[148,[[5,[381]]]],[148,[[5,[381]]]],[382],[381],[382,382],[148,[[5,[381]]]],[148,[[5,[381]]]],[148,[[5,[381]]]],[148,[[5,[381]]]],[148,[[5,[381]]]],[148,[[5,[381]]]],[382],[382,[[12,[383,384]]]],[382,[[12,[385,384]]]],[382,[[12,[383,384]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[386,113],[[]],[[377,377]],[[378,378]],[[379,379]],[[380,380]],[[157,157]],[[381,157,157]],[[148,157,157,[379,[37]]]],[[148,64],148],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[382],[381],[148],[[148,159],148],0,[387,381],0,[387,381],[386,37],[388,16],[388,16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[389,157,157,157,157]],[386,37],[390,37],[[]],[377],[378],[379],[380],[[]],[377],[378],[379],[380],[[]],[377],[378],[379],[380],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[382,382],[387,387],[391,391],[381,381],[386,386],[390,390],[377,377],[378,378],[379,379],[380,380],[148,148],[388,388],[392,392],[393,393],[394,394],[389,389],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[395,[[12,[[15,[387,14]],396]]]],[148,386],0,[[],386],[381,[[381,[[15,[14]]]]]],[[157,157],[[12,[396]]]],[[397,157,157],16],[[381,397,157,157],16],[[148,157,157,157,157],148],[[148,157,157,157,157],148],[393,26],0,0,[[],381],[[],148],[387,391],0,[11],[11],[11],[11],[11],[381],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[389],[11],[11],[11],[11],[11],[11],[381],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[389],[[]],[[]],[381],[381],[148],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[381,398],[381,399],[381,400],[381,401],[[391,391],16],[[381,381],16],[[386,386],16],[[390,390],16],[[377,377],16],[[378,378],16],[[379,379],16],[[380,380],16],[[148,148],16],[[388,388],16],[[392,392],16],[[393,393],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,[[[381,[[378,[37]],[15,[37,14]]]],[5,[37]]],[[381,[[379,[37]],[15,[37,14]]]]]],[388],[382],[148,148],[[382,11],16],0,[148,148],[148,148],[[396,19],[[12,[20]]]],[[396,19],[[12,[20]]]],[[382,19],[[12,[20]]]],[[391,19],[[12,[20]]]],[[381,19],[[12,[20]]]],[[386,19],[[12,[20]]]],[[390,19],[[12,[20]]]],[[377,19],[[12,[20]]]],[[378,19],[[12,[20]]]],[[379,19],[[12,[20]]]],[[380,19],[[12,[20]]]],[[148,19],[[12,[20]]]],[[388,19],[[12,[20]]]],[[392,19],[[12,[20]]]],[[393,19],[[12,[20]]]],[[394,19],[[12,[20]]]],[[]],[[]],[183,396],[384,396],[[]],[[]],[[]],[[]],[[]],[[]],[386,390],[[],377],[[]],[[]],[[],378],[[]],[[],379],[[],380],[[]],[[]],[[[381,[[377,[64]],[15,[64,14]]]]],148],[[[381,[[377,[37]],[15,[37,14]]]]],148],[[[381,[[378,[64]],[15,[64,14]]]]],148],[[[381,[[379,[37]],[15,[37,14]]]]],148],[[[381,[[380,[113]],[15,[113,14]]]]],148],[[[381,[[377,[113]],[15,[113,14]]]]],148],[[[381,[[380,[37]],[15,[37,14]]]]],148],[[[381,[[378,[37]],[15,[37,14]]]]],148],[[[381,[[378,[113]],[15,[113,14]]]]],148],[[[381,[[380,[64]],[15,[64,14]]]]],148],[[[381,[[379,[64]],[15,[64,14]]]]],148],[[[381,[[379,[113]],[15,[113,14]]]]],148],[[]],[[]],[388,392],[[]],[[]],[[]],[[]],[[],377],[[],378],[[],379],[[],380],[402,[[12,[148,396]]]],[[],[[5,[388]]]],[[157,157],[[381,[[15,[14]]]]]],[[],[[5,[388]]]],[[157,157],391],[[[381,[[379,[37]],[15,[37,14]]]],157,157,391],387],[[],[[12,[388,396]]]],[[157,157],[[381,[[15,[14]]]]]],[[157,157],[[5,[381]]]],[403,391],[[]],[[],377],[[],378],[[],379],[[],380],[[]],[[],377],[[],378],[[],379],[[],380],[[157,157,[15,[14]]],[[5,[[381,[[15,[14]]]]]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[382,37,157,157],5],[[157,157]],[[381,157,157]],[[381,157,157]],[[148,157,157],[[379,[37]]]],[[381,157,157],5],[[157,157]],[[381,157,157]],[[381,157,157]],[[148,157,157],379],[[381,157,157],5],[[382,37,157,157],5],[148,148],[[],[[12,[388,396]]]],[382,16],[386,16],[386,16],[381],[386],[390],[377],[378],[379],[380],[388],[[],157],[381,157],[148,157],0,0,[[148,159],148],0,[[],[[12,[396]]]],[382,5],[382,5],0,[[157,157],16],[[382,37,157,157],16],[[382,37,157,157],11],[382],[[382,37,157,157],[[5,[11]]]],[381],[[377,11]],[[378,11]],[[379,11]],[[380,11]],[[382,11,11,11],[[5,[11]]]],[382],[381],[[377,11]],[[378,11]],[[379,11]],[[380,11]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[389],0,[389],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[387,[[381,[[379,[37]],[15,[37,14]]]]]],[148,[[15,[37,14]]]],[381,382],[[],395],[[]],[[]],[148,[[381,[[378,[113]],[15,[113,14]]]]]],[148,[[381,[[378,[37]],[15,[37,14]]]]]],[148,[[381,[[380,[113]],[15,[113,14]]]]]],[148,[[381,[[380,[37]],[15,[37,14]]]]]],[381],[[],[[12,[396]]]],[148,[[381,[[377,[113]],[15,[113,14]]]]]],[148,[[381,[[377,[64]],[15,[64,14]]]]]],[148,[[381,[[377,[37]],[15,[37,14]]]]]],[148,[[381,[[379,[113]],[15,[113,14]]]]]],[148,[[381,[[379,[64]],[15,[64,14]]]]]],[148,[[381,[[379,[37]],[15,[37,14]]]]]],[[[381,[[15,[14]]]]],[[15,[14]]]],[[]],[377],[378],[379],[380],[148],0,[[382,404],16],0,0,[387,157],0,[388,[[12,[148,396]]]],[[],[[12,[148,396]]]],[388,[[12,[148,396]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[377,377],[378,378],[379,379],[380,380],[[]],[[377,377],377],[[378,378],378],[[379,379],379],[[380,380],380],[[]],[377,377],[378,378],[379,379],[380,380],[[]],0,[382,[[5,[11]]]],[[]],[[[165,[32,14]]],395],[[[381,[[379,[37]],[15,[37,14]]]]],387],[[157,157],[[381,[[15,[14]]]]]],[[157,157,157,157],389],[[157,157],148],[[157,157],148],[[157,157],148],[[157,157],148],[[157,157],148],[[157,157],148],[[157,157],148],[[157,157],148],[[157,157],148],[[157,157],148],[395,[[5,[[12,[387,396]]]]]],[394,5],[391],[[],[[12,[148,396]]]],[[],390],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[391,391],[[5,[8]]]],[[],394],[381,405],[381,406],[34],[[157,157]],[[381,157,157]],[[381,157,157]],[[148,157,157,[379,[37]]]],0,[[],[[12,[396]]]],[[],[[12,[396]]]],[[157,157,157,157],[[12,[396]]]],[[157,157,157,157],[[12,[396]]]],[393,26],[[148,157,157,407],148],[[148,157,157,407],148],[[148,157,157,407],148],[148,148],[148,148],[148,148],[381,408],[381,409],[381,410],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[381,[[12,[396]]]],[148,[[12,[396]]]],[[157,157,386],[[12,[396]]]],[[157,157,386,388],[[12,[396]]]],[[381,388],[[12,[396]]]],[[148,388],[[12,[396]]]],[[],26],[411,[[12,[396]]]],[[382,37,157,157]],[396,[[5,[45]]]],[382],[[157,157,157,157],389],[[389,157,157,157,157],389],[[148,157,157],148],[[148,157,157],148],[148,[[15,[37,14]]]],[389,[[381,[[15,[14]]]]]],[[],378],[377,378],[378,378],[379,378],[380,378],[148,[[381,[[378,[113]],[15,[113,14]]]]]],[148,[[381,[[378,[64]],[15,[64,14]]]]]],[148,[[381,[[378,[37]],[15,[37,14]]]]]],[[],380],[377,380],[378,380],[379,380],[380,380],[148,[[381,[[380,[113]],[15,[113,14]]]]]],[148,[[381,[[380,[64]],[15,[64,14]]]]]],[148,[[381,[[380,[37]],[15,[37,14]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],377],[377,377],[378,377],[379,377],[380,377],[148,[[381,[[377,[113]],[15,[113,14]]]]]],[148,[[381,[[377,[64]],[15,[64,14]]]]]],[148,[[381,[[377,[37]],[15,[37,14]]]]]],[[],379],[377,379],[378,379],[379,379],[380,379],[148,[[381,[[379,[113]],[15,[113,14]]]]]],[148,[[381,[[379,[64]],[15,[64,14]]]]]],[148,[[381,[[379,[37]],[15,[37,14]]]]]],[[],22],[382,[[382,[[15,[14]]]]]],[387,157],0,[393,26],0,[[],26],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[382,[[12,[381]]]],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[157,157]],[[381,157,157]],[[157,157]],[[381,157,157]],[[148,64,159],148],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[157,157,157,157],389],[[389,157,157,157,157],389],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],157],[381,157],[148,157],0,0,[[157,157],382],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[157,157,386],[[12,[396]]]],[[157,157,386],[[12,[396]]]],[381,[[12,[396]]]],[148,[[12,[396]]]],0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,[405,405],[408,408],[398,398],[400,400],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[11],[11],[[405,19],[[12,[20]]]],[[406,19],[[12,[20]]]],[[408,19],[[12,[20]]]],[[409,19],[[12,[20]]]],[[398,19],[[12,[20]]]],[[400,19],[[12,[20]]]],[[399,19],[[12,[20]]]],[[401,19],[[12,[20]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[15,[22,14]]]],[[],[[15,[22,14]]]],[405,11],[406,11],[408,11],[409,11],[398,11],[400,11],[399,11],[401,11],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[405,5],[406,5],[408,[[5,[405]]]],[409,[[5,[406]]]],[398,5],[400,5],[399,5],[401,5],[405,5],[406,5],[408,[[5,[405]]]],[409,[[5,[406]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[405],[406],[408],[409],[398],[400],[399],[401],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],[[12,[[164,[163]],77]]]],[[],[[12,[[190,[[164,[163]]]],77]]]],[[],[[12,[[190,[[165,[163,14]]]],77]]]],[[],[[12,[[165,[163,14]],77]]]],[[],[[12,[[165,[163,14]],77]]]],[[],[[12,[[164,[163]],77]]]],[[],[[12,[[190,[[165,[163,14]]]],77]]]],[[],[[12,[[190,[[164,[163]]]],77]]]],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,[412,412],[413,413],[[]],[[]],[414,386],0,0,[[],413],0,[11],[11],[11],[11],[11],[11],[11],[11],[414],[[]],[[]],[[]],[[]],[113,413],[11],[11],[11],[11],[[415,157,157,386],[[12,[396]]]],[415,[[12,[396]]]],[[412,412],16],[[413,413],16],[[],16],[[],16],[[],16],[[],16],[[412,19],[[12,[20]]]],[[413,19],[[12,[20]]]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[414,[[12,[396]]]],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],0,0,0,[[],[[12,[414,396]]]],[[],415],[37,415],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[414,[[12,[396]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[414,113,113],[[12,[396]]]],[[415,413]],0,[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[],46],[[],46],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[415,157,157,386],[[12,[396]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[416,417],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[418,418],[419,419],[[]],[[]],[416,386],0,0,0,[[],418],[[],419],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[416],0,[[]],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[[420,157,157,386],[[12,[396]]]],[[418,418],16],[[419,419],16],[[],16],[[],16],[[],16],[[],16],0,[[418,19],[[12,[20]]]],[[419,19],[[12,[20]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,[[]],[[]],[[]],[[]],[[]],[[]],[417,395],[416,[[12,[396]]]],[416,16],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[12,[416,396]]]],[[],420],[[418,419],420],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[421,[[12,[11,183]]]],[[],12],[416,[[12,[396]]]],[[421,15],[[12,[11,183]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[416,26],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],0,[411,[[12,[416,396]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[420,157,157,386],[[12,[396]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[422,422],[423,423],[424,424],[425,425],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[422,422],16],[[423,423],16],[[424,424],16],[[425,425],16],[[],16],[[],16],[[426,19],[[12,[20]]]],[[426,19],[[12,[20]]]],[[422,19],[[12,[20]]]],[[427,19],[[12,[20]]]],[[427,19],[[12,[20]]]],[[428,19],[[12,[20]]]],[[428,19],[[12,[20]]]],[[423,19],[[12,[20]]]],[[429,19],[[12,[20]]]],[[429,19],[[12,[20]]]],[[430,19],[[12,[20]]]],[[430,19],[[12,[20]]]],[[424,19],[[12,[20]]]],[[425,19],[[12,[20]]]],[[425,19],[[12,[20]]]],0,0,0,[426,425],[427,425],[429,425],[425,426],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[61,425],[388,425],[[]],[[425,422],426],[425,427],[425,429],[423,428],[424,430],[[],26],[[],26],[[],26],[[],26],[422],[423],[424],[425],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[426,422],[428,423],[430,424],0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[425,[30,[[165,[45,14]]]]],427],[[425,[30,[[165,[45,14]]]]],429],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],[34],[34],[34],[34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[427,[[5,[45]]]],[428,[[5,[45]]]],[429,[[5,[45]]]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[[]],[[]],[[]],[[]],[[]],[[385,157,157]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[410],[383],[385],[[]],[[]],[[]],[[]],[[]],0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[410,410],[383,383],[385,385],[384,384],[404,404],[[]],[[]],[[]],[[]],[[]],0,[[37,157,157],410],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[383],[385],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[[410,410],16],[[384,384],16],[[404,404],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[410],[[410,11],16],[383,382],[385,382],[[410,19],[[12,[20]]]],[[383,19],[[12,[20]]]],[[385,19],[[12,[20]]]],[[384,19],[[12,[20]]]],[[384,19],[[12,[20]]]],[[404,19],[[12,[20]]]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[383,37,157,157],5],[[385,37,157,157],5],[[383,157,157]],[[385,157,157]],[[385,157,157]],[[383,37,157,157],5],[[385,37,157,157],5],[410,16],[410],[384],[404],0,0,[383],[385],[383],[385],[[410,37,157,157],16],[[383,157,157],16],[[385,157,157],16],[[410,37,157,157],11],[[410,37,157,157],[[5,[11]]]],[[410,11,11,11],[[5,[11]]]],[[],11],[[],11],[[],11],[[],11],[[],11],0,0,[[]],[[]],[[]],[[]],[[]],[383,382],[385,382],[[410,404],16],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[410,[[5,[11]]]],[383,11],[385,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[404,404],[[5,[8]]]],0,0,[34],[[385,157,157]],[[37,157,157],410],[383],[385],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[410,37,157,157]],[[383,157,157]],[[385,157,157]],[410],[[]],[[]],[[]],[[]],[[]],[[],22],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[383,[[12,[385]]]],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[1],[1],[[]],[[]],[64,[[381,[[15,[14]]]]]],[[]],[[]],[[]],[[]],[159,[[381,[[15,[14]]]]]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[431,431],[407,407],[[]],[[]],0,[64,[[381,[[15,[14]]]]]],[[157,157,157,157],389],[[157,157,157,157],389],[11],[11],[11],[11],[381],[[]],[[]],[11],[11],[[407,407],16],[[],[[381,[[15,[14]]]]]],[[],[[381,[[15,[14]]]]]],[381,[[12,[396]]]],[[]],[[],[[381,[[15,[14]]]]]],[381,[[12,[396]]]],[[]],[[407,19],[[12,[20]]]],[[]],[[]],[[],[[381,[378,[15,[14]]]]]],[[],[[381,[380,[15,[14]]]]]],[[],[[381,[[15,[14]]]]]],[[],[[381,[[15,[14]]]]]],[[],16],[431,16],[[]],[159,[[381,[[15,[14]]]]]],[381,[[381,[[378,[37]],[15,[37,14]]]]]],[[],11],[[431,378],11],[[],11],[[],11],[[]],[[]],[[]],[11,5],[[431,11],5],[[],5],[[],5],[[]],[[]],[[]],[[431,378]],[[]],[[]],[[]],[[]],[[82,82]],[[157,157]],[[82,82]],[[157,157,407],[[381,[[15,[14]]]]]],[[],[[381,[[15,[14]]]]]],[381,[[12,[396]]]],[[]],[[],[[381,[[15,[14]]]]]],[381,[[12,[396]]]],[[],[[381,[[15,[14]]]]]],[381,[[12,[396]]]],[[]],[[]],[[]],[[]],[[157,157],[[381,[[15,[14]]]]]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[64,159],[[381,[[15,[14]]]]]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[159,[[381,[[15,[14]]]]]],[159],[64,[[381,[[15,[14]]]]]],[64],[381],[[],[[381,[378,[15,[14]]]]]],[[],[[381,[380,[15,[14]]]]]],[[],[[381,[[15,[14]]]]]],[[],[[381,[[15,[14]]]]]],[[],16],[159,[[381,[[15,[14]]]]]],[159],[381,[[381,[[378,[37]],[15,[37,14]]]]]],[[],11],[[]],[11,5],[[]],0,0,0,[1],[1],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[411,157,157],[[12,[396]]]],[[411,432],[[12,[396]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[433],[432,432],[411,411],[[]],[[]],[433,[[12,[148,396]]]],[[],432],[[],411],[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[11],[11],[11],[[432,432],16],[[411,411],16],[[],16],[[],16],[[],16],[[],16],[[432,19],[[12,[20]]]],[[411,19],[[12,[20]]]],[433,[[5,[388]]]],0,[[411,26]],[[411,11]],[[]],[[]],[[]],[[],26],[[],26],[432],[411],[[],11],[[],11],[[],11],0,[[]],[[]],[[]],[433,[[12,[396]]]],[433],[[433,411]],0,[[],5],[[],5],[[],5],[[]],[[]],[[]],0,0,0,[[],433],[433],[[],411],[[],[[12,[[433,[[176,[434]]]],183]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[411,26],[[12,[396]]]],[[411,11],[[12,[396]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[433,388]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[]],[[]],[[]],[388,433],[433,[[12,[433,183]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1],[[]],[[]],[[]],[[]],[[],5],[[],5],[397,397],[[]],[11],[11],[[]],[11],[[397,397],16],[[],16],[[],16],[[397,19],[[12,[20]]]],[[]],[[],26],[397],0,[[],11],[[]],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],46],[[]],[[]],[[],5],[[]],0,[[]],[[]],0,0,0,0,0,0,[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[435,435],[436,436],[[]],[[]],[11],[11],[11],[11],[[]],[[]],[11],[11],[[435,435],16],[[436,436],16],[[],16],[[],16],[[],16],[[],16],[436,26],[[435,19],[[12,[20]]]],[[436,19],[[12,[20]]]],[[]],[[]],[[],26],[[],26],[435],[[[0,[437,438]]],435],[436],[[[0,[437,438]]],436],[435,26],[436,26],[[],11],[[],11],[[]],[[]],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[436,26],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[439,439],[114,114],[[]],[[]],0,[439,101],[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[11],[11],[11],0,[[268,190],[[12,[41,21]]]],[[],17],[[114,2],[[5,[11]]]],[[21,19],[[12,[20]]]],[[21,19],[[12,[20]]]],[[439,19],[[12,[20]]]],[[114,19],[[12,[20]]]],[[114,19],[[12,[20]]]],[102,21],[440,21],[77,21],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[]],[[]],[[]],0,[[],2],[439,2],0,[[2,[201,[159]]],439],[[73,4,41,[15,[439,14]]],114],[[2,101],439],[[2,163],439],[114,11],[[439,11],[[5,[11]]]],[[114,11],[[5,[11]]]],[439,11],[114,11],[[]],[[]],[[]],[[]],[[]],[[]],[34],[[]],[[]],[[]],[[]],[[]],[[]],[21,[[5,[45]]]],0,[[]],[[]],[[],22],[[],22],[114,[[12,[21]]]],[73,[[12,[114,21]]]],[73,[[12,[114,21]]]],[73,[[12,[114,21]]]],[[],12],[[],[[12,[439,21]]]],[[[15,[14]]],[[12,[439,21]]]],[[],12],[15,[[12,[439,21]]]],[[],12],[86,[[12,[114,21]]]],[[],12],[[],12],[[],12],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],0,[439,[[165,[163,14]]]],[439,201],[[]],[[]],[[]],[[[165,[163,14]]],[[201,[159]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[3,[[12,[[15,[24,14]],102]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],0,[[441,11]],[[442,443],37],[[442,443],37],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[444,[5,[82]],[5,[82]]]],[[],445],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[446,446],[445,445],[441,441],[[]],[[]],[[]],0,0,0,0,0,[[442,37,443]],[[],444],[[],442],[[],446],[[],441],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[[446,446],16],[[445,445],16],[[441,441],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[446,19],[[12,[20]]]],[[445,19],[[12,[20]]]],[[441,19],[[12,[20]]]],[[]],[[]],[[]],[[]],[[]],[[],26],[441],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[444,16],[[446,445],[[5,[64]]]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[],442],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,[[12,[446,22]]]],[[442,37,443,11],37],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[445,445]],[[441,11]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[],5],[[],5],[11],[11],[[]],[11],[[]],0,[[],[[5,[441]]]],[[],11],[[]],[[],16],[[],5],[[]],[[]],[[]],0,[[]],[[]],[16],0,0,0,[[],[[5,[447]]]],[[],12],[[],12],[3],[[],46],0,[[]],[[]],[[],5],[[]],[[]],[[]],[[],81],0,0,0,0,0,[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[448,448],[[]],[[],[[12,[13,40]]]],[[],449],[[],448],[[],10],[11],[11],[11],[11],[[]],[[]],[449],[11],[11],[449],0,0,0,[13,[[15,[37,14]]]],0,[[448,448],16],[449],0,[[448,19],[[12,[20]]]],[[]],[[]],[[],11],[[],11],[[]],[[]],[[],5],[[],5],[[]],[[]],0,0,[10,449],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[449,13]],0,0,[[113,448],[[12,[[450,[13]],40]]]],[[449,10]],[[]],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[1],[1],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[451,452]],[[453,452]],[454,454],[455,455],[[]],[[]],0,0,0,[[],454],[[],456],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],0,[[455,455],16],[[],16],[[],16],0,[[455,19],[[12,[20]]]],0,[[]],[[]],[[]],[[]],[[]],[[35,455,454,457,[5,[458]],[450,[13]]],451],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[35,455,454,457,[5,[458]],22],453],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[451,[152,[3]]],5],[[451,[152,[3]]],16],0,0,[[[165,[459,14]]],[[12,[44]]]],[[35,455,454,[15,[13,14]]],[[12,[44]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[451,458]],[[453,458]],0,[[451,456]],[[453,456]],[[451,[30,[22]]],[[12,[40]]]],[456],0,0,0,[[]],[[]],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[451,460,461]],[[453,460,461]],0,[[]],[[]],[[]],[[]],[[]],[[450,460],450],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],0,0,[[],403],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[462,463],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[452],[464,464],[465,465],[466,466],[467,467],[468,468],[469,469],[470,470],[471,471],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[461],0,0,[[],464],[[],468],[[],462],0,0,[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[],[[12,[466]]]],[[],[[12,[467]]]],[[],[[12,[468]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[461],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],0,[466,452],[[465,465],16],[[466,466],16],[[467,467],16],[[468,468],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,[[]],[[465,19],[[12,[20]]]],[[466,19],[[12,[20]]]],[[467,19],[[12,[20]]]],[[468,19],[[12,[20]]]],[[468,19],[[12,[20]]]],[[470,19],[[12,[20]]]],[[471,19],[[12,[20]]]],[[472,19],[[12,[20]]]],[[44,19],[[12,[20]]]],[[44,19],[[12,[20]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[473,44],[474,44],[[]],[[]],[3,[[12,[468,22]]]],0,0,[[],26],[[],26],[[],26],[3,[[5,[22]]]],[[458,3],5],0,[465],[466],[467],0,0,[461,471],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[461,16],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],475],0,0,0,0,0,0,0,0,0,[[],462],[[],16],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],0,0,[461],[34],[461],0,0,0,0,[[3,464,[165,[459,14]]],[[12,[44]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[458],[466,12],[467,12],[468,12],[[461,16]],[461],[[461,16]],[[461,16]],[[461,16]],[[461,16]],[[3,22]],[[458,3]],[[461,16]],[[461,476]],[[461,475]],[[461,3]],0,[44,[[5,[45]]]],0,[461,[[5,[458]]]],0,0,[461,[[5,[458]]]],[464,[[5,[466]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[460,461]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],0,[461,[[5,[477]]]],0,0,0,0,[[462,16],462],[[462,16],462],[[],462],[462,462],[462,462],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[478],[478],[475,475],[[476,475],476],[[475,475],475],[[479,480],481],[[482,[30,[483]]],484],[[485,485],485],[[476,475]],[[475,475]],[[486,487,488]],[[479,16,480],481],[[479,16,459],489],[[486,487,487,488]],[[479,[30,[475]],480],481],[[479,64]],[[486,157,157,157]],[[479,16,480],481],[[479,16,459],489],[490,64],0,[[491,64,[109,[64]]],[[109,[64]]]],[[492,475,487],487],[[493,475,487],487],[[479,475,494]],[[479,475,494]],[[479,475,494]],[[479,487,494],481],[[479,475,494],481],[[479,475]],[[479,475,459],489],[[479,487,459],489],[[479,475,493,459],489],[495,16],[496,16],0,0,[[497,16],497],0,[[498,492,[30,[475]]],498],[[499,492,[30,[475]]],499],0,[[492,487],487],[475,64],[64,475],[[500,16],500],0,[[460,501,16],64],[[460,501,16,64],64],[[460,501,64,64],64],0,[502,16],[503,16],[503,16],[476,16],[487,16],[475,16],[504,16],[503,16],[503,16],[490,16],[[486,486]],[[505,505]],[[506,506]],[[507,507]],[[508,508]],[[486,486]],[487,64],0,0,[[482,476,475,509]],[[],3],[487,64],[510,64],[[]],[[476,476],476],[[475,475],475],[[511,64],511],[[]],[[476,476],476],[[475,475],475],[[511,64],511],[479,501],[497,497],0,[498,498],[512,512],[479,64],[460,487],[479,487],[479,475],[479,475],[479,64],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],496],0,[[513,[30,[488]]],513],[[514,[30,[488]]],514],0,[[515,479],516],[[460,506]],[[490,506,16],490],[[517,[30,[488]]],517],0,[[518,11,16],518],[[519,11,16],519],[[502,502],502],[[481,481],481],[[481,481]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],497],[[[30,[501]]],520],[487,64],0,[487,64],[491,493],[487,[[109,[64]]]],[[479,[30,[514]]],481],[[503,521],16],[[503,521],16],[[503,521],16],0,[[503,521],16],[[503,521],16],[[503,521],16],[11,11],0,[522,11],[486,11],0,[486,487],0,[523,515],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[476,476],[475,475],[487,476],[487,476],[487,476],[[479,459],489],[[479,459],489],[524,493],[523,515],[481,16],[[[525,[11]]],3],[[460,501,487,3]],[[479,16,[30,[514]]],481],0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[479,487,493],479],[[479,487,493,437],479],[[482,476,64,[30,[488]],[30,[509]]]],[[476,64,[30,[488]]],483],[[482,476,64,[30,[488]]]],[[476,64,[30,[509]]],483],[[482,476,64,[30,[509]]]],[[476,476,476],476],[[487,476],476],[[475,475,475],475],[[518,109],518],0,[[519,16],519],0,[486],[505],[[]],[460],[[],494],0,[[],494],[481,16],[[481,521],16],[481,16],[479,487],[482,487],0,0,0,[526,527],0,[[528,16],528],0,[491,491],[492,492],[476,476],[487,487],[510,510],[475,475],[522,522],[529,529],[530,530],[486,486],[483,483],[511,511],[531,531],[509,509],[532,532],[533,533],[534,534],[535,535],[536,536],[537,537],[538,538],[539,539],[540,540],[505,505],[541,541],[542,542],[499,499],[543,543],[515,515],[512,512],[497,497],[460,460],[506,506],[544,544],[545,545],[546,546],[521,521],[502,502],[547,547],[548,548],[549,549],[550,550],[551,551],[552,552],[507,507],[508,508],[553,553],[554,554],[501,501],[555,555],[490,490],[503,503],[495,495],[496,496],[524,524],[493,493],[504,504],[556,556],[482,482],[481,481],[494,494],[557,557],[523,523],[485,485],[452,452],[513,513],[514,514],[558,558],[517,517],[559,559],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[479],[504],[[[15,[476,14]],[30,[509]]],483],[[533,533],8],[[541,541],8],[[548,548],8],[[550,550],8],[[551,551],8],[[495,495],8],[[557,557],8],[[479,[30,[513]]],481],[513,513],[514,514],0,0,[479,481],[528,528],[[498,16],498],0,[[479,[30,[514]],459],560],0,[[513,[30,[488]]],513],[[514,[30,[488]]],514],[[561,[30,[488]]],561],0,0,0,[[479,562],481],[479,481],[479,481],[479,481],[479,481],[[479,488],481],[479,481],[479,481],[[479,[30,[488]],[30,[513]]],481],[[486,476,488]],[[479,11,459]],0,[502,16],0,[[498,16],498],[[499,16],499],0,[[490,502,548],16],[[490,549],16],0,[[487,476],16],[[487,487],16],[[481,459],481],[[[15,[476,14]],[30,[488]],[30,[509]]],483],0,[[490,502,548],11],[493,491],0,[493,16],0,0,0,[479,460],[482,460],0,0,[[498,[30,[476]]],498],[[499,[30,[476]]],499],0,[479,487],[[528,16],528],0,[[538,563],563],[[538,563],563],[[538,563],563],[[538,475],563],0,[[538,563],563],[[538,563],563],[[538,563],563],[[518,235],518],[[519,235],519],0,0,[[518,235],518],[[519,235],519],0,0,[[],452],[523,515],0,[[[30,[509]],64,64],[[15,[483,14]]]],[[[30,[509]],64,64,15]],[[479,459]],[[460,459]],0,[[479,459]],[[460,459]],[[],496],0,[460,16],[479],[460,482],[[482,487,488,564]],[[482,476,492,488,564],487],[[],491],[[],476],[[],475],[[],529],[[],530],[[],486],[[],565],[[],511],[[],509],[[],532],[[],533],[[],535],[[],536],[[],537],[[],539],[[],505],[[],566],[[],541],[[],515],[[],567],[[],512],[[],460],[[],506],[[],544],[[],545],[[],502],[[],507],[[],508],[[],553],[[],490],[[],503],[[],493],[[],504],[[],556],[[],523],[[],485],[[],452],[[],513],[[],514],[[],561],[[520,64],520],[[498,64],498],[[512,64],512],0,[[568,16],568],[[498,16],498],0,0,[[498,[30,[476]]],498],[[499,[30,[476]]],499],0,[[498,487],498],[[498,[30,[475]]],498],[[512,[30,[475]]],512],0,[[569,64],569],[[498,64],498],[[512,64],512],0,[[[525,[11]]]],[503,475],0,[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[554,22],[[],[[12,[491]]]],[[],[[12,[492]]]],[[],[[12,[476]]]],[[],[[12,[487]]]],[[],[[12,[475]]]],[[],[[12,[522]]]],[[],[[12,[529]]]],[[],[[12,[530]]]],[[],[[12,[486]]]],[[],[[12,[511]]]],[[],[[12,[509]]]],[[],[[12,[532]]]],[[],[[12,[533]]]],[[],[[12,[534]]]],[[],[[12,[535]]]],[[],[[12,[536]]]],[[],[[12,[537]]]],[[],[[12,[538]]]],[[],[[12,[539]]]],[[],[[12,[540]]]],[[],[[12,[505]]]],[[],[[12,[541]]]],[[],[[12,[506]]]],[[],[[12,[544]]]],[[],[[12,[545]]]],[[],[[12,[546]]]],[[],[[12,[521]]]],[[],[[12,[502]]]],[[],[[12,[548]]]],[[],[[12,[550]]]],[[],[[12,[551]]]],[[],[[12,[552]]]],[[],[[12,[508]]]],[[],[[12,[553]]]],[[],[[12,[554]]]],[[],[[12,[501]]]],[[],[[12,[495]]]],[[],[[12,[496]]]],[[],[[12,[524]]]],[[],[[12,[504]]]],[[],[[12,[556]]]],[[],[[12,[557]]]],[[],[[12,[523]]]],[[],[[12,[485]]]],[[],[[12,[452]]]],[[],[[12,[559]]]],0,[[528,11],528],[[500,64],500],[[528,64],528],0,0,[[476,476],64],[[476,476],64],[[487,476],64],[[487,476],64],[[475,475],475],[[475,64],475],[[475,475],64],[[[30,[488]],64,64],[[15,[483,14]]]],[481,16],[[481,521],16],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],494],0,[[479,64],481],[[479,64],481],[[498,487],498],[[499,487],499],0,[481,475],[481,16],[[481,521],16],[481,16],[[481,521],16],[[497,16],497],0,[81,554],0,[[519,81],519],0,0,[481,16],[[481,521],16],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[510],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],0,0,0,[[],536],[[497,16],497],[[568,16],568],[[498,16],498],[[499,16],499],[481,16],0,0,0,0,[538,563],[460,507],[538,570],[479],[[491,491],16],[[492,492],16],[[476,476],16],[[487,487],16],[[510,510],16],[[475,475],16],[[522,522],16],[[529,529],16],[[530,530],16],[[486,486],16],[[483,483],16],[[511,511],16],[[531,531],16],[[509,509],16],[[532,532],16],[[533,533],16],[[534,534],16],[[535,535],16],[[536,536],16],[[537,537],16],[[538,538],16],[[539,539],16],[[540,540],16],[[505,505],16],[[541,541],16],[[543,543],16],[[515,515],16],[[460,460],16],[[506,506],16],[[544,544],16],[[545,545],16],[[546,546],16],[[521,521],16],[[502,502],16],[[547,547],16],[[548,548],16],[[549,549],16],[[550,550],16],[[551,551],16],[[552,552],16],[[507,507],16],[[508,508],16],[[553,553],16],[[554,554],16],[[501,501],16],[[555,555],16],[[495,495],16],[[496,496],16],[[524,524],16],[[493,493],16],[[494,494],16],[[557,557],16],[[523,523],16],[[485,485],16],[[452,452],16],[[513,513],16],[[559,559],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[482,476,571],487],0,0,0,0,[508,22],[64,487],[64,487],[504,16],0,[64,487],[64,487],[[520,64],520],[[569,64],569],[[],529],[[487,64],487],[[487,475],487],[[479,487]],[[479,64]],[[479,64]],0,[482],[[487,476]],[[487,64]],[[487,64]],0,[452,488],0,0,[[513,557],513],[[514,557],514],0,[[513,533],513],0,0,[[572,[30,[488]]],572],[[500,488],500],[[515,488],515],0,0,0,[[518,11],518],[[519,11],519],[[498,[30,[476]]],498],[[499,[30,[476]]],499],[[498,487],498],[[498,[30,[475]]],498],[[512,[30,[475]]],512],[476,476],[475,475],[[491,19],[[12,[20]]]],[[492,19],[[12,[20]]]],[[476,19],[[12,[20]]]],[[487,19],[[12,[20]]]],[[475,19],[[12,[20]]]],[[486,19],[[12,[20]]]],[[483,19],[[12,[20]]]],[[511,19],[[12,[20]]]],[[531,19],[[12,[20]]]],[[509,19],[[12,[20]]]],[[532,19],[[12,[20]]]],[[533,19],[[12,[20]]]],[[533,19],[[12,[20]]]],[[534,19],[[12,[20]]]],[[535,19],[[12,[20]]]],[[536,19],[[12,[20]]]],[[537,19],[[12,[20]]]],[[538,19],[[12,[20]]]],[[539,19],[[12,[20]]]],[[540,19],[[12,[20]]]],[[505,19],[[12,[20]]]],[[541,19],[[12,[20]]]],[[542,19],[[12,[20]]]],[[499,19],[[12,[20]]]],[[543,19],[[12,[20]]]],[[515,19],[[12,[20]]]],[[512,19],[[12,[20]]]],[[497,19],[[12,[20]]]],[[460,19],[[12,[20]]]],[[506,19],[[12,[20]]]],[[544,19],[[12,[20]]]],[[545,19],[[12,[20]]]],[[546,19],[[12,[20]]]],[[521,19],[[12,[20]]]],[[502,19],[[12,[20]]]],[[547,19],[[12,[20]]]],[[548,19],[[12,[20]]]],[[549,19],[[12,[20]]]],[[550,19],[[12,[20]]]],[[551,19],[[12,[20]]]],[[552,19],[[12,[20]]]],[[553,19],[[12,[20]]]],[[554,19],[[12,[20]]]],[[501,19],[[12,[20]]]],[[555,19],[[12,[20]]]],[[490,19],[[12,[20]]]],[[503,19],[[12,[20]]]],[[495,19],[[12,[20]]]],[[496,19],[[12,[20]]]],[[524,19],[[12,[20]]]],[[493,19],[[12,[20]]]],[[504,19],[[12,[20]]]],[[556,19],[[12,[20]]]],[[481,19],[[12,[20]]]],[[489,19],[[12,[20]]]],[[494,19],[[12,[20]]]],[[557,19],[[12,[20]]]],[[557,19],[[12,[20]]]],[[523,19],[[12,[20]]]],[[485,19],[[12,[20]]]],[[452,19],[[12,[20]]]],[[558,19],[[12,[20]]]],[[517,19],[[12,[20]]]],[[559,19],[[12,[20]]]],[504,[[5,[501]]]],0,[[],494],[[528,[30,[565]]],528],[[513,532],513],0,0,[[513,573,523],64],0,0,[[479,459]],[[460,459]],[[482,459]],[[460,459]],0,[[547,502,16],22],[[549,547,16],22],[[460,549],22],[[569,515],569],[[520,515],520],[[498,515],498],[[572,16],572],[[528,16],528],[[567,515],567],[[558,16],558],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],476],[[],476],[[],476],[[],476],[[]],[[],487],[[]],[[]],[[],475],[[],475],[[],475],[[]],[[],475],[[]],[530,522],[[]],[529,522],[[]],[[]],[[]],[574,483],[575,483],[486,483],[[[15,[483,14]]],483],[531,483],[576,483],[577,483],[578,483],[[]],[579,483],[532,565],[[]],[557,565],[[]],[64,511],[[]],[[]],[[]],[[],509],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[510,541],[510,541],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[159,551],[[]],[157,551],[26,551],[[]],[[]],[[]],[[]],[[]],[[]],[3,501],[22,501],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[475,485],[64,485],[[]],[22,513],[22,513],[3,513],[[[580,[3]]],513],[[]],[22,513],[3,514],[[[580,[3]]],514],[[]],[581,514],[22,514],[[[164,[538]]],514],[22,514],[582,514],[513,514],[583,514],[[]],[[]],[[]],[[]],[[538,584],563],[[476,475],487],[478,518],[[[109,[81]],478],519],[437,585],[[[30,[514]]],585],[[[30,[514]],564],586],[[524,491],493],[[476,476],487],[[476,475],487],[[[15,[37,14]]],534],[[538,587],563],[[],487],[[538,570],563],[[],529],[[],529],[[],534],[[476,476],487],[[[109,[64]],[109,[64]]],487],[560,16],[560,16],[481,16],[[476,[164,[538]]],483],[[482,476,[164,[538]]]],[[476,[164,[538]],488],483],[[482,476,[164,[538]],488]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,0,0,0,0,0,[479],[479],[[452,488],488],[[479,459],489],[523,515],[[566,64],566],0,0,0,[[504,501],16],[481,16],0,[[504,501],16],0,[503,16],[491],[492],[510],[509],[532],[533],[537],[539],[540],[541],[543],[502],[548],[549],[501],[495],[496],[557],0,[[479,[30,[513]]],481],[513,513],[514,514],[487,64],[522,11],[529,11],[530,11],[[520,[109,[64]]],520],0,[[518,11,16,16],518],[[519,11,16,16],519],[481,481],[[460,501]],[[528,[30,[514]]],528],0,[[[109,[64]],64,[30,[509]]],483],[[482,[109,[64]],64,[30,[509]]]],[[479,459],489],[566,566],[[],497],[[528,491],528],[493,491],[[479,459],489],[493,16],[493,491],[[497,64],497],[[479,459],489],[[479,459],489],[[],494],[503,[[5,[476]]]],[481,[[5,[476]]]],[481,16],0,[[498,16],498],[[497,16],497],[[479,564],481],0,[[479,[30,[514]],564],481],[[568,459],568],[[585,459],585],0,0,[[498,501],498],[510,541],[479,501],[[528,501],528],[[499,501],499],[[512,501],512],0,0,0,0,0,0,0,0,0,[[568,437],568],[[528,437],528],[[512,437],512],[[497,437],497],0,0,0,0,0,0,[[541,487,487,488],483],[[479,[30,[541]],[30,[475]]],481],[[482,541,487,487,488]],0,0,[[541,[30,[475]],[30,[514]]],572],[[479,437,459],489],0,[[492,11],491],[[476,11],64],[[475,11],64],[529,488],[530,64],0,[[492,11],491],[[476,11],64],[[475,11],64],[529,488],[530,64],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,[[515,[30,[485]]],515],0,[[479,459]],[[460,459]],[[479,459]],[[460,459]],[[3,11],11],[[460,479]],[519,519],[[479,487,501,494],481],[[481,494],481],[[523,481],588],[481,[[5,[476]]]],[503,[[5,[476]]]],0,[[523,481,16],588],[[479,487,16,501,494],481],[[498,16],498],[[499,16],499],0,0,0,[[528,16],528],[494,16],0,[[504,501]],[[487,487],487],[[487,487],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[514,479,[5,[16]],64,[30,[565]]],589],[[514,523,565,491],590],0,[504,16],[[504,501],16],[486,16],[509,16],[538,16],[505,16],[513,16],[514,16],[479,16],[499,16],[476,16],[487,16],[475,16],[524,16],[493,16],0,[499,16],[503,16],[[],16],[487,16],[502,16],[481,16],[460,16],[[504,501],16],[487,16],[[479,487],16],[512,16],[511,16],[485,16],0,[503,16],[481,16],[460,16],[486,16],[[],16],[[],16],[[],16],[524,16],[493,16],[479,16],[513,513],[514,514],0,0,0,0,[[490,548],16],[[490,548],16],[[490,548],16],0,[[479,[30,[514]]],481],0,0,[[559,564],554],[[481,501],481],[[519,81],519],0,0,0,0,[499,496],[479,496],[482,496],0,0,[[460,476],[[5,[496]]]],[[504,476,64],[[5,[496]]]],[504,108],[[460,496],482],0,[479,493],[[482,22,532,488,64],[[164,[538]]]],[[591,479]],[[482,22,532,488],[[164,[538]]]],[[528,478],528],0,[[[30,[501]]],569],[487,64],0,[487,476],[487,476],[487,64],[491,493],[487,476],[485,475],[475,64],[475,64],[109],[[487,475],476],[[],452],[[452,479]],[[452,479],[[5,[452]]]],[[[15,[476,14]],[30,[509]]],483],[[[30,[509]]],483],[[482,[30,[509]]]],[[479,[30,[514]]],481],[[460,501],[[5,[592]]]],[[460,[30,[22]],[30,[522]],539],510],[[528,16],528],[[504,501,16]],0,[[519,16],519],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[481,16],0,0,0,0,[493,524],0,0,[493,16],0,[479,501],[[528,475],528],[[515,[30,[485]]],515],0,[481],[[502,502],16],[[476,476],476],[[475,475],475],0,0,[[593,64],593],[[518,11],518],[[519,11],519],0,0,[[518,[5,[11]]],518],[475,64],[[520,64],520],[[497,64],497],[479,487],[[512,[30,[475]]],512],0,0,0,0,[[569,64],569],[[497,64],497],[[479,459]],[[460,459]],[[479,459]],[[460,459]],[[460,479]],0,[523,515],[[479,[30,[514]],459],[[489,[5]]]],[[479,541,[30,[475]],459],[[489,[5]]]],0,0,[486,483],0,[481,16],[503,16],0,[[476,476],476],[[475,475],475],0,[[593,64],593],0,[[518,11],518],[[519,11],519],0,0,[475,64],[[520,64],520],[[498,64],498],[[512,64],512],[479,487],[[593,64],593],0,[[497,64],497],0,[[497,64],497],[479,475],[[572,475],572],[[528,475],528],[[512,[30,[475]]],512],0,0,0,[[569,64],569],[[498,64],498],[[512,64],512],0,0,0,0,[[479,[30,[513]]],481],[64,532],[513,513],[514,514],[[498,16],498],[[499,16],499],0,[[460,496]],[[475,64],475],[[475,475],475],[[475,64]],[460,[[5,[555]]]],[490,[[5,[555]]]],[594,528],0,[[515,64],515],0,[[498,235],498],[510,22],[548,3],0,0,[475,475],[[],497],[[[30,[514]]],568],[[437,[30,[514]]],585],[[595,[30,[501]]],569],[[596,[30,[501]]],520],[[[30,[514]]],498],[[64,64],476],[[[164,[[598,[597]]]],541],510],[[64,64],475],[437,593],[488,529],[[],530],[[460,496,501,487,487],479],[[[30,[64]],[30,[488]]],509],[[[30,[514]]],572],[[64,533],532],[[16,[30,[514]]],599],[[16,[30,[514]]],600],[[],518],[[[30,[514]]],601],[564,586],[[[30,[514]]],591],[64,500],[[16,[30,[514]]],602],[109,519],[[[30,[501]]],499],[[],497],[[502,548],549],[559,554],[437,501],[[495,501],496],[[460,496,487],482],[481,489],[[[30,[22]]],513],[[[30,[541]],[30,[475]]],558],[[[30,[541]],[30,[475]]],517],[[],561],0,0,0,[479,501],0,[479,476],[[],511],[[],509],[[],515],[523,588],[452,588],[475,475],[[],501],[[593,11],593],0,0,[[490,548],11],0,0,0,[[518,11,16],518],[[519,11,16],519],0,0,[[481,[30,[514]]],481],[[481,459],481],[[481,553],481],[[481,553],481],[[481,[30,[514]]],481],[[481,[30,[514]]],481],[[481,459],481],[[481,459],481],[[568,[5,[16]]],568],[[498,16],498],0,0,[[504,501]],[[508,564]],0,0,[[460,459]],0,[[460,459]],[[499,495],499],0,0,[[519,603],519],0,0,[460,604],[[515,[30,[485]]],515],0,0,[[479,459]],[[460,459]],[[481,605]],[[479,459]],[[460,459]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[515,487],483],[[517,479,487]],[479,482],0,[[479,487],482],0,[[533,533],[[5,[8]]]],[[541,541],[[5,[8]]]],[[548,548],[[5,[8]]]],[[550,550],[[5,[8]]]],[[551,551],[[5,[8]]]],[[495,495],[[5,[8]]]],[[557,557],[[5,[8]]]],[[528,16],528],0,0,0,[490,64],[[498,492],498],[[499,492],499],0,0,0,[460,64],[490,64],0,0,0,0,0,0,[[502,502],502],0,0,[460,[[5,[476]]]],[460,[[5,[476]]]],[460,[[5,[476]]]],[523,515],0,[[479,501,481,543,459],5],[[479,501,481,459],5],0,[[64,64],476],[[538,563],487],[[538,587],487],0,[[492,487],476],0,0,[493,16],[[518,564],518],[[519,564],519],0,0,0,[503,[[5,[476]]]],0,[503,[[5,[81]]]],0,0,[503,16],[503,16],[503,16],[503,16],0,0,[64,532],[[479,437,459],489],[[479,487,480],481],[[479,16,[30,[514]]],481],[[479,[30,[514]]],481],[513,513],[514,514],0,0,0,[[482,487,[30,[511]],[30,[488]],[30,[509]]]],0,0,0,[[479,487],16],[[487,[30,[511]],[30,[488]]],483],[[482,487,[30,[511]],[30,[488]]]],[[487,[30,[511]],[30,[509]]],483],[[482,487,[30,[511]],[30,[509]]]],[530,530],[[109,109]],[[109,109]],0,[3],[[504,501]],[481],[460],[[460,403]],[[486,11]],[[486,11]],[504],[479],[479],[479],[[569,16],569],[[520,16],520],[[498,16],498],[[512,16],512],0,0,0,[[498,235],498],0,0,[[565,523],532],[[557,523],532],0,[[[30,[501]]],569],[487,64],0,[487,476],[485,475],[487,476],[487,64],[491,493],[487,476],[475,475],[[486,606,476]],[[517,64,475],517],[[487,606],487],0,0,[476,476],[475,475],[[482,476],476],[[482,64],64],[[482,475],475],[[572,[30,[511]]],572],[[515,[30,[511]]],515],0,0,0,[[460,506,459],507],[64,511],[64,485],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[479,459],489],0,[460,487],[490,487],0,0,0,0,[498,498],[497,497],0,[[497,475],497],[[479,[5,[491]]]],[[481,[5,[491]]]],[[479,487,[5,[491]]]],[[479,475]],0,0,[503,16],[481,16],[503,16],[503,16],[503,16],[[568,16],568],0,[[479,16,[30,[514]]],481],[[479,[30,[514]]],481],[[568,16],568],[[559,16,564],554],[[558,16],558],0,0,0,0,[[585,[30,[514]]],585],0,0,[[572,494],572],[[591,494],591],[[558,494],558],[[517,494],517],0,0,0,0,0,[479,481],[491,12],[492,12],[476,12],[487,12],[475,12],[522,12],[529,12],[530,12],[486,12],[511,12],[509,12],[532,12],[533,12],[534,12],[535,12],[536,12],[537,12],[538,12],[539,12],[540,12],[505,12],[541,12],[506,12],[544,12],[545,12],[546,12],[521,12],[502,12],[548,12],[550,12],[551,12],[552,12],[508,12],[553,12],[554,12],[501,12],[495,12],[496,12],[524,12],[504,12],[556,12],[557,12],[523,12],[485,12],[452,12],[559,12],[[510,[30,[522]],539]],[[482,484,[30,[483]]]],0,[[487,64]],[[487,476]],[[479,487]],[[482,487]],[[460,553]],[[460,16]],[[504,501]],[[479,16]],[[504,16]],[[460,536]],[[487,64]],[[479,64]],[[479,[109,[64]]]],[[482,496]],[[487,64]],[[479,64]],[[479,475]],[[479,64]],[[479,64]],[[479,475]],[[479,64]],[[460,604]],[[510,[30,[522]],539]],[[460,64]],[[460,[0,[235,278,279]]]],[[487,64]],[[479,64]],[[479,[30,[[164,[523]]]]]],[[460,[30,[[164,[523]]]]]],[[487,64]],[[479,16]],[[460,452]],[[487,64]],[[479,64]],[[479,[109,[64]]]],[[460,479]],[[515,607],515],0,0,0,0,[502,16],[501,22],[495,3],[496,22],[[572,[30,[514]]],572],0,[[568,479,459],560],[[569,460,459],489],[[520,460,459],489],[[498,460,459],[[5,[[489,[5]]]]]],[[593,479,459],489],[[528,479],608],[[499,460,459],489],[[515,479,459],489],[[567,460,459],489],[[512,479,459]],[[497,479,459],609],[[569,460,16,459],[[5,[489]]]],[[520,460,16,459],[[5,[489]]]],[[460,16,569,569,459],[[5,[489]]]],[[460,16,520,520,459],[[5,[489]]]],[[479,16,569,569,459],489],[[479,16,520,520,459],489],[[569,479,16,459],[[5,[489]]]],[[520,479,16,459],[[5,[489]]]],[[568,16],568],0,[[585,479,11,11,235],481],[[569,479,459],489],[[520,479,459],489],[[567,479,459],489],[[499,460,515,16]],[500,500],[[497,479,64,11,459],609],[[569,16],569],[[520,16],520],0,0,[[460,501,459],5],[[460,501,[5,[476]],459],5],[[460,501,459],5],[[460,501,487,459],5],[[460,501,[30,[514]]],5],[[585,479,459],[[489,[5]]]],[[568,479,459],560],[[519,16],519],0,[[497,479,459],609],[[487,64],487],[[566,64],566],[[487,475],487],[479],[479],0,0,[523,515],[[487,476],64],[[532,488],537],[594,528],[487,475],[510],[522],[538,475],[[513,64],513],[517,475],[[561,64],561],0,0,0,0,0,0,[510,475],[[479,11]],[[81,564],554],0,[[479,[30,[513]]],481],[572,572],[513,513],[514,514],0,[[479,[30,[514]]],481],[513,513],[514,514],[[519,81],519],[[519,16],519],0,[[593,[30,[475]]],593],[479,610],[[566,64],566],0,0,0,[479,610],0,0,[[518,[30,[81]]],518],0,[479,481],[64,475],[486,[[15,[611,14]]]],[487,475],[[530,[5,[64]]],108],0,0,[[593,11],593],0,0,0,[[519,81],519],[[497,16],497],0,[[497,16],497],[504],[[460,501,592]],[513,513],[514,514],0,0,[[593,16],593],0,0,[[572,[30,[509]]],572],[[515,509],515],0,0,[[479,509,3]],[[479,[30,[513]]],481],[513,513],[514,514],0,[452,488],0,[479,164],[460,[[164,[523]]]],0,0,[479,523],[[460,479]],[[476,476],475],[[476,475],476],[[475,475],475],[[476,475]],[[475,475]],[[482,487],482],[[518,564],518],[[519,564],519],0,0,[485,475],[[504,501]],[481],0,[548,3],[[64,64],485],[[],22],[506,506],[508,508],[[460,[15,[612,14]]],[[15,[542,14]]]],[[460,459]],0,[[460,459]],[460,[[164,[[598,[597]]]]]],0,0,[[573,476,492,564,532,488],483],[591,3],[538,3],[[500,[30,[514]]],500],[[519,[30,[514]]],519],[[482,476,492,564,532,488],487],[513,3],[514,3],0,0,0,0,0,0,0,0,0,0,0,0,[[519,488],519],[[528,488],528],[452,488],0,0,[[528,[5,[488]]],528],0,0,0,[[564,564],554],[479,481],[479,481],0,[[[109,[11]],564],554],[[528,557],528],[[513,557],513],[[514,557],514],0,[[479,557],64],[523,[[15,[557,14]]]],0,[483,541],0,0,[[460,479]],0,0,0,0,[[558,[30,[488]]],558],[[517,[30,[488]]],517],0,0,[[498,16],498],[491,64],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[475,476],[491,64],[492,475],[[],22],[[],22],[476,475],[[504,501]],[[479,16,[30,[514]]],481],[[[30,[501]]],520],[487,64],0,[491,493],[491,493],[487,64],[515,485],0,0,0,[[479,564]],[[519,16],519],0,[[487,475],487],[[486,475]],[[483,475]],[[460,496,475]],0,[481,16],0,[[481,521],16],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[534,535],534],0,0,[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[479,481],[[572,479],481],[[599,479],481],[[600,479],481],[[518,479],481],[[601,479],481],[[586,479],481],[[591,479],481],[[500,479],481],[[602,479],481],[[566,479],481],[[519,479],481],[[528,479],481],[[506,479]],[[490,479]],[[503,479]],[[523,479]],[[452,479]],[[558,479],481],[[517,479],481],[[561,479],481],[479,16],[513,513],[514,514],0,0,[[487,487],487],[[481,481],481],[[494,494],494],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[460,487],[460,475],0,[[558,[30,[487]]],558],[[517,[30,[487]]],517],0,0,0,[[64,64],475],[503,475],0,[[479,459],489],[566,566],[519,519],[[],497],[[528,491],528],[493,491],[[479,459],489],[[479,459],489],[493,16],[[497,64],497],0,0,[526,527],[479,16],[483,487],[479,452],0,[479,452],[[64,[109,[64]],[30,[509]]],483],[[482,64,[109,[64]],[30,[509]]]],[[498,16],498],[[497,16],497],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[460,16],[460,16],[490,16],0,[479],[[460,501],16],[[479,[30,[513]]],481],[513,513],[514,514],0,[452,488],[[481,235]],0,0,0,[[585,64],585],[487,64],[522,11],[529,11],[530,11],0,0,[[569,[109,[64]]],569],0,[523,515],[452,488],0,0,0,0,[452,509],0,[[501,437],501],[[460,501,459]],[[482,487],482],[[493,491],493],[[493,16],493],[[479,496,459],489],[[482,496],482],[[479,493,459],489],[[493,491],493],[[493,16],493],[[493,16],493],[[481,487],481],[[512,16],512],0,[541,486],0,[16,599],[[585,16],585],[[572,16],572],[[591,16],591],0,0,0,0,[479,16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[492,491],0,0,[487,[[109,[64]]]],[492,491],0,0,0,0,[487,[[109,[64]]]],[490,64],0,[490,475],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[479,501,481,543,459],5],[[479,501,481,459],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[460,501,459],5],[[460,501,[5,[476]],459],5],[[460,501,459],5],[[460,501,487,459],5],[[460,501,[30,[514]]],5],0,0,0,0,0,0,[[460,501],16],0,0,0,0,0,0,0,0,0,0,[1],[[]],[[]],[[613,459]],0,0,[[613,459]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[614,614],[[]],0,[11],[11],[11],[11],[[]],[[]],[11],[11],0,[[614,19],[[12,[20]]]],[[]],[[]],0,0,0,[614,501],0,0,[[],11],[[],11],[[]],[[]],[614,16],[[460,501],[[5,[614]]]],[[460,501,16],614],[[],5],[[],5],[[]],[[]],0,[[614,460],64],0,[[]],[[]],[[]],[[]],[[479,64,481]],[[]],[[]],[[]],[[]],0,0,[[614,16]],0,[[614,481,479,459],[[5,[489]]]],[[614,479,459],[[5,[489]]]],[[614,479,459],613],[[614,479,459],481],0,0,[[614,460]],0,[[]],[[614,479]],0,[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],0,[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[615,615],[595,595],[596,596],[[]],[[]],[[]],0,0,[11],[11],[11],[11],[11],[11],[[],[[12,[615]]]],[[]],[[]],[[]],[11],[11],[11],[[595,595],16],[[596,596],16],[[],16],[[],16],[[],16],[[],16],[[615,19],[[12,[20]]]],[[595,19],[[12,[20]]]],[[596,19],[[12,[20]]]],0,0,0,[[]],[[]],[[]],0,0,0,[[],11],[[],11],[[],11],[[]],[[]],[[]],[[460,501],[[5,[615]]]],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[615,12],0,0,0,0,[615,475],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[479,501,481,543,459],5],[[479,501,481,459],5],[[460,501,459],5],[[460,501,[5,[476]],459],5],[[460,501,459],5],[[460,501,487,459],5],[[460,501,[30,[514]]],5],[[460,501],16],0,0,0,[1],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[616,616],[[]],0,0,[[],616],[11],[11],[11],[11],[[],[[12,[616]]]],[[]],[[]],0,[11],[11],[[616,19],[[12,[20]]]],[[]],[[]],0,0,0,[[],11],[[],11],0,0,[[]],[[]],[[460,501],[[5,[616]]]],[[],5],[[],5],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[616,12],0,0,0,[[616,460,501]],[[]],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[]],[[]],[[]],[[]],[[],5],[[],5],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],0,0,[[597,22,522,539],541],[617],[597,108],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[573,64,11]],0,[[],607],[[],607],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,0,0,[575,575],[577,577],[618,618],[619,619],[607,607],[574,574],[578,578],[579,579],[576,576],[620,620],[621,621],[617,617],[612,612],[622,622],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[[15,[476,14]],[30,[509]]],578],0,0,0,0,[[[15,[476,14]],[30,[488]],[30,[509]]],578],0,0,0,0,[[],619],[[],607],[[],620],[[],621],[[],597],0,[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[],[[12,[575]]]],[[],[[12,[577]]]],[[],[[12,[618]]]],[[],[[12,[619]]]],[[],[[12,[607]]]],[[],[[12,[574]]]],[[],[[12,[578]]]],[[],[[12,[579]]]],[[],[[12,[576]]]],[[],[[12,[621]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],0,0,0,[[575,575],16],[[577,577],16],[[618,618],16],[[619,619],16],[[607,607],16],[[574,574],16],[[578,578],16],[[579,579],16],[[576,576],16],[[621,621],16],[[612,612],16],[[],16],[[],16],0,[573,[[15,[533,14]]]],0,0,0,0,0,0,0,0,0,[617,64],[[476,64,[30,[488]]],574],[[487,[30,[511]],[30,[488]]],579],[[575,64],[[5,[64]]]],[[575,[5,[64]]],[[15,[476,14]]]],[[577,[5,[64]]],[[15,[476,14]]]],[[575,[5,[64]],[5,[64]]],[[15,[[15,[476,14]],14]]]],[[575,19],[[12,[20]]]],[[577,19],[[12,[20]]]],[[619,19],[[12,[20]]]],[[607,19],[[12,[20]]]],[[574,19],[[12,[20]]]],[[578,19],[[12,[20]]]],[[579,19],[[12,[20]]]],[[576,19],[[12,[20]]]],[[621,19],[[12,[20]]]],[[612,19],[[12,[20]]]],[[622,19],[[12,[20]]]],[573,64],[573,[[5,[618]]]],[573],0,[[575,64]],[[577,64]],[[597,541]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[16,488,[30,[509]]],575],[[16,488,[30,[509]]],577],[[],620],[[[30,[522]],539],618],0,[[573,532,623],64],0,0,[[573,532,623],16],[[573,532,3],16],0,0,0,0,0,0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[611,16],[[],16],[618,16],0,[[573,22,532,488,64],[[164,[538]]]],[[573,22,532,64],[[164,[538]]]],[[573,583],[[164,[538]]]],[[573,22,532,488],[[164,[538]]]],[[[15,[476,14]],[30,[509]]],578],[575,487],[577,487],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[573,11],0,[[597,541],[[5,[624]]]],0,0,0,0,[[64,621,[15,[625,14]]],626],[[64,11,536],573],[[476,[164,[538]]],576],[[],617],0,[597,11],0,[573,11],0,[[575,64],157],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[30,[522]],539],618],0,0,[573,64],0,0,0,0,0,0,0,0,0,[[64,64],476],[617,[[15,[625,14]]]],0,0,0,0,0,0,0,[[597,541]],0,[[626,64],64],0,[[573,532],64],0,0,0,0,[[575,64],476],[[577,64],476],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[575,12],[577,12],[618,12],[619,12],[607,12],[574,12],[578,12],[579,12],[576,12],[621,12],[[597,541,618]],[[626,487]],0,0,0,0,0,0,[617],0,0,0,[[],607],[[],607],[[575,[525,[64]]],575],0,[[476,64,[30,[509]]],574],[[487,[30,[511]],[30,[509]]],579],0,0,0,0,0,0,[617,[[5,[618]]]],[597,505],[[607,487,[30,[511]]],486],[[626,574,486]],[[626,612,15]],[[626,575,486]],[[626,509,486]],[[626,486,486]],[[626,578,486]],[[626,577,486]],[[626,579,486]],[[626,483,486]],[[64,621,[15,[625,14]],[15,[612,14]]],[[15,[542,14]]]],[[626,576,486]],0,0,0,0,0,[573,[[164,[[627,[617]]]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[577,[5,[64]]],578],[[575,[5,[64]],[5,[64]]],[[15,[578,14]]]],[[575,628],575],[[577,628],577],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[620,479],481],[[621,479],481],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,0,0,[[64,64],475],0,0,0,0,[575,487],[577,487],[574,487],[578,487],[579,487],[576,487],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[620,620],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[[]],[[]],[[]],[[]],[[629,629],629],[[629,629],629],[[629,629],629],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[291,630],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[630,630],[290,290],[629,629],[291,291],[[]],[[]],[[]],[[]],[[],630],[[],[[290,[291]]]],[[],[[629,[291]]]],[[],291],[11],[11],[290],[629],[11],[11],[11],[290],[11],[11],[629],[11],[[],[[12,[[290,[291]]]]]],[[],[[12,[[629,[291]]]]]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[[290,290],16],[[629,629],16],[[],16],[[],16],[[],16],[[],16],[290],[290],[629],[629],0,[630,26],[[630,19],[[12,[20]]]],[[290,19],[[12,[20]]]],[[629,19],[[12,[20]]]],[[291,19],[[12,[20]]]],[[]],[[],[[290,[291]]]],[[[248,[291]]],[[290,[291]]]],[[]],[[]],[[],[[629,[291]]]],[[[631,[291]]],[[629,[291]]]],[[]],[[],[[290,[291]]]],[[],[[629,[291]]]],[[26,26,26,26],291],[290,5],[290,5],[290,5],[291,26],[290],[[],11],[[],11],[[],11],[[],11],[290,5],[[]],[[[290,[291]]],[[248,[291]]]],[[]],[[]],[[[629,[291]]],[[631,[291]]]],[[]],[290],[290],[290],[629],[629],[290,632],[290,633],[[],[[15,[22,14]]]],0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[290,[291]]]],[[],[[629,[291]]]],[[],291],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[290,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[290,[291]]],12],[[[629,[291]]],12],[[629,629],629],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],[[12,[[164,[163]],77]]]],[[],[[12,[[165,[163,14]],77]]]],[[],[[12,[[190,[[164,[163]]]],77]]]],[[],[[12,[[190,[[165,[163,14]]]],77]]]],[[],[[12,[[165,[163,14]],77]]]],[[],[[12,[[190,[[165,[163,14]]]],77]]]],[[],[[12,[[164,[163]],77]]]],[[],[[12,[[190,[[164,[163]]]],77]]]],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[11],[11],[11,[[290,[291]]]],[11,[[629,[291]]]],[11,290],[11,629],[[],290],[[],629],[11,291],[[26,26,26,26],291],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[630],[[630,84]],[[630,113]],[[630,157]],[[630,26]],[[630,37]],[[630,11]],0,0,[[],11],0,0,0,0,[[[0,[634,278,279]]],[[12,[16]]]],0,0,0,0,[1],[1],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[635,635],[562,562],[[]],[[]],[[],635],[[],562],[11],[11],[11],[11],[[]],[[]],[11],[11],0,0,[[635,635],16],[[562,562],16],[[635,19],[[12,[20]]]],[[562,19],[[12,[20]]]],[488,635],[562,635],[636,635],[[]],[488,562],[[]],[636,562],[635,562],[[],562],[[],562],[[64,64,64,64],562],[[64,64,64,64],562],[[],562],[[],562],[[],562],[64,64],[64,37],0,0,[[]],[[],11],[[],11],[[]],[[]],[37,64],[37,64],[64,64],[64,37],[[],5],[[],5],[[]],[[]],[[64,64,64,64],562],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[488,488],488],[562,562],[[]],[[]],[562],[562],[562],[562],[562],[562],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[]],[[]],[[]],[[]],[[],5],[[],5],0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[637,81]],0,[[64,64,64],16],[606,64],[[]],[[]],[637,5],[[]],[[]],[[]],[637,5],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[637],[637,637],[628,628],[606,606],[[]],[[]],[[]],[[],606],[11],[11],[11],[11],[11],[11],[[],[[12,[628]]]],[[],[[12,[606]]]],[[606,64],606],[[]],[[]],[[]],[11],[11],[11],[637,64],0,0,[[628,628],16],[[606,606],16],[[],16],[[],16],[[64,64,64],64],[[637,81]],[[637,19],[[12,[20]]]],[[628,19],[[12,[20]]]],[[606,19],[[12,[20]]]],[[81,[109,[11]]],22],[[81,11],22],[[]],[628,487],[[]],[[]],0,[64,606],[81],[[487,487],628],[487,628],[[],11],[[],11],[[],11],[[]],[[]],[[]],[628,628],[606,606],[109,5],[637,16],[606,16],[[],16],[[],16],[637,108],[637,5],[637,5],[637,11],[606,64],[606,64],[109],[[],5],[[],5],[[],5],[[]],[[]],[[]],0,[637,64],0,[637,11],0,[637,[[5,[64]]]],0,0,[[628,476],476],[[628,476],476],[[606,64],606],[[606,606],606],[[606,475],475],[[[525,[11]],64],637],[606,606],[64,64],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[64,64],476],[637,[[5,[64]]]],[[109,109]],[[109,109]],[[81,11],81],0,[[]],[[]],[[]],[[]],[[]],[[]],[628,475],[628,12],[606,12],0,[637],[628,487],0,[[],81],[[]],[[]],[[]],[637,26],0,[[628,476],476],[[628,476],476],[[628,487],487],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[637,108],0,[[64,64],475],[637,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[475,487],487],[[81,81],81],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[627,627],[[]],[[],627],[[],598],[11],[638],[11],[11],[11],[638],[11],[11],[[]],[[]],[[]],[11],[638],[11],[11],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[]],[[]],[[]],[627,638],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[],627],[[],598],[[]],[[]],[[]],[[]],[[]],[[]],[598,[[640,[639]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[598,[[641,[639]]]],[483],0,0,[1],[[642,642],642],[[642,642]],[[]],[[]],[[]],[[]],[[],5],[[],5],0,[642,642],[[]],[[],642],[11],[11],[[]],[11],0,[[642,642],16],[[642,3],22],[[]],[[],642],[538,642],[486,642],[[],642],0,[[],11],[[]],[[],5],[[]],[642,22],[642,11],0,[642,11],0,0,[642,11],0,[[]],[[]],[[]],[[]],0,0,0,0,0,[[],642],0,0,[[]],[[],12],[[],12],[[],46],[[]],[[]],[[],5],0,[[]],[[]],[[]],0,0,0,0,0,0,[1],[1],[[643,476,64]],[643],[643],[643],[[643,476,475]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[643],0,[643,643],[644,644],[[]],[[]],0,0,0,0,[[],643],[11],[11],[11],[11],[[]],[[]],[11],[11],0,[[644,644],16],[[],16],[[],16],0,0,0,[[643,64,488,486]],[[643,19],[[12,[20]]]],0,[[]],[[]],[[],11],[[],11],[[]],[[]],[[],5],[[],5],[[]],[[]],0,[[]],[[]],[[]],[[]],0,0,0,0,[[643,11]],0,[[]],[[]],[[]],[[]],0,0,[[643,64,644,509,486]],[[643,64,509,486]],[[643,64,509,486]],[[64,621,[15,[625,14]],[15,[612,14]]],[[15,[542,14]]]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[15,476,64,64]],[[15,487,511]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[[583,3,64,537]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[645,64],11],[645,11],[645,11],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[583,583],[646,646],[647,647],[645,645],[648,648],[649,649],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],583],[[],647],[[],648],[650,536],0,[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[],[[12,[583]]]],[[],[[12,[646]]]],[[],[[12,[647]]]],[[],[[12,[645]]]],[[],[[12,[648]]]],[[],[[12,[649]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[11],0,[[583,583],16],[[646,646],16],[[647,647],16],[[645,645],16],[[648,648],16],[[649,649],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,[[583,19],[[12,[20]]]],[[646,19],[[12,[20]]]],[[647,19],[[12,[20]]]],[[645,19],[[12,[20]]]],[[648,19],[[12,[20]]]],[[649,19],[[12,[20]]]],[[650,532],651],0,0,[[583,573],64],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],0,0,0,[[650,532,623],16],[[650,532,3],16],[583],[646],[647],[645,64],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[583,16],0,0,0,[[650,[164,[583]]],538],0,[649,487],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[649,64],[645,64],0,0,0,[645,64],[[64,11,536],650],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[650,64],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[583,12],[646,12],[647,12],[645,12],[648,12],[649,12],[[22,532,488,64],583],[[22,532,488],583],[[22,537],583],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[645,11],64],0,0,0,0,0,0,[1],[1],[1],[1],[[584,11]],[[584,11]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[584,584],[570,570],[587,587],[563,563],[[]],[[]],[[]],[[]],0,[[],584],[[],570],[[],587],[[],563],[11],[11],[11],[11],[11],[11],[11],[11],[[],[[12,[584]]]],[[],[[12,[570]]]],[[],[[12,[587]]]],[[],[[12,[563]]]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[[584,584],16],[[570,570],16],[[587,587],16],[[563,563],16],[[],16],[[],16],[[584,19],[[12,[20]]]],[[570,19],[[12,[20]]]],[[587,19],[[12,[20]]]],[[563,19],[[12,[20]]]],[[]],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[11,584],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[584,12],[570,12],[587,12],[563,12],[[584,11]],[[584,11]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[1],[[]],[[]],[[]],0,[624,11],[[]],[[],5],[[],5],[624,624],[[]],0,[11],[11],[[]],[11],[[624,624],16],[[],16],[[],16],[[624,19],[[12,[20]]]],0,[[]],[[],11],[[]],[[],5],[[]],0,0,0,0,0,0,[[]],[[]],0,[[]],[[]],0,0,[[]],[[],12],[[],12],[[],46],[[]],[[]],[[],5],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],5],[[],5],[[652,652],8],[11],[11],[[]],[11],[[652,652],16],[[],16],[[],16],[[]],[[],26],[437,26],[652],[[437,653],26],[[],11],[[]],[[],5],[[]],[[],652],[[]],[[]],[[652,652],[[5,[8]]]],[[]],[[]],[[],12],[[],12],[[],46],[[]],[[]],[[],5],[[]],[[]],[[]],0,[460],[[479,[5,[64]]]],[460],[[460,[5,[64]]]],0,0,0,[[479,533]],[[479,532]],0,0,0,0,0,0,0,0,0,0,[1],[1],[[654,487,483],484],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[484,484],[654,654],[[]],[[]],[[],654],[11],[11],[11],[11],[[]],[[]],[11],[11],[[484,484],16],[[],16],[[],16],[[654,487]],[[]],[[]],0,[[],11],[[],11],[[]],[[]],[654,16],[[],5],[[],5],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[654,484,487,483]],[[]],[[]],[[654,475]],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[479,459],489],[[]],[[]],[[]],[[]],0,[[]],[[]],[[],5],[[],5],[[],5],[[],5],[11],[11],[11],[11],[[]],[[]],[11],[11],[[]],[[]],[[655,[30,[514]]],655],0,0,[[],11],[[],11],[[]],[[]],[[],5],[[],5],[[]],[[]],[[479,[30,[514]],459],[[489,[5]]]],[[479,541,[30,[475]],459],[[489,[5]]]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[656,479,459],[[489,[5]]]],0,[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[1],[[]],[[]],[[]],[[]],[[],5],[[],5],[604,604],[[]],[[],604],[11],[11],[[]],[11],[[604,604],16],[[],16],[[],16],[[604,19],[[12,[20]]]],[[]],[[],604],[3,604],[[],26],[604],[[],11],[[]],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],46],[[]],[[]],[[],5],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[657,657],[605,605],[[]],[[]],0,0,0,[11],[11],[11],[11],[[],[[12,[657]]]],[[],[[12,[605]]]],[[]],[[]],[11],[11],0,[[657,657],16],[[605,605],16],[[],16],[[],16],0,[[605,19],[[12,[20]]]],[[]],[[]],[[],11],[[],11],[[]],[[]],0,[[],5],[[],5],[[]],[[]],0,[564,657],0,0,[[]],[[]],[[]],[[]],0,0,0,[564,657],[[]],[[]],[[]],[[]],0,[657,12],[605,12],0,0,0,0,[[]],[[]],[[],12],[[],12],[[],12],[[],12],0,[[],46],[[],46],[[]],[[]],[[]],[[]],[[],5],[[],5],0,0,[[]],[[]],[605,554],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[610,610],[658,658],[659,659],[660,660],[588,588],[661,661],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],660],0,0,0,[[],610],[[],658],[[],659],[[],660],[[],661],[[],[[271,[557,532,14]]]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[],[[12,[610]]]],[[],[[12,[658]]]],[[],[[12,[659]]]],[[],[[12,[660]]]],[[],[[12,[588]]]],[[],[[12,[661]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[11],[11],[11],[11],[11],[11],[[610,610],16],[[658,658],16],[[659,659],16],[[660,660],16],[[588,588],16],[[661,661],16],[[],16],[[],16],0,0,0,0,0,0,[[610,19],[[12,[20]]]],[[658,19],[[12,[20]]]],[[659,19],[[12,[20]]]],[[660,19],[[12,[20]]]],[[588,19],[[12,[20]]]],[[661,19],[[12,[20]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[610,487]],0,0,0,0,0,0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],660],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[610,12],[658,12],[659,12],[660,12],[588,12],[661,12],0,0,0,0,0,0,0,0,0,0,0,[[660,481],588],[588,488],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[610,479]],[[658,479]],[[659,479]],[[660,479]],[[588,479]],[[661,479]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[[]],0,[[]],[[]],0,0,[[]],[[],5],[[],5],[662,662],[[]],0,[[],662],[11],[11],[[],[[12,[662]]]],[[]],[11],[[662,662],16],0,0,[[662,19],[[12,[20]]]],0,0,0,0,[[]],0,0,0,[[],11],[[]],[662,16],0,0,0,0,[[],5],[[]],0,0,0,[584,662],[[]],[[]],0,0,0,0,0,[[]],[[]],0,0,[662,12],[662],0,0,[[]],[[],12],[[],12],0,[[584,584],662],[[],46],0,[[]],[[]],[[],5],0,[[]],0,[[]],[[]],0,0,[1],[[]],[[]],[[]],0,[[]],[[],5],[[],5],[663],[663,663],[[]],[663,11],[663,11],[[],663],[11],[11],[[],[[12,[663]]]],[[]],[11],[[663,19],[[12,[20]]]],[[]],[[663,501],5],[[663,501]],[[663,501]],[[663,501,459]],[[663,501],5],[[663,501]],[[663,501]],[[663,501,459]],[437,26],[[437,653],26],0,[[],11],[[663,501]],[[663,501]],[[]],[663,16],[663,11],[[],5],[[]],0,0,0,[[]],[[]],[[663,501]],[663],[[]],[[]],[663,12],[[]],0,[[],12],[[],12],[[],46],0,[[]],[[]],[[],5],0,[[]],[[]],[[]],0,0,0,0,[1],[[],161],[664,161],[[]],[[]],[[]],[[]],[[]],[[]],[665],0,0,[[]],[[]],[[],5],[[],5],[[],5],[[],5],[665,665],[[]],[[]],0,[[],664],[[],665],[11],[11],[11],[11],[[]],[[]],[11],[11],[664],[[665,19],[[12,[20]]]],[[]],[[]],0,[664],[[],11],[[],11],[[]],[[]],[[],11],[664,11],[[],5],[[],5],[[]],[[]],[[],664],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[664],[665],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[1],[[]],[[]],[[]],[[]],[[],5],[[],5],[666,666],[[]],[11],[11],[[],[[12,[666]]]],[[]],[11],[[666,666],16],[[],16],[[],16],[[666,19],[[12,[20]]]],[46,666],[[]],[[],26],[666],[[],11],[[]],[[],5],[[]],[[],666],[[]],[[]],[[]],[[]],[666,12],[[]],[[],12],[[],12],[[],46],[[]],[[]],[[],5],[[]],[[]],[[]],0,0,[1],[1],[667],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[668,668],[667,667],[[]],[[]],[[],668],[[],667],[11],[11],[11],[11],[[],[[12,[668]]]],[[],[[12,[667]]]],[[]],[[]],[11],[11],[[668,668],16],[[667,81]],0,[[668,19],[[12,[20]]]],[[667,19],[[12,[20]]]],[[]],[[]],[667,16],[[],11],[[],11],[[]],[[]],[667,16],[[],5],[[],5],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[668,12],[667,12],0,0,[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[667,5],0,[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[1],[1],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[590,590],[589,589],[[]],[[]],0,[11],[11],[11],[11],[[]],[[]],[11],[11],[[590,590],16],[[589,589],16],0,[[]],[[]],[589,164],0,0,[[],11],[[],11],[[]],[[]],[[590,573],589],0,0,0,[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[589,482,476,488]],[[589,482,476,488]],[[589,482,476,588]],0,[[]],[[]],[[]],[[]],[589,475],0,0,0,[589,3],0,0,0,[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],0,[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]],0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],3],0,[11,11],[[[525,[11]]],3],0,0,0,0,[[]],0,0,0,0,0,0,0,0,[[[525,[11]]]],0,0,0,0,0,0,0,0,0,0,0,0,[479],[479],0,0,0,0,0,0,[[3,11],11],0,0,[[],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[3],[479],[479],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[479,509,3]],0,0,[[],22],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[479,481],0,0,0,0,0,0,0,0,[1],[[]],[[]],[[]],[[]],[[],5],[[],5],[669,669],[[]],[[479,562,669],481],[479,481],[[479,636,669],481],[479,481],[[479,488,669],481],[[479,488,669],16],[[479,562,669],16],[11],[11],[[]],[11],[[669,669],16],[[],16],[[],16],[[]],[[],11],[[]],[[],5],[[]],[[]],[[]],[[]],[[]],[[479,[30,[488]],475],481],[[482,488,487]],[[]],[[],12],[[],12],[[],46],[[]],[[]],[[],5],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[],108],[[],32],[[670,16],670],0,[[670,16],670],0,[[670,16],670],0,[[670,16],670],0,[[670,16],670],0,[[671,492],671],0,0,0,[[672,673]],0,[670,670],[670,670],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[674,64],674],0,[[672,675]],0,0,[[676,81],676],0,0,[[677,[30,[488]]],677],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],678],[[],679],0,0,0,[[672,680]],[[681,81],681],0,[[670,521],670],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[682,683],[[670,16],670],0,[[670,16],670],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[670,16],670],0,[676,676],[684,684],[681,681],[683,683],[685,685],[686,686],[687,687],[688,688],[689,689],[671,671],[677,677],[690,690],[674,674],[682,682],[678,678],[679,679],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[691,[30,[488]]],691],[[692,[30,[488]]],692],[[693,[30,[488]]],693],[[673,[30,[488]]],673],[[675,[30,[488]]],675],[[680,[30,[488]]],680],[[688,[30,[488]]],688],[[689,[30,[488]]],689],[[671,[30,[488]]],671],0,0,0,[[670,690,694],670],0,[672,460],0,[[],685],[[],685],[[670,64],670],0,[[],695],[[],694],[[],686],[[],674],0,0,[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[],[[12,[682]]]],[[],685],[[],685],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[675,[165,[235,14]]],675],[[680,[165,[235,14]]],680],0,0,[[676,676],16],[[684,684],16],[[681,681],16],[[683,683],16],[[685,685],16],[[686,686],16],[[687,687],16],[[688,688],16],[[689,689],16],[[690,690],16],[[674,674],16],[[682,682],16],[[678,678],16],[[679,679],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[691,[30,[64]]],691],[[676,[30,[488]]],676],[[681,[30,[488]]],681],0,0,0,[[692,[30,[64]]],692],0,[[693,16],693],0,[[676,19],[[12,[20]]]],[[684,19],[[12,[20]]]],[[681,19],[[12,[20]]]],[[683,19],[[12,[20]]]],[[685,19],[[12,[20]]]],[[686,19],[[12,[20]]]],[[687,19],[[12,[20]]]],[[688,19],[[12,[20]]]],[[689,19],[[12,[20]]]],[[690,19],[[12,[20]]]],[[682,19],[[12,[20]]]],[[81,11],22],0,[[[15,[14]]],695],[[],695],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],683],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[235,[696,[81]],11],695],[[],695],[[],682],[[235,[696,[81]],11],695],[[],695],[[],695],0,0,[[670,64],670],[682,81],0,[[691,16],691],[[692,16],692],[[693,16],693],[[673,16],673],[[675,16],675],[[680,16],680],[[688,16],688],[[689,16],689],[[671,16],671],[[677,16],677],0,0,0,0,0,0,0,0,0,0,[[672,688]],[675,675],[680,680],[676,676],[681,681],0,[[672,677]],[[670,[30,[81]]],670],[[670,[30,[81]]],670],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[682,16],[682,16],[682,16],[682,16],[682,16],[682,16],0,[[670,235],670],0,0,[[670,674],670],0,[[672,691]],[[670,679],670],[[670,678],670],0,0,0,0,0,0,[82,[[165,[235,14]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[682],0,0,[682],0,0,[[670,475],670],0,[[691,564],691],[[692,564],692],[[693,564],693],[[673,564],673],[[675,564],675],[[680,564],680],[[676,564],676],[[681,564],681],[[688,564],688],[[689,564],689],[[671,564],671],[[677,564],677],0,0,0,0,0,0,0,0,0,0,0,0,[[[15,[14]]],695],[[[30,[695]]],691],[[[30,[695]]],692],[[[30,[695]]],693],[[[30,[695]],[30,[695]]],673],[[[15,[676,14]]],675],[[[15,[681,14]]],680],[235,694],[437,670],[[81,81],676],[[81,81,81,81,81],684],[[81,684],681],[[[30,[81]],[30,[81]]],683],[[[30,[81]]],688],[[[30,[81]]],689],[[683,[30,[514]]],671],[[[30,[541]],683,[30,[475]]],677],[[16,16],678],[[16,16],679],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[672,682],[672,16],[[672,476],683],[672,16],[672,16],[672,[[5,[683]]]],[672,475],[695],[[672,693]],[[672,692]],[[674,690],674],0,0,0,0,0,[[693,[30,[64]]],693],0,[670,670],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[672,683],476],[682,12],0,0,0,[[678,16]],[[679,16]],[[678,16]],[[679,16]],[[670,475],670],[[672,682]],[[693,687],693],0,[[670,16],670],0,[[670,479,459],489],[670,670],0,[[670,16],670],0,[[670,16],670],0,[[670,16],670],0,0,0,[675,675],[[693,[30,[64]]],693],0,0,[[691,[30,[509]]],691],[[692,[30,[509]]],692],[[676,[30,[509]]],676],[[681,[30,[509]]],681],[[688,[30,[509]]],688],[[689,[30,[509]]],689],0,0,0,0,0,0,[[691,685],691],[[692,685],692],[[688,685],688],[[689,685],689],0,0,0,0,[[672,671]],0,[[674,557],674],0,0,[[677,[30,[488]]],677],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[683,476],[685,22],[683,475],[[672,475]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[235,[[165,[235,14]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[677,[30,[487]]],677],0,0,0,[675,675],[680,680],[676,676],[681,681],[[670,64],670],0,[[672,689]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[681,81],681],0,[[691,[30,[64]]],691],[[692,[30,[64]]],692],[[675,81],675],[[670,64],670],[[676,81],676],[[688,[30,[64]]],688],[[689,[30,[64]]],689],[682,81],0,[11,694],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],678],[[],679],0,0,[[670,235],670],[[670,235],670],[[],678],[[],679],0,0,[[670,235],670],[[670,235],670],0,0,0,0,0,0,0,0,0,[1],[1],[1],0,[697,662],[697,[[525,[11]]]],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11,11],[[]],[[]],[[]],[[]],[592,[[5,[662]]]],0,[[[525,[11]]],3],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],0,[697,697],[698,698],[592,592],[[]],[[]],[[]],0,[[592,538],[[5,[697]]]],0,0,[[],697],[[],698],[[],592],[[[525,[11]]]],[11],[11],[11],[11],[11],[11],[11],[11],[[],[[12,[697]]]],[[],[[12,[698]]]],[[],[[12,[592]]]],0,0,[[]],[[]],[[]],[[]],[11],[11],[11],[11],[[697,697],16],[[698,698],16],[[697,19],[[12,[20]]]],[[698,19],[[12,[20]]]],0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,[[],11],[[],11],[[],11],[[],11],[[3,11],11],0,[[]],[[]],[[]],[[]],[697,16],[[],16],[697,16],0,[[460,501],[[5,[592]]]],0,[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],0,0,0,[563,697],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[3],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[697,12],[698,12],[592,12],[[592,[5,[662]]]],[[592,[5,[697]]]],[697,[[5,[563]]]],0,[697,697],[697],0,[[592,460,501]],[[],22],0,0,0,0,[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[563,563],697],[[],46],[[],46],[[],46],[[],46],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[477,477],[699,699],[[]],[[]],[[],700],[[],699],0,[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[[474,19],[[12,[20]]]],[[474,19],[[12,[20]]]],[[701,541]],[[]],[[]],[[]],[[]],[[]],[[]],[702,474],[703,474],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[],700],[[704,705,[5,[705]],157],701],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[700,700],0,0,0,0,[[],705],[700,700],0,0,[34],0,[[701,704,706,707],541],[[701,704,706,708],541],[[701,709,710]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[474,[[5,[45]]]],0,[[701,541],5],0,0,[[]],[[]],[[],22],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[701,704,711,712,710],[[15,[713,14]]]],[[701,704,706,707,541]],[[701,704,706,708,541]],[[701,704,711,541,618]],0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[],5],[[],5],[11],[11],[[]],[11],[[]],0,[[],11],[[]],[[],5],[[]],0,[[]],[[]],0,0,0,0,0,0,[[]],[[]],0,0,0,[[],12],[[],12],[[],46],0,0,[[]],[[]],[[],5],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],0,0,[705,705],0,0,0,[[],714],[[],715],[[],716],[[],717],[[],718],[[],719],[[],720],[[],721],[[],722],[[],715],[[],715],0,0,0,0,0,0,0,0,[723,724],[723,725],[726,5],[727],[704],[728],[729],[728,[[730,[728]]]],[731],[732],[733],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[712,734],735],[[709,736,157]],[[735,736,157]],[[712,737],709],0,0,0,0,[[714,714],714],[[715,715],715],[[716,716],716],[[717,717],717],[[718,718],718],[[719,719],719],[[720,720],720],[[721,721],721],[[722,722],722],[[714,714]],[[715,715]],[[716,716]],[[717,717]],[[718,718]],[[719,719]],[[720,720]],[[721,721]],[[722,722]],[[714,714],714],[[715,715],715],[[716,716],716],[[717,717],717],[[718,718],718],[[719,719],719],[[720,720],720],[[721,721],721],[[722,722],722],[[714,714]],[[715,715]],[[716,716]],[[717,717]],[[718,718]],[[719,719]],[[720,720]],[[721,721]],[[722,722]],[714,157],[715,26],[716,157],[717,157],[718,157],[719,157],[720,157],[721,157],[722,37],0,0,0,0,0,0,0,0,0,[[714,714],714],[[715,715],715],[[716,716],716],[[717,717],717],[[718,718],718],[[719,719],719],[[720,720],720],[[721,721],721],[[722,722],722],[[714,714]],[[715,715]],[[716,716]],[[717,717]],[[718,718]],[[719,719]],[[720,720]],[[721,721]],[[722,722]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[738,738],16],[[738,738,16,478]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[712,723,26,[5,[739]]]],[[712,728,740]],[741,741],[742,742],[714,714],[743,743],[715,715],[738,738],[744,744],[716,716],[745,745],[746,746],[747,747],[717,717],[748,748],[749,749],[750,750],[751,751],[752,752],[753,753],[754,754],[755,755],[756,756],[757,757],[758,758],[759,759],[718,718],[760,760],[761,761],[762,762],[705,705],[763,763],[764,764],[765,765],[719,719],[766,766],[767,767],[768,768],[769,769],[770,770],[771,771],[724,724],[772,772],[725,725],[773,773],[774,774],[775,775],[776,776],[777,777],[778,778],[779,779],[780,780],[781,781],[782,782],[783,783],[784,784],[708,708],[785,785],[786,786],[737,737],[787,787],[720,720],[788,788],[789,789],[790,790],[734,734],[791,791],[792,792],[793,793],[794,794],[795,795],[702,702],[796,796],[703,703],[797,797],[721,721],[798,798],[799,799],[800,800],[801,801],[802,802],[803,803],[804,804],[805,805],[806,806],[707,707],[807,807],[808,808],[809,809],[810,810],[811,811],[812,812],[813,813],[814,814],[815,815],[816,816],[817,817],[730,730],[818,818],[819,819],[740,740],[820,820],[821,821],[722,722],[822,822],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[714,714],8],[[715,715],8],[[744,744],8],[[716,716],8],[[745,745],8],[[717,717],8],[[718,718],8],[[719,719],8],[[720,720],8],[[721,721],8],[[799,799],8],[[722,722],8],0,0,0,0,0,0,0,[748,801],[714,714],[715,715],[716,716],[717,717],[718,718],[719,719],[720,720],[721,721],[722,722],[[],716],0,[[729,704,823]],0,0,[[714,714],16],[[715,715],16],[[716,716],16],[[717,717],16],[[718,718],16],[[719,719],16],[[720,720],16],[[721,721],16],[[722,722],16],[714,16],[715,16],[716,16],[717,16],[718,16],[719,16],[720,16],[721,16],[722,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[712,723,26,723,26,26]],[[712,[817,[723]],[730,[728]],804]],[[712,[730,[728]],[817,[723]],804]],[[712,[730,[728]],[730,[728]],804]],0,0,[[726,824],727],[[704,786],825],[[704,792],826],[[704,827],723],[[704,828],723],[[704,829],712],[[704,791],830],[[727,831,832,[5,[61]]],[[12,[702]]]],[[704,784],833],[[704,834],736],[[704,793],835],[[704,790],836],[[704,708],837],[[704,767],838],[[704,839],838],[[704,767],838],[726,[[12,[729,703]]]],[[704,840],728],[[704,840],728],[[704,711,840],728],[[728,782],706],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],841],[[],742],[[],743],[[],715],[[],738],[[],744],[[],748],[[],750],[[],751],[[],754],[[],755],[[],757],[[],758],[[],759],[[],726],[[],719],[[],769],[[],770],[[],772],[[],773],[[],774],[[],775],[[],776],[[],780],[[],782],[[],784],[[],708],[[],737],[[],734],[[],793],[[],794],[[],796],[[],842],[[],800],[[],803],[[],804],[[],805],[[],806],[[],707],[[],808],[[],810],[[],811],[[],812],[[],740],[[],822],0,0,0,[728,157],0,0,0,0,0,0,[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[731],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[733],[11],[732],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[731],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[732],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[705,843],0,[723],[728],0,0,0,[[714,714],714],[[715,715],715],[[716,716],716],[[717,717],717],[[718,718],718],[[719,719],719],[[720,720],720],[[721,721],721],[[722,722],722],[728,801],0,[[735,157,157,157]],[[735,723,26]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],738],[[],738],[[709,[525,[157]],[525,[157]]]],[[709,[525,[157]],[525,[157]]]],[[835,[525,[157]],[525,[157]]]],[[835,[525,[157]],[525,[157]]]],[[709,[525,[157]],159,[525,[157]]]],[[709,[525,[157]],159,[525,[157]]]],[[835,[525,[157]],159,[525,[157]]]],[[835,[525,[157]],159,[525,[157]]]],[[709,723,26]],[[709,723,26]],[[835,723,26]],[[835,723,26]],[[709,723,26]],[[709,723,26]],[[835,723,26]],[[835,723,26]],0,0,[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[736],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[731],[11],[11],[11],[11],[11],[11],[727],[11],[704],[11],[11],[723],[11],[11],[11],[728],[11],[706],[11],[837],[11],[729],[11],[826],[825],[11],[11],[11],[838],[11],[11],[833],[11],[836],[11],[11],[830],[713],[11],[712],[11],[709],[11],[11],[735],[11],[11],[11],[844],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[845],[11],[11],[11],[11],[11],[11],[11],[11],[733],[11],[11],[732],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],0,0,[[],714],[[],715],[[],716],[[],717],[[],718],[[],719],[[],720],[[],721],[[],722],[709],[735],0,0,0,0,0,[[726,714],32],[[741,741],16],[[742,742],16],[[714,714],16],[[743,743],16],[[715,715],16],[[738,738],16],[[744,744],16],[[716,716],16],[[745,745],16],[[746,746],16],[[747,747],16],[[717,717],16],[[748,748],16],[[749,749],16],[[750,750],16],[[751,751],16],[[752,752],16],[[753,753],16],[[754,754],16],[[755,755],16],[[756,756],16],[[757,757],16],[[758,758],16],[[759,759],16],[[718,718],16],[[760,760],16],[[761,761],16],[[762,762],16],[[705,705],16],[[763,763],16],[[719,719],16],[[769,769],16],[[770,770],16],[[771,771],16],[[772,772],16],[[773,773],16],[[774,774],16],[[775,775],16],[[776,776],16],[[777,777],16],[[780,780],16],[[781,781],16],[[782,782],16],[[783,783],16],[[708,708],16],[[787,787],16],[[720,720],16],[[793,793],16],[[794,794],16],[[795,795],16],[[702,702],16],[[796,796],16],[[703,703],16],[[797,797],16],[[721,721],16],[[798,798],16],[[799,799],16],[[800,800],16],[[801,801],16],[[802,802],16],[[803,803],16],[[804,804],16],[[805,805],16],[[806,806],16],[[707,707],16],[[807,807],16],[[808,808],16],[[809,809],16],[[811,811],16],[[812,812],16],[[813,813],16],[[814,814],16],[[815,815],16],[[816,816],16],[[818,818],16],[[740,740],16],[[820,820],16],[[722,722],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[709],[714],[715],[716],[717],[718],[719],[720],[721],[722],0,[727,715],[704,715],[712,713],[[835,846],844],0,0,[[741,19],[[12,[20]]]],[[742,19],[[12,[20]]]],[[714,19],[[12,[20]]]],[[714,19],[[12,[20]]]],[[714,19],[[12,[20]]]],[[714,19],[[12,[20]]]],[[714,19],[[12,[20]]]],[[743,19],[[12,[20]]]],[[715,19],[[12,[20]]]],[[715,19],[[12,[20]]]],[[715,19],[[12,[20]]]],[[715,19],[[12,[20]]]],[[715,19],[[12,[20]]]],[[738,19],[[12,[20]]]],[[744,19],[[12,[20]]]],[[716,19],[[12,[20]]]],[[716,19],[[12,[20]]]],[[716,19],[[12,[20]]]],[[716,19],[[12,[20]]]],[[716,19],[[12,[20]]]],[[745,19],[[12,[20]]]],[[746,19],[[12,[20]]]],[[747,19],[[12,[20]]]],[[717,19],[[12,[20]]]],[[717,19],[[12,[20]]]],[[717,19],[[12,[20]]]],[[717,19],[[12,[20]]]],[[717,19],[[12,[20]]]],[[748,19],[[12,[20]]]],[[749,19],[[12,[20]]]],[[750,19],[[12,[20]]]],[[751,19],[[12,[20]]]],[[752,19],[[12,[20]]]],[[753,19],[[12,[20]]]],[[754,19],[[12,[20]]]],[[755,19],[[12,[20]]]],[[756,19],[[12,[20]]]],[[757,19],[[12,[20]]]],[[758,19],[[12,[20]]]],[[759,19],[[12,[20]]]],[[718,19],[[12,[20]]]],[[718,19],[[12,[20]]]],[[718,19],[[12,[20]]]],[[718,19],[[12,[20]]]],[[718,19],[[12,[20]]]],[[760,19],[[12,[20]]]],[[761,19],[[12,[20]]]],[[762,19],[[12,[20]]]],[[705,19],[[12,[20]]]],[[763,19],[[12,[20]]]],[[726,19],[[12,[20]]]],[[727,19],[[12,[20]]]],[[704,19],[[12,[20]]]],[[764,19],[[12,[20]]]],[[723,19],[[12,[20]]]],[[765,19],[[12,[20]]]],[[728,19],[[12,[20]]]],[[706,19],[[12,[20]]]],[[837,19],[[12,[20]]]],[[729,19],[[12,[20]]]],[[826,19],[[12,[20]]]],[[825,19],[[12,[20]]]],[[719,19],[[12,[20]]]],[[719,19],[[12,[20]]]],[[719,19],[[12,[20]]]],[[719,19],[[12,[20]]]],[[719,19],[[12,[20]]]],[[838,19],[[12,[20]]]],[[833,19],[[12,[20]]]],[[836,19],[[12,[20]]]],[[830,19],[[12,[20]]]],[[713,19],[[12,[20]]]],[[712,19],[[12,[20]]]],[[709,19],[[12,[20]]]],[[735,19],[[12,[20]]]],[[835,19],[[12,[20]]]],[[769,19],[[12,[20]]]],[[844,19],[[12,[20]]]],[[770,19],[[12,[20]]]],[[711,19],[[12,[20]]]],[[771,19],[[12,[20]]]],[[724,19],[[12,[20]]]],[[772,19],[[12,[20]]]],[[725,19],[[12,[20]]]],[[773,19],[[12,[20]]]],[[774,19],[[12,[20]]]],[[775,19],[[12,[20]]]],[[776,19],[[12,[20]]]],[[777,19],[[12,[20]]]],[[778,19],[[12,[20]]]],[[779,19],[[12,[20]]]],[[780,19],[[12,[20]]]],[[781,19],[[12,[20]]]],[[782,19],[[12,[20]]]],[[783,19],[[12,[20]]]],[[784,19],[[12,[20]]]],[[708,19],[[12,[20]]]],[[785,19],[[12,[20]]]],[[786,19],[[12,[20]]]],[[737,19],[[12,[20]]]],[[787,19],[[12,[20]]]],[[720,19],[[12,[20]]]],[[720,19],[[12,[20]]]],[[720,19],[[12,[20]]]],[[720,19],[[12,[20]]]],[[720,19],[[12,[20]]]],[[788,19],[[12,[20]]]],[[789,19],[[12,[20]]]],[[790,19],[[12,[20]]]],[[734,19],[[12,[20]]]],[[791,19],[[12,[20]]]],[[792,19],[[12,[20]]]],[[793,19],[[12,[20]]]],[[845,19],[[12,[20]]]],[[794,19],[[12,[20]]]],[[795,19],[[12,[20]]]],[[795,19],[[12,[20]]]],[[702,19],[[12,[20]]]],[[702,19],[[12,[20]]]],[[796,19],[[12,[20]]]],[[703,19],[[12,[20]]]],[[703,19],[[12,[20]]]],[[797,19],[[12,[20]]]],[[797,19],[[12,[20]]]],[[721,19],[[12,[20]]]],[[721,19],[[12,[20]]]],[[721,19],[[12,[20]]]],[[721,19],[[12,[20]]]],[[721,19],[[12,[20]]]],[[798,19],[[12,[20]]]],[[733,19],[[12,[20]]]],[[732,19],[[12,[20]]]],[[847,19],[[12,[20]]]],[[847,19],[[12,[20]]]],[[842,19],[[12,[20]]]],[[848,19],[[12,[20]]]],[[799,19],[[12,[20]]]],[[800,19],[[12,[20]]]],[[801,19],[[12,[20]]]],[[802,19],[[12,[20]]]],[[803,19],[[12,[20]]]],[[804,19],[[12,[20]]]],[[805,19],[[12,[20]]]],[[806,19],[[12,[20]]]],[[707,19],[[12,[20]]]],[[807,19],[[12,[20]]]],[[808,19],[[12,[20]]]],[[809,19],[[12,[20]]]],[[810,19],[[12,[20]]]],[[811,19],[[12,[20]]]],[[812,19],[[12,[20]]]],[[813,19],[[12,[20]]]],[[814,19],[[12,[20]]]],[[815,19],[[12,[20]]]],[[816,19],[[12,[20]]]],[[817,19],[[12,[20]]]],[[730,19],[[12,[20]]]],[[818,19],[[12,[20]]]],[[819,19],[[12,[20]]]],[[740,19],[[12,[20]]]],[[820,19],[[12,[20]]]],[[821,19],[[12,[20]]]],[[722,19],[[12,[20]]]],[[722,19],[[12,[20]]]],[[722,19],[[12,[20]]]],[[722,19],[[12,[20]]]],[[722,19],[[12,[20]]]],[[822,19],[[12,[20]]]],0,[728,705],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[741,714],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[705,753],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[157,[[5,[714]]]],[26,[[5,[715]]]],[157,[[5,[716]]]],[157,[[5,[717]]]],[157,[[5,[718]]]],[157,[[5,[719]]]],[157,[[5,[720]]]],[157,[[5,[721]]]],[37,[[5,[722]]]],[157,714],[26,715],[157,716],[157,717],[157,718],[157,719],[157,720],[157,721],[37,722],[157,714],[26,715],[157,716],[157,717],[157,718],[157,719],[157,720],[157,721],[37,722],[849,726],[[],726],[[],714],[[],715],[[],716],[[],717],[[],718],[[],719],[[],720],[[],721],[[],722],0,0,0,[726,850],[[836,157],826],[[830,157],826],[[729,727],842],[729,[[12,[845,795]]]],[[729,727,157,157],[[5,[[823,[[15,[705,14]]]]]]]],[727,744],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[727,747],[765,733],[765,732],[727,799],[[727,705],760],[711,64],[815,16],[741],[742],[714],[743],[715],[738],[744],[716],[745],[717],[748],[749],[750],[751],[752],[753],[754],[755],[756],[757],[758],[759],[718],[760],[761],[762],[705],[719],[769],[770],[771],[772],[773],[774],[775],[776],[777],[780],[781],[783],[787],[720],[793],[794],[796],[721],[801],[802],[803],[804],[805],[806],[707],[807],[808],[809],[811],[812],[813],[814],[815],[816],[820],[722],[728,157],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,[[714,714]],[[715,715]],[[716,716]],[[717,717]],[[718,718]],[[719,719]],[[720,720]],[[721,721]],[[722,722]],[[712,3]],[[709,3]],[[735,3]],[[714,714],714],[[715,715],715],[[716,716],716],[[717,717],717],[[718,718],718],[[719,719],719],[[720,720],720],[[721,721],721],[[722,722],722],[[714,714],16],[[715,715],16],[[716,716],16],[[717,717],16],[[718,718],16],[[719,719],16],[[720,720],16],[[721,721],16],[[722,722],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[714,16],[715,16],[716,16],[717,16],[718,16],[719,16],[720,16],[721,16],[722,16],[771,16],[771,16],[714,16],[715,16],[716,16],[717,16],[718,16],[719,16],[720,16],[721,16],[722,16],[769,16],[770,16],[[740,157,157],16],[799,16],[769,16],[771,16],[771,16],[754,16],[[727,729],16],[768,16],[744,16],0,0,0,0,0,0,0,0,0,0,0,0,0,[[740,840],[[525,[157]]]],0,0,0,0,[727,738],[704,738],0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[765,798,[0,[459,278]]]],0,[768,768],[[808,459],808],0,0,0,0,0,0,0,0,0,0,0,0,0,[[804,801],157],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[728,157],0,0,[[804,157,801],804],[[740,840],[[525,[157]]]],0,0,0,0,[[709,723,26,157]],[[709,723,26,723,26,157]],[[709,723,26,157]],[[709,723,26,723,26,157]],0,0,0,0,[769,16],[776,16],[777,16],[841,726],[714,714],[715,715],[716,716],[717,717],[718,718],[719,719],[720,720],[721,721],[722,722],0,0,0,0,0,[[711,[0,[459,278]]]],[[704,[165,[851,14]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[714,714],[[5,[8]]]],[[715,715],[[5,[8]]]],[[744,744],[[5,[8]]]],[[716,716],[[5,[8]]]],[[745,745],[[5,[8]]]],[[717,717],[[5,[8]]]],[[718,718],[[5,[8]]]],[[763,763],[[5,[8]]]],[[719,719],[[5,[8]]]],[[720,720],[[5,[8]]]],[[721,721],[[5,[8]]]],[[799,799],[[5,[8]]]],[[722,722],[[5,[8]]]],0,[[804,705],804],[[704,[768,[764]]],16],[[726,16],16],0,[712],[709],[735],[704,[[0,[852,278]]]],0,0,[845],0,0,0,[34],[34],[34],[34],[34],0,[[712,3]],[[709,3]],[[735,3]],[[704,763]],0,0,0,0,0,[[714,714]],[[715,715]],[[716,716]],[[717,717]],[[718,718]],[[719,719]],[[720,720]],[[721,721]],[[722,722]],[705,705],[[726,743],[[0,[852,278]]]],[[727,832,[5,[61]]],[[0,[852,278]]]],[[712,736,[525,[157]],723,26]],0,0,0,[728,157],0,[[718,157],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[714,714,16]],[[715,715,16]],[[716,716,16]],[[717,717,16]],[[718,718,16]],[[719,719,16]],[[720,720,16]],[[721,721,16]],[[722,722,16]],[[709,157,825]],[[709,157,825]],[[735,157,825]],[[835,157,825]],[[835,157,825]],[[709,800]],[[709,765,772]],[[709,765,772]],[[835,765,772]],[[835,765,772]],[[709,836]],[[709,836]],[[735,830]],[[835,836]],[[835,836]],[[709,717,157]],[[709,717,157]],[[735,157]],[[835,717,157]],[[835,717,157]],[[709,157,157,157,157]],[[709,157]],[[709,157,765]],[[709,157,765]],[[835,157,765]],[[835,157,765]],[[709,64,64,64,64,64,64]],0,0,[723,26],[728,804],[783,26],0,0,0,[723,765],0,0,0,[847,[[5,[45]]]],0,0,0,0,[704],0,0,0,0,[704],0,0,[[714,714],714],[[715,715],715],[[716,716],716],[[717,717],717],[[718,718],718],[[719,719],719],[[720,720],720],[[721,721],721],[[722,722],722],[[714,714]],[[715,715]],[[716,716]],[[717,717]],[[718,718]],[[719,719]],[[720,720]],[[721,721]],[[722,722]],[711,764],0,[[714,714],714],[[715,715],715],[[716,716],716],[[717,717],717],[[718,718],718],[[719,719],719],[[720,720],720],[[721,721],721],[[722,722],722],0,0,0,0,[803,802],[[802,157],803],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[730,818,16],819],[819,730],[[714,714]],[[715,715]],[[716,716]],[[717,717]],[[718,718]],[[719,719]],[[720,720]],[[721,721]],[[722,722]],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],0,[[714,714],714],[[715,715],715],[[716,716],716],[[717,717],717],[[718,718],718],[[719,719],719],[[720,720],720],[[721,721],721],[[722,722],722],[723],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[723,720],[728,721],0,[751,16],[[738,738],738],[[738,738],738],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[728,157],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[711,723,26]],[[711,723,26,739],[[5,[731]]]],0,0,[[711,[730,[728]],810,804]],[[712,736,157]],[[709,736,157]],[[735,736,157]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],0,[[]],[853],[854],[855],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[714]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[828,828],[853,853],[854,854],[855,855],[[]],[[]],[[]],[[]],0,0,[828,723],[[711,840],728],[[],853],[[],854],[[],855],[11],[856],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[[]],[[]],[[]],[[[525,[157]],[525,[157]]]],[[[525,[157]],159,[525,[157]]]],[[723,26]],[[723,26]],[11],[11],[11],[11],[11],[11],[[],[[5,[822]]]],[[828,828],16],[[],16],[[],16],[857],[[857,19],[[12,[20]]]],[[828,19],[[12,[20]]]],[[853,19],[[12,[20]]]],[[854,19],[[12,[20]]]],[[855,19],[[12,[20]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[828],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[726,714],[[5,[727]]]],[[726,714,[5,[729]]],852],0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[],580],[26,857],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,714],[[],[[5,[742]]]],[[704,711,765,[0,[459,278]]]],[857],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[157,825]],[[765,772]],[836],[[717,157]],[[157,765]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[857,712,723,26,739,704],732],0,0,0,0,0,[[]],[[]],[[]],[[]],[[],5],[[],5],0,0,0,[11],[11],[858],[[]],[11],[[]],[[],11],0,[[]],[[],5],[[]],[858,[[5,[11]]]],0,[[699,157,37,16],858],[[858,157,157]],[[]],[[]],[[858,64,505]],[858,[[5,[477]]]],0,[[]],[[]],[[858,[5,[859]]],852],0,0,[[],12],[[],12],[[],46],[[]],[[]],[[],5],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[488,37],[636,64],0,[[636,636],636],[[860,65],861],[[860,110],861],[[860,11,32],862],[[860,11,32],862],[488,488],[636,636],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[488,37],[636,64],[[863,[30,[864]]],860],[[865,[30,[864]]],866],0,0,[867],[867],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[152,[61]]],[[12,[39,40]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[488,488],[636,636],[868,868],[869,869],[864,864],[870,870],[871,871],[872,872],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[869,869],8],[[873,874],[[631,[39,291]]]],[[875,488],875],0,[64],[64],[64],[[869,64]],[64],[64],0,0,[[[152,[61]]],[[12,[40]]]],[[[152,[61]],[580,[3]]],[[12,[40]]]],[[],488],[[],636],[[],868],[[],864],[[],865],[[],876],[[],871],[[],874],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[],[[12,[488]]]],[[],[[12,[636]]]],[[],[[12,[868]]]],[[],[[12,[870]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[860],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[488,488],16],[[636,636],16],[[869,869],16],[[864,864],16],[[870,870],16],[[871,871],16],[[872,872],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,[[[152,[61]]],16],0,[[875,877],875],[[860,878],860],[[488,19],[[12,[20]]]],[[636,19],[[12,[20]]]],[[868,19],[[12,[20]]]],[[869,19],[[12,[20]]]],[[864,19],[[12,[20]]]],[[870,19],[[12,[20]]]],[[871,19],[[12,[20]]]],[[871,19],[[12,[20]]]],[[872,19],[[12,[20]]]],[[872,19],[[12,[20]]]],[635,488],[636,488],[119,488],[562,488],[[]],[562,636],[[]],[635,636],[488,636],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,864],[[[5,[3]]],864],[22,864],[[]],[[]],[[]],[[]],[[]],[[],872],[[]],[[]],[37,488],[37,488],[64,636],[[],871],[37,488],[64,636],[[64,64],636],[[37,37,37],488],[[64,64,64],636],[[37,37,37],488],[[37,37,37,37],488],[[64,64,64,64],636],[[37,37,37,37],488],[[64,64,64,64],636],[[37,37,37,37],636],[[37,37,37,37],636],[3,[[12,[871]]]],[3,[[12,[872]]]],[37,488],[64,636],0,[488,37],[636,64],[[488,64],488],[478],[864,[[5,[3]]]],[[],879],[[],26],[[],26],[[],26],[478],0,[64],[488],[636],[864],0,0,[[488,11],37],[[636,11],64],[[488,11],37],[[636,11],64],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[871,11,[152,[61]]]],[636,64],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[870,16],[865,16],[488,16],[[],16],[[],16],[[],16],[871,32],[865,32],[863,32],[863,32],[865,32],0,0,[[488,64],488],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[636,636],636],[[636,64],636],[[870,64]],[[870,64]],[[636,64],636],[[[164,[704]],[164,[711]],880],867],[867,863],[[],874],[64,870],[[],[[874,[879]]]],[64,870],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[869,869],[[5,[8]]]],0,0,[870,[[5,[64]]]],[[874,[152,[61]]],[[12,[881,40]]]],[[871,[152,[61]]]],[[864,3],864],0,[488,37],[636,64],[[875,870],875],[[[152,[61]]],[[12,[[580,[3]],40]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[870,[[5,[64]]]],0,[488,12],[636,12],[868,12],[870,12],0,0,0,0,0,[488],[636],[[863,867],[[12,[882,883]]]],[[865,867],884],[488],[488,488],[636,636],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[636],[488],[636],[[],22],[[],22],[488],[636],0,[876,26],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[873,[152,[61]]],[[12,[40]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[875,875],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[873,874,[152,[61]],16],[[12,[39,40]]]],0,[871,874],[[860,345],860],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[885,744],[[12,[40]]]],[[],5],[[],5],[[],5],[[],5],[885,885],[[]],[11],[11],[11],[11],[885,[[832,[[5,[3]]]]]],[[]],[[]],[11],[11],[885,715],[[885,19],[[12,[20]]]],[[]],[[]],0,[[],11],[[],11],[[]],[[]],[885,738],[[],5],[[],5],[[]],[[]],0,[[]],[[]],[[]],[[]],[885,744],[[]],[[]],[[]],[[]],[[],714],[[]],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[],886],0,0,[65,64],[[3,887,867],[[12,[[15,[888,14]],40]]]],[[887,867],[[12,[[15,[888,14]],40]]]],0,0,[1],[1],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[889,889],[890,890],[[]],[[]],[11],[11],[11],[11],[[]],[[]],[11],[11],[[]],[[]],0,0,[[],11],[[],11],[[]],[[]],0,0,[[],5],[[],5],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[]],[[]],[[]],[[]],[[],5],[[],5],0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[1],[[]],[[]],[[]],[[]],[[],5],[[],5],[891,891],[[]],[11],[11],[[]],[11],[[891,19],[[12,[20]]]],[[]],[[],11],[[]],[[],16],[[],5],[[]],[[],157],0,[[]],[[]],[[]],[[]],0,[[]],[[],12],[[],12],[[],46],[[]],[[]],[[],5],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],0,[[],877],[[],878],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[877,877],877],[[878,878],878],[[877,877]],[[878,878]],[[877,877],877],[[878,878],878],[[877,877]],[[878,878]],[877,37],[878,157],0,0,[[877,877],877],[[878,878],878],[[877,877]],[[878,878]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[892,892],[893,893],[884,884],[877,877],[894,894],[878,878],[882,882],[895,895],[896,896],[897,897],[898,898],[899,899],[900,900],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[877,877],8],[[878,878],8],0,0,[877,877],[878,878],0,[[877,877],16],[[878,878],16],[[901,902,704,874]],[[901,902,704,874],903],[[],904],[[],905],[[],877],[[],894],[[],878],[[],895],0,0,0,0,0,[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[877,877],877],[[878,878],878],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[902,900,709],[[12,[40]]]],[[903,902,900,709],[[12,[40]]]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[],877],[[],878],[[877,877],16],[[878,878],16],[[883,883],16],[[900,900],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[877],[878],0,0,0,0,[[877,19],[[12,[20]]]],[[877,19],[[12,[20]]]],[[877,19],[[12,[20]]]],[[877,19],[[12,[20]]]],[[877,19],[[12,[20]]]],[[878,19],[[12,[20]]]],[[878,19],[[12,[20]]]],[[878,19],[[12,[20]]]],[[878,19],[[12,[20]]]],[[878,19],[[12,[20]]]],[[883,19],[[12,[20]]]],[[883,19],[[12,[20]]]],[[895,19],[[12,[20]]]],[[906,19],[[12,[20]]]],[[907,19],[[12,[20]]]],[[900,19],[[12,[20]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37,[[5,[877]]]],[157,[[5,[878]]]],[37,877],[157,878],[37,877],[157,878],[[],877],[[],878],[[],26],[[],26],[[],26],[64,64],0,[877],[878],[900],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[877,877]],[[878,878]],0,[[877,877],877],[[878,878],878],[[877,877],16],[[878,878],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[877,16],[878,16],[877,16],[878,16],[[],16],[[],16],[[],16],0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[867,892],[867,[[12,[884,908]]]],[[867,863],[[12,[882,883]]]],[867,[[12,[896,909]]]],[867,897],[867,[[12,[898,909]]]],[867,[[12,[899,40]]]],[877,877],[878,878],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[877,877],[[5,[8]]]],[[878,878],[[5,[8]]]],[[]],0,0,0,[34],0,0,0,[[877,877]],[[878,878]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[877,877,16]],[[878,878,16]],0,[[877,877],877],[[878,878],878],[[877,877]],[[878,878]],[[877,877],877],[[878,878],878],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[877,877]],[[878,878]],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[877,877],877],[[878,878],878],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[910,910],[[]],[[901,902,704,874],911],[11],[11],[11],[11],[[]],[[]],[[911,902,900,709,910],[[12,[40]]]],[11],[11],[[]],[[]],[[],11],[[],11],[[]],[[]],[[],5],[[],5],[[]],[[]],[[867,164],910],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[912,912],[913,913],[887,887],[[]],[[]],[[]],[[],[[15,[37,14]]]],[[914,867,889,887],[[12,[[913,[915]],909]]]],[[916,917,918],912],0,[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[11],[[913,913],16],[[909,909],16],[[],16],[[],16],[[],16],[[],16],[[913,19],[[12,[20]]]],[[909,19],[[12,[20]]]],[[909,19],[[12,[20]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],912],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[916,912],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[919,919],[920,920],[921,921],[[]],[[]],[[]],[[922,867,709,110],[[12,[40]]]],[[],922],[[],921],[11],[11],[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[[]],[[922,867,636],[[12,[713,40]]]],[11],[11],[11],[11],[[919,19],[[12,[20]]]],[[920,19],[[12,[20]]]],[[921,19],[[12,[20]]]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],0,[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[922,922],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[922,867,921],[[12,[922,40]]]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[1],[[]],[[]],[[]],[886,64],[[]],[886,65],[886,64],[[],5],[[],5],[886,886],[[]],[[886,65],16],[886],[[],886],[11],[11],[[],[[12,[886]]]],[[]],[11],[64,64],[886],[[886,886],16],[[],886],[[886,65],886],[[886,65]],[[886,19],[[12,[20]]]],[[]],[[65,65],886],[[65,65],886],[[65,65],886],[32,886],[886,65],[[],11],[[886,886],886],[[]],[886,16],[886,16],[886,16],[886,16],[886,16],[110,64],[65,64],[65,64],[[],5],[[]],0,0,0,0,[[],886],[[]],[[]],[[376,886],64],[376,64],[[109,109]],[[109,109]],[[886,145],886],[[]],[[]],[886,12],[886,65],[[]],[[886,342],886],[[886,361],886],[[886,85],886],[[886,65],886],[[],12],[[],12],[[],46],[[886,886],886],[[]],[[]],[[],5],[886,64],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[36,455],[51,51],[51,51],[51,51],[51,51],[51,51],[51,51],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[923,923],[924,924],[36,36],[[]],[[]],[[]],[[],51],[[],51],0,[11],[11],[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[[]],[11],[11],[11],[11],0,[[36,36],16],[[],16],[[],16],[[925,19],63],[[923,19],63],[[924,19],63],[[36,19],63],[[]],[[]],[[]],[[]],[53,[[12,[925,926]]]],[53,[[12,[923,926]]]],[53,[[12,[924,926]]]],[53,[[12,[925,926]]]],[53,[[12,[923,926]]]],[53,[[12,[924,926]]]],[[],[[5,[56]]]],[3,16],[3,16],[22,38],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[36,16],[61,[[38,[[450,[13]]]]]],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],0,[[35,455,454,456,22],38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[22]]],64],0,0,[925,456],[[35,36],[[38,[37]]]],[924,[[12,[927]]]],[[35,36,925],38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[925,53],[[12,[926]]]],[[923,53],[[12,[926]]]],[[924,53],[[12,[926]]]],[[925,53],[[12,[926]]]],[[923,53],[[12,[926]]]],[[924,53],[[12,[926]]]],0,0,[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0],"p":[[3,"Private"],[3,"ComponentName"],[15,"str"],[3,"EntityPath"],[4,"Option"],[3,"RecordingId"],[3,"ApplicationId"],[4,"Ordering"],[3,"Session"],[4,"SocketAddr"],[15,"usize"],[4,"Result"],[4,"LogMsg"],[3,"Global"],[3,"Vec"],[15,"bool"],[3,"Field"],[4,"MsgSenderError"],[3,"Formatter"],[3,"Error"],[4,"MsgBundleError"],[3,"String"],[3,"EntityPathImpl"],[4,"EntityPathPart"],[3,"Uuid"],[15,"u64"],[3,"RawMutex"],[3,"MutexGuard"],[3,"EntityPathHash"],[8,"Into"],[4,"Resettable"],[8,"Iterator"],[3,"MsgSender"],[3,"Demand"],[3,"BuildInfo"],[4,"CallSource"],[15,"u8"],[6,"Result"],[3,"PathBuf"],[3,"Error"],[3,"TimePoint"],[4,"PathOp"],[4,"RecordingSource"],[4,"Error"],[8,"Error"],[3,"TypeId"],[8,"IntoIterator"],[8,"SerializableComponent"],[3,"Timeline"],[3,"TimeInt"],[3,"Command"],[3,"RerunArgs"],[3,"ArgMatches"],[3,"RichFormatter"],[3,"Error"],[3,"Id"],[4,"TensorDataType"],[4,"TensorElement"],[3,"TensorId"],[4,"TensorDataMeaning"],[3,"Path"],[3,"Backtrace"],[6,"Result"],[15,"f32"],[3,"Vec3"],[3,"TimeReal"],[3,"Time"],[3,"Duration"],[3,"Arrow3D"],[3,"RawMesh3D"],[4,"MeshFormat"],[4,"Mesh3D"],[3,"MsgId"],[3,"Rigid3"],[3,"Pinhole"],[4,"Transform"],[4,"Error"],[3,"AnnotationContext"],[3,"ViewCoordinates"],[3,"EncodedMesh3D"],[15,"f64"],[15,"i64"],[3,"TimelineName"],[15,"u128"],[3,"IsoTransform"],[3,"ArrowMsg"],[3,"MeshId"],[3,"BBox2D"],[3,"Box3"],[4,"Index"],[4,"BatchIndex"],[3,"IndexHash"],[3,"ComponentPath"],[4,"TimeType"],[3,"TimeRange"],[3,"TimeRangeF"],[3,"BeginRecordingMsg"],[3,"RecordingInfo"],[3,"PythonVersion"],[3,"EntityPathOpMsg"],[4,"DataType"],[4,"PathParseError"],[3,"Vec2D"],[3,"SignedAxis3"],[3,"ClassMapElemArrow"],[3,"Mat3"],[4,"Handedness"],[8,"ExactSizeIterator"],[3,"RangeInclusive"],[3,"Vec2"],[4,"RawMeshError"],[3,"OffsetDateTime"],[15,"u16"],[3,"MsgBundle"],[3,"EncodedMesh3DArrow"],[4,"FieldError"],[3,"SystemTime"],[3,"ClassId"],[3,"ColorRGBA"],[3,"AnnotationInfo"],[3,"InstanceKey"],[3,"KeypointId"],[3,"Label"],[3,"Point2D"],[3,"Point3D"],[3,"Radius"],[4,"Rect2D"],[3,"Scalar"],[3,"ScalarPlotProps"],[3,"Size3D"],[4,"TensorData"],[3,"TensorDimension"],[3,"Tensor"],[3,"TextEntry"],[3,"Vec3D"],[3,"Vec4D"],[3,"Box3D"],[3,"LineStrip2D"],[3,"LineStrip3D"],[3,"Mat3x3"],[3,"Quaternion"],[3,"ClassDescription"],[4,"TensorCastError"],[3,"ClassDescriptionArrow"],[3,"Quat"],[3,"ShapeError"],[3,"TryFromSliceError"],[4,"DynamicImage"],[4,"ImageError"],[3,"FastFixedSizeListArray"],[3,"FastFixedSizeArrayIter"],[8,"AsRef"],[15,"i16"],[3,"ViewRepr"],[3,"ArrayBase"],[3,"OwnedRepr"],[15,"u32"],[15,"i8"],[15,"i32"],[3,"MutableAnnotationInfoArray"],[8,"Any"],[3,"MutableClassMapElemArrowArray"],[8,"Array"],[3,"Arc"],[3,"Box"],[3,"AnnotationInfoArray"],[3,"ClassMapElemArrowArray"],[3,"AnnotationInfoArrayIterator"],[3,"ClassMapElemArrowArrayIterator"],[3,"MutableBitmap"],[4,"ViewDir"],[4,"Axis3"],[4,"Sign"],[3,"Encoder"],[8,"Write"],[3,"BufReader"],[3,"Decoder"],[4,"Either"],[3,"OsStr"],[3,"CStr"],[3,"Pin"],[3,"Replacements"],[3,"Error"],[3,"Recompositions"],[3,"Decompositions"],[3,"Context"],[4,"Poll"],[4,"SeekFrom"],[3,"StreamSafe"],[3,"Chunk"],[3,"Arguments"],[3,"PrimitiveArray"],[15,"i128"],[3,"Utf8Array"],[3,"MutablePrimitiveArray"],[3,"BooleanArray"],[3,"BinaryArray"],[3,"DictionaryArray"],[3,"FixedSizeBinaryArray"],[3,"FixedSizeListArray"],[3,"ListArray"],[3,"MapArray"],[3,"NullArray"],[3,"StructArray"],[3,"UnionArray"],[3,"MutableBinaryValuesArray"],[3,"MutableBinaryArray"],[3,"MutableBooleanArray"],[3,"MutableDictionaryArray"],[3,"MutableFixedSizeBinaryArray"],[3,"MutableFixedSizeListArray"],[3,"MutableListArray"],[3,"MutableStructArray"],[3,"MutableUtf8Array"],[3,"MutableUtf8ValuesArray"],[8,"TakeIterator"],[8,"TakeIteratorNulls"],[4,"PolarsError"],[3,"ArrayValuesIter"],[3,"GrowableBinary"],[3,"GrowableBoolean"],[15,"never"],[3,"GrowableDictionary"],[3,"GrowableFixedSizeBinary"],[3,"GrowableFixedSizeList"],[3,"GrowableList"],[3,"GrowableNull"],[3,"GrowablePrimitive"],[3,"GrowableStruct"],[3,"GrowableUnion"],[3,"GrowableUtf8"],[3,"Bitmap"],[3,"Buffer"],[3,"OwnedFd"],[8,"Fn"],[3,"BitmapIter"],[4,"ZipValidity"],[8,"Scalar"],[3,"DictionaryValuesIter"],[3,"ChunksExact"],[3,"MapValuesIter"],[3,"Iter"],[3,"StructValueIter"],[3,"UnionIter"],[3,"DictionaryValuesIterTyped"],[8,"TrustedLen"],[8,"Clone"],[3,"HashMap"],[3,"OffsetsBuffer"],[8,"MutableArray"],[3,"Offsets"],[8,"Growable"],[3,"BitChunks"],[3,"IntoIter"],[3,"SlicesIterator"],[3,"ZipValidityIter"],[3,"BitChunksExact"],[3,"BitChunksExactMut"],[3,"BitChunkIter"],[3,"PrimitiveScalar"],[3,"BooleanScalar"],[3,"CastOptions"],[3,"months_days_ns"],[4,"TimeUnit"],[4,"PrimitiveType"],[4,"PhysicalType"],[4,"IntegerType"],[3,"Schema"],[4,"UnionMode"],[4,"IntervalUnit"],[3,"BTreeMap"],[3,"Utf8Error"],[4,"OutOfSpecKind"],[3,"TryReserveError"],[3,"Utf8Error"],[3,"Error"],[3,"FromUtf8Error"],[8,"Send"],[8,"Sync"],[3,"ArrowSchema"],[3,"ArrowArray"],[3,"ArrowArrayStream"],[3,"ArrowArrayStreamReader"],[3,"IpcField"],[3,"IpcSchema"],[3,"FileMetadata"],[3,"StreamMetadata"],[3,"FileReader"],[3,"StreamReader"],[3,"AHashMap"],[3,"RandomState"],[4,"StreamState"],[4,"Compression"],[3,"WriteOptions"],[3,"Record"],[3,"StreamWriter"],[3,"FileWriter"],[3,"EncodedData"],[3,"DictionaryScalar"],[3,"Utf8Scalar"],[3,"BinaryScalar"],[3,"ListScalar"],[3,"NullScalar"],[3,"StructScalar"],[3,"FixedSizeListScalar"],[3,"FixedSizeBinaryScalar"],[3,"UnionScalar"],[3,"NaiveDate"],[3,"NaiveDateTime"],[3,"FixedOffset"],[3,"NaiveTime"],[3,"DateTime"],[3,"days_ms"],[3,"f16"],[3,"i256"],[3,"BitChunkOnes"],[3,"IndexRange"],[3,"u8x64"],[3,"u16x32"],[3,"u32x16"],[3,"u64x8"],[3,"i8x64"],[3,"i16x32"],[3,"i32x16"],[3,"i64x8"],[3,"f32x16"],[3,"f64x8"],[3,"i128x8"],[3,"f16x32"],[3,"days_msx8"],[3,"months_days_nsx8"],[3,"i256x8"],[3,"Vec3A"],[3,"Vec4"],[3,"DVec2"],[3,"DVec3"],[3,"DVec4"],[3,"IVec2"],[3,"IVec3"],[3,"IVec4"],[3,"Affine2"],[3,"Affine3A"],[3,"Mat2"],[3,"Mat3A"],[3,"Mat4"],[3,"DAffine2"],[3,"DAffine3"],[3,"DMat2"],[3,"DMat3"],[3,"DMat4"],[3,"DQuat"],[3,"UVec2"],[3,"UVec3"],[3,"UVec4"],[3,"BVec2"],[3,"BVec3"],[3,"BVec4"],[3,"BVec3A"],[3,"BVec4A"],[4,"EulerRot"],[3,"Conformal3"],[3,"ColumnMatrix3"],[3,"RowMatrix3"],[3,"Point2"],[3,"Vector2"],[3,"Vector3"],[3,"Point3"],[3,"ColumnMatrix2"],[3,"RowMatrix2"],[3,"RowMatrix4"],[3,"ColumnMatrix4"],[3,"Quaternion"],[3,"__m128"],[3,"Vector4"],[3,"ColorRgba8"],[3,"Ray3"],[3,"Rgb"],[3,"Luma"],[3,"Rgba"],[3,"LumaA"],[3,"ImageBuffer"],[3,"FlatSamples"],[3,"View"],[4,"Error"],[3,"ViewMut"],[4,"ColorType"],[3,"Frame"],[4,"ImageFormat"],[3,"SubImage"],[4,"ExtendedColorType"],[3,"Delay"],[4,"ImageOutputFormat"],[3,"Progress"],[3,"Pixels"],[3,"Frames"],[4,"ImageError"],[3,"Rect"],[3,"EnumeratePixels"],[3,"EnumeratePixelsMut"],[3,"EnumerateRows"],[3,"EnumerateRowsMut"],[8,"ImageDecoder"],[3,"Duration"],[4,"NormalForm"],[3,"Pixels"],[3,"PixelsMut"],[4,"FilterType"],[3,"Rows"],[3,"RowsMut"],[3,"SampleLayout"],[3,"Limits"],[4,"PixelDensityUnit"],[3,"PixelDensity"],[3,"JpegDecoder"],[3,"JpegEncoder"],[3,"PngDecoder"],[3,"ApngDecoder"],[4,"CompressionType"],[4,"FilterType"],[3,"PngEncoder"],[3,"PngReader"],[4,"UnsupportedErrorKind"],[4,"ParameterErrorKind"],[4,"LimitErrorKind"],[4,"ImageFormatHint"],[3,"UnsupportedError"],[3,"EncodingError"],[3,"ParameterError"],[3,"DecodingError"],[3,"LimitError"],[3,"BiLevel"],[3,"LimitSupport"],[3,"Reader"],[3,"File"],[3,"Hash64"],[3,"Hash128"],[8,"Hash"],[8,"Copy"],[3,"ComponentBundle"],[4,"Infallible"],[3,"CountAndSize"],[3,"AccountingAllocator"],[3,"Layout"],[3,"MemoryHistory"],[3,"MemoryUse"],[3,"MemoryLimit"],[3,"TrackingStatistics"],[3,"ServerOptions"],[3,"Client"],[3,"Receiver"],[3,"App"],[3,"Visuals"],[3,"RemoteViewerApp"],[3,"StartupOptions"],[4,"AppEnvironment"],[3,"Profiler"],[3,"ReUi"],[8,"Storage"],[8,"FnOnce"],[3,"Context"],[3,"Frame"],[3,"EventLoopBuilder"],[3,"EventLoop"],[3,"NativeOptions"],[4,"HardwareAcceleration"],[4,"Theme"],[4,"WebGlContextOption"],[4,"Renderer"],[3,"IconData"],[3,"WindowInfo"],[3,"IntegrationInfo"],[4,"UserEvent"],[3,"OsError"],[4,"WgpuError"],[3,"Vec2"],[3,"Pos2"],[3,"RenderState"],[8,"FnMut"],[3,"Ui"],[8,"Widget"],[3,"Response"],[3,"Painter"],[4,"Shape"],[3,"ShapeIdx"],[3,"Margin"],[3,"Mesh"],[3,"Rect"],[3,"Color32"],[3,"InnerResponse"],[3,"InputState"],[4,"Align"],[3,"Align2"],[3,"Layout"],[3,"Sense"],[4,"Order"],[3,"LayerId"],[3,"ScrollArea"],[3,"Window"],[3,"Area"],[3,"ProgressBar"],[3,"Id"],[3,"Modifiers"],[3,"PointerState"],[3,"Memory"],[3,"TexturesDelta"],[3,"RawInput"],[3,"FullOutput"],[3,"PlatformOutput"],[3,"Stroke"],[3,"TextureHandle"],[3,"Rounding"],[3,"Resize"],[3,"RichText"],[4,"WidgetText"],[3,"Frame"],[3,"Prepared"],[3,"Image"],[3,"DragValue"],[3,"Slider"],[3,"TopBottomPanel"],[4,"PointerButton"],[4,"ImageData"],[3,"Style"],[4,"Direction"],[3,"Range"],[3,"PaintCallbackInfo"],[3,"ViewportInPixels"],[3,"TextEdit"],[3,"ColorImage"],[3,"FontImage"],[3,"PaintCallback"],[3,"FontId"],[4,"FontFamily"],[3,"FontData"],[3,"FontTweak"],[3,"FontDefinitions"],[3,"TextFormat"],[3,"Galley"],[3,"TextureOptions"],[4,"TextureFilter"],[4,"TextureId"],[3,"ClippedPrimitive"],[4,"AboveOrBelow"],[3,"HoveredFile"],[3,"DroppedFile"],[4,"Event"],[3,"ModifierNames"],[4,"Key"],[3,"KeyboardShortcut"],[3,"TouchDeviceId"],[3,"TouchId"],[4,"TouchPhase"],[4,"CursorIcon"],[3,"WidgetInfo"],[3,"MultiTouchInfo"],[3,"Options"],[4,"TextStyle"],[3,"ImageButton"],[4,"WidgetType"],[3,"CollapsingResponse"],[3,"Spinner"],[3,"Hsva"],[3,"Cursor"],[8,"ToString"],[4,"FontSelection"],[3,"Separator"],[3,"CentralPanel"],[3,"CollapsingHeader"],[3,"SidePanel"],[3,"RCursor"],[8,"Display"],[3,"Button"],[3,"Fonts"],[3,"CircleShape"],[3,"CubicBezierShape"],[3,"TextShape"],[3,"QuadraticBezierShape"],[3,"PathShape"],[3,"RectShape"],[4,"Cow"],[4,"SpatialNavigationMode"],[4,"AutoSizeUnit"],[3,"LayoutJob"],[3,"CCursor"],[3,"ComboBox"],[3,"Hyperlink"],[3,"PCursor"],[3,"WidgetVisuals"],[3,"WidgetTextGalley"],[3,"WidgetTextJob"],[3,"Label"],[3,"TextEditState"],[3,"Grid"],[8,"TextBuffer"],[4,"Side"],[4,"TopBottomSide"],[3,"TextureManager"],[3,"RwLock"],[3,"Checkbox"],[3,"RadioButton"],[3,"Link"],[3,"SelectableLabel"],[4,"SliderOrientation"],[4,"OperatingSystem"],[4,"OutputEvent"],[3,"Rot2"],[3,"Shadow"],[3,"TextEditOutput"],[3,"ScrollAreaOutput"],[3,"Spacing"],[3,"Mesh16"],[3,"ClippedShape"],[3,"HeaderResponse"],[3,"CollapsingState"],[3,"PanelState"],[3,"State"],[3,"TextureAtlas"],[3,"ImageDelta"],[3,"Vertex"],[3,"PaintStats"],[3,"TessellationOptions"],[4,"Primitive"],[15,"char"],[3,"TextureMeta"],[3,"PreparedDisc"],[3,"Tessellator"],[3,"Mutex"],[3,"RectTransform"],[3,"AHashSet"],[3,"AHasher"],[3,"HashSet"],[3,"IntoKeys"],[3,"IntoValues"],[8,"RandomSource"],[3,"HsvaGamma"],[3,"Rgba"],[3,"History"],[3,"MutexGuard"],[3,"RawRwLock"],[3,"MappedRwLockReadGuard"],[3,"MappedRwLockWriteGuard"],[3,"AllocInfo"],[3,"Path"],[4,"PathType"],[3,"Row"],[3,"LayoutSection"],[3,"TextWrapping"],[3,"RowVisuals"],[3,"Glyph"],[3,"FontsImpl"],[3,"Font"],[3,"OrderedFloat"],[8,"Hasher"],[3,"PaintList"],[3,"SubMenuButton"],[3,"SubMenu"],[3,"OpenUrl"],[3,"Interaction"],[3,"Selection"],[3,"Widgets"],[3,"DebugOptions"],[3,"CCursorRange"],[3,"IdTypeMap"],[3,"FrameCache"],[3,"CacheStorage"],[3,"TypeId"],[3,"Undoer"],[3,"Settings"],[4,"Alpha"],[3,"Plot"],[3,"Text"],[3,"PlotUi"],[3,"Arrows"],[3,"Legend"],[3,"BarChart"],[3,"Bar"],[3,"PlotImage"],[3,"LinkedCursorsGroup"],[3,"LinkedAxisGroup"],[3,"BoxPlot"],[3,"BoxElem"],[3,"PlotBounds"],[3,"PlotPoint"],[3,"BoxSpread"],[4,"LineStyle"],[4,"Orientation"],[4,"MarkerShape"],[3,"HLine"],[3,"VLine"],[4,"Corner"],[3,"Line"],[3,"Polygon"],[3,"Points"],[3,"CoordinatesFormatter"],[4,"PlotPoints"],[8,"RangeBounds"],[3,"CursorRange"],[3,"PCursorRange"],[3,"WgpuConfiguration"],[3,"CallbackFn"],[3,"Renderer"],[3,"RequestDeviceError"],[3,"CreateSurfaceError"],[3,"Device"],[4,"TextureFormat"],[3,"TextureView"],[4,"FilterMode"],[3,"SamplerDescriptor"],[3,"RenderPass"],[3,"ScreenDescriptor"],[3,"Queue"],[3,"CommandEncoder"],[3,"CommandBuffer"],[3,"Backends"],[3,"Features"],[3,"DownlevelFlags"],[3,"ShaderStages"],[3,"TextureFormatFeatureFlags"],[3,"ColorWrites"],[3,"BufferUsages"],[3,"TextureUsages"],[3,"PipelineStatisticsTypes"],[3,"Buffer"],[4,"BindingResource"],[3,"BufferBinding"],[3,"Instance"],[3,"Adapter"],[3,"Texture"],[3,"Surface"],[3,"ImageCopyTextureBase"],[3,"QueueWriteBufferView"],[3,"BufferViewMut"],[3,"BufferView"],[3,"ComputePassDescriptor"],[3,"ComputePass"],[3,"QuerySet"],[3,"RenderPassDescriptor"],[3,"Limits"],[3,"NonZeroU64"],[3,"ImageSubresourceRange"],[4,"Backend"],[4,"PowerPreference"],[3,"RequestAdapterOptionsBase"],[3,"DownlevelCapabilities"],[4,"ShaderModel"],[4,"DeviceType"],[3,"AdapterInfo"],[4,"TextureViewDimension"],[4,"BlendFactor"],[4,"BlendOperation"],[3,"BlendComponent"],[3,"BlendState"],[3,"ColorTargetState"],[4,"PrimitiveTopology"],[4,"FrontFace"],[4,"Face"],[4,"PolygonMode"],[3,"PrimitiveState"],[3,"MultisampleState"],[3,"TextureFormatFeatures"],[4,"AstcBlock"],[4,"AstcChannel"],[4,"ErrorFilter"],[3,"SubmissionIndex"],[3,"BufferSlice"],[4,"ShaderSource"],[3,"ShaderModuleDescriptor"],[4,"MaintainBase"],[3,"StencilState"],[3,"DepthBiasState"],[3,"DepthStencilState"],[4,"IndexFormat"],[4,"StencilOperation"],[4,"LoadOp"],[3,"Operations"],[3,"StencilFaceState"],[4,"CompareFunction"],[3,"RenderPassColorAttachment"],[3,"RenderPassDepthStencilAttachment"],[4,"VertexStepMode"],[3,"VertexAttribute"],[3,"TextureViewDescriptor"],[4,"VertexFormat"],[3,"PipelineLayoutDescriptor"],[3,"BindGroupEntry"],[3,"BindGroupDescriptor"],[3,"VertexBufferLayout"],[3,"VertexState"],[3,"FragmentState"],[3,"RenderPipelineDescriptor"],[3,"ComputePipelineDescriptor"],[3,"BindGroupLayoutDescriptor"],[3,"RenderBundleEncoderDescriptor"],[4,"PresentMode"],[4,"SurfaceError"],[4,"CompositeAlphaMode"],[3,"BufferAsyncError"],[4,"MapMode"],[3,"PresentationTimestamp"],[3,"Color"],[4,"TextureDimension"],[3,"Origin2d"],[3,"Origin3d"],[3,"Extent3d"],[4,"TextureAspect"],[4,"AddressMode"],[3,"PushConstantRange"],[3,"CommandBufferDescriptor"],[3,"RenderBundleDepthStencil"],[3,"ImageDataLayout"],[4,"BufferBindingType"],[4,"TextureSampleType"],[4,"StorageTextureAccess"],[4,"SamplerBindingType"],[4,"BindingType"],[3,"BindGroupLayoutEntry"],[3,"ImageCopyBufferBase"],[4,"PredefinedColorSpace"],[3,"ImageCopyTextureTaggedBase"],[4,"SamplerBorderColor"],[4,"QueryType"],[4,"Dx12Compiler"],[3,"SurfaceConfiguration"],[3,"ExposedAdapter"],[3,"BindGroup"],[3,"BindGroupLayout"],[3,"BufferDescriptor"],[3,"BufferInitDescriptor"],[3,"CommandEncoderDescriptor"],[3,"ComputePipeline"],[3,"OpenDevice"],[3,"DeviceDescriptor"],[3,"PipelineLayout"],[3,"QuerySetDescriptor"],[3,"RenderBundleEncoder"],[3,"RenderPipeline"],[3,"Sampler"],[3,"ShaderModule"],[3,"ShaderModuleDescriptorSpirV"],[3,"TextureDescriptor"],[3,"InstanceDescriptor"],[3,"SurfaceCapabilities"],[3,"TextureFormatInfo"],[3,"RenderBundle"],[3,"SurfaceTexture"],[3,"RenderBundleDescriptor"],[4,"Error"],[4,"SurfaceStatus"],[3,"Instance"],[3,"GlobalReport"],[8,"UncapturedErrorHandler"],[8,"Future"],[3,"DrawIndirect"],[3,"DrawIndexedIndirect"],[3,"DispatchIndirect"],[3,"DownloadBuffer"],[3,"StagingBelt"],[3,"Painter"],[3,"Window"],[3,"PointCloudBatchBuilder"],[3,"PointBuilder"],[3,"PointsBuilder"],[3,"PointCloudBuilder"],[3,"DebugLabel"],[3,"LineStripSeriesBuilder"],[3,"LineBatchBuilder"],[3,"RenderContext"],[3,"AutoSizeConfig"],[4,"ColorMap"],[3,"Size"],[3,"SearchPath"],[3,"ImportClause"],[3,"FileServer"],[3,"FileResolver"],[3,"LineStripBuilder"],[3,"WgpuResourcePoolStatistics"],[3,"LineStripFlags"],[3,"PointCloudBatchFlags"],[3,"OsFileSystem"],[3,"RenderContextConfig"],[3,"InterpolatedFile"],[3,"PointCloudDrawData"],[4,"PointCloudDrawDataError"],[3,"LineDrawData"],[4,"HardwareTier"],[3,"BoundingBox"],[4,"ResourceLifeTime"],[3,"MeshInstance"],[3,"Mesh"],[3,"Material"],[3,"MeshVertexData"],[3,"GenericSkyboxDrawData"],[3,"LineVertex"],[3,"LineStripInfo"],[4,"DepthCloudDepthData"],[3,"DepthCloudDrawData"],[3,"TestTriangleDrawData"],[3,"RectangleDrawData"],[3,"MeshDrawData"],[4,"DrawPhase"],[3,"SharedRendererData"],[3,"WgpuResourcePools"],[3,"DepthCloudRenderer"],[3,"DepthCloud"],[3,"TexturedRect"],[4,"TextureFilterMag"],[4,"TextureFilterMin"],[4,"LineDrawDataError"],[4,"ResourceManagerError"],[3,"CompositorDrawData"],[3,"Compositor"],[3,"GpuTexture2DHandle"],[4,"ResourceHandle"],[3,"MeshManager"],[3,"MeshHandleInner"],[3,"TextureManager2D"],[3,"GpuTexturePool"],[3,"Texture2DCreationDesc"],[4,"OrthographicCameraMode"],[4,"Projection"],[3,"TargetConfiguration"],[3,"ViewBuilder"],[4,"Commands"],[4,"AnalyticsCommands"],[3,"Args"],[6,"Error"],[4,"CliError"],[8,"Component"],[8,"TensorTrait"],[8,"TensorDataTypeTrait"],[13,"BadEscape"],[13,"RustSdk"],[3,"FixedSizeArrayField"],[13,"BadTensorShape"],[8,"DictionaryKey"],[8,"GenericBinaryArray"],[8,"TryExtend"],[8,"TryExtendFromSelf"],[8,"TryPush"],[8,"BitChunk"],[8,"BitChunkIterExact"],[8,"SimdOrd"],[8,"Sum"],[8,"ArrayAdd"],[8,"ArrayCheckedAdd"],[8,"ArrayCheckedDiv"],[8,"ArrayCheckedMul"],[8,"ArrayCheckedRem"],[8,"ArrayCheckedSub"],[8,"ArrayDiv"],[8,"ArrayMul"],[8,"ArrayOverflowingAdd"],[8,"ArrayOverflowingMul"],[8,"ArrayOverflowingSub"],[8,"ArrayRem"],[8,"ArraySaturatingAdd"],[8,"ArraySaturatingMul"],[8,"ArraySaturatingSub"],[8,"ArraySub"],[8,"ArrayWrappingAdd"],[8,"ArrayWrappingMul"],[8,"ArrayWrappingSub"],[8,"Simd8"],[8,"Simd8PartialEq"],[8,"Simd8Lanes"],[8,"Simd8PartialOrd"],[13,"InvalidBuffer"],[13,"InvalidBuffersLength"],[13,"InvalidBitmap"],[13,"InvalidId"],[13,"InvalidIdDataType"],[8,"Offset"],[8,"NativeType"],[8,"Index"],[8,"NativeSimd"],[8,"Simd"],[8,"FromMaskChunk"],[8,"ArrowDeserialize"],[8,"TryIntoCollection"],[8,"ArrowField"],[3,"I128"],[3,"LargeString"],[3,"LargeBinary"],[3,"FixedSizeBinary"],[3,"LargeVec"],[3,"FixedSizeVec"],[8,"ArrowSerialize"],[8,"FlattenChunk"],[8,"TryIntoArrow"],[8,"Vec3Swizzles"],[8,"Vec4Swizzles"],[8,"Vec2Swizzles"],[8,"Pixel"],[8,"PixelWithColorType"],[8,"Primitive"],[8,"GenericImageView"],[8,"EncodableLayout"],[8,"GenericImage"],[8,"AnimationDecoder"],[8,"ImageDecoderRect"],[8,"ImageEncoder"],[8,"ConvertBuffer"],[13,"Unsupported"],[8,"ColorMap"],[13,"RustSdk"],[13,"RerunCli"],[8,"App"],[3,"CreationContext"],[8,"WidgetWithState"],[8,"NumExt"],[13,"PointerButton"],[13,"Touch"],[13,"Key"],[13,"LineSegment"],[8,"HashMapExt"],[8,"HashSetExt"],[8,"Numeric"],[8,"One"],[8,"FloatOrd"],[8,"CacheTrait"],[8,"ComputerMut"],[3,"GridInput"],[3,"GridMark"],[13,"Dashed"],[13,"Dotted"],[4,"SurfaceErrorAction"],[13,"StorageTexture"],[13,"Buffer"],[13,"Texture"],[13,"Storage"],[13,"Dxc"],[13,"Validation"],[13,"OutOfMemory"],[13,"Astc"],[13,"Float"],[8,"DeviceExt"],[8,"RenderEncoder"],[8,"FileSystem"],[8,"DrawData"],[8,"Renderer"],[3,"LineBatchInfo"],[3,"PointCloudBatchInfo"],[3,"PointCloudVertex"],[13,"Frame"],[13,"ExpiredResource"],[13,"Orthographic"],[13,"Perspective"],[13,"Email"]],"a":{"cross":[14175,14176,14177],"determinant":[14175,14176,14177],"exit":[22182,22372],"magnitude":[13707,13708,13709,13710,13711,13712,13713,13714,13715],"magnitude2":[13725,13726,13727,13728,13729,13730,13731,13732,13733],"mix":[13734,13735,13736,13737,13738,13739,13740,13741,13742],"none":[25086],"quit":[22182,22372],"scale":[13346,13347,13348,13349,13350,13351,13352],"tooltip":[25837,25838,25839],"wedge":[14175,14176,14177]}},\
"rerun_bindings":{"doc":"The Rerun Python Log SDK.","t":[7,0,0,5,5,5,3,3,3,3,4,3,3,6,3,13,3,13,13,3,13,13,13,13,4,13,13,13,13,18,18,3,13,3,3,13,3,3,3,4,4,3,18,18,18,13,13,18,18,18,3,13,3,3,13,3,3,13,3,4,13,3,13,18,3,3,4,3,3,3,4,4,3,3,8,3,3,4,13,13,13,13,13,13,3,3,3,3,13,13,13,13,13,13,13,13,13,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,10,11,12,12,11,11,11,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,10,11,11,11,10,11,11,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,10,11,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,10,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,12,11,5,11,11,5,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,5,5,5,10,11,12,5,12,12,11,11,11,12,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,12,12,12,12,12,11,11,12,12,12,12],"n":["GLOBAL","arrow","python_bridge","array_to_rust","build_chunk_from_components","get_registered_component_names","AnnotationContext","AnnotationInfo","AnnotationInfoTuple","Arrow3D","Axis3","Box3D","ClassDescription","ClassDescriptionTuple","ClassId","ClassId","ColorRGBA","Depth","Encoded","EncodedMesh3D","F32","F64","Glb","Gltf","Handedness","I16","I32","I64","I8","IDENTITY","IDENTITY","InstanceKey","JPEG","KeypointId","Label","Left","LineStrip2D","LineStrip3D","Mat3x3","Mesh3D","MeshFormat","MeshId","NEGATIVE_X","NEGATIVE_Y","NEGATIVE_Z","Negative","Obj","POSITIVE_X","POSITIVE_Y","POSITIVE_Z","Pinhole","Pinhole","Point2D","Point3D","Positive","Quaternion","Radius","Raw","RawMesh3D","Rect2D","Right","Rigid3","Rigid3","SPLAT","Scalar","ScalarPlotProps","Sign","SignedAxis3","Size3D","Tensor","TensorData","TensorDataMeaning","TensorDimension","TensorId","TensorTrait","TextEntry","ThreadInfo","Transform","U16","U32","U64","U8","Unknown","Unknown","Vec2D","Vec3D","Vec4D","ViewCoordinates","X","XCYCW2H2","XCYCWH","XYWH","XYXY","Y","YXHW","YXYX","Z","ZERO","ZERO","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","albedo_factor","arguments","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","as_vec3","aspect_ratio","authkey","axis","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","child_from_parent","class_map","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","color","connect","convert_color","data","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","default","default","default","default","default","default","default","default","default","default","default","default_recording_id","depth","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe","describe","describe_short","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","disconnect","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract","extract","extract","extract","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focal_length","focal_length_in_pixels","format","forward","fov_y","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_body","from_dim","from_dynamic_image","from_image","from_rgb","from_rgba","from_right_handed","from_rub","from_str","from_str","from_up_and_handedness","from_xywh","get","get","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_recording_id","handedness","hash","hash","hash","hash","hash","hash","height","height","id","id","id","image_from_cam","index","index","index","indices","info","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_py","into_resettable","is_enabled","is_shaped_like_an_image","is_shaped_like_an_image","is_specific","is_splat","is_vector","is_vector","items_iter","keypoint_connections","keypoint_map","label","level","log_annotation_context","log_arrow_msg","log_cleared","log_image_file","log_mesh_file","log_meshes","log_pinhole","log_rigid3","log_transform","log_unknown_transform","log_view_coordinates","log_view_coordinates_up_handedness","log_view_coordinates_xyz","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","main","meaning","meaning","meaning","mesh_id","mesh_id","mesh_id","meter","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","named","new","new","new","new","new","new","new","new","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_child_from_parent","new_parent_from_child","normals","now","num_dim","num_dim","num_triangles","origin","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","parent_from_child","parse_entity_path","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","positions","principal_point","python_version","random","random","rerun_bindings","resolution","resolution","right","rotation","sanity_check","sanity_check","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","save","scattered","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serve","set_enabled","set_recording_id","set_thread_time","set_time","set_time_nanos","set_time_seconds","set_time_sequence","shape","shape","shape","shutdown","sign","size","specific_index","tensor_from_jpeg_bytes","tensor_from_jpeg_file","tensor_id","thread_now","time","time_point","to_array","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_rub","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","top_left_corner","transform","translation","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_object_raw","unnamed","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","up","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vector","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","w","w","width","width","with","wrap","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","x","x","x","x","x","x","x","x","y","y","y","y","y","y","y","y","z","z","z","z","z","z"],"q":["rerun_bindings","","","rerun_bindings::arrow","","","rerun_bindings::python_bridged":["","Methods for handling Arrow datamodel log ingest","","Perform conversion between a pyarrow array to arrow2 types.","Build a <code>LogMsg</code> and vector of <code>Field</code> given a ‘**kwargs’…","","The <code>AnnotationContext</code> provides additional information on …","Information about an Annotation.","","A 3D Arrow","One of <code>X</code>, <code>Y</code>, <code>Z</code>.","A 3D bounding box represented by it’s half-lengths","The description of a semantic Class.","","A 16-bit ID representing a type of semantic class.","","An RGBA color tuple.","","","Compressed/encoded mesh format","","","Binary <code>glTF</code>.","<code>glTF</code>.","Left or right handedness. Used to describe a coordinate …","","","","","","","A number used to specify a specific instance in an entity.","","A 16-bit ID representing a type of semantic keypoint …","A String label component","","A Line Strip of 2D points","A Line Strip of 3D points","A 3x3 column-major Matrix made up of 3 Vecs","A Generic 3D Mesh.","The format of a binary mesh file, e.g. GLTF, GLB, OBJ","A unique id per <code>Mesh3D</code>.","","","","","Wavefront .obj.","","","","Camera perspective projection (a.k.a. intrinsics).","The parent is some local camera space, the child an image …","A point in 2D space.","A point in 3D space.","","A Quaternion represented by 4 real numbers.","A Radius component","","A raw “triangle soup” mesh.","A rectangle in 2D space.","","A proper rigid 3D transform, i.e. a rotation and a …","For example: the parent is a 3D world space, the child a …","A special value indicating that this [<code>InstanceKey]</code> is …","A double-precision scalar.","Additional properties of a scalar when rendered as a plot.","Positive (<code>+</code>) or Negative (<code>-</code>).","One of: <code>+X</code>, <code>-X</code>, <code>+Y</code>, <code>-Y</code>, <code>+Z</code>, <code>-Z</code>, i.e. one of the six …","A 3D size, e.g. the size of a 3D box.","A Multi-dimensional Tensor","Flattened <code>Tensor</code> data payload","","Flattened <code>Tensor</code> data payload","A unique id per <code>Tensor</code>.","","A text entry component, comprised of a text body and its …","Thread-local info","A transform between two spaces.","","","","","","We don’t know the transform, but it is …","A vector in 2D space.","A vector in 3D space.","A vector in 4D space.","How we interpret the coordinate system of an entity/space.","","[x_center, y_center, width/2, height/2]","[x_center, y_center, width, height]","[x, y, w, h], with x,y = left,top.","[x0, y0, x1, y1], with x0,y0 = left,top and x1,y1 = …","","[y, x, h, w], with x,y = left,top.","[y0, x0, y1, x1], with x0,y0 = left,top and x1,y1 = …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Albedo factor applied to the final color of the meshata payloadisconnect from remote server (if anyocal length.","X &amp; Y focal length in pixels.","","","Field of View on the Y axis, i.e. the angle between top …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Construct a tensor from <code>image::DynamicImage</code>.","Construct a tensor from something that can be turned into …","","","","Returns a matrix that translates RUB to this coordinate …","","","Choses a coordinate system based on just an up-axis.","","","","","","","","","","","","","","","","","","","","","","<code>ClassId</code> or <code>KeypointId</code> to which this annotation info …","Column-major projection matrix.","","","","Optionally, the flattened indices array for this mesh.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Is logging enabled in the global session?","","","Are we referring to a specific instance of the entity …","Are we referring to all instances of the entity (e.g. all …","","","","Semantic connections between two keypoints.","","","","","","","Log an image file given its contents or path on disk.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The per-element data meaning Used to indicated if the data …","","","","Reciprocal scale of meter unit for depth images","","","","","","","","","","","","","","","","","","","","","","","","","","Optional name of the dimension, e.g. “color” or “…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Optionally, the flattened normals array for this mesh.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The flattened positions array of this mesh.","Principal point of the pinhole camera, i.e. the …","","","","The python module is called “rerun_bindings”.","","Pixel resolution (usually integers) of child image space. …","","How is the child rotated?","Returns an error if this does not span all three …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Serve a web-viewer.","Enable or disable logging in the global session.","","","","","","Set the current time globally. Used for all subsequent …","","","Dimensionality and length","","","Number of elements on this dimension. I.e. size-1 is the …","Returns <code>None</code> if splat, otherwise the index.","Construct a tensor from the contents of a JPEG file.","Construct a tensor from the contents of a JPEG file on …","Unique identifier for the tensor","","","The current time, which can be set by users.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a matrix that translates this coordinate system to …","","","","","","","","","","four columns of an affine transformation matrix","Translation to parent from child.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get access to the thread-local <code>ThreadInfo</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,0,54,21,0,29,29,20,20,0,29,29,29,29,48,33,0,29,0,0,58,0,0,0,0,0,0,49,49,49,57,20,49,49,49,0,35,0,0,57,0,0,21,0,0,58,0,35,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,29,29,29,54,35,0,0,0,0,56,25,25,25,25,56,25,25,56,22,23,54,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,60,29,30,31,32,33,34,35,36,37,38,19,54,12,41,13,14,15,42,43,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,32,33,34,35,36,37,38,12,41,13,14,15,42,43,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,32,33,34,35,36,37,38,49,34,0,49,64,54,71,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,32,33,34,35,36,37,38,32,64,54,71,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,32,33,34,35,36,37,38,64,54,71,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,32,33,34,35,36,37,38,47,64,54,71,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,32,33,34,35,36,37,38,64,54,71,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,32,33,34,35,36,37,38,64,54,71,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,32,33,34,35,36,37,38,33,42,54,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,60,29,30,31,32,33,34,35,36,37,38,54,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,60,29,30,31,32,33,34,35,36,37,38,13,16,17,59,60,15,0,0,31,12,41,13,14,15,42,43,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,32,33,34,35,36,37,38,64,13,15,55,42,17,48,33,36,37,38,0,30,64,54,71,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,32,33,34,35,36,37,38,64,54,71,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,32,33,34,35,36,37,38,43,58,43,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,48,60,30,33,34,35,36,37,38,0,64,54,71,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,32,33,34,35,36,37,38,64,54,71,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,32,33,34,35,36,37,38,117,31,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,25,60,29,30,31,32,33,34,35,36,37,38,13,13,14,14,15,15,55,55,42,42,43,43,56,56,57,57,49,49,58,58,16,16,17,17,18,18,59,59,20,20,60,60,30,30,32,32,54,54,54,71,54,12,41,13,14,15,55,42,43,56,56,57,49,49,58,16,16,17,18,44,45,46,59,19,47,20,20,21,22,23,48,24,25,26,27,28,60,29,30,30,31,32,33,34,35,36,36,37,37,38,38,34,34,47,43,34,64,54,71,12,41,41,13,14,14,15,15,55,55,42,42,43,56,57,49,58,16,17,18,18,44,44,45,45,46,46,46,59,19,47,20,21,22,22,22,23,23,23,48,48,24,25,26,26,27,28,60,29,30,31,32,33,34,35,36,36,36,37,37,37,38,32,56,31,31,14,14,58,43,43,49,43,25,117,31,13,16,17,59,20,60,0,43,13,16,17,59,20,60,25,30,117,31,15,34,46,36,37,19,55,0,64,54,71,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,32,33,34,35,36,37,38,64,54,71,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,32,33,34,35,36,37,38,54,18,0,117,31,16,16,117,31,54,55,55,15,32,0,0,0,0,0,0,0,0,0,0,0,0,0,64,54,71,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,32,33,34,35,36,37,38,64,54,71,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,32,33,34,35,36,37,38,0,117,31,31,21,19,47,31,12,41,13,14,42,43,16,17,18,44,45,21,22,23,48,24,25,26,27,28,31,32,35,36,37,30,30,41,49,22,23,48,31,32,37,12,41,13,14,15,42,43,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,32,33,34,35,36,37,38,33,33,19,64,117,31,19,12,64,54,71,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,32,33,34,35,36,37,38,64,54,71,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,32,33,34,35,36,37,38,33,0,13,16,17,59,60,19,34,0,59,60,0,34,34,43,33,43,19,64,54,71,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,32,33,34,35,36,37,38,64,54,71,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,32,33,34,35,36,37,38,0,27,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,48,60,30,33,34,35,36,37,38,0,0,0,64,64,0,0,0,117,31,31,0,49,30,16,31,31,31,64,0,64,14,54,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,60,29,30,31,32,33,34,35,36,37,38,43,56,49,16,20,30,36,37,38,25,47,33,64,54,71,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,33,34,35,36,37,38,64,54,71,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,32,33,34,35,36,37,38,64,54,71,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,32,33,34,35,36,37,38,54,30,64,54,71,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,32,33,34,35,36,37,38,64,54,71,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,32,33,34,35,36,37,38,43,64,54,71,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,32,33,34,35,36,37,38,12,64,54,71,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,32,33,34,35,36,37,38,38,48,25,30,64,54,64,54,71,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,32,33,34,35,36,37,38,64,54,71,12,41,13,14,15,55,42,43,56,57,49,58,16,17,18,44,45,46,59,19,47,20,21,22,23,48,24,25,26,27,28,60,29,30,31,32,33,34,35,36,37,38,36,37,38,41,22,23,48,28,36,37,38,41,22,23,48,28,37,38,41,23,48,28],"f":[0,0,0,[[1,[3,[2]]],4],[[5,6,7],[[4,[8]]]],[9,[[4,[6]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],0,[9,[[11,[1]]]],[[[3,[12]]],[[3,[12]]]],[[],3],[[],[[3,[13]]]],[[],[[3,[14]]]],[[[3,[15]]],[[3,[15]]]],[[],3],[[],3],[[],[[3,[16]]]],[[],[[3,[17]]]],[[],[[3,[18]]]],[[],3],[[],3],[[],3],[[],3],[[[3,[19]]],[[3,[19]]]],[[],3],[[[3,[20]]],[[3,[20]]]],[[[3,[21]]],[[3,[21]]]],[[[3,[22]]],[[3,[22]]]],[[[3,[23]]],[[3,[23]]]],[[],3],[[],[[3,[24]]]],[[[3,[25]]],[[3,[25]]]],[[],[[3,[26]]]],[[[3,[27]]],[[3,[27]]]],[[[3,[28]]],[[3,[28]]]],[[],3],[[[3,[29]]],[[3,[29]]]],[[[3,[30]]],[[3,[30]]]],[[[3,[31]]],[[3,[31]]]],[[[3,[32]]],[[3,[32]]]],[[[3,[33]]],[[3,[33]]]],[[[3,[34]]],[[3,[34]]]],[[[3,[35]]],[[3,[35]]]],[[],[[3,[36]]]],[[],[[3,[37]]]],[[],[[3,[38]]]],[12,[[40,[39]]]],[41,[[40,[39]]]],[13,[[40,[39]]]],[14,[[40,[39]]]],[15,[[40,[39]]]],[42,[[40,[39]]]],[43,[[40,[39]]]],[16,[[40,[39]]]],[17,[[40,[39]]]],[18,[[40,[39]]]],[44,[[40,[39]]]],[45,[[40,[39]]]],[46,[[40,[39]]]],[[],[[40,[39]]]],[19,[[40,[39]]]],[47,[[40,[39]]]],[20,[[40,[39]]]],[21,[[40,[39]]]],[22,[[40,[39]]]],[23,[[40,[39]]]],[48,[[40,[39]]]],[24,[[40,[39]]]],[25,[[40,[39]]]],[26,[[40,[39]]]],[27,[[40,[39]]]],[28,[[40,[39]]]],[[],[[40,[39]]]],[29,[[40,[39]]]],[30,[[40,[39]]]],[31,[[40,[39]]]],[32,[[40,[39]]]],[33,[[40,[39]]]],[34,[[40,[39]]]],[35,[[40,[39]]]],[36,[[40,[39]]]],[37,[[40,[39]]]],[38,[[40,[39]]]],[49],[34,[[3,[50]]]],[9,[[52,[51]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[33,53],0,[54,54],[12,12],[41,41],[13,13],[14,14],[15,15],[55,55],[42,42],[43,43],[56,56],[57,57],[49,49],[58,58],[16,16],[17,17],[18,18],[44,44],[45,45],[46,46],[59,59],[19,19],[47,47],[20,20],[21,21],[22,22],[23,23],[48,48],[24,24],[25,25],[26,26],[27,27],[60,60],[29,29],[30,30],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[13,13],61],[[16,16],61],[[17,17],61],[[59,59],61],[[60,60],61],0,[[[3,[62]]],4],[[[52,[51]]],4],0,[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],64],[[],13],[[],15],[[],55],[[],42],[[],17],[[],48],[[],33],[[],36],[[],37],[[],38],[9,65],[66,30],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[43,62],[58,2],[43,62],[[],[[40,[12]]]],[[],[[40,[41]]]],[[],[[40,[13]]]],[[],[[40,[14]]]],[[],[[40,[15]]]],[[],[[40,[55]]]],[[],[[40,[42]]]],[[],[[40,[43]]]],[[],[[40,[56]]]],[[],[[40,[57]]]],[[],[[40,[49]]]],[[],[[40,[58]]]],[[],[[40,[16]]]],[[],[[40,[17]]]],[[],[[40,[18]]]],[[],[[40,[44]]]],[[],[[40,[45]]]],[[],[[40,[46]]]],[[],[[40,[59]]]],[[],[[40,[19]]]],[[],[[40,[47]]]],[[],[[40,[20]]]],[[],[[40,[21]]]],[[],[[40,[48]]]],[[],[[40,[60]]]],[[],[[40,[30]]]],[[],[[40,[33]]]],[[],[[40,[34]]]],[[],[[40,[35]]]],[[],[[40,[36]]]],[[],[[40,[37]]]],[[],[[40,[38]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[67],[[],68],[31,68],[[12,12],69],[[41,41],69],[[13,13],69],[[14,14],69],[[15,15],69],[[55,55],69],[[42,42],69],[[43,43],69],[[56,56],69],[[57,57],69],[[49,49],69],[[58,58],69],[[16,16],69],[[17,17],69],[[18,18],69],[[44,44],69],[[45,45],69],[[46,46],69],[[59,59],69],[[19,19],69],[[47,47],69],[[20,20],69],[[21,21],69],[[22,22],69],[[23,23],69],[[48,48],69],[[25,25],69],[[60,60],69],[[29,29],69],[[30,30],69],[[31,31],69],[[32,32],69],[[33,33],69],[[34,34],69],[[35,35],69],[[36,36],69],[[37,37],69],[[38,38],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[1,[[40,[70]]]],[1,[[4,[54]]]],[1,[[4,[54]]]],[1,[[4,[71]]]],[[54,72],73],[[12,72],[[40,[74]]]],[[41,72],[[40,[74]]]],[[13,72],[[40,[74]]]],[[14,72],[[40,[74]]]],[[15,72],[[40,[74]]]],[[55,72],[[40,[74]]]],[[42,72],[[40,[74]]]],[[43,72],[[40,[74]]]],[[56,72],[[40,[74]]]],[[56,72],[[40,[74]]]],[[57,72],[[40,[74]]]],[[49,72],[[40,[74]]]],[[49,72],[[40,[74]]]],[[58,72],[[40,[74]]]],[[16,72],[[40,[74]]]],[[16,72],[[40,[74]]]],[[17,72],[[40,[74]]]],[[18,72],[[40,[74]]]],[[44,72],[[40,[74]]]],[[45,72],[[40,[74]]]],[[46,72],[[40,[74]]]],[[59,72],[[40,[74]]]],[[19,72],[[40,[74]]]],[[47,72],[[40,[74]]]],[[20,72],[[40,[74]]]],[[20,72],[[40,[74]]]],[[21,72],[[40,[74]]]],[[22,72],[[40,[74]]]],[[23,72],[[40,[74]]]],[[48,72],[[40,[74]]]],[[24,72],[[40,[74]]]],[[25,72],[[40,[74]]]],[[26,72],[[40,[74]]]],[[27,72],[[40,[74]]]],[[28,72],[[40,[74]]]],[[60,72],[[40,[74]]]],[[29,72],[[40,[74]]]],[[30,72],[[40,[74]]]],[[30,72],[[40,[74]]]],[[31,72],[[40,[74]]]],[[32,72],[[40,[74]]]],[[33,72],[[40,[74]]]],[[34,72],[[40,[74]]]],[[35,72],[[40,[74]]]],[[36,72],[[40,[74]]]],[[36,72],[[40,[74]]]],[[37,72],[[40,[74]]]],[[37,72],[[40,[74]]]],[[38,72],[[40,[74]]]],[[38,72],[[40,[74]]]],[34,[[3,[50]]]],[34,36],0,[43,[[3,[49]]]],[34,[[3,[50]]]],[[]],[[]],[[]],[[]],[75,41],[[]],[[]],[[],14],[[]],[71,15],[[]],[76,55],[[]],[[]],[[[52,[77,78]]],42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[62,18],[[]],[[[52,[78]]],44],[[]],[[]],[[[52,[78]]],45],[79,46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[80,22],[75,23],[[],23],[[]],[[]],[81,48],[[]],[[]],[82,26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],36],[80,36],[[]],[[],37],[[]],[75,37],[[]],[[[83,[62]]],32],[67,56],[84,[[40,[31,85]]]],[[[83,[84]]],[[40,[31,85]]]],[[51,51,51],14],[[51,51,51,51],14],[69,58],[43,79],[2,[[40,[43]]]],[2,[[40,[49]]]],[[49,58],43],[[50,50,50,50],25],[[],[[3,[86]]]],[31,[[3,[86]]]],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],[[4,[62]]]],[43,[[3,[58]]]],[13],[16],[17],[59],[20],[60],[25,50],[66,30],[[],60],[31,60],0,0,[46],[36],[37],0,0,[[62,[3,[87]],69]],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[54,9],88],[[],[[89,[62]]]],[[],69],[[],69],[31,69],[16,69],[16,69],[[],69],[31,69],[[],90],0,0,0,0,[[2,52,69],4],[[2,6,69],4],[[2,69],4],[[2,[3,[[52,[51]]]],[3,[87]],[3,[2]],69],4],[[2,2,[91,[50]],69],4],[[2,[52,[[92,[50]]]],[52,[[3,[[92,[93]]]]]],[52,[[3,[[92,[50]]]]]],[52,[[3,[[92,[50]]]]]],69],4],[[2,69],4],[[2,69,94,69],4],[[2,35,69],4],[[2,69],4],[[2,43,69],4],[[2,2,69,69],4],[[2,2,[3,[69]],69],4],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[9,[52,[62]]],[[4,[51]]]],[[],95],[31,95],0,[21,59],0,0,0,[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],[[],96],0,[[66,62],30],[[50,50,50],41],[[57,56],49],[[50,50],22],[[50,50,50],23],[[50,50,50,50],48],[[60,[52,[30,78]],29,95,[3,[50]]],31],[[[83,[62]],[3,[62]]],32],[[50,50,50],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[53,33],[53,33],0,[64,7],[[],67],[31,67],[19,67],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,53],[2,[[4,[5]]]],[[13,13],[[3,[61]]]],[[16,16],[[3,[61]]]],[[17,17],[[3,[61]]]],[[59,59],[[3,[61]]]],[[60,60],[[3,[61]]]],0,[34,80],[9,97],[[],59],[[],60],[[9,98],4],[34,[[3,[80]]]],0,[43,[[3,[49]]]],0,[43,[[40,[62]]]],[19,[[40,[99]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,4],0,[12,40],[41,40],[13,40],[14,40],[15,40],[55,40],[42,40],[43,40],[56,40],[57,40],[49,40],[58,40],[16,40],[17,40],[18,40],[44,40],[45,40],[46,40],[59,40],[19,40],[47,40],[20,40],[21,40],[48,40],[60,40],[30,40],[33,40],[34,40],[35,40],[36,40],[37,40],[38,40],[69,4],[69],[2,4],[[100,[3,[101]]]],[[64,100,[3,[101]]]],[[2,[3,[102]]]],[[2,[3,[82]]]],[[2,[3,[102]]]],[[]],[31],0,[9],0,0,[16,[[3,[16]]]],[[[52,[51,78]]],[[40,[31,85]]]],[[[104,[103]]],[[40,[31,85]]]],0,[[],7],[69,7],0,[14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43,79],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[25],0,0,[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[105,[[40,[47,106]]]],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[[108,[[107,[50]]]]],[[40,[31]]]],[[[108,[[109,[66]]]]],[[40,[31]]]],[[[108,[[107,[110]]]]],[[40,[31]]]],[[[108,[[109,[102]]]]],[[40,[31]]]],[[[108,[[109,[93]]]]],[[40,[31]]]],[[[108,[[107,[102]]]]],[[40,[31]]]],[[[108,[[109,[111]]]]],[[40,[31]]]],[[[108,[[107,[112]]]]],[[40,[31]]]],[[[108,[[109,[50]]]]],[[40,[31]]]],[[[108,[[109,[113]]]]],[[40,[31]]]],[[[108,[[107,[66]]]]],[[40,[31]]]],[[[108,[[107,[82]]]]],[[40,[31]]]],[[[108,[[107,[111]]]]],[[40,[31]]]],[[],40],[[[108,[[109,[51]]]]],[[40,[31]]]],[[[108,[[107,[51]]]]],[[40,[31]]]],[[[108,[[109,[82]]]]],[[40,[31]]]],[[[108,[[109,[110]]]]],[[40,[31]]]],[[[108,[[107,[93]]]]],[[40,[31]]]],[[[108,[[109,[112]]]]],[[40,[31]]]],[[[108,[[107,[113]]]]],[[40,[31]]]],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[[],114],[9,115],[66,30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43,[[3,[49]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,50],0,[25,50],[66,30],[116],[9,[[40,[[11,[1]],70]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[36,50],[37,50],[38,50],0,0,0,0,0,[36,50],[37,50],[38,50],0,0,0,0,0,[37,50],[38,50],0,0,0,0],"p":[[3,"PyAny"],[15,"str"],[4,"Option"],[6,"PyResult"],[3,"EntityPath"],[3,"PyDict"],[3,"TimePoint"],[4,"LogMsg"],[3,"Python"],[3,"Private"],[3,"Py"],[3,"Arrow3D"],[3,"ClassId"],[3,"ColorRGBA"],[3,"AnnotationInfo"],[3,"InstanceKey"],[3,"KeypointId"],[3,"Label"],[3,"RawMesh3D"],[4,"MeshFormat"],[4,"Mesh3D"],[3,"Point2D"],[3,"Point3D"],[3,"Radius"],[4,"Rect2D"],[3,"Scalar"],[3,"ScalarPlotProps"],[3,"Size3D"],[4,"TensorData"],[3,"TensorDimension"],[3,"Tensor"],[3,"TextEntry"],[3,"Rigid3"],[3,"Pinhole"],[4,"Transform"],[3,"Vec2D"],[3,"Vec3D"],[3,"Vec4D"],[4,"Error"],[4,"Result"],[3,"Box3D"],[3,"AnnotationContext"],[3,"ViewCoordinates"],[3,"LineStrip2D"],[3,"LineStrip3D"],[3,"Mat3x3"],[3,"EncodedMesh3D"],[3,"Quaternion"],[3,"SignedAxis3"],[15,"f32"],[15,"u8"],[3,"Vec"],[3,"IsoTransform"],[4,"TensorDataMeaning"],[3,"ClassDescription"],[4,"Axis3"],[4,"Sign"],[4,"Handedness"],[3,"MeshId"],[3,"TensorId"],[4,"Ordering"],[3,"String"],[4,"DataType"],[3,"ThreadInfo"],[3,"RecordingId"],[15,"u64"],[15,"usize"],[4,"TensorDataType"],[15,"bool"],[3,"PyErr"],[3,"AnnotationInfoTuple"],[3,"Formatter"],[6,"Result"],[3,"Error"],[3,"Vec3"],[3,"ClassDescriptionArrow"],[3,"ClassMapElemArrow"],[3,"Global"],[3,"Mat3"],[3,"Vec2"],[3,"Quat"],[15,"f64"],[8,"Into"],[4,"DynamicImage"],[4,"ImageError"],[4,"TensorElement"],[3,"PathBuf"],[6,"PyObject"],[4,"Resettable"],[3,"PyClassItemsIter"],[6,"PyReadonlyArray2"],[6,"PyReadonlyArray1"],[15,"u32"],[6,"Quaternion"],[4,"TensorDataMeaning"],[3,"ComponentName"],[3,"PythonVersion"],[3,"PyModule"],[4,"RawMeshError"],[3,"Timeline"],[3,"TimeInt"],[15,"i64"],[3,"Path"],[8,"AsRef"],[3,"EncodedMesh3DArrow"],[4,"FieldError"],[3,"OwnedRepr"],[3,"ArrayBase"],[3,"ViewRepr"],[15,"u16"],[15,"i16"],[15,"i32"],[15,"i8"],[3,"TypeId"],[3,"PyTypeObject"],[8,"FnOnce"],[8,"TensorTrait"]]},\
"run_wasm":{"doc":"Intended to be used as an xtask in order to make it …","t":[5],"n":["main"],"q":["run_wasm"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"test_image_memory":{"doc":"Logs a bunch of big images to test Rerun memory usage.","t":[7,5,5],"n":["GLOBAL","log_images","main"],"q":["test_image_memory","",""],"d":["","",""],"i":[0,0,0],"f":[0,[1,[[4,[[3,[2]]]]]],[[],[[4,[[3,[2]]]]]]],"p":[[3,"Session"],[8,"Error"],[3,"Box"],[4,"Result"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
